

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Aug 29 05:57:25 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 1.43
    50                           ; Generated 25/07/2017 GMT
    51                           ; 
    52                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F886 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0089                     	;# 
   198  008C                     	;# 
   199  008D                     	;# 
   200  008E                     	;# 
   201  008F                     	;# 
   202  0090                     	;# 
   203  0091                     	;# 
   204  0092                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0094                     	;# 
   209  0095                     	;# 
   210  0096                     	;# 
   211  0097                     	;# 
   212  0098                     	;# 
   213  0099                     	;# 
   214  009A                     	;# 
   215  009B                     	;# 
   216  009C                     	;# 
   217  009D                     	;# 
   218  009E                     	;# 
   219  009F                     	;# 
   220  0105                     	;# 
   221  0107                     	;# 
   222  0108                     	;# 
   223  0109                     	;# 
   224  010C                     	;# 
   225  010C                     	;# 
   226  010D                     	;# 
   227  010E                     	;# 
   228  010F                     	;# 
   229  0185                     	;# 
   230  0187                     	;# 
   231  0188                     	;# 
   232  0189                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  008F                     	;# 
   278  0090                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009C                     	;# 
   293  009D                     	;# 
   294  009E                     	;# 
   295  009F                     	;# 
   296  0105                     	;# 
   297  0107                     	;# 
   298  0108                     	;# 
   299  0109                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0185                     	;# 
   306  0187                     	;# 
   307  0188                     	;# 
   308  0189                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311                           
   312                           	psect	idataBANK0
   313  001B                     __pidataBANK0:	
   314                           
   315                           ;initializer for _led
   316  001B  3405               	retlw	5
   317                           
   318                           	psect	strings
   319  0800                     __pstrings:	
   320  0800                     stringtab:	
   321  0800                     __stringtab:	
   322  0800                     stringcode:	
   323                           ;	String table - string pointers are 1 byte each
   324                           
   325  0800                     stringdir:	
   326  0800  3008               	movlw	high stringdir
   327  0801  008A               	movwf	10
   328  0802  0804               	movf	4,w
   329  0803  0A84               	incf	4,f
   330  0804  0782               	addwf	2,f
   331  0805                     __stringbase:	
   332  0805  3400               	retlw	0
   333  0806                     __end_of__stringtab:	
   334  0806                     _dpowers:	
   335  0806  3401               	retlw	1
   336  0807  3400               	retlw	0
   337  0808  340A               	retlw	10
   338  0809  3400               	retlw	0
   339  080A  3464               	retlw	100
   340  080B  3400               	retlw	0
   341  080C  34E8               	retlw	232
   342  080D  3403               	retlw	3
   343  080E  3410               	retlw	16
   344  080F  3427               	retlw	39
   345  0810                     __end_of_dpowers:	
   346  0810                     _hexpowers:	
   347  0810  3401               	retlw	1
   348  0811  3400               	retlw	0
   349  0812  3410               	retlw	16
   350  0813  3400               	retlw	0
   351  0814  3400               	retlw	0
   352  0815  3401               	retlw	1
   353  0816  3400               	retlw	0
   354  0817  3410               	retlw	16
   355  0818                     __end_of_hexpowers:	
   356  0013                     _SSPBUF	set	19
   357  0014                     _SSPCONbits	set	20
   358  000B                     _INTCON	set	11
   359  0012                     _T2CON	set	18
   360  0005                     _PORTAbits	set	5
   361  0006                     _PORTBbits	set	6
   362  001A                     _RCREG	set	26
   363  000B                     _INTCONbits	set	11
   364  0019                     _TXREG	set	25
   365  000C                     _PIR1bits	set	12
   366  0018                     _RCSTAbits	set	24
   367  0091                     _SSPCON2bits	set	145
   368  0087                     _TRISCbits	set	135
   369  0094                     _SSPSTATbits	set	148
   370  0093                     _SSPADD	set	147
   371  0085                     _TRISAbits	set	133
   372  0086                     _TRISB	set	134
   373  0085                     _TRISA	set	133
   374  008F                     _OSCCON	set	143
   375  0092                     _PR2	set	146
   376  0099                     _SPBRG	set	153
   377  009A                     _SPBRGH	set	154
   378  0098                     _TXSTAbits	set	152
   379  008C                     _PIE1bits	set	140
   380  0188                     _ANSELbits	set	392
   381  0189                     _ANSELHbits	set	393
   382  0187                     _BAUDCTLbits	set	391
   383  0818                     STR_4:	
   384  0818  3430               	retlw	48	;'0'
   385  0819  3431               	retlw	49	;'1'
   386  081A  3432               	retlw	50	;'2'
   387  081B  3433               	retlw	51	;'3'
   388  081C  3434               	retlw	52	;'4'
   389  081D  3435               	retlw	53	;'5'
   390  081E  3436               	retlw	54	;'6'
   391  081F  3437               	retlw	55	;'7'
   392  0820  3438               	retlw	56	;'8'
   393  0821  3439               	retlw	57	;'9'
   394  0822  3461               	retlw	97	;'a'
   395  0823  3462               	retlw	98	;'b'
   396  0824  3463               	retlw	99	;'c'
   397  0825  3464               	retlw	100	;'d'
   398  0826  3465               	retlw	101	;'e'
   399  0827  3466               	retlw	102	;'f'
   400  0828  3400               	retlw	0
   401  0829                     STR_1:	
   402  0829  3425               	retlw	37	;'%'
   403  082A  3430               	retlw	48	;'0'
   404  082B  3435               	retlw	53	;'5'
   405  082C  3464               	retlw	100	;'d'
   406  082D  340D               	retlw	13
   407  082E  340A               	retlw	10
   408  082F  3400               	retlw	0
   409  0830                     STR_3:	
   410  0830  3425               	retlw	37	;'%'
   411  0831  3430               	retlw	48	;'0'
   412  0832  3434               	retlw	52	;'4'
   413  0833  3478               	retlw	120	;'x'
   414  0834  340D               	retlw	13
   415  0835  340A               	retlw	10
   416  0836  3400               	retlw	0
   417  0837                     STR_2:	
   418  0837  3425               	retlw	37	;'%'
   419  0838  3430               	retlw	48	;'0'
   420  0839  3434               	retlw	52	;'4'
   421  083A  3478               	retlw	120	;'x'
   422  083B  343B               	retlw	59	;';'
   423  083C  3400               	retlw	0
   424                           
   425                           ; #config settings
   426  0000                     
   427                           	psect	cinit
   428  07F4                     start_initialization:	
   429  07F4                     __initialization:	
   430                           
   431                           ; Initialize objects allocated to BANK0
   432  07F4  120A  118A  201B   	fcall	__pidataBANK0	;fetch initializer
   433  07F7  00CF               	movwf	__pdataBANK0& (0+127)
   434                           
   435                           ; Clear objects allocated to BANK0
   436  07F8  01CC               	clrf	__pbssBANK0& (0+127)
   437  07F9  01CD               	clrf	(__pbssBANK0+1)& (0+127)
   438  07FA  01CE               	clrf	(__pbssBANK0+2)& (0+127)
   439                           
   440                           ; Clear objects allocated to BITBANK0
   441  07FB  01CB               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   442  07FC                     end_of_initialization:	
   443                           ;End of C runtime variable initialization code
   444                           
   445  07FC                     __end_of__initialization:	
   446  07FC  0183               	clrf	3
   447  07FD  120A  118A  29B4   	ljmp	_main	;jump to C main() function
   448                           
   449                           	psect	bitbssBANK0
   450  0258                     __pbitbssBANK0:	
   451  0258                     i2c_read@flag:	
   452  0258                     	ds	1
   453  0259                     uart_isr@oerr:	
   454  0259                     	ds	1
   455  025A                     uart_isr@ferr:	
   456  025A                     	ds	1
   457                           
   458                           	psect	bssBANK0
   459  004C                     __pbssBANK0:	
   460  004C                     _secs:	
   461  004C                     	ds	2
   462  004E                     _milis:	
   463  004E                     	ds	1
   464                           
   465                           	psect	dataBANK0
   466  004F                     __pdataBANK0:	
   467  004F                     _led:	
   468  004F                     	ds	1
   469                           
   470                           	psect	cstackBANK1
   471  00A0                     __pcstackBANK1:	
   472  00A0                     ?_mem_write:	
   473  00A0                     ?_mem_read:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  00A0                     mem_write@add:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  00A0                     mem_read@add:	
   480                           ; 2 bytes @ 0x0
   481                           
   482                           
   483                           ; 2 bytes @ 0x0
   484  00A0                     	ds	2
   485  00A2                     mem_write@data:	
   486  00A2                     mem_read@rta:	
   487                           ; 1 bytes @ 0x2
   488                           
   489                           
   490                           ; 1 bytes @ 0x2
   491  00A2                     	ds	1
   492  00A3                     mem_write@add_h:	
   493  00A3                     mem_read@add_h:	
   494                           ; 1 bytes @ 0x3
   495                           
   496                           
   497                           ; 1 bytes @ 0x3
   498  00A3                     	ds	1
   499  00A4                     mem_write@add_l:	
   500  00A4                     mem_read@add_l:	
   501                           ; 1 bytes @ 0x4
   502                           
   503                           
   504                           ; 1 bytes @ 0x4
   505  00A4                     	ds	1
   506  00A5                     ??_mem_init:	
   507                           
   508                           ; 1 bytes @ 0x5
   509  00A5                     	ds	1
   510  00A6                     mem_init@aux:	
   511                           
   512                           ; 1 bytes @ 0x6
   513  00A6                     	ds	1
   514  00A7                     ??_main:	
   515                           
   516                           ; 1 bytes @ 0x7
   517  00A7                     	ds	2
   518                           
   519                           	psect	cstackCOMMON
   520  0071                     __pcstackCOMMON:	
   521  0071                     ?_isdigit:	
   522  0071                     ?_i2c_init:	
   523                           ; 1 bit 
   524                           
   525  0071                     ?_si_reset:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0071                     ??_isdigit:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0071                     ?_uart_init:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0071                     ?_putch:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0071                     ??_putch:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0071                     ?_clear_mem:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0071                     ?_give_all:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0071                     ?_to_work:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0071                     ?_uart_isr:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0071                     ?_tmr2_isr:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0071                     ?_ints_isr:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0071                     ?_mem_init:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0071                     ?_i2c_start:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0071                     ?_i2c_rstart:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0071                     ??_i2c_rstart:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0071                     ?_i2c_stop:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0071                     ?_i2c_read:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0071                     ?i1_i2c_start:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0071                     ??i1_i2c_start:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0071                     ?i1_i2c_stop:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0071                     ??i1_i2c_stop:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0071                     ?i1_i2c_write:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0071                     ?i1_i2c_read:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0071                     ??i1_i2c_read:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0071                     ?_main:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0071                     ?___wmul:	
   601                           ; 2 bytes @ 0x0
   602                           
   603  0071                     ?___lwdiv:	
   604                           ; 2 bytes @ 0x0
   605                           
   606  0071                     putch@data:	
   607                           ; 2 bytes @ 0x0
   608                           
   609  0071                     _isdigit$954:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0071                     i1i2c_write@ack:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0071                     ___wmul@multiplier:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0071                     ___lwdiv@divisor:	
   619                           ; 2 bytes @ 0x0
   620                           
   621                           
   622                           ; 2 bytes @ 0x0
   623  0071                     	ds	1
   624  0072                     ??i1_i2c_write:	
   625  0072                     isdigit@c:	
   626                           ; 1 bytes @ 0x1
   627                           
   628                           
   629                           ; 1 bytes @ 0x1
   630  0072                     	ds	1
   631  0073                     ___wmul@multiplicand:	
   632  0073                     ___lwdiv@dividend:	
   633                           ; 2 bytes @ 0x2
   634                           
   635                           
   636                           ; 2 bytes @ 0x2
   637  0073                     	ds	2
   638  0075                     ??___wmul:	
   639  0075                     ??___lwdiv:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0075                     ___wmul@product:	
   643                           ; 1 bytes @ 0x4
   644                           
   645                           
   646                           ; 2 bytes @ 0x4
   647  0075                     	ds	1
   648  0076                     ___lwdiv@quotient:	
   649                           
   650                           ; 2 bytes @ 0x5
   651  0076                     	ds	2
   652  0078                     ___lwdiv@counter:	
   653                           
   654                           ; 1 bytes @ 0x7
   655  0078                     	ds	1
   656  0079                     ?___lwmod:	
   657  0079                     i1i2c_read@ack:	
   658                           ; 2 bytes @ 0x8
   659                           
   660  0079                     ___lwmod@divisor:	
   661                           ; 1 bytes @ 0x8
   662                           
   663                           
   664                           ; 2 bytes @ 0x8
   665  0079                     	ds	1
   666  007A                     i1i2c_write@datum:	
   667  007A                     i1i2c_read@resp:	
   668                           ; 1 bytes @ 0x9
   669                           
   670                           
   671                           ; 1 bytes @ 0x9
   672  007A                     	ds	1
   673  007B                     ?i1_mem_write:	
   674  007B                     ?i1_mem_read:	
   675                           ; 1 bytes @ 0xA
   676                           
   677  007B                     ?_si_read_h:	
   678                           ; 1 bytes @ 0xA
   679                           
   680  007B                     ?_si_read_t:	
   681                           ; 2 bytes @ 0xA
   682                           
   683  007B                     ___lwmod@dividend:	
   684                           ; 2 bytes @ 0xA
   685                           
   686  007B                     i1mem_write@add:	
   687                           ; 2 bytes @ 0xA
   688                           
   689  007B                     i1mem_read@add:	
   690                           ; 2 bytes @ 0xA
   691                           
   692                           
   693                           ; 2 bytes @ 0xA
   694  007B                     	ds	2
   695  007D                     ??___lwmod:	
   696  007D                     ??i1_mem_read:	
   697                           ; 1 bytes @ 0xC
   698                           
   699  007D                     i1mem_write@data:	
   700                           ; 1 bytes @ 0xC
   701                           
   702                           
   703                           ; 1 bytes @ 0xC
   704  007D                     	ds	1
   705  007E                     ??_clear_mem:	
   706                           
   707                           	psect	cstackBANK0
   708  0020                     __pcstackBANK0:	
   709                           ; 1 bytes @ 0xD
   710                           
   711  0020                     ??_si_read_h:	
   712  0020                     ??_si_read_t:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0020                     ??i1_mem_write:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0020                     ___lwmod@counter:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0020                     i1mem_read@rta:	
   722                           ; 1 bytes @ 0x0
   723                           
   724                           
   725                           ; 1 bytes @ 0x0
   726  0020                     	ds	1
   727  0021                     ?_printf:	
   728  0021                     i1mem_write@add_h:	
   729                           ; 2 bytes @ 0x1
   730                           
   731  0021                     i1mem_read@add_h:	
   732                           ; 1 bytes @ 0x1
   733                           
   734                           
   735                           ; 1 bytes @ 0x1
   736  0021                     	ds	1
   737  0022                     si_read_h@rta_h:	
   738  0022                     si_read_t@rta_h:	
   739                           ; 1 bytes @ 0x2
   740                           
   741  0022                     i1mem_write@add_l:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0022                     i1mem_read@add_l:	
   745                           ; 1 bytes @ 0x2
   746                           
   747                           
   748                           ; 1 bytes @ 0x2
   749  0022                     	ds	1
   750  0023                     ??_printf:	
   751  0023                     si_read_h@rta_l:	
   752                           ; 1 bytes @ 0x3
   753                           
   754  0023                     si_read_t@rta_l:	
   755                           ; 1 bytes @ 0x3
   756                           
   757                           
   758                           ; 1 bytes @ 0x3
   759  0023                     	ds	1
   760  0024                     si_read_h@rta:	
   761  0024                     si_read_t@rta:	
   762                           ; 2 bytes @ 0x4
   763                           
   764                           
   765                           ; 2 bytes @ 0x4
   766  0024                     	ds	2
   767  0026                     ??_to_work:	
   768  0026                     printf@idx:	
   769                           ; 1 bytes @ 0x6
   770                           
   771                           
   772                           ; 1 bytes @ 0x6
   773  0026                     	ds	1
   774  0027                     printf@ap:	
   775                           
   776                           ; 1 bytes @ 0x7
   777  0027                     	ds	1
   778  0028                     printf@prec:	
   779  0028                     to_work@hum_val:	
   780                           ; 1 bytes @ 0x8
   781                           
   782                           
   783                           ; 2 bytes @ 0x8
   784  0028                     	ds	1
   785  0029                     printf@val:	
   786                           
   787                           ; 2 bytes @ 0x9
   788  0029                     	ds	1
   789  002A                     to_work@temp_val:	
   790                           
   791                           ; 2 bytes @ 0xA
   792  002A                     	ds	1
   793  002B                     printf@f:	
   794                           
   795                           ; 1 bytes @ 0xB
   796  002B                     	ds	1
   797  002C                     printf@flag:	
   798  002C                     to_work@up:	
   799                           ; 1 bytes @ 0xC
   800                           
   801                           
   802                           ; 2 bytes @ 0xC
   803  002C                     	ds	1
   804  002D                     printf@width:	
   805                           
   806                           ; 2 bytes @ 0xD
   807  002D                     	ds	1
   808  002E                     to_work@temp_add:	
   809                           
   810                           ; 2 bytes @ 0xE
   811  002E                     	ds	1
   812  002F                     printf@c:	
   813                           
   814                           ; 1 bytes @ 0xF
   815  002F                     	ds	1
   816  0030                     ??_give_all:	
   817  0030                     to_work@hum_add:	
   818                           ; 1 bytes @ 0x10
   819                           
   820                           
   821                           ; 2 bytes @ 0x10
   822  0030                     	ds	2
   823  0032                     to_work@arg:	
   824                           
   825                           ; 1 bytes @ 0x12
   826  0032                     	ds	1
   827  0033                     ??_tmr2_isr:	
   828                           
   829                           ; 1 bytes @ 0x13
   830  0033                     	ds	1
   831  0034                     give_all@add:	
   832                           
   833                           ; 2 bytes @ 0x14
   834  0034                     	ds	2
   835  0036                     give_all@n:	
   836                           
   837                           ; 2 bytes @ 0x16
   838  0036                     	ds	2
   839  0038                     give_all@aux:	
   840                           
   841                           ; 2 bytes @ 0x18
   842  0038                     	ds	2
   843  003A                     ??_uart_isr:	
   844                           
   845                           ; 1 bytes @ 0x1A
   846  003A                     	ds	1
   847  003B                     uart_isr@rcv:	
   848                           
   849                           ; 1 bytes @ 0x1B
   850  003B                     	ds	1
   851  003C                     ??_ints_isr:	
   852                           
   853                           ; 1 bytes @ 0x1C
   854  003C                     	ds	4
   855  0040                     ??_i2c_init:	
   856  0040                     ??_uart_init:	
   857                           ; 1 bytes @ 0x20
   858                           
   859  0040                     ?_init_timer2:	
   860                           ; 1 bytes @ 0x20
   861                           
   862  0040                     ??_i2c_start:	
   863                           ; 1 bytes @ 0x20
   864                           
   865  0040                     ??_i2c_stop:	
   866                           ; 1 bytes @ 0x20
   867                           
   868  0040                     ?_i2c_write:	
   869                           ; 1 bytes @ 0x20
   870                           
   871  0040                     ??_i2c_read:	
   872                           ; 1 bytes @ 0x20
   873                           
   874  0040                     init_timer2@post:	
   875                           ; 1 bytes @ 0x20
   876                           
   877  0040                     i2c_write@ack:	
   878                           ; 1 bytes @ 0x20
   879                           
   880                           
   881                           ; 1 bytes @ 0x20
   882  0040                     	ds	1
   883  0041                     ??_i2c_write:	
   884  0041                     init_timer2@eoc:	
   885                           ; 1 bytes @ 0x21
   886                           
   887                           
   888                           ; 1 bytes @ 0x21
   889  0041                     	ds	1
   890  0042                     ??_init_timer2:	
   891                           
   892                           ; 1 bytes @ 0x22
   893  0042                     	ds	2
   894  0044                     init_timer2@pre:	
   895                           
   896                           ; 1 bytes @ 0x24
   897  0044                     	ds	1
   898  0045                     init_timer2@sfr:	
   899                           
   900                           ; 1 bytes @ 0x25
   901  0045                     	ds	3
   902  0048                     i2c_read@ack:	
   903                           
   904                           ; 1 bytes @ 0x28
   905  0048                     	ds	1
   906  0049                     i2c_write@datum:	
   907  0049                     i2c_read@resp:	
   908                           ; 1 bytes @ 0x29
   909                           
   910                           
   911                           ; 1 bytes @ 0x29
   912  0049                     	ds	1
   913  004A                     ??_mem_write:	
   914  004A                     ??_mem_read:	
   915                           ; 1 bytes @ 0x2A
   916                           
   917  004A                     ??_si_reset:	
   918                           ; 1 bytes @ 0x2A
   919                           
   920                           
   921                           ; 1 bytes @ 0x2A
   922  004A                     	ds	1
   923                           
   924                           	psect	maintext
   925  01B4                     __pmaintext:	
   926 ;;
   927 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   928 ;;
   929 ;; *************** function _main *****************
   930 ;; Defined at:
   931 ;;		line 191 in file "panda17.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;		None
   934 ;; Auto vars:     Size  Location     Type
   935 ;;		None
   936 ;; Return value:  Size  Location     Type
   937 ;;                  2  124[None  ] int 
   938 ;; Registers used:
   939 ;;		wreg, status,2, status,0, pclath, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : B00/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   945 ;;      Params:         0       0       0       0       0
   946 ;;      Locals:         0       0       0       0       0
   947 ;;      Temps:          0       0       2       0       0
   948 ;;      Totals:         0       0       2       0       0
   949 ;;Total ram usage:        2 bytes
   950 ;; Hardware stack levels required when called:    8
   951 ;; This function calls:
   952 ;;		_i2c_init
   953 ;;		_init_timer2
   954 ;;		_mem_init
   955 ;;		_si_reset
   956 ;;		_uart_init
   957 ;; This function is called by:
   958 ;;		Startup code after reset
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _main
   964  01B4                     _main:	
   965                           
   966                           ;panda17.c: 192: OSCCON = 0b01010001;
   967                           
   968                           ;incstack = 0
   969                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   970  01B4  3051               	movlw	81
   971  01B5  1683               	bsf	3,5	;RP0=1, select bank1
   972  01B6  1303               	bcf	3,6	;RP1=0, select bank1
   973  01B7  008F               	movwf	15	;volatile
   974                           
   975                           ;panda17.c: 193: INTCON = 0xC0;
   976  01B8  30C0               	movlw	192
   977  01B9  008B               	movwf	11	;volatile
   978                           
   979                           ;panda17.c: 195: TRISA = 0x00;
   980  01BA  0185               	clrf	5	;volatile
   981                           
   982                           ;panda17.c: 196: TRISB = 0x00;
   983  01BB  0186               	clrf	6	;volatile
   984                           
   985                           ;panda17.c: 198: ANSELHbits.ANS11 = 0;
   986  01BC  1683               	bsf	3,5	;RP0=1, select bank3
   987  01BD  1703               	bsf	3,6	;RP1=1, select bank3
   988  01BE  1189               	bcf	9,3	;volatile
   989                           
   990                           ;panda17.c: 199: ANSELbits.ANS2 = 0;
   991  01BF  1108               	bcf	8,2	;volatile
   992                           
   993                           ;panda17.c: 200: TRISAbits.TRISA2 = 1;
   994  01C0  1683               	bsf	3,5	;RP0=1, select bank1
   995  01C1  1303               	bcf	3,6	;RP1=0, select bank1
   996  01C2  1505               	bsf	5,2	;volatile
   997                           
   998                           ;panda17.c: 202: PORTBbits.RB4 = 0;
   999  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1000  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1001  01C5  1206               	bcf	6,4	;volatile
  1002                           
  1003                           ;panda17.c: 203: uart_init();
  1004  01C6  120A  158A  25B0  120A  118A  	fcall	_uart_init
  1005                           
  1006                           ;panda17.c: 204: i2c_init();
  1007  01CB  120A  158A  25A1  120A  118A  	fcall	_i2c_init
  1008                           
  1009                           ;panda17.c: 205: _delay((unsigned long)((10)*(2000000/4000.0)));
  1010  01D0  3007               	movlw	7
  1011  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  1012  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  1013  01D3  00A8               	movwf	(??_main^(0+128)+1)
  1014  01D4  307C               	movlw	124
  1015  01D5  00A7               	movwf	??_main^(0+128)
  1016  01D6                     u1957:	
  1017  01D6  0BA7               	decfsz	??_main^(0+128),f
  1018  01D7  29D6               	goto	u1957
  1019  01D8  0BA8               	decfsz	(??_main^(0+128)+1),f
  1020  01D9  29D6               	goto	u1957
  1021  01DA  0000               	nop
  1022                           
  1023                           ;panda17.c: 206: mem_init();
  1024  01DB  120A  118A  2164  120A  118A  	fcall	_mem_init
  1025                           
  1026                           ;panda17.c: 207: si_reset();
  1027  01E0  120A  158A  25C7  120A  118A  	fcall	_si_reset
  1028                           
  1029                           ;panda17.c: 208: _delay((unsigned long)((200)*(2000000/4000.0)));
  1030  01E5  3082               	movlw	130
  1031  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  1032  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  1033  01E8  00A8               	movwf	(??_main^(0+128)+1)
  1034  01E9  30DD               	movlw	221
  1035  01EA  00A7               	movwf	??_main^(0+128)
  1036  01EB                     u1967:	
  1037  01EB  0BA7               	decfsz	??_main^(0+128),f
  1038  01EC  29EB               	goto	u1967
  1039  01ED  0BA8               	decfsz	(??_main^(0+128)+1),f
  1040  01EE  29EB               	goto	u1967
  1041                           
  1042                           ;panda17.c: 209: init_timer2(2,5,250);
  1043  01EF  3005               	movlw	5
  1044  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  1045  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  1046  01F2  00A7               	movwf	??_main^(0+128)
  1047  01F3  0827               	movf	??_main^(0+128),w
  1048  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1049  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1050  01F6  00C0               	movwf	init_timer2@post
  1051  01F7  30FA               	movlw	250
  1052  01F8  1683               	bsf	3,5	;RP0=1, select bank1
  1053  01F9  1303               	bcf	3,6	;RP1=0, select bank1
  1054  01FA  00A8               	movwf	(??_main+1)^(0+128)
  1055  01FB  0828               	movf	(??_main+1)^(0+128),w
  1056  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1057  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1058  01FE  00C1               	movwf	init_timer2@eoc
  1059  01FF  3002               	movlw	2
  1060  0200  120A  158A  268C  120A  118A  	fcall	_init_timer2
  1061  0205                     l125:	
  1062                           ;panda17.c: 210: while(1){
  1063                           
  1064  0205  2A05               	goto	l125
  1065  0206                     __end_of_main:	
  1066                           
  1067                           	psect	text1
  1068  0DB0                     __ptext1:	
  1069 ;; *************** function _uart_init *****************
  1070 ;; Defined at:
  1071 ;;		line 20 in file "panda17.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;		None
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         0       0       0       0       0
  1086 ;;      Locals:         0       0       0       0       0
  1087 ;;      Temps:          0       0       0       0       0
  1088 ;;      Totals:         0       0       0       0       0
  1089 ;;Total ram usage:        0 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    5
  1092 ;; This function calls:
  1093 ;;		Nothing
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _uart_init
  1101  0DB0                     _uart_init:	
  1102                           
  1103                           ;panda17.c: 21: PIE1bits.RCIE = 1;
  1104                           
  1105                           ;incstack = 0
  1106                           ; Regs used in _uart_init: [wreg+status,2]
  1107  0DB0  1683               	bsf	3,5	;RP0=1, select bank1
  1108  0DB1  1303               	bcf	3,6	;RP1=0, select bank1
  1109  0DB2  168C               	bsf	12,5	;volatile
  1110                           
  1111                           ;panda17.c: 22: TXSTAbits.BRGH = 1;
  1112  0DB3  1518               	bsf	24,2	;volatile
  1113                           
  1114                           ;panda17.c: 23: BAUDCTLbits.BRG16 = 0;
  1115  0DB4  1683               	bsf	3,5	;RP0=1, select bank3
  1116  0DB5  1703               	bsf	3,6	;RP1=1, select bank3
  1117  0DB6  1187               	bcf	7,3	;volatile
  1118                           
  1119                           ;panda17.c: 24: SPBRGH = 0x00;
  1120  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  1121  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  1122  0DB9  019A               	clrf	26	;volatile
  1123                           
  1124                           ;panda17.c: 26: SPBRG = 0x0C;
  1125  0DBA  300C               	movlw	12
  1126  0DBB  0099               	movwf	25	;volatile
  1127                           
  1128                           ;panda17.c: 27: TXSTAbits.TXEN = 1;
  1129  0DBC  1698               	bsf	24,5	;volatile
  1130                           
  1131                           ;panda17.c: 28: RCSTAbits.CREN = 1;
  1132  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  1133  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  1134  0DBF  1618               	bsf	24,4	;volatile
  1135                           
  1136                           ;panda17.c: 29: TXSTAbits.SYNC = 0;
  1137  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  1138  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  1139  0DC2  1218               	bcf	24,4	;volatile
  1140                           
  1141                           ;panda17.c: 30: RCSTAbits.SPEN = 1;
  1142  0DC3  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0DC4  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0DC5  1798               	bsf	24,7	;volatile
  1145  0DC6  0008               	return
  1146  0DC7                     __end_of_uart_init:	
  1147                           
  1148                           	psect	text2
  1149  0DC7                     __ptext2:	
  1150 ;; *************** function _si_reset *****************
  1151 ;; Defined at:
  1152 ;;		line 13 in file "si7021.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0, pclath, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0
  1169 ;;      Totals:         0       0       0       0       0
  1170 ;;Total ram usage:        0 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    6
  1173 ;; This function calls:
  1174 ;;		_i2c_start
  1175 ;;		_i2c_stop
  1176 ;;		_i2c_write
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           
  1183                           ;psect for function _si_reset
  1184  0DC7                     _si_reset:	
  1185                           
  1186                           ;si7021.c: 14: i2c_start();
  1187                           
  1188                           ;incstack = 0
  1189                           ; Regs used in _si_reset: [wreg+status,2+status,0+pclath+cstack]
  1190  0DC7  120A  158A  274E  120A  158A  	fcall	_i2c_start
  1191                           
  1192                           ;si7021.c: 15: i2c_write(0x80,1);
  1193  0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0DCE  01C0               	clrf	i2c_write@ack
  1196  0DCF  0AC0               	incf	i2c_write@ack,f
  1197  0DD0  3080               	movlw	128
  1198  0DD1  120A  118A  2117  120A  158A  	fcall	_i2c_write
  1199                           
  1200                           ;si7021.c: 16: i2c_write(0xFE,1);
  1201  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  1203  0DD8  01C0               	clrf	i2c_write@ack
  1204  0DD9  0AC0               	incf	i2c_write@ack,f
  1205  0DDA  30FE               	movlw	254
  1206  0DDB  120A  118A  2117  120A  158A  	fcall	_i2c_write
  1207                           
  1208                           ;si7021.c: 17: i2c_stop();
  1209  0DE0  120A  158A  2789   	fcall	_i2c_stop
  1210  0DE3  0008               	return
  1211  0DE4                     __end_of_si_reset:	
  1212                           
  1213                           	psect	text3
  1214  0164                     __ptext3:	
  1215 ;; *************** function _mem_init *****************
  1216 ;; Defined at:
  1217 ;;		line 179 in file "panda17.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  aux             1    6[BANK1 ] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, pclath, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         0       0       0       0       0
  1232 ;;      Locals:         0       0       1       0       0
  1233 ;;      Temps:          0       0       1       0       0
  1234 ;;      Totals:         0       0       2       0       0
  1235 ;;Total ram usage:        2 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    7
  1238 ;; This function calls:
  1239 ;;		_mem_read
  1240 ;;		_mem_write
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           
  1247                           ;psect for function _mem_init
  1248  0164                     _mem_init:	
  1249                           
  1250                           ;panda17.c: 180: unsigned char aux;
  1251                           ;panda17.c: 181: aux = mem_read(0x0002);
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _mem_init: [wreg+status,2+status,0+pclath+cstack]
  1255  0164  3002               	movlw	2
  1256  0165  1683               	bsf	3,5	;RP0=1, select bank1
  1257  0166  1303               	bcf	3,6	;RP1=0, select bank1
  1258  0167  00A0               	movwf	mem_read@add^(0+128)
  1259  0168  3000               	movlw	0
  1260  0169  00A1               	movwf	(mem_read@add^(0+128)+1)
  1261  016A  120A  118A  2206  120A  118A  	fcall	_mem_read
  1262  016F  1683               	bsf	3,5	;RP0=1, select bank1
  1263  0170  1303               	bcf	3,6	;RP1=0, select bank1
  1264  0171  00A5               	movwf	??_mem_init^(0+128)
  1265  0172  0825               	movf	??_mem_init^(0+128),w
  1266  0173  00A6               	movwf	mem_init@aux^(0+128)
  1267                           
  1268                           ;panda17.c: 182: if (aux != 0xAA){
  1269  0174  30AA               	movlw	170
  1270  0175  0626               	xorwf	mem_init@aux^(0+128),w
  1271  0176  1903               	btfsc	3,2
  1272  0177  0008               	return
  1273                           
  1274                           ;panda17.c: 183: mem_write(0x0002,0xAA);
  1275  0178  3002               	movlw	2
  1276  0179  00A0               	movwf	mem_write@add^(0+128)
  1277  017A  3000               	movlw	0
  1278  017B  00A1               	movwf	(mem_write@add^(0+128)+1)
  1279  017C  30AA               	movlw	170
  1280  017D  00A5               	movwf	??_mem_init^(0+128)
  1281  017E  0825               	movf	??_mem_init^(0+128),w
  1282  017F  00A2               	movwf	mem_write@data^(0+128)
  1283  0180  120A  118A  2313  120A  118A  	fcall	_mem_write
  1284                           
  1285                           ;panda17.c: 184: mem_write(0x000A,0x00);
  1286  0185  300A               	movlw	10
  1287  0186  1683               	bsf	3,5	;RP0=1, select bank1
  1288  0187  1303               	bcf	3,6	;RP1=0, select bank1
  1289  0188  00A0               	movwf	mem_write@add^(0+128)
  1290  0189  3000               	movlw	0
  1291  018A  00A1               	movwf	(mem_write@add^(0+128)+1)
  1292  018B  01A2               	clrf	mem_write@data^(0+128)
  1293  018C  120A  118A  2313  120A  118A  	fcall	_mem_write
  1294                           
  1295                           ;panda17.c: 185: mem_write(0x000B,0x00);
  1296  0191  300B               	movlw	11
  1297  0192  1683               	bsf	3,5	;RP0=1, select bank1
  1298  0193  1303               	bcf	3,6	;RP1=0, select bank1
  1299  0194  00A0               	movwf	mem_write@add^(0+128)
  1300  0195  3000               	movlw	0
  1301  0196  00A1               	movwf	(mem_write@add^(0+128)+1)
  1302  0197  01A2               	clrf	mem_write@data^(0+128)
  1303  0198  120A  118A  2313  120A  118A  	fcall	_mem_write
  1304                           
  1305                           ;panda17.c: 186: mem_write(0x000C,0x00);
  1306  019D  300C               	movlw	12
  1307  019E  1683               	bsf	3,5	;RP0=1, select bank1
  1308  019F  1303               	bcf	3,6	;RP1=0, select bank1
  1309  01A0  00A0               	movwf	mem_write@add^(0+128)
  1310  01A1  3000               	movlw	0
  1311  01A2  00A1               	movwf	(mem_write@add^(0+128)+1)
  1312  01A3  01A2               	clrf	mem_write@data^(0+128)
  1313  01A4  120A  118A  2313  120A  118A  	fcall	_mem_write
  1314                           
  1315                           ;panda17.c: 187: mem_write(0x000D,0x00);
  1316  01A9  300D               	movlw	13
  1317  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  1318  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  1319  01AC  00A0               	movwf	mem_write@add^(0+128)
  1320  01AD  3000               	movlw	0
  1321  01AE  00A1               	movwf	(mem_write@add^(0+128)+1)
  1322  01AF  01A2               	clrf	mem_write@data^(0+128)
  1323  01B0  120A  118A  2313   	fcall	_mem_write
  1324  01B3  0008               	return
  1325  01B4                     __end_of_mem_init:	
  1326                           
  1327                           	psect	text4
  1328  0313                     __ptext4:	
  1329 ;; *************** function _mem_write *****************
  1330 ;; Defined at:
  1331 ;;		line 13 in file "24lc512.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  add             2    0[BANK1 ] unsigned int 
  1334 ;;  data            1    2[BANK1 ] unsigned char 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  add_l           1    4[BANK1 ] unsigned char 
  1337 ;;  add_h           1    3[BANK1 ] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0, pclath, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1347 ;;      Params:         0       0       3       0       0
  1348 ;;      Locals:         0       0       2       0       0
  1349 ;;      Temps:          0       1       0       0       0
  1350 ;;      Totals:         0       1       5       0       0
  1351 ;;Total ram usage:        6 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    6
  1354 ;; This function calls:
  1355 ;;		_i2c_start
  1356 ;;		_i2c_stop
  1357 ;;		_i2c_write
  1358 ;; This function is called by:
  1359 ;;		_mem_init
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           
  1364                           ;psect for function _mem_write
  1365  0313                     _mem_write:	
  1366                           
  1367                           ;24lc512.c: 14: unsigned char add_h,add_l;
  1368                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  1369                           
  1370                           ;incstack = 0
  1371                           ; Regs used in _mem_write: [wreg+status,2+status,0+pclath+cstack]
  1372  0313  1683               	bsf	3,5	;RP0=1, select bank1
  1373  0314  1303               	bcf	3,6	;RP1=0, select bank1
  1374  0315  0821               	movf	(mem_write@add+1)^(0+128),w
  1375  0316  1283               	bcf	3,5	;RP0=0, select bank0
  1376  0317  1303               	bcf	3,6	;RP1=0, select bank0
  1377  0318  00CA               	movwf	??_mem_write
  1378  0319  084A               	movf	??_mem_write,w
  1379  031A  1683               	bsf	3,5	;RP0=1, select bank1
  1380  031B  1303               	bcf	3,6	;RP1=0, select bank1
  1381  031C  00A3               	movwf	mem_write@add_h^(0+128)
  1382                           
  1383                           ;24lc512.c: 16: add_l = add & 0x00FF;
  1384  031D  0820               	movf	mem_write@add^(0+128),w
  1385  031E  1283               	bcf	3,5	;RP0=0, select bank0
  1386  031F  1303               	bcf	3,6	;RP1=0, select bank0
  1387  0320  00CA               	movwf	??_mem_write
  1388  0321  084A               	movf	??_mem_write,w
  1389  0322  1683               	bsf	3,5	;RP0=1, select bank1
  1390  0323  1303               	bcf	3,6	;RP1=0, select bank1
  1391  0324  00A4               	movwf	mem_write@add_l^(0+128)
  1392                           
  1393                           ;24lc512.c: 17: i2c_start();
  1394  0325  120A  158A  274E  120A  118A  	fcall	_i2c_start
  1395                           
  1396                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  1397  032A  1283               	bcf	3,5	;RP0=0, select bank0
  1398  032B  1303               	bcf	3,6	;RP1=0, select bank0
  1399  032C  01C0               	clrf	i2c_write@ack
  1400  032D  30A0               	movlw	160
  1401  032E  120A  118A  2117  120A  118A  	fcall	_i2c_write
  1402                           
  1403                           ;24lc512.c: 19: i2c_write(add_h,0);
  1404  0333  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0334  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0335  01C0               	clrf	i2c_write@ack
  1407  0336  1683               	bsf	3,5	;RP0=1, select bank1
  1408  0337  1303               	bcf	3,6	;RP1=0, select bank1
  1409  0338  0823               	movf	mem_write@add_h^(0+128),w
  1410  0339  120A  118A  2117  120A  118A  	fcall	_i2c_write
  1411                           
  1412                           ;24lc512.c: 20: i2c_write(add_l,0);
  1413  033E  1283               	bcf	3,5	;RP0=0, select bank0
  1414  033F  1303               	bcf	3,6	;RP1=0, select bank0
  1415  0340  01C0               	clrf	i2c_write@ack
  1416  0341  1683               	bsf	3,5	;RP0=1, select bank1
  1417  0342  1303               	bcf	3,6	;RP1=0, select bank1
  1418  0343  0824               	movf	mem_write@add_l^(0+128),w
  1419  0344  120A  118A  2117  120A  118A  	fcall	_i2c_write
  1420                           
  1421                           ;24lc512.c: 21: i2c_write(data,0);
  1422  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1423  034A  1303               	bcf	3,6	;RP1=0, select bank0
  1424  034B  01C0               	clrf	i2c_write@ack
  1425  034C  1683               	bsf	3,5	;RP0=1, select bank1
  1426  034D  1303               	bcf	3,6	;RP1=0, select bank1
  1427  034E  0822               	movf	mem_write@data^(0+128),w
  1428  034F  120A  118A  2117  120A  118A  	fcall	_i2c_write
  1429                           
  1430                           ;24lc512.c: 22: i2c_stop();
  1431  0354  120A  158A  2789  120A  118A  	fcall	_i2c_stop
  1432  0359                     L1:	
  1433                           
  1434                           ;24lc512.c: 24: i2c_start();
  1435  0359  120A  158A  274E  120A  118A  	fcall	_i2c_start
  1436                           
  1437                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  1438  035E  1283               	bcf	3,5	;RP0=0, select bank0
  1439  035F  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0360  01C0               	clrf	i2c_write@ack
  1441  0361  30A0               	movlw	160
  1442  0362  120A  118A  2117  120A  118A  	fcall	_i2c_write
  1443                           
  1444                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  1445  0367  1683               	bsf	3,5	;RP0=1, select bank1
  1446  0368  1303               	bcf	3,6	;RP1=0, select bank1
  1447  0369  1B11               	btfsc	17,6	;volatile
  1448  036A  2B59               	goto	L1
  1449                           
  1450                           ;24lc512.c: 30: }
  1451                           ;24lc512.c: 31: i2c_stop();
  1452                           
  1453                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  1454                           
  1455                           ;24lc512.c: 28: i2c_start();
  1456  036B  120A  158A  2789   	fcall	_i2c_stop
  1457  036E  0008               	return
  1458  036F                     __end_of_mem_write:	
  1459                           
  1460                           	psect	text5
  1461  0206                     __ptext5:	
  1462 ;; *************** function _mem_read *****************
  1463 ;; Defined at:
  1464 ;;		line 34 in file "24lc512.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  add             2    0[BANK1 ] unsigned int 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  add_l           1    4[BANK1 ] unsigned char 
  1469 ;;  add_h           1    3[BANK1 ] unsigned char 
  1470 ;;  rta             1    2[BANK1 ] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      unsigned char 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0, pclath, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       0       2       0       0
  1481 ;;      Locals:         0       0       3       0       0
  1482 ;;      Temps:          0       1       0       0       0
  1483 ;;      Totals:         0       1       5       0       0
  1484 ;;Total ram usage:        6 bytes
  1485 ;; Hardware stack levels used:    1
  1486 ;; Hardware stack levels required when called:    6
  1487 ;; This function calls:
  1488 ;;		_i2c_read
  1489 ;;		_i2c_start
  1490 ;;		_i2c_stop
  1491 ;;		_i2c_write
  1492 ;; This function is called by:
  1493 ;;		_mem_init
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _mem_read
  1499  0206                     _mem_read:	
  1500                           
  1501                           ;24lc512.c: 35: unsigned char rta;
  1502                           ;24lc512.c: 36: unsigned char add_h,add_l;
  1503                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  1504                           
  1505                           ;incstack = 0
  1506                           ; Regs used in _mem_read: [wreg+status,2+status,0+pclath+cstack]
  1507  0206  1683               	bsf	3,5	;RP0=1, select bank1
  1508  0207  1303               	bcf	3,6	;RP1=0, select bank1
  1509  0208  0821               	movf	(mem_read@add+1)^(0+128),w
  1510  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1511  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1512  020B  00CA               	movwf	??_mem_read
  1513  020C  084A               	movf	??_mem_read,w
  1514  020D  1683               	bsf	3,5	;RP0=1, select bank1
  1515  020E  1303               	bcf	3,6	;RP1=0, select bank1
  1516  020F  00A3               	movwf	mem_read@add_h^(0+128)
  1517                           
  1518                           ;24lc512.c: 38: add_l = add & 0x00FF;
  1519  0210  0820               	movf	mem_read@add^(0+128),w
  1520  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0213  00CA               	movwf	??_mem_read
  1523  0214  084A               	movf	??_mem_read,w
  1524  0215  1683               	bsf	3,5	;RP0=1, select bank1
  1525  0216  1303               	bcf	3,6	;RP1=0, select bank1
  1526  0217  00A4               	movwf	mem_read@add_l^(0+128)
  1527                           
  1528                           ;24lc512.c: 39: i2c_start();
  1529  0218  120A  158A  274E  120A  118A  	fcall	_i2c_start
  1530                           
  1531                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  1532  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1533  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1534  021F  01C0               	clrf	i2c_write@ack
  1535  0220  30A0               	movlw	160
  1536  0221  120A  118A  2117  120A  118A  	fcall	_i2c_write
  1537                           
  1538                           ;24lc512.c: 41: i2c_write(add_h,0);
  1539  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1541  0228  01C0               	clrf	i2c_write@ack
  1542  0229  1683               	bsf	3,5	;RP0=1, select bank1
  1543  022A  1303               	bcf	3,6	;RP1=0, select bank1
  1544  022B  0823               	movf	mem_read@add_h^(0+128),w
  1545  022C  120A  118A  2117  120A  118A  	fcall	_i2c_write
  1546                           
  1547                           ;24lc512.c: 42: i2c_write(add_l,0);
  1548  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0233  01C0               	clrf	i2c_write@ack
  1551  0234  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0235  1303               	bcf	3,6	;RP1=0, select bank1
  1553  0236  0824               	movf	mem_read@add_l^(0+128),w
  1554  0237  120A  118A  2117  120A  118A  	fcall	_i2c_write
  1555                           
  1556                           ;24lc512.c: 43: i2c_start();
  1557  023C  120A  158A  274E  120A  118A  	fcall	_i2c_start
  1558                           
  1559                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  1560  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0243  01C0               	clrf	i2c_write@ack
  1563  0244  30A1               	movlw	161
  1564  0245  120A  118A  2117  120A  118A  	fcall	_i2c_write
  1565                           
  1566                           ;24lc512.c: 45: rta = i2c_read(0);
  1567  024A  3000               	movlw	0
  1568  024B  120A  118A  22B7  120A  118A  	fcall	_i2c_read
  1569  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1570  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0252  00CA               	movwf	??_mem_read
  1572  0253  084A               	movf	??_mem_read,w
  1573  0254  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0255  1303               	bcf	3,6	;RP1=0, select bank1
  1575  0256  00A2               	movwf	mem_read@rta^(0+128)
  1576                           
  1577                           ;24lc512.c: 46: i2c_stop();
  1578  0257  120A  158A  2789   	fcall	_i2c_stop
  1579                           
  1580                           ;24lc512.c: 47: return rta;
  1581  025A  1683               	bsf	3,5	;RP0=1, select bank1
  1582  025B  1303               	bcf	3,6	;RP1=0, select bank1
  1583  025C  0822               	movf	mem_read@rta^(0+128),w
  1584  025D  0008               	return
  1585  025E                     __end_of_mem_read:	
  1586                           
  1587                           	psect	text6
  1588  0117                     __ptext6:	
  1589 ;; *************** function _i2c_write *****************
  1590 ;; Defined at:
  1591 ;;		line 39 in file "i2clib.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  datum           1    wreg     unsigned char 
  1594 ;;  ack             1   32[BANK0 ] unsigned char 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  datum           1   41[BANK0 ] unsigned char 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      unsigned char 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1606 ;;      Params:         0       1       0       0       0
  1607 ;;      Locals:         0       1       0       0       0
  1608 ;;      Temps:          0       8       0       0       0
  1609 ;;      Totals:         0      10       0       0       0
  1610 ;;Total ram usage:       10 bytes
  1611 ;; Hardware stack levels used:    1
  1612 ;; Hardware stack levels required when called:    5
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_mem_write
  1617 ;;		_mem_read
  1618 ;;		_si_reset
  1619 ;;		_ds_set
  1620 ;;		_ds_get
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           
  1625                           ;psect for function _i2c_write
  1626  0117                     _i2c_write:	
  1627                           
  1628                           ;incstack = 0
  1629                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
  1630                           ;i2c_write@datum stored from wreg
  1631  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1632  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1633  0119  00C9               	movwf	i2c_write@datum
  1634  011A                     l2076:	
  1635                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1636                           
  1637  011A  1683               	bsf	3,5	;RP0=1, select bank1
  1638  011B  1303               	bcf	3,6	;RP1=0, select bank1
  1639  011C  0811               	movf	17,w	;volatile
  1640  011D  3901               	andlw	1
  1641  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1642  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1643  0120  00C1               	movwf	??_i2c_write
  1644  0121  1683               	bsf	3,5	;RP0=1, select bank1
  1645  0122  1303               	bcf	3,6	;RP1=0, select bank1
  1646  0123  0C11               	rrf	17,w	;volatile
  1647  0124  3901               	andlw	1
  1648  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1649  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1650  0127  00C2               	movwf	??_i2c_write+1
  1651  0128  1683               	bsf	3,5	;RP0=1, select bank1
  1652  0129  1303               	bcf	3,6	;RP1=0, select bank1
  1653  012A  0C11               	rrf	17,w	;volatile
  1654  012B  1283               	bcf	3,5	;RP0=0, select bank0
  1655  012C  1303               	bcf	3,6	;RP1=0, select bank0
  1656  012D  00C3               	movwf	??_i2c_write+2
  1657  012E  0CC3               	rrf	??_i2c_write+2,f
  1658  012F  0C43               	rrf	??_i2c_write+2,w
  1659  0130  3901               	andlw	1
  1660  0131  00C4               	movwf	??_i2c_write+3
  1661  0132  1683               	bsf	3,5	;RP0=1, select bank1
  1662  0133  1303               	bcf	3,6	;RP1=0, select bank1
  1663  0134  0E11               	swapf	17,w	;volatile
  1664  0135  3901               	andlw	1
  1665  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1666  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1667  0138  00C5               	movwf	??_i2c_write+4
  1668  0139  1683               	bsf	3,5	;RP0=1, select bank1
  1669  013A  1303               	bcf	3,6	;RP1=0, select bank1
  1670  013B  0C11               	rrf	17,w	;volatile
  1671  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1672  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1673  013E  00C6               	movwf	??_i2c_write+5
  1674  013F  0C46               	rrf	??_i2c_write+5,w
  1675  0140  3901               	andlw	1
  1676  0141  00C7               	movwf	??_i2c_write+6
  1677  0142  1683               	bsf	3,5	;RP0=1, select bank1
  1678  0143  1303               	bcf	3,6	;RP1=0, select bank1
  1679  0144  0C14               	rrf	20,w	;volatile
  1680  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1681  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1682  0147  00C8               	movwf	??_i2c_write+7
  1683  0148  0C48               	rrf	??_i2c_write+7,w
  1684  0149  3901               	andlw	1
  1685  014A  0447               	iorwf	??_i2c_write+6,w
  1686  014B  0445               	iorwf	??_i2c_write+4,w
  1687  014C  0444               	iorwf	??_i2c_write+3,w
  1688  014D  0442               	iorwf	??_i2c_write+1,w
  1689  014E  0441               	iorwf	??_i2c_write,w
  1690  014F  1D03               	btfss	3,2
  1691  0150  291A               	goto	l2076
  1692                           
  1693                           ;i2clib.c: 42: SSPBUF = datum;
  1694  0151  0849               	movf	i2c_write@datum,w
  1695  0152  0093               	movwf	19	;volatile
  1696  0153                     l169:	
  1697                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  1698                           
  1699  0153  1683               	bsf	3,5	;RP0=1, select bank1
  1700  0154  1303               	bcf	3,6	;RP1=0, select bank1
  1701  0155  1814               	btfsc	20,0	;volatile
  1702  0156  2953               	goto	l169
  1703                           
  1704                           ;i2clib.c: 44: if(ack){
  1705  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1706  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1707  0159  0840               	movf	i2c_write@ack,w
  1708  015A  1903               	btfsc	3,2
  1709  015B  2960               	goto	l176
  1710  015C                     l173:	
  1711                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  1712                           
  1713  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1714  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1715  015E  1B11               	btfsc	17,6	;volatile
  1716  015F  295C               	goto	l173
  1717  0160                     l176:	
  1718                           ;i2clib.c: 46: }
  1719                           ;i2clib.c: 47: }
  1720                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  1721                           
  1722  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1723  0161  198C               	btfsc	12,3	;volatile
  1724  0162  0008               	return
  1725  0163  2960               	goto	l176
  1726  0164                     __end_of_i2c_write:	
  1727                           
  1728                           	psect	text7
  1729  0F89                     __ptext7:	
  1730 ;; *************** function _i2c_stop *****************
  1731 ;; Defined at:
  1732 ;;		line 34 in file "i2clib.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0
  1748 ;;      Temps:          0       8       0       0       0
  1749 ;;      Totals:         0       8       0       0       0
  1750 ;;Total ram usage:        8 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    5
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_mem_write
  1757 ;;		_mem_read
  1758 ;;		_si_reset
  1759 ;;		_ds_set
  1760 ;;		_ds_get
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function _i2c_stop
  1766  0F89                     _i2c_stop:	
  1767  0F89                     l2072:	
  1768                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1769                           
  1770                           ;incstack = 0
  1771                           ; Regs used in _i2c_stop: [wreg+status,2+status,0]
  1772                           
  1773  0F89  1683               	bsf	3,5	;RP0=1, select bank1
  1774  0F8A  1303               	bcf	3,6	;RP1=0, select bank1
  1775  0F8B  0811               	movf	17,w	;volatile
  1776  0F8C  3901               	andlw	1
  1777  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0F8F  00C0               	movwf	??_i2c_stop
  1780  0F90  1683               	bsf	3,5	;RP0=1, select bank1
  1781  0F91  1303               	bcf	3,6	;RP1=0, select bank1
  1782  0F92  0C11               	rrf	17,w	;volatile
  1783  0F93  3901               	andlw	1
  1784  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0F95  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0F96  00C1               	movwf	??_i2c_stop+1
  1787  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  1788  0F98  1303               	bcf	3,6	;RP1=0, select bank1
  1789  0F99  0C11               	rrf	17,w	;volatile
  1790  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  1792  0F9C  00C2               	movwf	??_i2c_stop+2
  1793  0F9D  0CC2               	rrf	??_i2c_stop+2,f
  1794  0F9E  0C42               	rrf	??_i2c_stop+2,w
  1795  0F9F  3901               	andlw	1
  1796  0FA0  00C3               	movwf	??_i2c_stop+3
  1797  0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  1798  0FA2  1303               	bcf	3,6	;RP1=0, select bank1
  1799  0FA3  0E11               	swapf	17,w	;volatile
  1800  0FA4  3901               	andlw	1
  1801  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0FA7  00C4               	movwf	??_i2c_stop+4
  1804  0FA8  1683               	bsf	3,5	;RP0=1, select bank1
  1805  0FA9  1303               	bcf	3,6	;RP1=0, select bank1
  1806  0FAA  0C11               	rrf	17,w	;volatile
  1807  0FAB  1283               	bcf	3,5	;RP0=0, select bank0
  1808  0FAC  1303               	bcf	3,6	;RP1=0, select bank0
  1809  0FAD  00C5               	movwf	??_i2c_stop+5
  1810  0FAE  0C45               	rrf	??_i2c_stop+5,w
  1811  0FAF  3901               	andlw	1
  1812  0FB0  00C6               	movwf	??_i2c_stop+6
  1813  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  1814  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  1815  0FB3  0C14               	rrf	20,w	;volatile
  1816  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0FB6  00C7               	movwf	??_i2c_stop+7
  1819  0FB7  0C47               	rrf	??_i2c_stop+7,w
  1820  0FB8  3901               	andlw	1
  1821  0FB9  0446               	iorwf	??_i2c_stop+6,w
  1822  0FBA  0444               	iorwf	??_i2c_stop+4,w
  1823  0FBB  0443               	iorwf	??_i2c_stop+3,w
  1824  0FBC  0441               	iorwf	??_i2c_stop+1,w
  1825  0FBD  0440               	iorwf	??_i2c_stop,w
  1826  0FBE  1D03               	btfss	3,2
  1827  0FBF  2F89               	goto	l2072
  1828                           
  1829                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  1830  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  1831  0FC1  1303               	bcf	3,6	;RP1=0, select bank1
  1832  0FC2  1511               	bsf	17,2	;volatile
  1833  0FC3  0008               	return
  1834  0FC4                     __end_of_i2c_stop:	
  1835                           
  1836                           	psect	text8
  1837  0F4E                     __ptext8:	
  1838 ;; *************** function _i2c_start *****************
  1839 ;; Defined at:
  1840 ;;		line 24 in file "i2clib.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         0       0       0       0       0
  1855 ;;      Locals:         0       0       0       0       0
  1856 ;;      Temps:          0       8       0       0       0
  1857 ;;      Totals:         0       8       0       0       0
  1858 ;;Total ram usage:        8 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    5
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_mem_write
  1865 ;;		_mem_read
  1866 ;;		_si_reset
  1867 ;;		_ds_set
  1868 ;;		_ds_get
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           
  1873                           ;psect for function _i2c_start
  1874  0F4E                     _i2c_start:	
  1875  0F4E                     l2068:	
  1876                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1877                           
  1878                           ;incstack = 0
  1879                           ; Regs used in _i2c_start: [wreg+status,2+status,0]
  1880                           
  1881  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  1882  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  1883  0F50  0811               	movf	17,w	;volatile
  1884  0F51  3901               	andlw	1
  1885  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0F54  00C0               	movwf	??_i2c_start
  1888  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0F57  0C11               	rrf	17,w	;volatile
  1891  0F58  3901               	andlw	1
  1892  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0F5B  00C1               	movwf	??_i2c_start+1
  1895  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  1896  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  1897  0F5E  0C11               	rrf	17,w	;volatile
  1898  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  1899  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  1900  0F61  00C2               	movwf	??_i2c_start+2
  1901  0F62  0CC2               	rrf	??_i2c_start+2,f
  1902  0F63  0C42               	rrf	??_i2c_start+2,w
  1903  0F64  3901               	andlw	1
  1904  0F65  00C3               	movwf	??_i2c_start+3
  1905  0F66  1683               	bsf	3,5	;RP0=1, select bank1
  1906  0F67  1303               	bcf	3,6	;RP1=0, select bank1
  1907  0F68  0E11               	swapf	17,w	;volatile
  1908  0F69  3901               	andlw	1
  1909  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0F6C  00C4               	movwf	??_i2c_start+4
  1912  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  1913  0F6E  1303               	bcf	3,6	;RP1=0, select bank1
  1914  0F6F  0C11               	rrf	17,w	;volatile
  1915  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0F72  00C5               	movwf	??_i2c_start+5
  1918  0F73  0C45               	rrf	??_i2c_start+5,w
  1919  0F74  3901               	andlw	1
  1920  0F75  00C6               	movwf	??_i2c_start+6
  1921  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  1922  0F77  1303               	bcf	3,6	;RP1=0, select bank1
  1923  0F78  0C14               	rrf	20,w	;volatile
  1924  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  1926  0F7B  00C7               	movwf	??_i2c_start+7
  1927  0F7C  0C47               	rrf	??_i2c_start+7,w
  1928  0F7D  3901               	andlw	1
  1929  0F7E  0446               	iorwf	??_i2c_start+6,w
  1930  0F7F  0444               	iorwf	??_i2c_start+4,w
  1931  0F80  0443               	iorwf	??_i2c_start+3,w
  1932  0F81  0441               	iorwf	??_i2c_start+1,w
  1933  0F82  0440               	iorwf	??_i2c_start,w
  1934  0F83  1D03               	btfss	3,2
  1935  0F84  2F4E               	goto	l2068
  1936                           
  1937                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  1938  0F85  1683               	bsf	3,5	;RP0=1, select bank1
  1939  0F86  1303               	bcf	3,6	;RP1=0, select bank1
  1940  0F87  1411               	bsf	17,0	;volatile
  1941  0F88  0008               	return
  1942  0F89                     __end_of_i2c_start:	
  1943                           
  1944                           	psect	text9
  1945  02B7                     __ptext9:	
  1946 ;; *************** function _i2c_read *****************
  1947 ;; Defined at:
  1948 ;;		line 51 in file "i2clib.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  ack             1    wreg     unsigned char 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  ack             1   40[BANK0 ] unsigned char 
  1953 ;;  resp            1   41[BANK0 ] unsigned char 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      unsigned char 
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1963 ;;      Params:         0       0       0       0       0
  1964 ;;      Locals:         0       2       0       0       0
  1965 ;;      Temps:          0       8       0       0       0
  1966 ;;      Totals:         0      10       0       0       0
  1967 ;;Total ram usage:       10 bytes
  1968 ;; Hardware stack levels used:    1
  1969 ;; Hardware stack levels required when called:    5
  1970 ;; This function calls:
  1971 ;;		Nothing
  1972 ;; This function is called by:
  1973 ;;		_mem_read
  1974 ;;		_ds_get
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           
  1979                           ;psect for function _i2c_read
  1980  02B7                     _i2c_read:	
  1981                           
  1982                           ;incstack = 0
  1983                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  1984                           ;i2c_read@ack stored from wreg
  1985  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1986  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1987  02B9  00C8               	movwf	i2c_read@ack
  1988                           
  1989                           ;i2clib.c: 52: unsigned char resp;
  1990                           ;i2clib.c: 53: static bit flag;
  1991                           ;i2clib.c: 54: flag = ack & 0x01;
  1992  02BA  104B               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  1993  02BB  1848               	btfsc	i2c_read@ack,0
  1994  02BC  144B               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  1995  02BD                     l2086:	
  1996                           ;i2clib.c: 55: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1997                           
  1998  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  1999  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2000  02BF  0811               	movf	17,w	;volatile
  2001  02C0  3901               	andlw	1
  2002  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  2003  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  2004  02C3  00C0               	movwf	??_i2c_read
  2005  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2006  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2007  02C6  0C11               	rrf	17,w	;volatile
  2008  02C7  3901               	andlw	1
  2009  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2010  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2011  02CA  00C1               	movwf	??_i2c_read+1
  2012  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  2013  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  2014  02CD  0C11               	rrf	17,w	;volatile
  2015  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  2016  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  2017  02D0  00C2               	movwf	??_i2c_read+2
  2018  02D1  0CC2               	rrf	??_i2c_read+2,f
  2019  02D2  0C42               	rrf	??_i2c_read+2,w
  2020  02D3  3901               	andlw	1
  2021  02D4  00C3               	movwf	??_i2c_read+3
  2022  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  2023  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  2024  02D7  0E11               	swapf	17,w	;volatile
  2025  02D8  3901               	andlw	1
  2026  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  2027  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  2028  02DB  00C4               	movwf	??_i2c_read+4
  2029  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  2030  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  2031  02DE  0C11               	rrf	17,w	;volatile
  2032  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  2033  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  2034  02E1  00C5               	movwf	??_i2c_read+5
  2035  02E2  0C45               	rrf	??_i2c_read+5,w
  2036  02E3  3901               	andlw	1
  2037  02E4  00C6               	movwf	??_i2c_read+6
  2038  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2039  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2040  02E7  0C14               	rrf	20,w	;volatile
  2041  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2042  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2043  02EA  00C7               	movwf	??_i2c_read+7
  2044  02EB  0C47               	rrf	??_i2c_read+7,w
  2045  02EC  3901               	andlw	1
  2046  02ED  0446               	iorwf	??_i2c_read+6,w
  2047  02EE  0444               	iorwf	??_i2c_read+4,w
  2048  02EF  0443               	iorwf	??_i2c_read+3,w
  2049  02F0  0441               	iorwf	??_i2c_read+1,w
  2050  02F1  0440               	iorwf	??_i2c_read,w
  2051  02F2  1D03               	btfss	3,2
  2052  02F3  2ABD               	goto	l2086
  2053                           
  2054                           ;i2clib.c: 56: SSPCON2bits.RCEN = 1;
  2055  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  2056  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  2057  02F6  1591               	bsf	17,3	;volatile
  2058  02F7                     l187:	
  2059                           ;i2clib.c: 57: while(!SSPSTATbits.BF);
  2060                           
  2061  02F7  1C14               	btfss	20,0	;volatile
  2062  02F8  2AF7               	goto	l187
  2063  02F9                     l190:	
  2064                           ;i2clib.c: 58: while(!PIR1bits.SSPIF);
  2065                           
  2066  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2067  02FA  1D8C               	btfss	12,3	;volatile
  2068  02FB  2AF9               	goto	l190
  2069                           
  2070                           ;i2clib.c: 59: SSPCON2bits.ACKEN = flag;
  2071  02FC  1C4B               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2072  02FD  2B02               	goto	u1880
  2073  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  2074  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2075  0300  1611               	bsf	17,4	;volatile
  2076  0301  2B05               	goto	l2088
  2077  0302                     u1880:	
  2078  0302  1683               	bsf	3,5	;RP0=1, select bank1
  2079  0303  1303               	bcf	3,6	;RP1=0, select bank1
  2080  0304  1211               	bcf	17,4	;volatile
  2081  0305                     l2088:	
  2082                           
  2083                           ;i2clib.c: 60: resp = SSPBUF;
  2084  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0306  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0307  0813               	movf	19,w	;volatile
  2087  0308  00C0               	movwf	??_i2c_read
  2088  0309  0840               	movf	??_i2c_read,w
  2089  030A  00C9               	movwf	i2c_read@resp
  2090  030B                     l193:	
  2091                           ;i2clib.c: 61: while(SSPSTATbits.BF);
  2092                           
  2093  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2094  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2095  030D  1814               	btfsc	20,0	;volatile
  2096  030E  2B0B               	goto	l193
  2097                           
  2098                           ;i2clib.c: 62: return resp;
  2099  030F  1283               	bcf	3,5	;RP0=0, select bank0
  2100  0310  1303               	bcf	3,6	;RP1=0, select bank0
  2101  0311  0849               	movf	i2c_read@resp,w
  2102  0312  0008               	return
  2103  0313                     __end_of_i2c_read:	
  2104                           
  2105                           	psect	text10
  2106  0E8C                     __ptext10:	
  2107 ;; *************** function _init_timer2 *****************
  2108 ;; Defined at:
  2109 ;;		line 169 in file "panda17.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  pre             1    wreg     unsigned char 
  2112 ;;  post            1   32[BANK0 ] unsigned char 
  2113 ;;  eoc             1   33[BANK0 ] unsigned char 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  pre             1   36[BANK0 ] unsigned char 
  2116 ;;  sfr             1   37[BANK0 ] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2126 ;;      Params:         0       2       0       0       0
  2127 ;;      Locals:         0       2       0       0       0
  2128 ;;      Temps:          0       2       0       0       0
  2129 ;;      Totals:         0       6       0       0       0
  2130 ;;Total ram usage:        6 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    5
  2133 ;; This function calls:
  2134 ;;		Nothing
  2135 ;; This function is called by:
  2136 ;;		_main
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           
  2141                           ;psect for function _init_timer2
  2142  0E8C                     _init_timer2:	
  2143                           
  2144                           ;incstack = 0
  2145                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
  2146                           ;init_timer2@pre stored from wreg
  2147  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  2148  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  2149  0E8E  00C4               	movwf	init_timer2@pre
  2150                           
  2151                           ;panda17.c: 170: unsigned char sfr = 0x00;
  2152  0E8F  01C5               	clrf	init_timer2@sfr
  2153                           
  2154                           ;panda17.c: 171: PR2 = eoc;
  2155  0E90  0841               	movf	init_timer2@eoc,w
  2156  0E91  1683               	bsf	3,5	;RP0=1, select bank1
  2157  0E92  1303               	bcf	3,6	;RP1=0, select bank1
  2158  0E93  0092               	movwf	18	;volatile
  2159                           
  2160                           ;panda17.c: 172: sfr = ((post-1) << 3) & 0x78;
  2161  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  2162  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  2163  0E96  0840               	movf	init_timer2@post,w
  2164  0E97  00C2               	movwf	??_init_timer2
  2165  0E98  3002               	movlw	2
  2166  0E99                     u1715:	
  2167  0E99  1003               	clrc
  2168  0E9A  0DC2               	rlf	??_init_timer2,f
  2169  0E9B  3EFF               	addlw	-1
  2170  0E9C  1D03               	skipz
  2171  0E9D  2E99               	goto	u1715
  2172  0E9E  1003               	clrc
  2173  0E9F  0D42               	rlf	??_init_timer2,w
  2174  0EA0  3EF8               	addlw	248
  2175  0EA1  3978               	andlw	120
  2176  0EA2  00C3               	movwf	??_init_timer2+1
  2177  0EA3  0843               	movf	??_init_timer2+1,w
  2178  0EA4  00C5               	movwf	init_timer2@sfr
  2179                           
  2180                           ;panda17.c: 173: sfr += 4;
  2181  0EA5  3004               	movlw	4
  2182  0EA6  00C2               	movwf	??_init_timer2
  2183  0EA7  0842               	movf	??_init_timer2,w
  2184  0EA8  07C5               	addwf	init_timer2@sfr,f
  2185                           
  2186                           ;panda17.c: 174: sfr += pre;
  2187  0EA9  0844               	movf	init_timer2@pre,w
  2188  0EAA  00C2               	movwf	??_init_timer2
  2189  0EAB  0842               	movf	??_init_timer2,w
  2190  0EAC  07C5               	addwf	init_timer2@sfr,f
  2191                           
  2192                           ;panda17.c: 175: T2CON = sfr;
  2193  0EAD  0845               	movf	init_timer2@sfr,w
  2194  0EAE  0092               	movwf	18	;volatile
  2195                           
  2196                           ;panda17.c: 176: PIE1bits.TMR2IE = 1;
  2197  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  2198  0EB0  1303               	bcf	3,6	;RP1=0, select bank1
  2199  0EB1  148C               	bsf	12,1	;volatile
  2200  0EB2  0008               	return
  2201  0EB3                     __end_of_init_timer2:	
  2202                           
  2203                           	psect	text11
  2204  0DA1                     __ptext11:	
  2205 ;; *************** function _i2c_init *****************
  2206 ;; Defined at:
  2207 ;;		line 13 in file "i2clib.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0
  2224 ;;      Totals:         0       0       0       0       0
  2225 ;;Total ram usage:        0 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    5
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_main
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           
  2236                           ;psect for function _i2c_init
  2237  0DA1                     _i2c_init:	
  2238                           
  2239                           ;i2clib.c: 15: SSPCONbits.SSPM = 0b1000;
  2240                           
  2241                           ;incstack = 0
  2242                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  2243  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0DA3  0814               	movf	20,w	;volatile
  2246  0DA4  39F0               	andlw	-16
  2247  0DA5  3808               	iorlw	8
  2248  0DA6  0094               	movwf	20	;volatile
  2249                           
  2250                           ;i2clib.c: 16: SSPCONbits.SSPEN = 1;
  2251  0DA7  1694               	bsf	20,5	;volatile
  2252                           
  2253                           ;i2clib.c: 18: SSPADD = 0x04;
  2254  0DA8  3004               	movlw	4
  2255  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  2256  0DAA  1303               	bcf	3,6	;RP1=0, select bank1
  2257  0DAB  0093               	movwf	19	;volatile
  2258                           
  2259                           ;i2clib.c: 19: SSPSTATbits.SMP = 1;
  2260  0DAC  1794               	bsf	20,7	;volatile
  2261                           
  2262                           ;i2clib.c: 20: TRISCbits.TRISC3 = 1;
  2263  0DAD  1587               	bsf	7,3	;volatile
  2264                           
  2265                           ;i2clib.c: 21: TRISCbits.TRISC4 = 1;
  2266  0DAE  1607               	bsf	7,4	;volatile
  2267  0DAF  0008               	return
  2268  0DB0                     __end_of_i2c_init:	
  2269                           
  2270                           	psect	text12
  2271  0DE4                     __ptext12:	
  2272 ;; *************** function _ints_isr *****************
  2273 ;; Defined at:
  2274 ;;		line 159 in file "panda17.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0
  2290 ;;      Temps:          0       4       0       0       0
  2291 ;;      Totals:         0       4       0       0       0
  2292 ;;Total ram usage:        4 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    4
  2295 ;; This function calls:
  2296 ;;		_tmr2_isr
  2297 ;;		_uart_isr
  2298 ;; This function is called by:
  2299 ;;		Interrupt level 1
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           
  2304                           ;psect for function _ints_isr
  2305  0DE4                     _ints_isr:	
  2306                           
  2307                           ;panda17.c: 160: if (PIR1bits.RCIF){
  2308  0DE4  1E8C               	btfss	12,5	;volatile
  2309  0DE5  2DEB               	goto	i1l2016
  2310                           
  2311                           ;panda17.c: 161: uart_isr();
  2312  0DE6  120A  158A  271A  120A  158A  	fcall	_uart_isr
  2313  0DEB                     i1l2016:	
  2314                           
  2315                           ;panda17.c: 162: }
  2316                           ;panda17.c: 163: if (PIR1bits.TMR2IF){
  2317  0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  2318  0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  2319  0DED  1C8C               	btfss	12,1	;volatile
  2320  0DEE  2DF5               	goto	i1l113
  2321                           
  2322                           ;panda17.c: 164: PIR1bits.TMR2IF = 0;
  2323  0DEF  108C               	bcf	12,1	;volatile
  2324                           
  2325                           ;panda17.c: 165: tmr2_isr();
  2326  0DF0  120A  118A  201C  120A  158A  	fcall	_tmr2_isr
  2327  0DF5                     i1l113:	
  2328  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0DF7  083F               	movf	??_ints_isr+3,w
  2331  0DF8  00FF               	movwf	127
  2332  0DF9  083E               	movf	??_ints_isr+2,w
  2333  0DFA  008A               	movwf	10
  2334  0DFB  083D               	movf	??_ints_isr+1,w
  2335  0DFC  0084               	movwf	4
  2336  0DFD  0E3C               	swapf	??_ints_isr^0,w
  2337  0DFE  0083               	movwf	3
  2338  0DFF  0EFE               	swapf	126,f
  2339  0E00  0E7E               	swapf	126,w
  2340  0E01  0009               	retfie
  2341  0E02                     __end_of_ints_isr:	
  2342                           
  2343                           	psect	intentry
  2344  0004                     __pintentry:	
  2345                           ;incstack = 0
  2346                           ; Regs used in _ints_isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2347                           
  2348  0004                     interrupt_function:	
  2349  007E                     saved_w	set	btemp
  2350  0004  00FE               	movwf	btemp
  2351  0005  0E03               	swapf	3,w
  2352  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0008  00BC               	movwf	??_ints_isr
  2355  0009  0804               	movf	4,w
  2356  000A  00BD               	movwf	??_ints_isr+1
  2357  000B  080A               	movf	10,w
  2358  000C  00BE               	movwf	??_ints_isr+2
  2359  000D  087F               	movf	btemp+1,w
  2360  000E  00BF               	movwf	??_ints_isr+3
  2361  000F  120A  158A  2DE4   	ljmp	_ints_isr
  2362                           
  2363                           	psect	text13
  2364  0F1A                     __ptext13:	
  2365 ;; *************** function _uart_isr *****************
  2366 ;; Defined at:
  2367 ;;		line 102 in file "panda17.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  rcv             1   27[BANK0 ] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2381 ;;      Params:         0       0       0       0       0
  2382 ;;      Locals:         0       1       0       0       0
  2383 ;;      Temps:          0       1       0       0       0
  2384 ;;      Totals:         0       2       0       0       0
  2385 ;;Total ram usage:        2 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    3
  2388 ;; This function calls:
  2389 ;;		_clear_mem
  2390 ;;		_give_all
  2391 ;; This function is called by:
  2392 ;;		_ints_isr
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function _uart_isr
  2398  0F1A                     _uart_isr:	
  2399                           
  2400                           ;panda17.c: 103: INTCONbits.GIE = 0;
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in _uart_isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2404  0F1A  138B               	bcf	11,7	;volatile
  2405                           
  2406                           ;panda17.c: 104: static bit ferr = 0, oerr = 0;
  2407                           ;panda17.c: 105: unsigned char rcv = 0;
  2408  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0F1D  01BB               	clrf	uart_isr@rcv
  2411                           
  2412                           ;panda17.c: 106: ferr = RCSTAbits.FERR;
  2413  0F1E  114B               	bcf	uart_isr@ferr/(0+8),uart_isr@ferr& (0+7)
  2414  0F1F  1918               	btfsc	24,2	;volatile
  2415  0F20  154B               	bsf	uart_isr@ferr/(0+8),uart_isr@ferr& (0+7)
  2416                           
  2417                           ;panda17.c: 107: oerr = RCSTAbits.OERR;
  2418  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  2419  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  2420  0F23  10CB               	bcf	uart_isr@oerr/(0+8),uart_isr@oerr& (0+7)
  2421  0F24  1898               	btfsc	24,1	;volatile
  2422  0F25  14CB               	bsf	uart_isr@oerr/(0+8),uart_isr@oerr& (0+7)
  2423                           
  2424                           ;panda17.c: 108: if (!ferr & !oerr){
  2425  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0F28  1D4B               	btfss	uart_isr@ferr/(0+8),uart_isr@ferr& (0+7)
  2428  0F29  18CB               	btfsc	uart_isr@oerr/(0+8),uart_isr@oerr& (0+7)
  2429  0F2A  2F41               	goto	i1l1948
  2430                           
  2431                           ;panda17.c: 109: rcv = RCREG;
  2432  0F2B  081A               	movf	26,w	;volatile
  2433  0F2C  00BA               	movwf	??_uart_isr
  2434  0F2D  083A               	movf	??_uart_isr,w
  2435  0F2E  00BB               	movwf	uart_isr@rcv
  2436                           
  2437                           ;panda17.c: 110: }
  2438                           ;panda17.c: 111: switch (rcv){
  2439  0F2F  2F41               	goto	i1l1948
  2440  0F30                     i1l94:	
  2441                           ;panda17.c: 112: case 'a':
  2442                           
  2443                           
  2444                           ;panda17.c: 113: PORTBbits.RB4 = 1;
  2445  0F30  1606               	bsf	6,4	;volatile
  2446                           
  2447                           ;panda17.c: 114: give_all();
  2448  0F31  120A  118A  23CC  120A  158A  	fcall	_give_all
  2449  0F36  2F3D               	goto	i1l1944
  2450  0F37                     i1l97:	
  2451                           ;panda17.c: 119: case 'c':
  2452                           
  2453                           ;panda17.c: 118: break;
  2454                           
  2455                           ;panda17.c: 117: case 'b':
  2456                           
  2457                           ;panda17.c: 116: break;
  2458                           
  2459                           ;panda17.c: 115: PORTBbits.RB4 = 0;
  2460                           
  2461                           
  2462                           ;panda17.c: 120: PORTBbits.RB4 = 1;
  2463  0F37  1606               	bsf	6,4	;volatile
  2464                           
  2465                           ;panda17.c: 121: clear_mem();
  2466  0F38  120A  158A  258A  120A  158A  	fcall	_clear_mem
  2467  0F3D                     i1l1944:	
  2468                           
  2469                           ;panda17.c: 122: PORTBbits.RB4 = 0;
  2470  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0F3F  1206               	bcf	6,4	;volatile
  2473                           
  2474                           ;panda17.c: 125: }
  2475                           
  2476                           ;panda17.c: 123: break;
  2477  0F40  2F4C               	goto	i1l95
  2478  0F41                     i1l1948:	
  2479  0F41  083B               	movf	uart_isr@rcv,w
  2480                           
  2481                           ; Switch size 1, requested type "space"
  2482                           ; Number of cases is 3, Range of values is 97 to 99
  2483                           ; switch strategies available:
  2484                           ; Name         Instructions Cycles
  2485                           ; simple_byte           10     6 (average)
  2486                           ; direct_byte           20    11 (fixed)
  2487                           ; jumptable            263     9 (fixed)
  2488                           ;	Chosen strategy is simple_byte
  2489  0F42  3A61               	xorlw	97	; case 97
  2490  0F43  1903               	skipnz
  2491  0F44  2F30               	goto	i1l94
  2492  0F45  3A03               	xorlw	3	; case 98
  2493  0F46  1903               	skipnz
  2494  0F47  2F4C               	goto	i1l95
  2495  0F48  3A01               	xorlw	1	; case 99
  2496  0F49  1903               	skipnz
  2497  0F4A  2F37               	goto	i1l97
  2498  0F4B  2F4C               	goto	i1l95
  2499  0F4C                     i1l95:	
  2500                           
  2501                           ;panda17.c: 126: INTCONbits.GIE = 1;
  2502  0F4C  178B               	bsf	11,7	;volatile
  2503  0F4D  0008               	return
  2504  0F4E                     __end_of_uart_isr:	
  2505                           
  2506                           	psect	text14
  2507  03CC                     __ptext14:	
  2508 ;; *************** function _give_all *****************
  2509 ;; Defined at:
  2510 ;;		line 43 in file "panda17.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;		None
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  aux             2   24[BANK0 ] unsigned int 
  2515 ;;  n               2   22[BANK0 ] unsigned int 
  2516 ;;  add             2   20[BANK0 ] unsigned int 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         0       0       0       0       0
  2527 ;;      Locals:         0       6       0       0       0
  2528 ;;      Temps:          0       4       0       0       0
  2529 ;;      Totals:         0      10       0       0       0
  2530 ;;Total ram usage:       10 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    2
  2533 ;; This function calls:
  2534 ;;		_printf
  2535 ;;		i1_mem_read
  2536 ;; This function is called by:
  2537 ;;		_uart_isr
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           
  2542                           ;psect for function _give_all
  2543  03CC                     _give_all:	
  2544                           
  2545                           ;panda17.c: 44: INTCONbits.GIE = 0;
  2546                           
  2547                           ;incstack = 0
  2548                           ; Regs used in _give_all: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2549  03CC  138B               	bcf	11,7	;volatile
  2550                           
  2551                           ;panda17.c: 45: unsigned int add,n,aux;
  2552                           ;panda17.c: 46: add = mem_read(0x0A);
  2553  03CD  300A               	movlw	10
  2554  03CE  00FB               	movwf	i1mem_read@add
  2555  03CF  3000               	movlw	0
  2556  03D0  00FC               	movwf	i1mem_read@add+1
  2557  03D1  120A  118A  2089  120A  118A  	fcall	i1_mem_read
  2558  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2559  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2560  03D8  00B0               	movwf	??_give_all
  2561  03D9  01B1               	clrf	??_give_all+1
  2562  03DA  0830               	movf	??_give_all,w
  2563  03DB  00B4               	movwf	give_all@add
  2564  03DC  0831               	movf	??_give_all+1,w
  2565  03DD  00B5               	movwf	give_all@add+1
  2566                           
  2567                           ;panda17.c: 47: add = add << 8;
  2568  03DE  0834               	movf	give_all@add,w
  2569  03DF  00B1               	movwf	??_give_all+1
  2570  03E0  01B0               	clrf	??_give_all
  2571  03E1  0830               	movf	??_give_all,w
  2572  03E2  00B4               	movwf	give_all@add
  2573  03E3  0831               	movf	??_give_all+1,w
  2574  03E4  00B5               	movwf	give_all@add+1
  2575                           
  2576                           ;panda17.c: 48: add += mem_read(0x0B);
  2577  03E5  300B               	movlw	11
  2578  03E6  00FB               	movwf	i1mem_read@add
  2579  03E7  3000               	movlw	0
  2580  03E8  00FC               	movwf	i1mem_read@add+1
  2581  03E9  120A  118A  2089  120A  118A  	fcall	i1_mem_read
  2582  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2583  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2584  03F0  00B0               	movwf	??_give_all
  2585  03F1  01B1               	clrf	??_give_all+1
  2586  03F2  0830               	movf	??_give_all,w
  2587  03F3  07B4               	addwf	give_all@add,f
  2588  03F4  1803               	skipnc
  2589  03F5  0AB5               	incf	give_all@add+1,f
  2590  03F6  0831               	movf	??_give_all+1,w
  2591  03F7  07B5               	addwf	give_all@add+1,f
  2592                           
  2593                           ;panda17.c: 49: printf("%05d\r\n",add);
  2594  03F8  0835               	movf	give_all@add+1,w
  2595  03F9  00A2               	movwf	?_printf+1
  2596  03FA  0834               	movf	give_all@add,w
  2597  03FB  00A1               	movwf	?_printf
  2598  03FC  3024               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2599  03FD  120A  118A  25EA  120A  118A  	fcall	_printf
  2600                           
  2601                           ;panda17.c: 50: for (n=0;n<add;n++){
  2602  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2603  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2604  0404  01B6               	clrf	give_all@n
  2605  0405  01B7               	clrf	give_all@n+1
  2606  0406                     i1l1830:	
  2607  0406  0835               	movf	give_all@add+1,w
  2608  0407  0237               	subwf	give_all@n+1,w
  2609  0408  1D03               	skipz
  2610  0409  2C0C               	goto	u163_25
  2611  040A  0834               	movf	give_all@add,w
  2612  040B  0236               	subwf	give_all@n,w
  2613  040C                     u163_25:	
  2614  040C  1803               	btfsc	3,0
  2615  040D  2CAF               	goto	i1l81
  2616                           
  2617                           ;panda17.c: 51: aux = mem_read(2*n+0x0010);
  2618  040E  0837               	movf	give_all@n+1,w
  2619  040F  00B1               	movwf	??_give_all+1
  2620  0410  0836               	movf	give_all@n,w
  2621  0411  00B0               	movwf	??_give_all
  2622  0412  1003               	clrc
  2623  0413  0DB0               	rlf	??_give_all,f
  2624  0414  0DB1               	rlf	??_give_all+1,f
  2625  0415  0830               	movf	??_give_all,w
  2626  0416  3E10               	addlw	16
  2627  0417  00FB               	movwf	i1mem_read@add
  2628  0418  0831               	movf	??_give_all+1,w
  2629  0419  1803               	skipnc
  2630  041A  3E01               	addlw	1
  2631  041B  3E00               	addlw	0
  2632  041C  00FC               	movwf	i1mem_read@add+1
  2633  041D  120A  118A  2089  120A  118A  	fcall	i1_mem_read
  2634  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2635  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2636  0424  00B2               	movwf	??_give_all+2
  2637  0425  01B3               	clrf	??_give_all+3
  2638  0426  0832               	movf	??_give_all+2,w
  2639  0427  00B8               	movwf	give_all@aux
  2640  0428  0833               	movf	??_give_all+3,w
  2641  0429  00B9               	movwf	give_all@aux+1
  2642                           
  2643                           ;panda17.c: 52: aux = aux << 8;
  2644  042A  0838               	movf	give_all@aux,w
  2645  042B  00B1               	movwf	??_give_all+1
  2646  042C  01B0               	clrf	??_give_all
  2647  042D  0830               	movf	??_give_all,w
  2648  042E  00B8               	movwf	give_all@aux
  2649  042F  0831               	movf	??_give_all+1,w
  2650  0430  00B9               	movwf	give_all@aux+1
  2651                           
  2652                           ;panda17.c: 53: aux += mem_read(2*n+0x0011);
  2653  0431  0837               	movf	give_all@n+1,w
  2654  0432  00B1               	movwf	??_give_all+1
  2655  0433  0836               	movf	give_all@n,w
  2656  0434  00B0               	movwf	??_give_all
  2657  0435  1003               	clrc
  2658  0436  0DB0               	rlf	??_give_all,f
  2659  0437  0DB1               	rlf	??_give_all+1,f
  2660  0438  0830               	movf	??_give_all,w
  2661  0439  3E11               	addlw	17
  2662  043A  00FB               	movwf	i1mem_read@add
  2663  043B  0831               	movf	??_give_all+1,w
  2664  043C  1803               	skipnc
  2665  043D  3E01               	addlw	1
  2666  043E  3E00               	addlw	0
  2667  043F  00FC               	movwf	i1mem_read@add+1
  2668  0440  120A  118A  2089  120A  118A  	fcall	i1_mem_read
  2669  0445  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0446  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0447  00B2               	movwf	??_give_all+2
  2672  0448  01B3               	clrf	??_give_all+3
  2673  0449  0832               	movf	??_give_all+2,w
  2674  044A  07B8               	addwf	give_all@aux,f
  2675  044B  1803               	skipnc
  2676  044C  0AB9               	incf	give_all@aux+1,f
  2677  044D  0833               	movf	??_give_all+3,w
  2678  044E  07B9               	addwf	give_all@aux+1,f
  2679                           
  2680                           ;panda17.c: 54: printf("%04x;",aux);
  2681  044F  0839               	movf	give_all@aux+1,w
  2682  0450  00A2               	movwf	?_printf+1
  2683  0451  0838               	movf	give_all@aux,w
  2684  0452  00A1               	movwf	?_printf
  2685  0453  3032               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2686  0454  120A  118A  25EA  120A  118A  	fcall	_printf
  2687                           
  2688                           ;panda17.c: 55: aux = mem_read(2*n+0x7FF7);
  2689  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2690  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2691  045B  0837               	movf	give_all@n+1,w
  2692  045C  00B1               	movwf	??_give_all+1
  2693  045D  0836               	movf	give_all@n,w
  2694  045E  00B0               	movwf	??_give_all
  2695  045F  1003               	clrc
  2696  0460  0DB0               	rlf	??_give_all,f
  2697  0461  0DB1               	rlf	??_give_all+1,f
  2698  0462  0830               	movf	??_give_all,w
  2699  0463  3EF7               	addlw	247
  2700  0464  00FB               	movwf	i1mem_read@add
  2701  0465  0831               	movf	??_give_all+1,w
  2702  0466  1803               	skipnc
  2703  0467  3E01               	addlw	1
  2704  0468  3E7F               	addlw	127
  2705  0469  00FC               	movwf	i1mem_read@add+1
  2706  046A  120A  118A  2089  120A  118A  	fcall	i1_mem_read
  2707  046F  1283               	bcf	3,5	;RP0=0, select bank0
  2708  0470  1303               	bcf	3,6	;RP1=0, select bank0
  2709  0471  00B2               	movwf	??_give_all+2
  2710  0472  01B3               	clrf	??_give_all+3
  2711  0473  0832               	movf	??_give_all+2,w
  2712  0474  00B8               	movwf	give_all@aux
  2713  0475  0833               	movf	??_give_all+3,w
  2714  0476  00B9               	movwf	give_all@aux+1
  2715                           
  2716                           ;panda17.c: 56: aux = aux << 8;
  2717  0477  0838               	movf	give_all@aux,w
  2718  0478  00B1               	movwf	??_give_all+1
  2719  0479  01B0               	clrf	??_give_all
  2720  047A  0830               	movf	??_give_all,w
  2721  047B  00B8               	movwf	give_all@aux
  2722  047C  0831               	movf	??_give_all+1,w
  2723  047D  00B9               	movwf	give_all@aux+1
  2724                           
  2725                           ;panda17.c: 57: aux += mem_read(2*n+0x7FF8);
  2726  047E  0837               	movf	give_all@n+1,w
  2727  047F  00B1               	movwf	??_give_all+1
  2728  0480  0836               	movf	give_all@n,w
  2729  0481  00B0               	movwf	??_give_all
  2730  0482  1003               	clrc
  2731  0483  0DB0               	rlf	??_give_all,f
  2732  0484  0DB1               	rlf	??_give_all+1,f
  2733  0485  0830               	movf	??_give_all,w
  2734  0486  3EF8               	addlw	248
  2735  0487  00FB               	movwf	i1mem_read@add
  2736  0488  0831               	movf	??_give_all+1,w
  2737  0489  1803               	skipnc
  2738  048A  3E01               	addlw	1
  2739  048B  3E7F               	addlw	127
  2740  048C  00FC               	movwf	i1mem_read@add+1
  2741  048D  120A  118A  2089  120A  118A  	fcall	i1_mem_read
  2742  0492  1283               	bcf	3,5	;RP0=0, select bank0
  2743  0493  1303               	bcf	3,6	;RP1=0, select bank0
  2744  0494  00B2               	movwf	??_give_all+2
  2745  0495  01B3               	clrf	??_give_all+3
  2746  0496  0832               	movf	??_give_all+2,w
  2747  0497  07B8               	addwf	give_all@aux,f
  2748  0498  1803               	skipnc
  2749  0499  0AB9               	incf	give_all@aux+1,f
  2750  049A  0833               	movf	??_give_all+3,w
  2751  049B  07B9               	addwf	give_all@aux+1,f
  2752                           
  2753                           ;panda17.c: 58: printf("%04x\r\n",aux);
  2754  049C  0839               	movf	give_all@aux+1,w
  2755  049D  00A2               	movwf	?_printf+1
  2756  049E  0838               	movf	give_all@aux,w
  2757  049F  00A1               	movwf	?_printf
  2758  04A0  302B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2759  04A1  120A  118A  25EA  120A  118A  	fcall	_printf
  2760  04A6  3001               	movlw	1
  2761  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  2762  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  2763  04A9  07B6               	addwf	give_all@n,f
  2764  04AA  1803               	skipnc
  2765  04AB  0AB7               	incf	give_all@n+1,f
  2766  04AC  3000               	movlw	0
  2767  04AD  07B7               	addwf	give_all@n+1,f
  2768  04AE  2C06               	goto	i1l1830
  2769  04AF                     i1l81:	
  2770                           
  2771                           ;panda17.c: 59: }
  2772                           ;panda17.c: 60: INTCONbits.GIE = 1;
  2773  04AF  178B               	bsf	11,7	;volatile
  2774  04B0  0008               	return
  2775  04B1                     __end_of_give_all:	
  2776                           
  2777                           	psect	text15
  2778  05EA                     __ptext15:	
  2779 ;; *************** function _printf *****************
  2780 ;; Defined at:
  2781 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  2782 ;; Parameters:    Size  Location     Type
  2783 ;;  f               1    wreg     PTR const unsigned char 
  2784 ;;		 -> STR_3(7), STR_2(6), STR_1(7), 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  f               1   11[BANK0 ] PTR const unsigned char 
  2787 ;;		 -> STR_3(7), STR_2(6), STR_1(7), 
  2788 ;;  idx             1    6[BANK0 ] unsigned char 
  2789 ;;  tmpval          4    0        struct .
  2790 ;;  width           2   13[BANK0 ] int 
  2791 ;;  val             2    9[BANK0 ] unsigned int 
  2792 ;;  cp              2    0        PTR const unsigned char 
  2793 ;;  len             2    0        unsigned int 
  2794 ;;  c               1   15[BANK0 ] char 
  2795 ;;  flag            1   12[BANK0 ] unsigned char 
  2796 ;;  prec            1    8[BANK0 ] char 
  2797 ;;  ap              1    7[BANK0 ] PTR void [1]
  2798 ;;		 -> ?_printf(2), 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  2    1[BANK0 ] int 
  2801 ;; Registers used:
  2802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2808 ;;      Params:         0       2       0       0       0
  2809 ;;      Locals:         0      10       0       0       0
  2810 ;;      Temps:          0       3       0       0       0
  2811 ;;      Totals:         0      15       0       0       0
  2812 ;;Total ram usage:       15 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    1
  2815 ;; This function calls:
  2816 ;;		___lwdiv
  2817 ;;		___lwmod
  2818 ;;		___wmul
  2819 ;;		_isdigit
  2820 ;;		_putch
  2821 ;; This function is called by:
  2822 ;;		_give_all
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function _printf
  2828  05EA                     _printf:	
  2829                           
  2830                           ;incstack = 0
  2831 ;; using string table level
  2832                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2833                           ;printf@f stored from wreg
  2834  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  2835  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  2836  05EC  00AB               	movwf	printf@f
  2837                           
  2838                           ;doprnt.c: 466: va_list ap;
  2839                           ;doprnt.c: 499: signed char c;
  2840                           ;doprnt.c: 501: int width;
  2841                           ;doprnt.c: 506: signed char prec;
  2842                           ;doprnt.c: 508: unsigned char flag;
  2843                           ;doprnt.c: 523: union {
  2844                           ;doprnt.c: 524: unsigned long vd;
  2845                           ;doprnt.c: 525: double integ;
  2846                           ;doprnt.c: 526: } tmpval;
  2847                           ;doprnt.c: 528: unsigned int val;
  2848                           ;doprnt.c: 529: unsigned len;
  2849                           ;doprnt.c: 530: const char * cp;
  2850                           ;doprnt.c: 533: *ap = __va_start();
  2851  05ED  3021               	movlw	(low (?_printf| 0))& (0+255)
  2852  05EE  00A3               	movwf	??_printf
  2853  05EF  0823               	movf	??_printf,w
  2854  05F0  00A7               	movwf	printf@ap
  2855  05F1                     i1l1654:	
  2856                           ;doprnt.c: 536: while(c = *f++) {
  2857                           
  2858  05F1  3001               	movlw	1
  2859  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  2860  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  2861  05F4  07AB               	addwf	printf@f,f
  2862  05F5  30FF               	movlw	-1
  2863  05F6  072B               	addwf	printf@f,w
  2864  05F7  0084               	movwf	4
  2865  05F8  120A  158A  2000  120A  118A  	fcall	stringdir
  2866  05FD  00A3               	movwf	??_printf
  2867  05FE  0823               	movf	??_printf,w
  2868  05FF  00AF               	movwf	printf@c
  2869  0600  082F               	movf	printf@c,w
  2870  0601  1903               	btfsc	3,2
  2871  0602  0008               	return
  2872                           
  2873                           ;doprnt.c: 538: if(c != '%')
  2874  0603  3025               	movlw	37
  2875  0604  062F               	xorwf	printf@c,w
  2876  0605  1903               	btfsc	3,2
  2877  0606  2E0E               	goto	i1l1544
  2878                           
  2879                           ;doprnt.c: 540: {
  2880                           ;doprnt.c: 541: (putch(c) );
  2881  0607  082F               	movf	printf@c,w
  2882  0608  120A  158A  2582  120A  118A  	fcall	_putch
  2883                           
  2884                           ;doprnt.c: 542: continue;
  2885  060D  2DF1               	goto	i1l1654
  2886  060E                     i1l1544:	
  2887                           
  2888                           ;doprnt.c: 543: }
  2889                           ;doprnt.c: 546: width = 0;
  2890  060E  1283               	bcf	3,5	;RP0=0, select bank0
  2891  060F  1303               	bcf	3,6	;RP1=0, select bank0
  2892  0610  01AD               	clrf	printf@width
  2893  0611  01AE               	clrf	printf@width+1
  2894                           
  2895                           ;doprnt.c: 548: flag = 0;
  2896  0612  01AC               	clrf	printf@flag
  2897                           
  2898                           ;doprnt.c: 551: switch(*f) {
  2899                           
  2900                           ;doprnt.c: 550: for(;;) {
  2901  0613  2E19               	goto	i1l1550
  2902  0614                     i1l272:	
  2903                           ;doprnt.c: 579: case '0':
  2904                           
  2905                           
  2906                           ;doprnt.c: 580: flag |= 0x04;
  2907  0614  152C               	bsf	printf@flag,2
  2908                           
  2909                           ;doprnt.c: 581: f++;
  2910  0615  3001               	movlw	1
  2911  0616  00A3               	movwf	??_printf
  2912  0617  0823               	movf	??_printf,w
  2913  0618  07AB               	addwf	printf@f,f
  2914  0619                     i1l1550:	
  2915                           ;doprnt.c: 584: }
  2916                           
  2917                           ;doprnt.c: 582: continue;
  2918                           
  2919  0619  082B               	movf	printf@f,w
  2920  061A  0084               	movwf	4
  2921  061B  120A  158A  2000  120A  118A  	fcall	stringdir
  2922                           
  2923                           ; Switch size 1, requested type "space"
  2924                           ; Number of cases is 1, Range of values is 48 to 48
  2925                           ; switch strategies available:
  2926                           ; Name         Instructions Cycles
  2927                           ; simple_byte            4     3 (average)
  2928                           ; direct_byte           14    11 (fixed)
  2929                           ; jumptable            263     9 (fixed)
  2930                           ;	Chosen strategy is simple_byte
  2931  0620  3A30               	xorlw	48	; case 48
  2932  0621  1903               	skipnz
  2933  0622  2E14               	goto	i1l272
  2934  0623  2E24               	goto	i1l1552
  2935  0624                     i1l1552:	
  2936                           ;doprnt.c: 586: }
  2937                           
  2938                           ;doprnt.c: 585: break;
  2939                           
  2940                           
  2941                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  2942  0624  082B               	movf	printf@f,w
  2943  0625  0084               	movwf	4
  2944  0626  120A  158A  2000  120A  118A  	fcall	stringdir
  2945  062B  120A  158A  2593  120A  118A  	fcall	_isdigit
  2946  0630  1C03               	btfss	3,0
  2947  0631  2E73               	goto	i1l1566
  2948                           
  2949                           ;doprnt.c: 598: width = 0;
  2950  0632  1283               	bcf	3,5	;RP0=0, select bank0
  2951  0633  1303               	bcf	3,6	;RP1=0, select bank0
  2952  0634  01AD               	clrf	printf@width
  2953  0635  01AE               	clrf	printf@width+1
  2954  0636                     i1l1556:	
  2955                           ;doprnt.c: 599: do {
  2956                           
  2957                           
  2958                           ;doprnt.c: 600: width *= 10;
  2959  0636  300A               	movlw	10
  2960  0637  00F1               	movwf	___wmul@multiplier
  2961  0638  3000               	movlw	0
  2962  0639  00F2               	movwf	___wmul@multiplier+1
  2963  063A  1283               	bcf	3,5	;RP0=0, select bank0
  2964  063B  1303               	bcf	3,6	;RP1=0, select bank0
  2965  063C  082E               	movf	printf@width+1,w
  2966  063D  00F4               	movwf	___wmul@multiplicand+1
  2967  063E  082D               	movf	printf@width,w
  2968  063F  00F3               	movwf	___wmul@multiplicand
  2969  0640  120A  158A  2602  120A  118A  	fcall	___wmul
  2970  0645  0872               	movf	?___wmul+1,w
  2971  0646  1283               	bcf	3,5	;RP0=0, select bank0
  2972  0647  1303               	bcf	3,6	;RP1=0, select bank0
  2973  0648  00AE               	movwf	printf@width+1
  2974  0649  0871               	movf	?___wmul,w
  2975  064A  00AD               	movwf	printf@width
  2976                           
  2977                           ;doprnt.c: 601: width += *f++ - '0';
  2978  064B  082B               	movf	printf@f,w
  2979  064C  0084               	movwf	4
  2980  064D  120A  158A  2000  120A  118A  	fcall	stringdir
  2981  0652  3ED0               	addlw	208
  2982  0653  00A3               	movwf	??_printf
  2983  0654  30FF               	movlw	255
  2984  0655  1803               	skipnc
  2985  0656  3000               	movlw	0
  2986  0657  00A4               	movwf	??_printf+1
  2987  0658  0823               	movf	??_printf,w
  2988  0659  07AD               	addwf	printf@width,f
  2989  065A  1803               	skipnc
  2990  065B  0AAE               	incf	printf@width+1,f
  2991  065C  0824               	movf	??_printf+1,w
  2992  065D  07AE               	addwf	printf@width+1,f
  2993  065E  3001               	movlw	1
  2994  065F  00A3               	movwf	??_printf
  2995  0660  0823               	movf	??_printf,w
  2996  0661  07AB               	addwf	printf@f,f
  2997                           
  2998                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  2999  0662  082B               	movf	printf@f,w
  3000  0663  0084               	movwf	4
  3001  0664  120A  158A  2000  120A  118A  	fcall	stringdir
  3002  0669  120A  158A  2593  120A  118A  	fcall	_isdigit
  3003  066E  1C03               	btfss	3,0
  3004  066F  2E73               	goto	i1l1566
  3005  0670  2E36               	goto	i1l1556
  3006  0671                     i1l285:	
  3007                           ;doprnt.c: 718: case 'x':
  3008                           
  3009                           ;doprnt.c: 698: case 'i':
  3010                           ;doprnt.c: 699: break;
  3011                           
  3012                           ;doprnt.c: 697: case 'd':
  3013                           
  3014                           ;doprnt.c: 638: goto alldone;
  3015                           
  3016                           ;doprnt.c: 637: case 0:
  3017                           
  3018                           ;doprnt.c: 608: }
  3019                           ;doprnt.c: 635: switch(c = *f++) {
  3020                           
  3021                           
  3022                           ;doprnt.c: 721: flag |= 0x80;
  3023  0671  17AC               	bsf	printf@flag,7
  3024                           
  3025                           ;doprnt.c: 723: break;
  3026  0672  2E8D               	goto	i1l284
  3027  0673                     i1l1566:	
  3028                           ;doprnt.c: 822: }
  3029                           
  3030                           ;doprnt.c: 813: continue;
  3031                           
  3032                           ;doprnt.c: 802: default:
  3033                           
  3034  0673  3001               	movlw	1
  3035  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3036  0675  1303               	bcf	3,6	;RP1=0, select bank0
  3037  0676  07AB               	addwf	printf@f,f
  3038  0677  30FF               	movlw	-1
  3039  0678  072B               	addwf	printf@f,w
  3040  0679  0084               	movwf	4
  3041  067A  120A  158A  2000  120A  118A  	fcall	stringdir
  3042  067F  00AF               	movwf	printf@c
  3043                           
  3044                           ; Switch size 1, requested type "space"
  3045                           ; Number of cases is 4, Range of values is 0 to 120
  3046                           ; switch strategies available:
  3047                           ; Name         Instructions Cycles
  3048                           ; simple_byte           13     7 (average)
  3049                           ; jumptable            260     6 (fixed)
  3050                           ;	Chosen strategy is simple_byte
  3051  0680  3A00               	xorlw	0	; case 0
  3052  0681  1903               	skipnz
  3053  0682  2FF3               	goto	i1l321
  3054  0683  3A64               	xorlw	100	; case 100
  3055  0684  1903               	skipnz
  3056  0685  2E8D               	goto	i1l284
  3057  0686  3A0D               	xorlw	13	; case 105
  3058  0687  1903               	skipnz
  3059  0688  2E8D               	goto	i1l284
  3060  0689  3A11               	xorlw	17	; case 120
  3061  068A  1903               	skipnz
  3062  068B  2E71               	goto	i1l285
  3063  068C  2DF1               	goto	i1l1654
  3064  068D                     i1l284:	
  3065                           
  3066                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  3067  068D  1283               	bcf	3,5	;RP0=0, select bank0
  3068  068E  1303               	bcf	3,6	;RP1=0, select bank0
  3069  068F  1BAC               	btfsc	printf@flag,7
  3070  0690  2EA9               	goto	i1l1578
  3071                           
  3072                           ;doprnt.c: 1253: {
  3073                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3074  0691  0827               	movf	printf@ap,w
  3075  0692  0084               	movwf	4
  3076  0693  1383               	bcf	3,7	;select IRP bank0
  3077  0694  0800               	movf	0,w
  3078  0695  00A9               	movwf	printf@val
  3079  0696  0A84               	incf	4,f
  3080  0697  0800               	movf	0,w
  3081  0698  00AA               	movwf	printf@val+1
  3082  0699  3002               	movlw	2
  3083  069A  00A3               	movwf	??_printf
  3084  069B  0823               	movf	??_printf,w
  3085  069C  07A7               	addwf	printf@ap,f
  3086                           
  3087                           ;doprnt.c: 1261: if((int)val < 0) {
  3088  069D  1FAA               	btfss	printf@val+1,7
  3089  069E  2EFE               	goto	i1l1604
  3090                           
  3091                           ;doprnt.c: 1262: flag |= 0x03;
  3092  069F  3003               	movlw	3
  3093  06A0  00A3               	movwf	??_printf
  3094  06A1  0823               	movf	??_printf,w
  3095  06A2  04AC               	iorwf	printf@flag,f
  3096                           
  3097                           ;doprnt.c: 1263: val = -val;
  3098  06A3  09A9               	comf	printf@val,f
  3099  06A4  09AA               	comf	printf@val+1,f
  3100  06A5  0AA9               	incf	printf@val,f
  3101  06A6  1903               	skipnz
  3102  06A7  0AAA               	incf	printf@val+1,f
  3103                           
  3104                           ;doprnt.c: 1264: }
  3105                           ;doprnt.c: 1266: }
  3106  06A8  2EFE               	goto	i1l1604
  3107  06A9                     i1l1578:	
  3108                           
  3109                           ;doprnt.c: 1268: else
  3110                           ;doprnt.c: 1273: {
  3111                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3112  06A9  0827               	movf	printf@ap,w
  3113  06AA  0084               	movwf	4
  3114  06AB  1383               	bcf	3,7	;select IRP bank0
  3115  06AC  0800               	movf	0,w
  3116  06AD  00A9               	movwf	printf@val
  3117  06AE  0A84               	incf	4,f
  3118  06AF  0800               	movf	0,w
  3119  06B0  00AA               	movwf	printf@val+1
  3120  06B1  3002               	movlw	2
  3121  06B2  00A3               	movwf	??_printf
  3122  06B3  0823               	movf	??_printf,w
  3123  06B4  07A7               	addwf	printf@ap,f
  3124                           
  3125                           ;doprnt.c: 1287: }
  3126                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  3127  06B5  2EFE               	goto	i1l1604
  3128  06B6                     i1l291:	
  3129                           ;doprnt.c: 1299: case 0x00:
  3130                           
  3131                           
  3132                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3133  06B6  01AF               	clrf	printf@c
  3134  06B7  0AAF               	incf	printf@c,f
  3135  06B8                     L4:	
  3136  06B8  3005               	movlw	5
  3137  06B9  062F               	xorwf	printf@c,w
  3138  06BA  1903               	btfsc	3,2
  3139  06BB  2F07               	goto	i1l1606
  3140                           
  3141                           ;doprnt.c: 1306: if(val < dpowers[c])
  3142  06BC  082F               	movf	printf@c,w
  3143  06BD  00A3               	movwf	??_printf
  3144  06BE  0723               	addwf	??_printf,w
  3145  06BF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3146  06C0  0084               	movwf	4
  3147  06C1  120A  158A  2000  120A  118A  	fcall	stringdir
  3148  06C6  00A4               	movwf	??_printf+1
  3149  06C7  120A  158A  2000  120A  118A  	fcall	stringdir
  3150  06CC  00A5               	movwf	??_printf+2
  3151  06CD  0825               	movf	??_printf+2,w
  3152  06CE  022A               	subwf	printf@val+1,w
  3153  06CF  1D03               	skipz
  3154  06D0  2ED3               	goto	u130_25
  3155  06D1  0824               	movf	??_printf+1,w
  3156  06D2  0229               	subwf	printf@val,w
  3157  06D3                     u130_25:	
  3158  06D3  1C03               	btfss	3,0
  3159  06D4  2F07               	goto	i1l1606
  3160                           
  3161                           ;doprnt.c: 1307: break;
  3162  06D5  3001               	movlw	1
  3163  06D6  00A3               	movwf	??_printf
  3164  06D7  0823               	movf	??_printf,w
  3165  06D8  07AF               	addwf	printf@c,f
  3166  06D9  2EB8               	goto	L4
  3167  06DA                     i1l296:	
  3168                           ;doprnt.c: 1314: case 0x80:
  3169                           
  3170                           ;doprnt.c: 1309: break;
  3171                           
  3172                           
  3173                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  3174  06DA  01AF               	clrf	printf@c
  3175  06DB  0AAF               	incf	printf@c,f
  3176  06DC                     L5:	
  3177  06DC  3004               	movlw	4
  3178  06DD  062F               	xorwf	printf@c,w
  3179  06DE  1903               	btfsc	3,2
  3180  06DF  2F07               	goto	i1l1606
  3181                           
  3182                           ;doprnt.c: 1317: if(val < hexpowers[c])
  3183  06E0  082F               	movf	printf@c,w
  3184  06E1  00A3               	movwf	??_printf
  3185  06E2  0723               	addwf	??_printf,w
  3186  06E3  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  3187  06E4  0084               	movwf	4
  3188  06E5  120A  158A  2000  120A  118A  	fcall	stringdir
  3189  06EA  00A4               	movwf	??_printf+1
  3190  06EB  120A  158A  2000  120A  118A  	fcall	stringdir
  3191  06F0  00A5               	movwf	??_printf+2
  3192  06F1  0825               	movf	??_printf+2,w
  3193  06F2  022A               	subwf	printf@val+1,w
  3194  06F3  1D03               	skipz
  3195  06F4  2EF7               	goto	u133_25
  3196  06F5  0824               	movf	??_printf+1,w
  3197  06F6  0229               	subwf	printf@val,w
  3198  06F7                     u133_25:	
  3199  06F7  1C03               	btfss	3,0
  3200  06F8  2F07               	goto	i1l1606
  3201                           
  3202                           ;doprnt.c: 1318: break;
  3203  06F9  3001               	movlw	1
  3204  06FA  00A3               	movwf	??_printf
  3205  06FB  0823               	movf	??_printf,w
  3206  06FC  07AF               	addwf	printf@c,f
  3207  06FD  2EDC               	goto	L5
  3208  06FE                     i1l1604:	
  3209                           ;doprnt.c: 1336: }
  3210                           
  3211                           ;doprnt.c: 1320: break;
  3212                           
  3213  06FE  082C               	movf	printf@flag,w
  3214  06FF  3980               	andlw	128
  3215                           
  3216                           ; Switch size 1, requested type "space"
  3217                           ; Number of cases is 2, Range of values is 0 to 128
  3218                           ; switch strategies available:
  3219                           ; Name         Instructions Cycles
  3220                           ; simple_byte            7     4 (average)
  3221                           ; jumptable            260     6 (fixed)
  3222                           ;	Chosen strategy is simple_byte
  3223  0700  3A00               	xorlw	0	; case 0
  3224  0701  1903               	skipnz
  3225  0702  2EB6               	goto	i1l291
  3226  0703  3A80               	xorlw	128	; case 128
  3227  0704  1903               	skipnz
  3228  0705  2EDA               	goto	i1l296
  3229  0706  2F07               	goto	i1l1606
  3230  0707                     i1l1606:	
  3231                           
  3232                           ;doprnt.c: 1345: if(width && flag & 0x03)
  3233  0707  082D               	movf	printf@width,w
  3234  0708  042E               	iorwf	printf@width+1,w
  3235  0709  1903               	btfsc	3,2
  3236  070A  2F15               	goto	i1l300
  3237  070B  082C               	movf	printf@flag,w
  3238  070C  3903               	andlw	3
  3239  070D  1903               	btfsc	3,2
  3240  070E  2F15               	goto	i1l300
  3241                           
  3242                           ;doprnt.c: 1346: width--;
  3243  070F  30FF               	movlw	255
  3244  0710  07AD               	addwf	printf@width,f
  3245  0711  1803               	skipnc
  3246  0712  0AAE               	incf	printf@width+1,f
  3247  0713  30FF               	movlw	255
  3248  0714  07AE               	addwf	printf@width+1,f
  3249  0715                     i1l300:	
  3250                           
  3251                           ;doprnt.c: 1381: if(width > c)
  3252  0715  082F               	movf	printf@c,w
  3253  0716  00A3               	movwf	??_printf
  3254  0717  01A4               	clrf	??_printf+1
  3255  0718  1BA3               	btfsc	??_printf,7
  3256  0719  03A4               	decf	??_printf+1,f
  3257  071A  0824               	movf	??_printf+1,w
  3258  071B  3A80               	xorlw	128
  3259  071C  00A5               	movwf	??_printf+2
  3260  071D  082E               	movf	printf@width+1,w
  3261  071E  3A80               	xorlw	128
  3262  071F  0225               	subwf	??_printf+2,w
  3263  0720  1D03               	skipz
  3264  0721  2F24               	goto	u137_25
  3265  0722  082D               	movf	printf@width,w
  3266  0723  0223               	subwf	??_printf,w
  3267  0724                     u137_25:	
  3268  0724  1803               	skipnc
  3269  0725  2F34               	goto	i1l1614
  3270                           
  3271                           ;doprnt.c: 1382: width -= c;
  3272  0726  1283               	bcf	3,5	;RP0=0, select bank0
  3273  0727  1303               	bcf	3,6	;RP1=0, select bank0
  3274  0728  082F               	movf	printf@c,w
  3275  0729  00A3               	movwf	??_printf
  3276  072A  01A4               	clrf	??_printf+1
  3277  072B  1BA3               	btfsc	??_printf,7
  3278  072C  03A4               	decf	??_printf+1,f
  3279  072D  0823               	movf	??_printf,w
  3280  072E  02AD               	subwf	printf@width,f
  3281  072F  0824               	movf	??_printf+1,w
  3282  0730  1C03               	skipc
  3283  0731  03AE               	decf	printf@width+1,f
  3284  0732  02AE               	subwf	printf@width+1,f
  3285  0733  2F38               	goto	i1l1616
  3286  0734                     i1l1614:	
  3287                           
  3288                           ;doprnt.c: 1383: else
  3289                           ;doprnt.c: 1384: width = 0;
  3290  0734  1283               	bcf	3,5	;RP0=0, select bank0
  3291  0735  1303               	bcf	3,6	;RP1=0, select bank0
  3292  0736  01AD               	clrf	printf@width
  3293  0737  01AE               	clrf	printf@width+1
  3294  0738                     i1l1616:	
  3295                           
  3296                           ;doprnt.c: 1387: if(flag & 0x04) {
  3297  0738  1D2C               	btfss	printf@flag,2
  3298  0739  2F59               	goto	i1l1628
  3299                           
  3300                           ;doprnt.c: 1392: if(flag & 0x03)
  3301  073A  082C               	movf	printf@flag,w
  3302  073B  3903               	andlw	3
  3303  073C  1903               	btfsc	3,2
  3304  073D  2F44               	goto	i1l1622
  3305                           
  3306                           ;doprnt.c: 1393: (putch('-') );
  3307  073E  302D               	movlw	45
  3308  073F  120A  158A  2582  120A  118A  	fcall	_putch
  3309  0744                     i1l1622:	
  3310                           
  3311                           ;doprnt.c: 1415: if(width)
  3312  0744  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0745  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0746                     L6:	
  3315  0746  082D               	movf	printf@width,w
  3316  0747  042E               	iorwf	printf@width+1,w
  3317  0748  1903               	btfsc	3,2
  3318  0749  2F79               	goto	i1l1638
  3319                           
  3320                           ;doprnt.c: 1417: (putch('0') );
  3321                           
  3322                           ;doprnt.c: 1416: do
  3323  074A  3030               	movlw	48
  3324  074B  120A  158A  2582  120A  118A  	fcall	_putch
  3325                           
  3326                           ;doprnt.c: 1418: while(--width);
  3327  0750  30FF               	movlw	255
  3328  0751  1283               	bcf	3,5	;RP0=0, select bank0
  3329  0752  1303               	bcf	3,6	;RP1=0, select bank0
  3330  0753  07AD               	addwf	printf@width,f
  3331  0754  1803               	skipnc
  3332  0755  0AAE               	incf	printf@width+1,f
  3333  0756  30FF               	movlw	255
  3334  0757  07AE               	addwf	printf@width+1,f
  3335  0758  2F46               	goto	L6
  3336  0759                     i1l1628:	
  3337                           ;doprnt.c: 1420: } else
  3338                           
  3339                           
  3340                           ;doprnt.c: 1422: {
  3341                           ;doprnt.c: 1424: if(width
  3342                           ;doprnt.c: 1428: )
  3343  0759  082D               	movf	printf@width,w
  3344  075A  042E               	iorwf	printf@width+1,w
  3345  075B  1903               	btfsc	3,2
  3346  075C  2F6F               	goto	i1l1634
  3347  075D                     i1l1630:	
  3348                           ;doprnt.c: 1429: do
  3349                           
  3350                           
  3351                           ;doprnt.c: 1430: (putch(' ') );
  3352  075D  3020               	movlw	32
  3353  075E  120A  158A  2582  120A  118A  	fcall	_putch
  3354                           
  3355                           ;doprnt.c: 1431: while(--width);
  3356  0763  30FF               	movlw	255
  3357  0764  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0765  1303               	bcf	3,6	;RP1=0, select bank0
  3359  0766  07AD               	addwf	printf@width,f
  3360  0767  1803               	skipnc
  3361  0768  0AAE               	incf	printf@width+1,f
  3362  0769  30FF               	movlw	255
  3363  076A  07AE               	addwf	printf@width+1,f
  3364  076B  082D               	movf	printf@width,w
  3365  076C  042E               	iorwf	printf@width+1,w
  3366  076D  1D03               	btfss	3,2
  3367  076E  2F5D               	goto	i1l1630
  3368  076F                     i1l1634:	
  3369                           
  3370                           ;doprnt.c: 1438: if(flag & 0x03)
  3371  076F  082C               	movf	printf@flag,w
  3372  0770  3903               	andlw	3
  3373  0771  1903               	btfsc	3,2
  3374  0772  2F79               	goto	i1l1638
  3375                           
  3376                           ;doprnt.c: 1439: (putch('-') );
  3377  0773  302D               	movlw	45
  3378  0774  120A  158A  2582  120A  118A  	fcall	_putch
  3379  0779                     i1l1638:	
  3380                           
  3381                           ;doprnt.c: 1469: }
  3382                           ;doprnt.c: 1472: prec = c;
  3383  0779  1283               	bcf	3,5	;RP0=0, select bank0
  3384  077A  1303               	bcf	3,6	;RP1=0, select bank0
  3385  077B  082F               	movf	printf@c,w
  3386  077C  00A3               	movwf	??_printf
  3387  077D  0823               	movf	??_printf,w
  3388  077E  00A8               	movwf	printf@prec
  3389                           
  3390                           ;doprnt.c: 1474: while(prec--) {
  3391  077F  2FE0               	goto	i1l1652
  3392  0780                     i1l1640:	
  3393                           ;doprnt.c: 1478: {
  3394                           ;doprnt.c: 1483: case 0x00:
  3395                           
  3396                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  3397                           
  3398                           
  3399                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  3400  0780  300A               	movlw	10
  3401  0781  00F9               	movwf	___lwmod@divisor
  3402  0782  3000               	movlw	0
  3403  0783  00FA               	movwf	___lwmod@divisor+1
  3404  0784  0828               	movf	printf@prec,w
  3405  0785  00A3               	movwf	??_printf
  3406  0786  0723               	addwf	??_printf,w
  3407  0787  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3408  0788  0084               	movwf	4
  3409  0789  120A  158A  2000  120A  118A  	fcall	stringdir
  3410  078E  00F1               	movwf	___lwdiv@divisor
  3411  078F  120A  158A  2000  120A  118A  	fcall	stringdir
  3412  0794  00F2               	movwf	___lwdiv@divisor+1
  3413  0795  082A               	movf	printf@val+1,w
  3414  0796  00F4               	movwf	___lwdiv@dividend+1
  3415  0797  0829               	movf	printf@val,w
  3416  0798  00F3               	movwf	___lwdiv@dividend
  3417  0799  120A  158A  27C4  120A  118A  	fcall	___lwdiv
  3418  079E  0872               	movf	?___lwdiv+1,w
  3419  079F  00FC               	movwf	___lwmod@dividend+1
  3420  07A0  0871               	movf	?___lwdiv,w
  3421  07A1  00FB               	movwf	___lwmod@dividend
  3422  07A2  120A  158A  26E6  120A  118A  	fcall	___lwmod
  3423  07A7  0879               	movf	?___lwmod,w
  3424  07A8  3E30               	addlw	48
  3425  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  3426  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  3427  07AB  00A4               	movwf	??_printf+1
  3428  07AC  0824               	movf	??_printf+1,w
  3429  07AD  2FD9               	goto	L3
  3430  07AE                     i1l1642:	
  3431                           ;doprnt.c: 1497: case 0x80:
  3432                           
  3433                           ;doprnt.c: 1491: break;
  3434                           
  3435                           
  3436                           ;doprnt.c: 1499: {
  3437                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  3438  07AE  0828               	movf	printf@prec,w
  3439  07AF  00A3               	movwf	??_printf
  3440  07B0  0723               	addwf	??_printf,w
  3441  07B1  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  3442  07B2  0084               	movwf	4
  3443  07B3  120A  158A  2000  120A  118A  	fcall	stringdir
  3444  07B8  00F1               	movwf	___lwdiv@divisor
  3445  07B9  120A  158A  2000  120A  118A  	fcall	stringdir
  3446  07BE  00F2               	movwf	___lwdiv@divisor+1
  3447  07BF  082A               	movf	printf@val+1,w
  3448  07C0  00F4               	movwf	___lwdiv@dividend+1
  3449  07C1  0829               	movf	printf@val,w
  3450  07C2  00F3               	movwf	___lwdiv@dividend
  3451  07C3  120A  158A  27C4  120A  118A  	fcall	___lwdiv
  3452  07C8  0871               	movf	?___lwdiv,w
  3453  07C9  390F               	andlw	15
  3454  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  3455  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  3456  07CC  00A4               	movwf	??_printf+1
  3457  07CD  0824               	movf	??_printf+1,w
  3458  07CE  00A6               	movwf	printf@idx
  3459                           
  3460                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
  3461  07CF  0826               	movf	printf@idx,w
  3462  07D0  3E13               	addlw	low ((STR_4-__stringbase)| (0+32768))
  3463  07D1  0084               	movwf	4
  3464  07D2  120A  158A  2000  120A  118A  	fcall	stringdir
  3465  07D7  00A3               	movwf	??_printf
  3466  07D8  0823               	movf	??_printf,w
  3467  07D9                     L3:	
  3468  07D9  00AF               	movwf	printf@c
  3469  07DA                     i1l1650:	
  3470                           ;doprnt.c: 1523: }
  3471                           
  3472                           ;doprnt.c: 1508: }
  3473                           ;doprnt.c: 1510: break;
  3474                           
  3475                           
  3476                           ;doprnt.c: 1524: (putch(c) );
  3477  07DA  082F               	movf	printf@c,w
  3478  07DB  120A  158A  2582  120A  118A  	fcall	_putch
  3479  07E0                     i1l1652:	
  3480  07E0  30FF               	movlw	255
  3481  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  3482  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  3483  07E3  00A3               	movwf	??_printf
  3484  07E4  0823               	movf	??_printf,w
  3485  07E5  07A8               	addwf	printf@prec,f
  3486  07E6  0A28               	incf	printf@prec,w
  3487  07E7  1903               	btfsc	3,2
  3488  07E8  2DF1               	goto	i1l1654
  3489  07E9  082C               	movf	printf@flag,w
  3490  07EA  3980               	andlw	128
  3491                           
  3492                           ; Switch size 1, requested type "space"
  3493                           ; Number of cases is 2, Range of values is 0 to 128
  3494                           ; switch strategies available:
  3495                           ; Name         Instructions Cycles
  3496                           ; simple_byte            7     4 (average)
  3497                           ; jumptable            260     6 (fixed)
  3498                           ;	Chosen strategy is simple_byte
  3499  07EB  3A00               	xorlw	0	; case 0
  3500  07EC  1903               	skipnz
  3501  07ED  2F80               	goto	i1l1640
  3502  07EE  3A80               	xorlw	128	; case 128
  3503  07EF  1903               	skipnz
  3504  07F0  2FAE               	goto	i1l1642
  3505  07F1  2FDA               	goto	i1l1650
  3506  07F2  2FDA               	goto	i1l1650
  3507  07F3                     i1l321:	
  3508                           ;doprnt.c: 1540: return 0;
  3509                           ;	Return value of _printf is never used
  3510                           
  3511                           ;doprnt.c: 1525: }
  3512                           ;doprnt.c: 1533: }
  3513                           ;doprnt.c: 1535: alldone:
  3514                           
  3515  07F3  0008               	return
  3516  07F4                     __end_of_printf:	
  3517                           
  3518                           	psect	text16
  3519  0D82                     __ptext16:	
  3520 ;; *************** function _putch *****************
  3521 ;; Defined at:
  3522 ;;		line 33 in file "panda17.c"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  data            1    wreg     unsigned char 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  data            1    0[COMMON] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3536 ;;      Params:         0       0       0       0       0
  3537 ;;      Locals:         1       0       0       0       0
  3538 ;;      Temps:          0       0       0       0       0
  3539 ;;      Totals:         1       0       0       0       0
  3540 ;;Total ram usage:        1 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; This function calls:
  3543 ;;		Nothing
  3544 ;; This function is called by:
  3545 ;;		_printf
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           
  3550                           ;psect for function _putch
  3551  0D82                     _putch:	
  3552                           
  3553                           ;incstack = 0
  3554                           ; Regs used in _putch: [wreg]
  3555                           ;putch@data stored from wreg
  3556  0D82  00F1               	movwf	putch@data
  3557  0D83                     i1l70:	
  3558                           ;panda17.c: 35: continue;
  3559                           
  3560                           ;panda17.c: 34: while(!PIR1bits.TXIF)
  3561                           
  3562  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  3564  0D85  1E0C               	btfss	12,4	;volatile
  3565  0D86  2D83               	goto	i1l70
  3566                           
  3567                           ;panda17.c: 36: TXREG = data;
  3568  0D87  0871               	movf	putch@data,w
  3569  0D88  0099               	movwf	25	;volatile
  3570  0D89  0008               	return
  3571  0D8A                     __end_of_putch:	
  3572                           
  3573                           	psect	text17
  3574  0D93                     __ptext17:	
  3575 ;; *************** function _isdigit *****************
  3576 ;; Defined at:
  3577 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  c               1    wreg     unsigned char 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  c               1    1[COMMON] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;		None               void
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, status,0
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       0       0       0       0
  3592 ;;      Locals:         2       0       0       0       0
  3593 ;;      Temps:          0       0       0       0       0
  3594 ;;      Totals:         2       0       0       0       0
  3595 ;;Total ram usage:        2 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_printf
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function _isdigit
  3606  0D93                     _isdigit:	
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3610                           ;isdigit@c stored from wreg
  3611  0D93  00F2               	movwf	isdigit@c
  3612  0D94  01F1               	clrf	_isdigit$954
  3613  0D95  303A               	movlw	58
  3614  0D96  0272               	subwf	isdigit@c,w
  3615  0D97  1803               	skipnc
  3616  0D98  2D9F               	goto	i1l1444
  3617  0D99  3030               	movlw	48
  3618  0D9A  0272               	subwf	isdigit@c,w
  3619  0D9B  1C03               	skipc
  3620  0D9C  2D9F               	goto	i1l1444
  3621  0D9D  01F1               	clrf	_isdigit$954
  3622  0D9E  0AF1               	incf	_isdigit$954,f
  3623  0D9F                     i1l1444:	
  3624  0D9F  0C71               	rrf	_isdigit$954,w
  3625  0DA0  0008               	return
  3626  0DA1                     __end_of_isdigit:	
  3627                           
  3628                           	psect	text18
  3629  0E02                     __ptext18:	
  3630 ;; *************** function ___wmul *****************
  3631 ;; Defined at:
  3632 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  multiplier      2    0[COMMON] unsigned int 
  3635 ;;  multiplicand    2    2[COMMON] unsigned int 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;  product         2    4[COMMON] unsigned int 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  2    0[COMMON] unsigned int 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         4       0       0       0       0
  3648 ;;      Locals:         2       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0
  3650 ;;      Totals:         6       0       0       0       0
  3651 ;;Total ram usage:        6 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; This function calls:
  3654 ;;		Nothing
  3655 ;; This function is called by:
  3656 ;;		_printf
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           
  3661                           ;psect for function ___wmul
  3662  0E02                     ___wmul:	
  3663                           
  3664                           ;incstack = 0
  3665                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3666  0E02  01F5               	clrf	___wmul@product
  3667  0E03  01F6               	clrf	___wmul@product+1
  3668  0E04                     i1l1450:	
  3669  0E04  1C71               	btfss	___wmul@multiplier,0
  3670  0E05  2E0C               	goto	i1l405
  3671  0E06  0873               	movf	___wmul@multiplicand,w
  3672  0E07  07F5               	addwf	___wmul@product,f
  3673  0E08  1803               	skipnc
  3674  0E09  0AF6               	incf	___wmul@product+1,f
  3675  0E0A  0874               	movf	___wmul@multiplicand+1,w
  3676  0E0B  07F6               	addwf	___wmul@product+1,f
  3677  0E0C                     i1l405:	
  3678  0E0C  3001               	movlw	1
  3679  0E0D                     u94_25:	
  3680  0E0D  1003               	clrc
  3681  0E0E  0DF3               	rlf	___wmul@multiplicand,f
  3682  0E0F  0DF4               	rlf	___wmul@multiplicand+1,f
  3683  0E10  3EFF               	addlw	-1
  3684  0E11  1D03               	skipz
  3685  0E12  2E0D               	goto	u94_25
  3686  0E13  3001               	movlw	1
  3687  0E14                     u95_25:	
  3688  0E14  1003               	clrc
  3689  0E15  0CF2               	rrf	___wmul@multiplier+1,f
  3690  0E16  0CF1               	rrf	___wmul@multiplier,f
  3691  0E17  3EFF               	addlw	-1
  3692  0E18  1D03               	skipz
  3693  0E19  2E14               	goto	u95_25
  3694  0E1A  0871               	movf	___wmul@multiplier,w
  3695  0E1B  0472               	iorwf	___wmul@multiplier+1,w
  3696  0E1C  1D03               	btfss	3,2
  3697  0E1D  2E04               	goto	i1l1450
  3698  0E1E  0876               	movf	___wmul@product+1,w
  3699  0E1F  00F2               	movwf	?___wmul+1
  3700  0E20  0875               	movf	___wmul@product,w
  3701  0E21  00F1               	movwf	?___wmul
  3702  0E22  0008               	return
  3703  0E23                     __end_of___wmul:	
  3704                           
  3705                           	psect	text19
  3706  0EE6                     __ptext19:	
  3707 ;; *************** function ___lwmod *****************
  3708 ;; Defined at:
  3709 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  divisor         2    8[COMMON] unsigned int 
  3712 ;;  dividend        2   10[COMMON] unsigned int 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  counter         1    0[BANK0 ] unsigned char 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  2    8[COMMON] unsigned int 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3724 ;;      Params:         4       0       0       0       0
  3725 ;;      Locals:         0       1       0       0       0
  3726 ;;      Temps:          1       0       0       0       0
  3727 ;;      Totals:         5       1       0       0       0
  3728 ;;Total ram usage:        6 bytes
  3729 ;; Hardware stack levels used:    1
  3730 ;; This function calls:
  3731 ;;		Nothing
  3732 ;; This function is called by:
  3733 ;;		_printf
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           
  3738                           ;psect for function ___lwmod
  3739  0EE6                     ___lwmod:	
  3740                           
  3741                           ;incstack = 0
  3742                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3743  0EE6  0879               	movf	___lwmod@divisor,w
  3744  0EE7  047A               	iorwf	___lwmod@divisor+1,w
  3745  0EE8  1903               	btfsc	3,2
  3746  0EE9  2F15               	goto	i1l1506
  3747  0EEA  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0EEB  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0EEC  01A0               	clrf	___lwmod@counter
  3750  0EED  0AA0               	incf	___lwmod@counter,f
  3751  0EEE                     i1l1496:	
  3752  0EEE  1BFA               	btfsc	___lwmod@divisor+1,7
  3753  0EEF  2EFC               	goto	i1l1498
  3754  0EF0  3001               	movlw	1
  3755  0EF1                     u105_25:	
  3756  0EF1  1003               	clrc
  3757  0EF2  0DF9               	rlf	___lwmod@divisor,f
  3758  0EF3  0DFA               	rlf	___lwmod@divisor+1,f
  3759  0EF4  3EFF               	addlw	-1
  3760  0EF5  1D03               	skipz
  3761  0EF6  2EF1               	goto	u105_25
  3762  0EF7  3001               	movlw	1
  3763  0EF8  00FD               	movwf	??___lwmod
  3764  0EF9  087D               	movf	??___lwmod,w
  3765  0EFA  07A0               	addwf	___lwmod@counter,f
  3766  0EFB  2EEE               	goto	i1l1496
  3767  0EFC                     i1l1498:	
  3768  0EFC  087A               	movf	___lwmod@divisor+1,w
  3769  0EFD  027C               	subwf	___lwmod@dividend+1,w
  3770  0EFE  1D03               	skipz
  3771  0EFF  2F02               	goto	u107_25
  3772  0F00  0879               	movf	___lwmod@divisor,w
  3773  0F01  027B               	subwf	___lwmod@dividend,w
  3774  0F02                     u107_25:	
  3775  0F02  1C03               	skipc
  3776  0F03  2F0A               	goto	i1l1502
  3777  0F04  0879               	movf	___lwmod@divisor,w
  3778  0F05  02FB               	subwf	___lwmod@dividend,f
  3779  0F06  087A               	movf	___lwmod@divisor+1,w
  3780  0F07  1C03               	skipc
  3781  0F08  03FC               	decf	___lwmod@dividend+1,f
  3782  0F09  02FC               	subwf	___lwmod@dividend+1,f
  3783  0F0A                     i1l1502:	
  3784  0F0A  3001               	movlw	1
  3785  0F0B                     u108_25:	
  3786  0F0B  1003               	clrc
  3787  0F0C  0CFA               	rrf	___lwmod@divisor+1,f
  3788  0F0D  0CF9               	rrf	___lwmod@divisor,f
  3789  0F0E  3EFF               	addlw	-1
  3790  0F0F  1D03               	skipz
  3791  0F10  2F0B               	goto	u108_25
  3792  0F11  3001               	movlw	1
  3793  0F12  02A0               	subwf	___lwmod@counter,f
  3794  0F13  1D03               	btfss	3,2
  3795  0F14  2EFC               	goto	i1l1498
  3796  0F15                     i1l1506:	
  3797  0F15  087C               	movf	___lwmod@dividend+1,w
  3798  0F16  00FA               	movwf	?___lwmod+1
  3799  0F17  087B               	movf	___lwmod@dividend,w
  3800  0F18  00F9               	movwf	?___lwmod
  3801  0F19  0008               	return
  3802  0F1A                     __end_of___lwmod:	
  3803                           
  3804                           	psect	text20
  3805  0FC4                     __ptext20:	
  3806 ;; *************** function ___lwdiv *****************
  3807 ;; Defined at:
  3808 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  divisor         2    0[COMMON] unsigned int 
  3811 ;;  dividend        2    2[COMMON] unsigned int 
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  quotient        2    5[COMMON] unsigned int 
  3814 ;;  counter         1    7[COMMON] unsigned char 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  2    0[COMMON] unsigned int 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3824 ;;      Params:         4       0       0       0       0
  3825 ;;      Locals:         3       0       0       0       0
  3826 ;;      Temps:          1       0       0       0       0
  3827 ;;      Totals:         8       0       0       0       0
  3828 ;;Total ram usage:        8 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_printf
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           
  3838                           ;psect for function ___lwdiv
  3839  0FC4                     ___lwdiv:	
  3840                           
  3841                           ;incstack = 0
  3842                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3843  0FC4  01F6               	clrf	___lwdiv@quotient
  3844  0FC5  01F7               	clrf	___lwdiv@quotient+1
  3845  0FC6  0871               	movf	___lwdiv@divisor,w
  3846  0FC7  0472               	iorwf	___lwdiv@divisor+1,w
  3847  0FC8  1903               	btfsc	3,2
  3848  0FC9  2FFB               	goto	i1l1484
  3849  0FCA  01F8               	clrf	___lwdiv@counter
  3850  0FCB  0AF8               	incf	___lwdiv@counter,f
  3851  0FCC                     i1l1472:	
  3852  0FCC  1BF2               	btfsc	___lwdiv@divisor+1,7
  3853  0FCD  2FDA               	goto	i1l1474
  3854  0FCE  3001               	movlw	1
  3855  0FCF                     u98_25:	
  3856  0FCF  1003               	clrc
  3857  0FD0  0DF1               	rlf	___lwdiv@divisor,f
  3858  0FD1  0DF2               	rlf	___lwdiv@divisor+1,f
  3859  0FD2  3EFF               	addlw	-1
  3860  0FD3  1D03               	skipz
  3861  0FD4  2FCF               	goto	u98_25
  3862  0FD5  3001               	movlw	1
  3863  0FD6  00F5               	movwf	??___lwdiv
  3864  0FD7  0875               	movf	??___lwdiv,w
  3865  0FD8  07F8               	addwf	___lwdiv@counter,f
  3866  0FD9  2FCC               	goto	i1l1472
  3867  0FDA                     i1l1474:	
  3868  0FDA  3001               	movlw	1
  3869  0FDB                     u100_25:	
  3870  0FDB  1003               	clrc
  3871  0FDC  0DF6               	rlf	___lwdiv@quotient,f
  3872  0FDD  0DF7               	rlf	___lwdiv@quotient+1,f
  3873  0FDE  3EFF               	addlw	-1
  3874  0FDF  1D03               	skipz
  3875  0FE0  2FDB               	goto	u100_25
  3876  0FE1  0872               	movf	___lwdiv@divisor+1,w
  3877  0FE2  0274               	subwf	___lwdiv@dividend+1,w
  3878  0FE3  1D03               	skipz
  3879  0FE4  2FE7               	goto	u101_25
  3880  0FE5  0871               	movf	___lwdiv@divisor,w
  3881  0FE6  0273               	subwf	___lwdiv@dividend,w
  3882  0FE7                     u101_25:	
  3883  0FE7  1C03               	skipc
  3884  0FE8  2FF0               	goto	i1l1480
  3885  0FE9  0871               	movf	___lwdiv@divisor,w
  3886  0FEA  02F3               	subwf	___lwdiv@dividend,f
  3887  0FEB  0872               	movf	___lwdiv@divisor+1,w
  3888  0FEC  1C03               	skipc
  3889  0FED  03F4               	decf	___lwdiv@dividend+1,f
  3890  0FEE  02F4               	subwf	___lwdiv@dividend+1,f
  3891  0FEF  1476               	bsf	___lwdiv@quotient,0
  3892  0FF0                     i1l1480:	
  3893  0FF0  3001               	movlw	1
  3894  0FF1                     u102_25:	
  3895  0FF1  1003               	clrc
  3896  0FF2  0CF2               	rrf	___lwdiv@divisor+1,f
  3897  0FF3  0CF1               	rrf	___lwdiv@divisor,f
  3898  0FF4  3EFF               	addlw	-1
  3899  0FF5  1D03               	skipz
  3900  0FF6  2FF1               	goto	u102_25
  3901  0FF7  3001               	movlw	1
  3902  0FF8  02F8               	subwf	___lwdiv@counter,f
  3903  0FF9  1D03               	btfss	3,2
  3904  0FFA  2FDA               	goto	i1l1474
  3905  0FFB                     i1l1484:	
  3906  0FFB  0877               	movf	___lwdiv@quotient+1,w
  3907  0FFC  00F2               	movwf	?___lwdiv+1
  3908  0FFD  0876               	movf	___lwdiv@quotient,w
  3909  0FFE  00F1               	movwf	?___lwdiv
  3910  0FFF  0008               	return
  3911  1000                     __end_of___lwdiv:	
  3912                           
  3913                           	psect	text21
  3914  0D8A                     __ptext21:	
  3915 ;; *************** function _clear_mem *****************
  3916 ;; Defined at:
  3917 ;;		line 39 in file "panda17.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;		None
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0, pclath, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         0       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0
  3934 ;;      Totals:         0       0       0       0       0
  3935 ;;Total ram usage:        0 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    2
  3938 ;; This function calls:
  3939 ;;		i1_mem_write
  3940 ;; This function is called by:
  3941 ;;		_uart_isr
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function _clear_mem
  3947  0D8A                     _clear_mem:	
  3948                           
  3949                           ;panda17.c: 40: mem_write(0x0002,0x00);
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _clear_mem: [wreg+status,2+status,0+pclath+cstack]
  3953  0D8A  3002               	movlw	2
  3954  0D8B  00FB               	movwf	i1mem_write@add
  3955  0D8C  3000               	movlw	0
  3956  0D8D  00FC               	movwf	i1mem_write@add+1
  3957  0D8E  01FD               	clrf	i1mem_write@data
  3958  0D8F  120A  118A  20CF   	fcall	i1_mem_write
  3959  0D92  0008               	return
  3960  0D93                     __end_of_clear_mem:	
  3961                           
  3962                           	psect	text22
  3963  001C                     __ptext22:	
  3964 ;; *************** function _tmr2_isr *****************
  3965 ;; Defined at:
  3966 ;;		line 129 in file "panda17.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;		None
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  1    wreg      void 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0, pclath, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3980 ;;      Params:         0       0       0       0       0
  3981 ;;      Locals:         0       0       0       0       0
  3982 ;;      Temps:          0       1       0       0       0
  3983 ;;      Totals:         0       1       0       0       0
  3984 ;;Total ram usage:        1 bytes
  3985 ;; Hardware stack levels used:    1
  3986 ;; Hardware stack levels required when called:    3
  3987 ;; This function calls:
  3988 ;;		_to_work
  3989 ;; This function is called by:
  3990 ;;		_ints_isr
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           
  3995                           ;psect for function _tmr2_isr
  3996  001C                     _tmr2_isr:	
  3997                           
  3998                           ;panda17.c: 130: INTCONbits.GIE = 0;
  3999                           
  4000                           ;incstack = 0
  4001                           ; Regs used in _tmr2_isr: [wreg+status,2+status,0+pclath+cstack]
  4002  001C  138B               	bcf	11,7	;volatile
  4003                           
  4004                           ;panda17.c: 131: if (!PORTAbits.RA2){
  4005  001D  1283               	bcf	3,5	;RP0=0, select bank0
  4006  001E  1303               	bcf	3,6	;RP1=0, select bank0
  4007  001F  1905               	btfsc	5,2	;volatile
  4008  0020  2829               	goto	i1l1958
  4009                           
  4010                           ;panda17.c: 134: led = 5;
  4011  0021  3005               	movlw	5
  4012  0022  00B3               	movwf	??_tmr2_isr
  4013  0023  0833               	movf	??_tmr2_isr,w
  4014  0024  00CF               	movwf	_led
  4015                           
  4016                           ;panda17.c: 135: milis = 0;
  4017  0025  01CE               	clrf	_milis
  4018                           
  4019                           ;panda17.c: 136: secs = 0;
  4020  0026  01CC               	clrf	_secs
  4021  0027  01CD               	clrf	_secs+1
  4022                           
  4023                           ;panda17.c: 137: }
  4024  0028  2845               	goto	i1l1976
  4025  0029                     i1l1958:	
  4026                           
  4027                           ;panda17.c: 138: else {
  4028                           ;panda17.c: 139: milis++;
  4029  0029  3001               	movlw	1
  4030  002A  00B3               	movwf	??_tmr2_isr
  4031  002B  0833               	movf	??_tmr2_isr,w
  4032  002C  07CE               	addwf	_milis,f
  4033                           
  4034                           ;panda17.c: 140: if(milis > 24){
  4035  002D  3019               	movlw	25
  4036  002E  024E               	subwf	_milis,w
  4037  002F  1C03               	skipc
  4038  0030  2845               	goto	i1l1976
  4039                           
  4040                           ;panda17.c: 141: if (led > 0){
  4041  0031  084F               	movf	_led,w
  4042  0032  1903               	btfsc	3,2
  4043  0033  2838               	goto	i1l104
  4044                           
  4045                           ;panda17.c: 142: PORTBbits.RB4 = 1;
  4046  0034  1606               	bsf	6,4	;volatile
  4047                           
  4048                           ;panda17.c: 143: led--;
  4049  0035  3001               	movlw	1
  4050  0036  02CF               	subwf	_led,f
  4051                           
  4052                           ;panda17.c: 144: }
  4053  0037  2839               	goto	i1l1968
  4054  0038                     i1l104:	
  4055                           
  4056                           ;panda17.c: 145: else {
  4057                           ;panda17.c: 146: PORTBbits.RB4 = 0;
  4058  0038  1206               	bcf	6,4	;volatile
  4059  0039                     i1l1968:	
  4060                           
  4061                           ;panda17.c: 147: }
  4062                           ;panda17.c: 148: secs++;
  4063  0039  3001               	movlw	1
  4064  003A  07CC               	addwf	_secs,f
  4065  003B  1803               	skipnc
  4066  003C  0ACD               	incf	_secs+1,f
  4067  003D  3000               	movlw	0
  4068  003E  07CD               	addwf	_secs+1,f
  4069                           
  4070                           ;panda17.c: 149: milis = 0;
  4071  003F  01CE               	clrf	_milis
  4072                           
  4073                           ;panda17.c: 151: secs = 0;
  4074  0040  01CC               	clrf	_secs
  4075  0041  01CD               	clrf	_secs+1
  4076                           
  4077                           ;panda17.c: 152: to_work();
  4078  0042  120A  118A  24B1   	fcall	_to_work
  4079  0045                     i1l1976:	
  4080                           
  4081                           ;panda17.c: 154: }
  4082                           ;panda17.c: 155: }
  4083                           ;panda17.c: 156: INTCONbits.GIE = 1;
  4084  0045  178B               	bsf	11,7	;volatile
  4085  0046  0008               	return
  4086  0047                     __end_of_tmr2_isr:	
  4087                           
  4088                           	psect	text23
  4089  04B1                     __ptext23:	
  4090 ;; *************** function _to_work *****************
  4091 ;; Defined at:
  4092 ;;		line 63 in file "panda17.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  hum_add         2   16[BANK0 ] unsigned int 
  4097 ;;  temp_add        2   14[BANK0 ] unsigned int 
  4098 ;;  up              2   12[BANK0 ] unsigned int 
  4099 ;;  temp_val        2   10[BANK0 ] unsigned int 
  4100 ;;  hum_val         2    8[BANK0 ] unsigned int 
  4101 ;;  arg             1   18[BANK0 ] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0, pclath, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4111 ;;      Params:         0       0       0       0       0
  4112 ;;      Locals:         0      11       0       0       0
  4113 ;;      Temps:          0       2       0       0       0
  4114 ;;      Totals:         0      13       0       0       0
  4115 ;;Total ram usage:       13 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; Hardware stack levels required when called:    2
  4118 ;; This function calls:
  4119 ;;		_si_read_h
  4120 ;;		_si_read_t
  4121 ;;		i1_mem_read
  4122 ;;		i1_mem_write
  4123 ;; This function is called by:
  4124 ;;		_tmr2_isr
  4125 ;; This function uses a non-reentrant model
  4126 ;;
  4127                           
  4128                           
  4129                           ;psect for function _to_work
  4130  04B1                     _to_work:	
  4131                           
  4132                           ;panda17.c: 64: INTCONbits.GIE = 0;
  4133                           
  4134                           ;incstack = 0
  4135                           ; Regs used in _to_work: [wreg+status,2+status,0+pclath+cstack]
  4136  04B1  138B               	bcf	11,7	;volatile
  4137                           
  4138                           ;panda17.c: 65: unsigned char arg;
  4139                           ;panda17.c: 66: unsigned int temp_add,hum_add,up;
  4140                           ;panda17.c: 67: unsigned int hum_val,temp_val;
  4141                           ;panda17.c: 69: hum_val = si_read_h();
  4142  04B2  120A  118A  236F  120A  118A  	fcall	_si_read_h
  4143  04B7  087C               	movf	?_si_read_h+1,w
  4144  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  4145  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  4146  04BA  00A9               	movwf	to_work@hum_val+1
  4147  04BB  087B               	movf	?_si_read_h,w
  4148  04BC  00A8               	movwf	to_work@hum_val
  4149                           
  4150                           ;panda17.c: 70: temp_val = si_read_t();
  4151  04BD  120A  118A  225E  120A  118A  	fcall	_si_read_t
  4152  04C2  087C               	movf	?_si_read_t+1,w
  4153  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  4154  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  4155  04C5  00AB               	movwf	to_work@temp_val+1
  4156  04C6  087B               	movf	?_si_read_t,w
  4157  04C7  00AA               	movwf	to_work@temp_val
  4158                           
  4159                           ;panda17.c: 72: hum_add = mem_read(0x000A);
  4160  04C8  300A               	movlw	10
  4161  04C9  00FB               	movwf	i1mem_read@add
  4162  04CA  3000               	movlw	0
  4163  04CB  00FC               	movwf	i1mem_read@add+1
  4164  04CC  120A  118A  2089  120A  118A  	fcall	i1_mem_read
  4165  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  4166  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  4167  04D3  00A6               	movwf	??_to_work
  4168  04D4  01A7               	clrf	??_to_work+1
  4169  04D5  0826               	movf	??_to_work,w
  4170  04D6  00B0               	movwf	to_work@hum_add
  4171  04D7  0827               	movf	??_to_work+1,w
  4172  04D8  00B1               	movwf	to_work@hum_add+1
  4173                           
  4174                           ;panda17.c: 73: hum_add = hum_add << 8;
  4175  04D9  0830               	movf	to_work@hum_add,w
  4176  04DA  00A7               	movwf	??_to_work+1
  4177  04DB  01A6               	clrf	??_to_work
  4178  04DC  0826               	movf	??_to_work,w
  4179  04DD  00B0               	movwf	to_work@hum_add
  4180  04DE  0827               	movf	??_to_work+1,w
  4181  04DF  00B1               	movwf	to_work@hum_add+1
  4182                           
  4183                           ;panda17.c: 74: hum_add += mem_read(0x000B);
  4184  04E0  300B               	movlw	11
  4185  04E1  00FB               	movwf	i1mem_read@add
  4186  04E2  3000               	movlw	0
  4187  04E3  00FC               	movwf	i1mem_read@add+1
  4188  04E4  120A  118A  2089  120A  118A  	fcall	i1_mem_read
  4189  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  4190  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  4191  04EB  00A6               	movwf	??_to_work
  4192  04EC  01A7               	clrf	??_to_work+1
  4193  04ED  0826               	movf	??_to_work,w
  4194  04EE  07B0               	addwf	to_work@hum_add,f
  4195  04EF  1803               	skipnc
  4196  04F0  0AB1               	incf	to_work@hum_add+1,f
  4197  04F1  0827               	movf	??_to_work+1,w
  4198  04F2  07B1               	addwf	to_work@hum_add+1,f
  4199                           
  4200                           ;panda17.c: 75: up = hum_add + 1;
  4201  04F3  0830               	movf	to_work@hum_add,w
  4202  04F4  3E01               	addlw	1
  4203  04F5  00AC               	movwf	to_work@up
  4204  04F6  0831               	movf	to_work@hum_add+1,w
  4205  04F7  1803               	skipnc
  4206  04F8  3E01               	addlw	1
  4207  04F9  3E00               	addlw	0
  4208  04FA  00AD               	movwf	to_work@up+1
  4209                           
  4210                           ;panda17.c: 76: arg = up >> 8;
  4211  04FB  082D               	movf	to_work@up+1,w
  4212  04FC  00A6               	movwf	??_to_work
  4213  04FD  0826               	movf	??_to_work,w
  4214  04FE  00B2               	movwf	to_work@arg
  4215                           
  4216                           ;panda17.c: 77: mem_write(0x000A,arg);
  4217  04FF  300A               	movlw	10
  4218  0500  00FB               	movwf	i1mem_write@add
  4219  0501  3000               	movlw	0
  4220  0502  00FC               	movwf	i1mem_write@add+1
  4221  0503  0832               	movf	to_work@arg,w
  4222  0504  00A6               	movwf	??_to_work
  4223  0505  0826               	movf	??_to_work,w
  4224  0506  00FD               	movwf	i1mem_write@data
  4225  0507  120A  118A  20CF  120A  118A  	fcall	i1_mem_write
  4226                           
  4227                           ;panda17.c: 78: arg = up & 0x00FF;
  4228  050C  1283               	bcf	3,5	;RP0=0, select bank0
  4229  050D  1303               	bcf	3,6	;RP1=0, select bank0
  4230  050E  082C               	movf	to_work@up,w
  4231  050F  00A6               	movwf	??_to_work
  4232  0510  0826               	movf	??_to_work,w
  4233  0511  00B2               	movwf	to_work@arg
  4234                           
  4235                           ;panda17.c: 79: mem_write(0x000B,arg);
  4236  0512  300B               	movlw	11
  4237  0513  00FB               	movwf	i1mem_write@add
  4238  0514  3000               	movlw	0
  4239  0515  00FC               	movwf	i1mem_write@add+1
  4240  0516  0832               	movf	to_work@arg,w
  4241  0517  00A6               	movwf	??_to_work
  4242  0518  0826               	movf	??_to_work,w
  4243  0519  00FD               	movwf	i1mem_write@data
  4244  051A  120A  118A  20CF  120A  118A  	fcall	i1_mem_write
  4245                           
  4246                           ;panda17.c: 80: hum_add = (hum_add * 2) + 1 + 0x000F;
  4247  051F  1283               	bcf	3,5	;RP0=0, select bank0
  4248  0520  1303               	bcf	3,6	;RP1=0, select bank0
  4249  0521  0831               	movf	to_work@hum_add+1,w
  4250  0522  00A7               	movwf	??_to_work+1
  4251  0523  0830               	movf	to_work@hum_add,w
  4252  0524  00A6               	movwf	??_to_work
  4253  0525  1003               	clrc
  4254  0526  0DA6               	rlf	??_to_work,f
  4255  0527  0DA7               	rlf	??_to_work+1,f
  4256  0528  0826               	movf	??_to_work,w
  4257  0529  3E10               	addlw	16
  4258  052A  00B0               	movwf	to_work@hum_add
  4259  052B  0827               	movf	??_to_work+1,w
  4260  052C  1803               	skipnc
  4261  052D  3E01               	addlw	1
  4262  052E  3E00               	addlw	0
  4263  052F  00B1               	movwf	to_work@hum_add+1
  4264                           
  4265                           ;panda17.c: 81: temp_add = mem_read(0x000C);
  4266  0530  300C               	movlw	12
  4267  0531  00FB               	movwf	i1mem_read@add
  4268  0532  3000               	movlw	0
  4269  0533  00FC               	movwf	i1mem_read@add+1
  4270  0534  120A  118A  2089  120A  118A  	fcall	i1_mem_read
  4271  0539  1283               	bcf	3,5	;RP0=0, select bank0
  4272  053A  1303               	bcf	3,6	;RP1=0, select bank0
  4273  053B  00A6               	movwf	??_to_work
  4274  053C  01A7               	clrf	??_to_work+1
  4275  053D  0826               	movf	??_to_work,w
  4276  053E  00AE               	movwf	to_work@temp_add
  4277  053F  0827               	movf	??_to_work+1,w
  4278  0540  00AF               	movwf	to_work@temp_add+1
  4279                           
  4280                           ;panda17.c: 82: temp_add = temp_add << 8;
  4281  0541  082E               	movf	to_work@temp_add,w
  4282  0542  00A7               	movwf	??_to_work+1
  4283  0543  01A6               	clrf	??_to_work
  4284  0544  0826               	movf	??_to_work,w
  4285  0545  00AE               	movwf	to_work@temp_add
  4286  0546  0827               	movf	??_to_work+1,w
  4287  0547  00AF               	movwf	to_work@temp_add+1
  4288                           
  4289                           ;panda17.c: 83: temp_add += mem_read(0x000D);
  4290  0548  300D               	movlw	13
  4291  0549  00FB               	movwf	i1mem_read@add
  4292  054A  3000               	movlw	0
  4293  054B  00FC               	movwf	i1mem_read@add+1
  4294  054C  120A  118A  2089  120A  118A  	fcall	i1_mem_read
  4295  0551  1283               	bcf	3,5	;RP0=0, select bank0
  4296  0552  1303               	bcf	3,6	;RP1=0, select bank0
  4297  0553  00A6               	movwf	??_to_work
  4298  0554  01A7               	clrf	??_to_work+1
  4299  0555  0826               	movf	??_to_work,w
  4300  0556  07AE               	addwf	to_work@temp_add,f
  4301  0557  1803               	skipnc
  4302  0558  0AAF               	incf	to_work@temp_add+1,f
  4303  0559  0827               	movf	??_to_work+1,w
  4304  055A  07AF               	addwf	to_work@temp_add+1,f
  4305                           
  4306                           ;panda17.c: 84: up = temp_add + 1;
  4307  055B  082E               	movf	to_work@temp_add,w
  4308  055C  3E01               	addlw	1
  4309  055D  00AC               	movwf	to_work@up
  4310  055E  082F               	movf	to_work@temp_add+1,w
  4311  055F  1803               	skipnc
  4312  0560  3E01               	addlw	1
  4313  0561  3E00               	addlw	0
  4314  0562  00AD               	movwf	to_work@up+1
  4315                           
  4316                           ;panda17.c: 85: arg = up >> 8;
  4317  0563  082D               	movf	to_work@up+1,w
  4318  0564  00A6               	movwf	??_to_work
  4319  0565  0826               	movf	??_to_work,w
  4320  0566  00B2               	movwf	to_work@arg
  4321                           
  4322                           ;panda17.c: 86: mem_write(0x000C,arg);
  4323  0567  300C               	movlw	12
  4324  0568  00FB               	movwf	i1mem_write@add
  4325  0569  3000               	movlw	0
  4326  056A  00FC               	movwf	i1mem_write@add+1
  4327  056B  0832               	movf	to_work@arg,w
  4328  056C  00A6               	movwf	??_to_work
  4329  056D  0826               	movf	??_to_work,w
  4330  056E  00FD               	movwf	i1mem_write@data
  4331  056F  120A  118A  20CF  120A  118A  	fcall	i1_mem_write
  4332                           
  4333                           ;panda17.c: 87: arg = up & 0x00FF;
  4334  0574  1283               	bcf	3,5	;RP0=0, select bank0
  4335  0575  1303               	bcf	3,6	;RP1=0, select bank0
  4336  0576  082C               	movf	to_work@up,w
  4337  0577  00A6               	movwf	??_to_work
  4338  0578  0826               	movf	??_to_work,w
  4339  0579  00B2               	movwf	to_work@arg
  4340                           
  4341                           ;panda17.c: 88: mem_write(0x000D,arg);
  4342  057A  300D               	movlw	13
  4343  057B  00FB               	movwf	i1mem_write@add
  4344  057C  3000               	movlw	0
  4345  057D  00FC               	movwf	i1mem_write@add+1
  4346  057E  0832               	movf	to_work@arg,w
  4347  057F  00A6               	movwf	??_to_work
  4348  0580  0826               	movf	??_to_work,w
  4349  0581  00FD               	movwf	i1mem_write@data
  4350  0582  120A  118A  20CF  120A  118A  	fcall	i1_mem_write
  4351                           
  4352                           ;panda17.c: 89: temp_add = (temp_add * 2) + 1 + 0x7FF6;
  4353  0587  1283               	bcf	3,5	;RP0=0, select bank0
  4354  0588  1303               	bcf	3,6	;RP1=0, select bank0
  4355  0589  082F               	movf	to_work@temp_add+1,w
  4356  058A  00A7               	movwf	??_to_work+1
  4357  058B  082E               	movf	to_work@temp_add,w
  4358  058C  00A6               	movwf	??_to_work
  4359  058D  1003               	clrc
  4360  058E  0DA6               	rlf	??_to_work,f
  4361  058F  0DA7               	rlf	??_to_work+1,f
  4362  0590  0826               	movf	??_to_work,w
  4363  0591  3EF7               	addlw	247
  4364  0592  00AE               	movwf	to_work@temp_add
  4365  0593  0827               	movf	??_to_work+1,w
  4366  0594  1803               	skipnc
  4367  0595  3E01               	addlw	1
  4368  0596  3E7F               	addlw	127
  4369  0597  00AF               	movwf	to_work@temp_add+1
  4370                           
  4371                           ;panda17.c: 91: arg = hum_val >> 8;
  4372  0598  0829               	movf	to_work@hum_val+1,w
  4373  0599  00A6               	movwf	??_to_work
  4374  059A  0826               	movf	??_to_work,w
  4375  059B  00B2               	movwf	to_work@arg
  4376                           
  4377                           ;panda17.c: 92: mem_write(hum_add,arg);
  4378  059C  0831               	movf	to_work@hum_add+1,w
  4379  059D  00FC               	movwf	i1mem_write@add+1
  4380  059E  0830               	movf	to_work@hum_add,w
  4381  059F  00FB               	movwf	i1mem_write@add
  4382  05A0  0832               	movf	to_work@arg,w
  4383  05A1  00A6               	movwf	??_to_work
  4384  05A2  0826               	movf	??_to_work,w
  4385  05A3  00FD               	movwf	i1mem_write@data
  4386  05A4  120A  118A  20CF  120A  118A  	fcall	i1_mem_write
  4387                           
  4388                           ;panda17.c: 93: arg = hum_val & 0x00FF;
  4389  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  4390  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  4391  05AB  0828               	movf	to_work@hum_val,w
  4392  05AC  00A6               	movwf	??_to_work
  4393  05AD  0826               	movf	??_to_work,w
  4394  05AE  00B2               	movwf	to_work@arg
  4395                           
  4396                           ;panda17.c: 94: mem_write(hum_add + 1,arg);
  4397  05AF  0830               	movf	to_work@hum_add,w
  4398  05B0  3E01               	addlw	1
  4399  05B1  00FB               	movwf	i1mem_write@add
  4400  05B2  0831               	movf	to_work@hum_add+1,w
  4401  05B3  1803               	skipnc
  4402  05B4  3E01               	addlw	1
  4403  05B5  3E00               	addlw	0
  4404  05B6  00FC               	movwf	i1mem_write@add+1
  4405  05B7  0832               	movf	to_work@arg,w
  4406  05B8  00A6               	movwf	??_to_work
  4407  05B9  0826               	movf	??_to_work,w
  4408  05BA  00FD               	movwf	i1mem_write@data
  4409  05BB  120A  118A  20CF  120A  118A  	fcall	i1_mem_write
  4410                           
  4411                           ;panda17.c: 95: arg = (temp_val >> 8) & 0x00FF;
  4412  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  4413  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  4414  05C2  082B               	movf	to_work@temp_val+1,w
  4415  05C3  00A6               	movwf	??_to_work
  4416  05C4  0826               	movf	??_to_work,w
  4417  05C5  00B2               	movwf	to_work@arg
  4418                           
  4419                           ;panda17.c: 96: mem_write(temp_add,arg);
  4420  05C6  082F               	movf	to_work@temp_add+1,w
  4421  05C7  00FC               	movwf	i1mem_write@add+1
  4422  05C8  082E               	movf	to_work@temp_add,w
  4423  05C9  00FB               	movwf	i1mem_write@add
  4424  05CA  0832               	movf	to_work@arg,w
  4425  05CB  00A6               	movwf	??_to_work
  4426  05CC  0826               	movf	??_to_work,w
  4427  05CD  00FD               	movwf	i1mem_write@data
  4428  05CE  120A  118A  20CF  120A  118A  	fcall	i1_mem_write
  4429                           
  4430                           ;panda17.c: 97: arg = temp_val & 0x00FF;
  4431  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  4432  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  4433  05D5  082A               	movf	to_work@temp_val,w
  4434  05D6  00A6               	movwf	??_to_work
  4435  05D7  0826               	movf	??_to_work,w
  4436  05D8  00B2               	movwf	to_work@arg
  4437                           
  4438                           ;panda17.c: 98: mem_write(temp_add + 1,arg);
  4439  05D9  082E               	movf	to_work@temp_add,w
  4440  05DA  3E01               	addlw	1
  4441  05DB  00FB               	movwf	i1mem_write@add
  4442  05DC  082F               	movf	to_work@temp_add+1,w
  4443  05DD  1803               	skipnc
  4444  05DE  3E01               	addlw	1
  4445  05DF  3E00               	addlw	0
  4446  05E0  00FC               	movwf	i1mem_write@add+1
  4447  05E1  0832               	movf	to_work@arg,w
  4448  05E2  00A6               	movwf	??_to_work
  4449  05E3  0826               	movf	??_to_work,w
  4450  05E4  00FD               	movwf	i1mem_write@data
  4451  05E5  120A  118A  20CF   	fcall	i1_mem_write
  4452                           
  4453                           ;panda17.c: 99: INTCONbits.GIE = 1;
  4454  05E8  178B               	bsf	11,7	;volatile
  4455  05E9  0008               	return
  4456  05EA                     __end_of_to_work:	
  4457                           
  4458                           	psect	text24
  4459  00CF                     __ptext24:	
  4460 ;; *************** function i1_mem_write *****************
  4461 ;; Defined at:
  4462 ;;		line 13 in file "24lc512.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;  add             2   10[COMMON] unsigned int 
  4465 ;;  data            1   12[COMMON] unsigned char 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  mem_write       1    2[BANK0 ] unsigned char 
  4468 ;;  mem_write       1    1[BANK0 ] unsigned char 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      void 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0, pclath, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4478 ;;      Params:         3       0       0       0       0
  4479 ;;      Locals:         0       2       0       0       0
  4480 ;;      Temps:          0       1       0       0       0
  4481 ;;      Totals:         3       3       0       0       0
  4482 ;;Total ram usage:        6 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    1
  4485 ;; This function calls:
  4486 ;;		i1_i2c_start
  4487 ;;		i1_i2c_stop
  4488 ;;		i1_i2c_write
  4489 ;; This function is called by:
  4490 ;;		_clear_mem
  4491 ;;		_to_work
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           
  4496                           ;psect for function i1_mem_write
  4497  00CF                     i1_mem_write:	
  4498                           
  4499                           ;24lc512.c: 14: unsigned char add_h,add_l;
  4500                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  4501                           
  4502                           ;incstack = 0
  4503                           ; Regs used in i1_mem_write: [wreg+status,2+status,0+pclath+cstack]
  4504  00CF  087C               	movf	i1mem_write@add+1,w
  4505  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  4506  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  4507  00D2  00A0               	movwf	??i1_mem_write
  4508  00D3  0820               	movf	??i1_mem_write,w
  4509  00D4  00A1               	movwf	i1mem_write@add_h
  4510                           
  4511                           ;24lc512.c: 16: add_l = add & 0x00FF;
  4512  00D5  087B               	movf	i1mem_write@add,w
  4513  00D6  00A0               	movwf	??i1_mem_write
  4514  00D7  0820               	movf	??i1_mem_write,w
  4515  00D8  00A2               	movwf	i1mem_write@add_l
  4516                           
  4517                           ;24lc512.c: 17: i2c_start();
  4518  00D9  120A  158A  2646  120A  118A  	fcall	i1_i2c_start
  4519                           
  4520                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  4521  00DE  01F1               	clrf	i1i2c_write@ack
  4522  00DF  30A0               	movlw	160
  4523  00E0  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4524                           
  4525                           ;24lc512.c: 19: i2c_write(add_h,0);
  4526  00E5  01F1               	clrf	i1i2c_write@ack
  4527  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  4528  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  4529  00E8  0821               	movf	i1mem_write@add_h,w
  4530  00E9  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4531                           
  4532                           ;24lc512.c: 20: i2c_write(add_l,0);
  4533  00EE  01F1               	clrf	i1i2c_write@ack
  4534  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  4535  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  4536  00F1  0822               	movf	i1mem_write@add_l,w
  4537  00F2  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4538                           
  4539                           ;24lc512.c: 21: i2c_write(data,0);
  4540  00F7  01F1               	clrf	i1i2c_write@ack
  4541  00F8  087D               	movf	i1mem_write@data,w
  4542  00F9  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4543                           
  4544                           ;24lc512.c: 22: i2c_stop();
  4545  00FE  120A  158A  2669  120A  118A  	fcall	i1_i2c_stop
  4546  0103                     L7:	
  4547                           
  4548                           ;24lc512.c: 24: i2c_start();
  4549  0103  120A  158A  2646  120A  118A  	fcall	i1_i2c_start
  4550                           
  4551                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  4552  0108  01F1               	clrf	i1i2c_write@ack
  4553  0109  30A0               	movlw	160
  4554  010A  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4555                           
  4556                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  4557  010F  1683               	bsf	3,5	;RP0=1, select bank1
  4558  0110  1303               	bcf	3,6	;RP1=0, select bank1
  4559  0111  1B11               	btfsc	17,6	;volatile
  4560  0112  2903               	goto	L7
  4561                           
  4562                           ;24lc512.c: 30: }
  4563                           ;24lc512.c: 31: i2c_stop();
  4564                           
  4565                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  4566                           
  4567                           ;24lc512.c: 28: i2c_start();
  4568  0113  120A  158A  2669   	fcall	i1_i2c_stop
  4569  0116  0008               	return
  4570  0117                     __end_ofi1_mem_write:	
  4571                           
  4572                           	psect	text25
  4573  0089                     __ptext25:	
  4574 ;; *************** function i1_mem_read *****************
  4575 ;; Defined at:
  4576 ;;		line 34 in file "24lc512.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  add             2   10[COMMON] unsigned int 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  mem_read        1    2[BANK0 ] unsigned char 
  4581 ;;  mem_read        1    1[BANK0 ] unsigned char 
  4582 ;;  mem_read        1    0[BANK0 ] unsigned char 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      unsigned char 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0, pclath, cstack
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4592 ;;      Params:         2       0       0       0       0
  4593 ;;      Locals:         0       3       0       0       0
  4594 ;;      Temps:          1       0       0       0       0
  4595 ;;      Totals:         3       3       0       0       0
  4596 ;;Total ram usage:        6 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; Hardware stack levels required when called:    1
  4599 ;; This function calls:
  4600 ;;		i1_i2c_read
  4601 ;;		i1_i2c_start
  4602 ;;		i1_i2c_stop
  4603 ;;		i1_i2c_write
  4604 ;; This function is called by:
  4605 ;;		_give_all
  4606 ;;		_to_work
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           
  4611                           ;psect for function i1_mem_read
  4612  0089                     i1_mem_read:	
  4613                           
  4614                           ;24lc512.c: 35: unsigned char rta;
  4615                           ;24lc512.c: 36: unsigned char add_h,add_l;
  4616                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  4617                           
  4618                           ;incstack = 0
  4619                           ; Regs used in i1_mem_read: [wreg+status,2+status,0+pclath+cstack]
  4620  0089  087C               	movf	i1mem_read@add+1,w
  4621  008A  00FD               	movwf	??i1_mem_read
  4622  008B  087D               	movf	??i1_mem_read,w
  4623  008C  1283               	bcf	3,5	;RP0=0, select bank0
  4624  008D  1303               	bcf	3,6	;RP1=0, select bank0
  4625  008E  00A1               	movwf	i1mem_read@add_h
  4626                           
  4627                           ;24lc512.c: 38: add_l = add & 0x00FF;
  4628  008F  087B               	movf	i1mem_read@add,w
  4629  0090  00FD               	movwf	??i1_mem_read
  4630  0091  087D               	movf	??i1_mem_read,w
  4631  0092  00A2               	movwf	i1mem_read@add_l
  4632                           
  4633                           ;24lc512.c: 39: i2c_start();
  4634  0093  120A  158A  2646  120A  118A  	fcall	i1_i2c_start
  4635                           
  4636                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  4637  0098  01F1               	clrf	i1i2c_write@ack
  4638  0099  30A0               	movlw	160
  4639  009A  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4640                           
  4641                           ;24lc512.c: 41: i2c_write(add_h,0);
  4642  009F  01F1               	clrf	i1i2c_write@ack
  4643  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  4644  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  4645  00A2  0821               	movf	i1mem_read@add_h,w
  4646  00A3  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4647                           
  4648                           ;24lc512.c: 42: i2c_write(add_l,0);
  4649  00A8  01F1               	clrf	i1i2c_write@ack
  4650  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  4651  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  4652  00AB  0822               	movf	i1mem_read@add_l,w
  4653  00AC  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4654                           
  4655                           ;24lc512.c: 43: i2c_start();
  4656  00B1  120A  158A  2646  120A  118A  	fcall	i1_i2c_start
  4657                           
  4658                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  4659  00B6  01F1               	clrf	i1i2c_write@ack
  4660  00B7  30A1               	movlw	161
  4661  00B8  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4662                           
  4663                           ;24lc512.c: 45: rta = i2c_read(0);
  4664  00BD  3000               	movlw	0
  4665  00BE  120A  118A  2047  120A  118A  	fcall	i1_i2c_read
  4666  00C3  00FD               	movwf	??i1_mem_read
  4667  00C4  087D               	movf	??i1_mem_read,w
  4668  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  4669  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  4670  00C7  00A0               	movwf	i1mem_read@rta
  4671                           
  4672                           ;24lc512.c: 46: i2c_stop();
  4673  00C8  120A  158A  2669   	fcall	i1_i2c_stop
  4674                           
  4675                           ;24lc512.c: 47: return rta;
  4676  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  4677  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  4678  00CD  0820               	movf	i1mem_read@rta,w
  4679  00CE  0008               	return
  4680  00CF                     __end_ofi1_mem_read:	
  4681                           
  4682                           	psect	text26
  4683  025E                     __ptext26:	
  4684 ;; *************** function _si_read_t *****************
  4685 ;; Defined at:
  4686 ;;		line 37 in file "si7021.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;		None
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;  rta             2    4[BANK0 ] unsigned int 
  4691 ;;  rta_l           1    3[BANK0 ] unsigned char 
  4692 ;;  rta_h           1    2[BANK0 ] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  2   10[COMMON] int 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0, pclath, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4702 ;;      Params:         2       0       0       0       0
  4703 ;;      Locals:         0       4       0       0       0
  4704 ;;      Temps:          0       2       0       0       0
  4705 ;;      Totals:         2       6       0       0       0
  4706 ;;Total ram usage:        8 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    1
  4709 ;; This function calls:
  4710 ;;		_i2c_rstart
  4711 ;;		i1_i2c_read
  4712 ;;		i1_i2c_start
  4713 ;;		i1_i2c_stop
  4714 ;;		i1_i2c_write
  4715 ;; This function is called by:
  4716 ;;		_to_work
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           
  4721                           ;psect for function _si_read_t
  4722  025E                     _si_read_t:	
  4723                           
  4724                           ;si7021.c: 38: unsigned int rta;
  4725                           ;si7021.c: 39: unsigned char rta_h,rta_l;
  4726                           ;si7021.c: 40: i2c_start();
  4727                           
  4728                           ;incstack = 0
  4729                           ; Regs used in _si_read_t: [wreg+status,2+status,0+pclath+cstack]
  4730  025E  120A  158A  2646  120A  118A  	fcall	i1_i2c_start
  4731                           
  4732                           ;si7021.c: 41: i2c_write(0x80,1);
  4733  0263  01F1               	clrf	i1i2c_write@ack
  4734  0264  0AF1               	incf	i1i2c_write@ack,f
  4735  0265  3080               	movlw	128
  4736  0266  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4737                           
  4738                           ;si7021.c: 42: i2c_write(0xE3,1);
  4739  026B  01F1               	clrf	i1i2c_write@ack
  4740  026C  0AF1               	incf	i1i2c_write@ack,f
  4741  026D  30E3               	movlw	227
  4742  026E  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4743                           
  4744                           ;si7021.c: 43: i2c_rstart();
  4745  0273  120A  158A  2623  120A  118A  	fcall	_i2c_rstart
  4746                           
  4747                           ;si7021.c: 44: i2c_write(0x81,1);
  4748  0278  01F1               	clrf	i1i2c_write@ack
  4749  0279  0AF1               	incf	i1i2c_write@ack,f
  4750  027A  3081               	movlw	129
  4751  027B  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4752                           
  4753                           ;si7021.c: 45: rta_h = i2c_read(0);
  4754  0280  3000               	movlw	0
  4755  0281  120A  118A  2047  120A  118A  	fcall	i1_i2c_read
  4756  0286  1283               	bcf	3,5	;RP0=0, select bank0
  4757  0287  1303               	bcf	3,6	;RP1=0, select bank0
  4758  0288  00A0               	movwf	??_si_read_t
  4759  0289  0820               	movf	??_si_read_t,w
  4760  028A  00A2               	movwf	si_read_t@rta_h
  4761                           
  4762                           ;si7021.c: 46: rta_l = i2c_read(0);
  4763  028B  3000               	movlw	0
  4764  028C  120A  118A  2047  120A  118A  	fcall	i1_i2c_read
  4765  0291  1283               	bcf	3,5	;RP0=0, select bank0
  4766  0292  1303               	bcf	3,6	;RP1=0, select bank0
  4767  0293  00A0               	movwf	??_si_read_t
  4768  0294  0820               	movf	??_si_read_t,w
  4769  0295  00A3               	movwf	si_read_t@rta_l
  4770                           
  4771                           ;si7021.c: 47: i2c_stop();
  4772  0296  120A  158A  2669   	fcall	i1_i2c_stop
  4773                           
  4774                           ;si7021.c: 48: rta = rta_h;
  4775  0299  1283               	bcf	3,5	;RP0=0, select bank0
  4776  029A  1303               	bcf	3,6	;RP1=0, select bank0
  4777  029B  0822               	movf	si_read_t@rta_h,w
  4778  029C  00A0               	movwf	??_si_read_t
  4779  029D  01A1               	clrf	??_si_read_t+1
  4780  029E  0820               	movf	??_si_read_t,w
  4781  029F  00A4               	movwf	si_read_t@rta
  4782  02A0  0821               	movf	??_si_read_t+1,w
  4783  02A1  00A5               	movwf	si_read_t@rta+1
  4784                           
  4785                           ;si7021.c: 49: rta = rta << 8;
  4786  02A2  0824               	movf	si_read_t@rta,w
  4787  02A3  00A1               	movwf	??_si_read_t+1
  4788  02A4  01A0               	clrf	??_si_read_t
  4789  02A5  0820               	movf	??_si_read_t,w
  4790  02A6  00A4               	movwf	si_read_t@rta
  4791  02A7  0821               	movf	??_si_read_t+1,w
  4792  02A8  00A5               	movwf	si_read_t@rta+1
  4793                           
  4794                           ;si7021.c: 50: rta += rta_l;
  4795  02A9  0823               	movf	si_read_t@rta_l,w
  4796  02AA  00A0               	movwf	??_si_read_t
  4797  02AB  01A1               	clrf	??_si_read_t+1
  4798  02AC  0820               	movf	??_si_read_t,w
  4799  02AD  07A4               	addwf	si_read_t@rta,f
  4800  02AE  1803               	skipnc
  4801  02AF  0AA5               	incf	si_read_t@rta+1,f
  4802  02B0  0821               	movf	??_si_read_t+1,w
  4803  02B1  07A5               	addwf	si_read_t@rta+1,f
  4804                           
  4805                           ;si7021.c: 51: return rta;
  4806  02B2  0825               	movf	si_read_t@rta+1,w
  4807  02B3  00FC               	movwf	?_si_read_t+1
  4808  02B4  0824               	movf	si_read_t@rta,w
  4809  02B5  00FB               	movwf	?_si_read_t
  4810  02B6  0008               	return
  4811  02B7                     __end_of_si_read_t:	
  4812                           
  4813                           	psect	text27
  4814  036F                     __ptext27:	
  4815 ;; *************** function _si_read_h *****************
  4816 ;; Defined at:
  4817 ;;		line 20 in file "si7021.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  rta             2    4[BANK0 ] unsigned int 
  4822 ;;  rta_l           1    3[BANK0 ] unsigned char 
  4823 ;;  rta_h           1    2[BANK0 ] unsigned char 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  2   10[COMMON] int 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0, pclath, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4833 ;;      Params:         2       0       0       0       0
  4834 ;;      Locals:         0       4       0       0       0
  4835 ;;      Temps:          0       2       0       0       0
  4836 ;;      Totals:         2       6       0       0       0
  4837 ;;Total ram usage:        8 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    1
  4840 ;; This function calls:
  4841 ;;		_i2c_rstart
  4842 ;;		i1_i2c_read
  4843 ;;		i1_i2c_start
  4844 ;;		i1_i2c_stop
  4845 ;;		i1_i2c_write
  4846 ;; This function is called by:
  4847 ;;		_to_work
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           
  4852                           ;psect for function _si_read_h
  4853  036F                     _si_read_h:	
  4854                           
  4855                           ;si7021.c: 21: unsigned int rta = 0;
  4856                           
  4857                           ;incstack = 0
  4858                           ; Regs used in _si_read_h: [wreg+status,2+status,0+pclath+cstack]
  4859  036F  1283               	bcf	3,5	;RP0=0, select bank0
  4860  0370  1303               	bcf	3,6	;RP1=0, select bank0
  4861  0371  01A4               	clrf	si_read_h@rta
  4862  0372  01A5               	clrf	si_read_h@rta+1
  4863                           
  4864                           ;si7021.c: 22: unsigned char rta_h,rta_l;
  4865                           ;si7021.c: 23: i2c_start();
  4866  0373  120A  158A  2646  120A  118A  	fcall	i1_i2c_start
  4867                           
  4868                           ;si7021.c: 24: i2c_write(0x80,1);
  4869  0378  01F1               	clrf	i1i2c_write@ack
  4870  0379  0AF1               	incf	i1i2c_write@ack,f
  4871  037A  3080               	movlw	128
  4872  037B  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4873                           
  4874                           ;si7021.c: 25: i2c_write(0xE5,1);
  4875  0380  01F1               	clrf	i1i2c_write@ack
  4876  0381  0AF1               	incf	i1i2c_write@ack,f
  4877  0382  30E5               	movlw	229
  4878  0383  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4879                           
  4880                           ;si7021.c: 26: i2c_rstart();
  4881  0388  120A  158A  2623  120A  118A  	fcall	_i2c_rstart
  4882                           
  4883                           ;si7021.c: 27: i2c_write(0x81,1);
  4884  038D  01F1               	clrf	i1i2c_write@ack
  4885  038E  0AF1               	incf	i1i2c_write@ack,f
  4886  038F  3081               	movlw	129
  4887  0390  120A  158A  26B3  120A  118A  	fcall	i1_i2c_write
  4888                           
  4889                           ;si7021.c: 28: rta_h = i2c_read(0);
  4890  0395  3000               	movlw	0
  4891  0396  120A  118A  2047  120A  118A  	fcall	i1_i2c_read
  4892  039B  1283               	bcf	3,5	;RP0=0, select bank0
  4893  039C  1303               	bcf	3,6	;RP1=0, select bank0
  4894  039D  00A0               	movwf	??_si_read_h
  4895  039E  0820               	movf	??_si_read_h,w
  4896  039F  00A2               	movwf	si_read_h@rta_h
  4897                           
  4898                           ;si7021.c: 29: rta_l = i2c_read(0);
  4899  03A0  3000               	movlw	0
  4900  03A1  120A  118A  2047  120A  118A  	fcall	i1_i2c_read
  4901  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  4902  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  4903  03A8  00A0               	movwf	??_si_read_h
  4904  03A9  0820               	movf	??_si_read_h,w
  4905  03AA  00A3               	movwf	si_read_h@rta_l
  4906                           
  4907                           ;si7021.c: 30: i2c_stop();
  4908  03AB  120A  158A  2669   	fcall	i1_i2c_stop
  4909                           
  4910                           ;si7021.c: 31: rta = rta_h;
  4911  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  4912  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  4913  03B0  0822               	movf	si_read_h@rta_h,w
  4914  03B1  00A0               	movwf	??_si_read_h
  4915  03B2  01A1               	clrf	??_si_read_h+1
  4916  03B3  0820               	movf	??_si_read_h,w
  4917  03B4  00A4               	movwf	si_read_h@rta
  4918  03B5  0821               	movf	??_si_read_h+1,w
  4919  03B6  00A5               	movwf	si_read_h@rta+1
  4920                           
  4921                           ;si7021.c: 32: rta = rta << 8;
  4922  03B7  0824               	movf	si_read_h@rta,w
  4923  03B8  00A1               	movwf	??_si_read_h+1
  4924  03B9  01A0               	clrf	??_si_read_h
  4925  03BA  0820               	movf	??_si_read_h,w
  4926  03BB  00A4               	movwf	si_read_h@rta
  4927  03BC  0821               	movf	??_si_read_h+1,w
  4928  03BD  00A5               	movwf	si_read_h@rta+1
  4929                           
  4930                           ;si7021.c: 33: rta += rta_l;
  4931  03BE  0823               	movf	si_read_h@rta_l,w
  4932  03BF  00A0               	movwf	??_si_read_h
  4933  03C0  01A1               	clrf	??_si_read_h+1
  4934  03C1  0820               	movf	??_si_read_h,w
  4935  03C2  07A4               	addwf	si_read_h@rta,f
  4936  03C3  1803               	skipnc
  4937  03C4  0AA5               	incf	si_read_h@rta+1,f
  4938  03C5  0821               	movf	??_si_read_h+1,w
  4939  03C6  07A5               	addwf	si_read_h@rta+1,f
  4940                           
  4941                           ;si7021.c: 34: return rta;
  4942  03C7  0825               	movf	si_read_h@rta+1,w
  4943  03C8  00FC               	movwf	?_si_read_h+1
  4944  03C9  0824               	movf	si_read_h@rta,w
  4945  03CA  00FB               	movwf	?_si_read_h
  4946  03CB  0008               	return
  4947  03CC                     __end_of_si_read_h:	
  4948                           
  4949                           	psect	text28
  4950  0EB3                     __ptext28:	
  4951 ;; *************** function i1_i2c_write *****************
  4952 ;; Defined at:
  4953 ;;		line 39 in file "i2clib.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  datum           1    wreg     unsigned char 
  4956 ;;  ack             1    0[COMMON] unsigned char 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  datum           1    9[COMMON] unsigned char 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      unsigned char 
  4961 ;; Registers used:
  4962 ;;		wreg, status,2, status,0
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4968 ;;      Params:         1       0       0       0       0
  4969 ;;      Locals:         1       0       0       0       0
  4970 ;;      Temps:          8       0       0       0       0
  4971 ;;      Totals:        10       0       0       0       0
  4972 ;;Total ram usage:       10 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_si_read_h
  4978 ;;		_si_read_t
  4979 ;;		i1_mem_write
  4980 ;;		i1_mem_read
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           
  4985                           ;psect for function i1_i2c_write
  4986  0EB3                     i1_i2c_write:	
  4987                           
  4988                           ;incstack = 0
  4989                           ; Regs used in i1_i2c_write: [wreg+status,2+status,0]
  4990                           ;i1i2c_write@datum stored from wreg
  4991  0EB3  00FA               	movwf	i1i2c_write@datum
  4992  0EB4                     i1l1520:	
  4993                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  4994                           
  4995  0EB4  1683               	bsf	3,5	;RP0=1, select bank1
  4996  0EB5  1303               	bcf	3,6	;RP1=0, select bank1
  4997  0EB6  0811               	movf	17,w	;volatile
  4998  0EB7  3901               	andlw	1
  4999  0EB8  00F2               	movwf	??i1_i2c_write
  5000  0EB9  0C11               	rrf	17,w	;volatile
  5001  0EBA  3901               	andlw	1
  5002  0EBB  00F3               	movwf	??i1_i2c_write+1
  5003  0EBC  0C11               	rrf	17,w	;volatile
  5004  0EBD  00F4               	movwf	??i1_i2c_write+2
  5005  0EBE  0CF4               	rrf	??i1_i2c_write+2,f
  5006  0EBF  0C74               	rrf	??i1_i2c_write+2,w
  5007  0EC0  3901               	andlw	1
  5008  0EC1  00F5               	movwf	??i1_i2c_write+3
  5009  0EC2  0E11               	swapf	17,w	;volatile
  5010  0EC3  3901               	andlw	1
  5011  0EC4  00F6               	movwf	??i1_i2c_write+4
  5012  0EC5  0C11               	rrf	17,w	;volatile
  5013  0EC6  00F7               	movwf	??i1_i2c_write+5
  5014  0EC7  0C77               	rrf	??i1_i2c_write+5,w
  5015  0EC8  3901               	andlw	1
  5016  0EC9  00F8               	movwf	??i1_i2c_write+6
  5017  0ECA  0C14               	rrf	20,w	;volatile
  5018  0ECB  00F9               	movwf	??i1_i2c_write+7
  5019  0ECC  0C79               	rrf	??i1_i2c_write+7,w
  5020  0ECD  3901               	andlw	1
  5021  0ECE  0478               	iorwf	??i1_i2c_write+6,w
  5022  0ECF  0476               	iorwf	??i1_i2c_write+4,w
  5023  0ED0  0475               	iorwf	??i1_i2c_write+3,w
  5024  0ED1  0473               	iorwf	??i1_i2c_write+1,w
  5025  0ED2  0472               	iorwf	??i1_i2c_write,w
  5026  0ED3  1D03               	btfss	3,2
  5027  0ED4  2EB4               	goto	i1l1520
  5028                           
  5029                           ;i2clib.c: 42: SSPBUF = datum;
  5030  0ED5  087A               	movf	i1i2c_write@datum,w
  5031  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  5032  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  5033  0ED8  0093               	movwf	19	;volatile
  5034  0ED9                     i1l169:	
  5035                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  5036                           
  5037  0ED9  1683               	bsf	3,5	;RP0=1, select bank1
  5038  0EDA  1303               	bcf	3,6	;RP1=0, select bank1
  5039  0EDB  1814               	btfsc	20,0	;volatile
  5040  0EDC  2ED9               	goto	i1l169
  5041                           
  5042                           ;i2clib.c: 44: if(ack){
  5043  0EDD  0871               	movf	i1i2c_write@ack,w
  5044  0EDE  1903               	btfsc	3,2
  5045  0EDF  2EE2               	goto	i1l176
  5046  0EE0                     i1l173:	
  5047                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  5048                           
  5049  0EE0  1B11               	btfsc	17,6	;volatile
  5050  0EE1  2EE0               	goto	i1l173
  5051  0EE2                     i1l176:	
  5052                           ;i2clib.c: 46: }
  5053                           ;i2clib.c: 47: }
  5054                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  5055                           
  5056  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  5057  0EE3  198C               	btfsc	12,3	;volatile
  5058  0EE4  0008               	return
  5059  0EE5  2EE2               	goto	i1l176
  5060  0EE6                     __end_ofi1_i2c_write:	
  5061                           
  5062                           	psect	text29
  5063  0E69                     __ptext29:	
  5064 ;; *************** function i1_i2c_stop *****************
  5065 ;; Defined at:
  5066 ;;		line 34 in file "i2clib.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;		None
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;		None
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2, status,0
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5080 ;;      Params:         0       0       0       0       0
  5081 ;;      Locals:         0       0       0       0       0
  5082 ;;      Temps:          8       0       0       0       0
  5083 ;;      Totals:         8       0       0       0       0
  5084 ;;Total ram usage:        8 bytes
  5085 ;; Hardware stack levels used:    1
  5086 ;; This function calls:
  5087 ;;		Nothing
  5088 ;; This function is called by:
  5089 ;;		_si_read_h
  5090 ;;		_si_read_t
  5091 ;;		i1_mem_write
  5092 ;;		i1_mem_read
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function i1_i2c_stop
  5098  0E69                     i1_i2c_stop:	
  5099  0E69                     i1l1516:	
  5100                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5101                           
  5102                           ;incstack = 0
  5103                           ; Regs used in i1_i2c_stop: [wreg+status,2+status,0]
  5104                           
  5105  0E69  1683               	bsf	3,5	;RP0=1, select bank1
  5106  0E6A  1303               	bcf	3,6	;RP1=0, select bank1
  5107  0E6B  0811               	movf	17,w	;volatile
  5108  0E6C  3901               	andlw	1
  5109  0E6D  00F1               	movwf	??i1_i2c_stop
  5110  0E6E  0C11               	rrf	17,w	;volatile
  5111  0E6F  3901               	andlw	1
  5112  0E70  00F2               	movwf	??i1_i2c_stop+1
  5113  0E71  0C11               	rrf	17,w	;volatile
  5114  0E72  00F3               	movwf	??i1_i2c_stop+2
  5115  0E73  0CF3               	rrf	??i1_i2c_stop+2,f
  5116  0E74  0C73               	rrf	??i1_i2c_stop+2,w
  5117  0E75  3901               	andlw	1
  5118  0E76  00F4               	movwf	??i1_i2c_stop+3
  5119  0E77  0E11               	swapf	17,w	;volatile
  5120  0E78  3901               	andlw	1
  5121  0E79  00F5               	movwf	??i1_i2c_stop+4
  5122  0E7A  0C11               	rrf	17,w	;volatile
  5123  0E7B  00F6               	movwf	??i1_i2c_stop+5
  5124  0E7C  0C76               	rrf	??i1_i2c_stop+5,w
  5125  0E7D  3901               	andlw	1
  5126  0E7E  00F7               	movwf	??i1_i2c_stop+6
  5127  0E7F  0C14               	rrf	20,w	;volatile
  5128  0E80  00F8               	movwf	??i1_i2c_stop+7
  5129  0E81  0C78               	rrf	??i1_i2c_stop+7,w
  5130  0E82  3901               	andlw	1
  5131  0E83  0477               	iorwf	??i1_i2c_stop+6,w
  5132  0E84  0475               	iorwf	??i1_i2c_stop+4,w
  5133  0E85  0474               	iorwf	??i1_i2c_stop+3,w
  5134  0E86  0472               	iorwf	??i1_i2c_stop+1,w
  5135  0E87  0471               	iorwf	??i1_i2c_stop,w
  5136  0E88  1D03               	btfss	3,2
  5137  0E89  2E69               	goto	i1l1516
  5138                           
  5139                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  5140  0E8A  1511               	bsf	17,2	;volatile
  5141  0E8B  0008               	return
  5142  0E8C                     __end_ofi1_i2c_stop:	
  5143                           
  5144                           	psect	text30
  5145  0E46                     __ptext30:	
  5146 ;; *************** function i1_i2c_start *****************
  5147 ;; Defined at:
  5148 ;;		line 24 in file "i2clib.c"
  5149 ;; Parameters:    Size  Location     Type
  5150 ;;		None
  5151 ;; Auto vars:     Size  Location     Type
  5152 ;;		None
  5153 ;; Return value:  Size  Location     Type
  5154 ;;                  1    wreg      void 
  5155 ;; Registers used:
  5156 ;;		wreg, status,2, status,0
  5157 ;; Tracked objects:
  5158 ;;		On entry : 0/0
  5159 ;;		On exit  : 0/0
  5160 ;;		Unchanged: 0/0
  5161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5162 ;;      Params:         0       0       0       0       0
  5163 ;;      Locals:         0       0       0       0       0
  5164 ;;      Temps:          8       0       0       0       0
  5165 ;;      Totals:         8       0       0       0       0
  5166 ;;Total ram usage:        8 bytes
  5167 ;; Hardware stack levels used:    1
  5168 ;; This function calls:
  5169 ;;		Nothing
  5170 ;; This function is called by:
  5171 ;;		_si_read_h
  5172 ;;		_si_read_t
  5173 ;;		i1_mem_write
  5174 ;;		i1_mem_read
  5175 ;; This function uses a non-reentrant model
  5176 ;;
  5177                           
  5178                           
  5179                           ;psect for function i1_i2c_start
  5180  0E46                     i1_i2c_start:	
  5181  0E46                     i1l1512:	
  5182                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5183                           
  5184                           ;incstack = 0
  5185                           ; Regs used in i1_i2c_start: [wreg+status,2+status,0]
  5186                           
  5187  0E46  1683               	bsf	3,5	;RP0=1, select bank1
  5188  0E47  1303               	bcf	3,6	;RP1=0, select bank1
  5189  0E48  0811               	movf	17,w	;volatile
  5190  0E49  3901               	andlw	1
  5191  0E4A  00F1               	movwf	??i1_i2c_start
  5192  0E4B  0C11               	rrf	17,w	;volatile
  5193  0E4C  3901               	andlw	1
  5194  0E4D  00F2               	movwf	??i1_i2c_start+1
  5195  0E4E  0C11               	rrf	17,w	;volatile
  5196  0E4F  00F3               	movwf	??i1_i2c_start+2
  5197  0E50  0CF3               	rrf	??i1_i2c_start+2,f
  5198  0E51  0C73               	rrf	??i1_i2c_start+2,w
  5199  0E52  3901               	andlw	1
  5200  0E53  00F4               	movwf	??i1_i2c_start+3
  5201  0E54  0E11               	swapf	17,w	;volatile
  5202  0E55  3901               	andlw	1
  5203  0E56  00F5               	movwf	??i1_i2c_start+4
  5204  0E57  0C11               	rrf	17,w	;volatile
  5205  0E58  00F6               	movwf	??i1_i2c_start+5
  5206  0E59  0C76               	rrf	??i1_i2c_start+5,w
  5207  0E5A  3901               	andlw	1
  5208  0E5B  00F7               	movwf	??i1_i2c_start+6
  5209  0E5C  0C14               	rrf	20,w	;volatile
  5210  0E5D  00F8               	movwf	??i1_i2c_start+7
  5211  0E5E  0C78               	rrf	??i1_i2c_start+7,w
  5212  0E5F  3901               	andlw	1
  5213  0E60  0477               	iorwf	??i1_i2c_start+6,w
  5214  0E61  0475               	iorwf	??i1_i2c_start+4,w
  5215  0E62  0474               	iorwf	??i1_i2c_start+3,w
  5216  0E63  0472               	iorwf	??i1_i2c_start+1,w
  5217  0E64  0471               	iorwf	??i1_i2c_start,w
  5218  0E65  1D03               	btfss	3,2
  5219  0E66  2E46               	goto	i1l1512
  5220                           
  5221                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  5222  0E67  1411               	bsf	17,0	;volatile
  5223  0E68  0008               	return
  5224  0E69                     __end_ofi1_i2c_start:	
  5225                           
  5226                           	psect	text31
  5227  0047                     __ptext31:	
  5228 ;; *************** function i1_i2c_read *****************
  5229 ;; Defined at:
  5230 ;;		line 51 in file "i2clib.c"
  5231 ;; Parameters:    Size  Location     Type
  5232 ;;  ack             1    wreg     unsigned char 
  5233 ;; Auto vars:     Size  Location     Type
  5234 ;;  ack             1    8[COMMON] unsigned char 
  5235 ;;  i2c_read        1    9[COMMON] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      unsigned char 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5245 ;;      Params:         0       0       0       0       0
  5246 ;;      Locals:         2       0       0       0       0
  5247 ;;      Temps:          8       0       0       0       0
  5248 ;;      Totals:        10       0       0       0       0
  5249 ;;Total ram usage:       10 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_si_read_h
  5255 ;;		_si_read_t
  5256 ;;		i1_mem_read
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           
  5261                           ;psect for function i1_i2c_read
  5262  0047                     i1_i2c_read:	
  5263                           
  5264                           ;incstack = 0
  5265                           ; Regs used in i1_i2c_read: [wreg+status,2+status,0]
  5266                           ;i1i2c_read@ack stored from wreg
  5267  0047  00F9               	movwf	i1i2c_read@ack
  5268                           
  5269                           ;i2clib.c: 52: unsigned char resp;
  5270                           ;i2clib.c: 53: static bit flag;
  5271                           ;i2clib.c: 54: flag = ack & 0x01;
  5272  0048  1283               	bcf	3,5	;RP0=0, select bank0
  5273  0049  1303               	bcf	3,6	;RP1=0, select bank0
  5274  004A  104B               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  5275  004B  1879               	btfsc	i1i2c_read@ack,0
  5276  004C  144B               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  5277  004D                     i1l1530:	
  5278                           ;i2clib.c: 55: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5279                           
  5280  004D  1683               	bsf	3,5	;RP0=1, select bank1
  5281  004E  1303               	bcf	3,6	;RP1=0, select bank1
  5282  004F  0811               	movf	17,w	;volatile
  5283  0050  3901               	andlw	1
  5284  0051  00F1               	movwf	??i1_i2c_read
  5285  0052  0C11               	rrf	17,w	;volatile
  5286  0053  3901               	andlw	1
  5287  0054  00F2               	movwf	??i1_i2c_read+1
  5288  0055  0C11               	rrf	17,w	;volatile
  5289  0056  00F3               	movwf	??i1_i2c_read+2
  5290  0057  0CF3               	rrf	??i1_i2c_read+2,f
  5291  0058  0C73               	rrf	??i1_i2c_read+2,w
  5292  0059  3901               	andlw	1
  5293  005A  00F4               	movwf	??i1_i2c_read+3
  5294  005B  0E11               	swapf	17,w	;volatile
  5295  005C  3901               	andlw	1
  5296  005D  00F5               	movwf	??i1_i2c_read+4
  5297  005E  0C11               	rrf	17,w	;volatile
  5298  005F  00F6               	movwf	??i1_i2c_read+5
  5299  0060  0C76               	rrf	??i1_i2c_read+5,w
  5300  0061  3901               	andlw	1
  5301  0062  00F7               	movwf	??i1_i2c_read+6
  5302  0063  0C14               	rrf	20,w	;volatile
  5303  0064  00F8               	movwf	??i1_i2c_read+7
  5304  0065  0C78               	rrf	??i1_i2c_read+7,w
  5305  0066  3901               	andlw	1
  5306  0067  0477               	iorwf	??i1_i2c_read+6,w
  5307  0068  0475               	iorwf	??i1_i2c_read+4,w
  5308  0069  0474               	iorwf	??i1_i2c_read+3,w
  5309  006A  0472               	iorwf	??i1_i2c_read+1,w
  5310  006B  0471               	iorwf	??i1_i2c_read,w
  5311  006C  1D03               	btfss	3,2
  5312  006D  284D               	goto	i1l1530
  5313                           
  5314                           ;i2clib.c: 56: SSPCON2bits.RCEN = 1;
  5315  006E  1591               	bsf	17,3	;volatile
  5316  006F                     i1l187:	
  5317                           ;i2clib.c: 57: while(!SSPSTATbits.BF);
  5318                           
  5319  006F  1C14               	btfss	20,0	;volatile
  5320  0070  286F               	goto	i1l187
  5321  0071                     i1l190:	
  5322                           ;i2clib.c: 58: while(!PIR1bits.SSPIF);
  5323                           
  5324  0071  1283               	bcf	3,5	;RP0=0, select bank0
  5325  0072  1D8C               	btfss	12,3	;volatile
  5326  0073  2871               	goto	i1l190
  5327                           
  5328                           ;i2clib.c: 59: SSPCON2bits.ACKEN = flag;
  5329  0074  1C4B               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  5330  0075  287A               	goto	u121_20
  5331  0076  1683               	bsf	3,5	;RP0=1, select bank1
  5332  0077  1303               	bcf	3,6	;RP1=0, select bank1
  5333  0078  1611               	bsf	17,4	;volatile
  5334  0079  287D               	goto	i1l1532
  5335  007A                     u121_20:	
  5336  007A  1683               	bsf	3,5	;RP0=1, select bank1
  5337  007B  1303               	bcf	3,6	;RP1=0, select bank1
  5338  007C  1211               	bcf	17,4	;volatile
  5339  007D                     i1l1532:	
  5340                           
  5341                           ;i2clib.c: 60: resp = SSPBUF;
  5342  007D  1283               	bcf	3,5	;RP0=0, select bank0
  5343  007E  1303               	bcf	3,6	;RP1=0, select bank0
  5344  007F  0813               	movf	19,w	;volatile
  5345  0080  00F1               	movwf	??i1_i2c_read
  5346  0081  0871               	movf	??i1_i2c_read,w
  5347  0082  00FA               	movwf	i1i2c_read@resp
  5348  0083                     i1l193:	
  5349                           ;i2clib.c: 61: while(SSPSTATbits.BF);
  5350                           
  5351  0083  1683               	bsf	3,5	;RP0=1, select bank1
  5352  0084  1303               	bcf	3,6	;RP1=0, select bank1
  5353  0085  1814               	btfsc	20,0	;volatile
  5354  0086  2883               	goto	i1l193
  5355                           
  5356                           ;i2clib.c: 62: return resp;
  5357  0087  087A               	movf	i1i2c_read@resp,w
  5358  0088  0008               	return
  5359  0089                     __end_ofi1_i2c_read:	
  5360                           
  5361                           	psect	text32
  5362  0E23                     __ptext32:	
  5363 ;; *************** function _i2c_rstart *****************
  5364 ;; Defined at:
  5365 ;;		line 29 in file "i2clib.c"
  5366 ;; Parameters:    Size  Location     Type
  5367 ;;		None
  5368 ;; Auto vars:     Size  Location     Type
  5369 ;;		None
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  1    wreg      void 
  5372 ;; Registers used:
  5373 ;;		wreg, status,2, status,0
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5379 ;;      Params:         0       0       0       0       0
  5380 ;;      Locals:         0       0       0       0       0
  5381 ;;      Temps:          8       0       0       0       0
  5382 ;;      Totals:         8       0       0       0       0
  5383 ;;Total ram usage:        8 bytes
  5384 ;; Hardware stack levels used:    1
  5385 ;; This function calls:
  5386 ;;		Nothing
  5387 ;; This function is called by:
  5388 ;;		_si_read_h
  5389 ;;		_si_read_t
  5390 ;;		_ds_get
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           
  5395                           ;psect for function _i2c_rstart
  5396  0E23                     _i2c_rstart:	
  5397  0E23                     i1l1434:	
  5398                           ;i2clib.c: 30: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5399                           
  5400                           ;incstack = 0
  5401                           ; Regs used in _i2c_rstart: [wreg+status,2+status,0]
  5402                           
  5403  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  5404  0E24  1303               	bcf	3,6	;RP1=0, select bank1
  5405  0E25  0811               	movf	17,w	;volatile
  5406  0E26  3901               	andlw	1
  5407  0E27  00F1               	movwf	??_i2c_rstart
  5408  0E28  0C11               	rrf	17,w	;volatile
  5409  0E29  3901               	andlw	1
  5410  0E2A  00F2               	movwf	??_i2c_rstart+1
  5411  0E2B  0C11               	rrf	17,w	;volatile
  5412  0E2C  00F3               	movwf	??_i2c_rstart+2
  5413  0E2D  0CF3               	rrf	??_i2c_rstart+2,f
  5414  0E2E  0C73               	rrf	??_i2c_rstart+2,w
  5415  0E2F  3901               	andlw	1
  5416  0E30  00F4               	movwf	??_i2c_rstart+3
  5417  0E31  0E11               	swapf	17,w	;volatile
  5418  0E32  3901               	andlw	1
  5419  0E33  00F5               	movwf	??_i2c_rstart+4
  5420  0E34  0C11               	rrf	17,w	;volatile
  5421  0E35  00F6               	movwf	??_i2c_rstart+5
  5422  0E36  0C76               	rrf	??_i2c_rstart+5,w
  5423  0E37  3901               	andlw	1
  5424  0E38  00F7               	movwf	??_i2c_rstart+6
  5425  0E39  0C14               	rrf	20,w	;volatile
  5426  0E3A  00F8               	movwf	??_i2c_rstart+7
  5427  0E3B  0C78               	rrf	??_i2c_rstart+7,w
  5428  0E3C  3901               	andlw	1
  5429  0E3D  0477               	iorwf	??_i2c_rstart+6,w
  5430  0E3E  0475               	iorwf	??_i2c_rstart+4,w
  5431  0E3F  0474               	iorwf	??_i2c_rstart+3,w
  5432  0E40  0472               	iorwf	??_i2c_rstart+1,w
  5433  0E41  0471               	iorwf	??_i2c_rstart,w
  5434  0E42  1D03               	btfss	3,2
  5435  0E43  2E23               	goto	i1l1434
  5436                           
  5437                           ;i2clib.c: 31: SSPCON2bits.RSEN = 1;
  5438  0E44  1491               	bsf	17,1	;volatile
  5439  0E45  0008               	return
  5440  0E46                     __end_of_i2c_rstart:	
  5441  007E                     btemp	set	126	;btemp
  5442  007E                     wtemp0	set	126


Data Sizes:
    Strings     37
    Constant    18
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     13      13
    BANK0            80     43      48
    BANK1            80      9       9
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_3(CODE[7]), STR_2(CODE[6]), STR_1(CODE[7]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ints_isr in COMMON

    _give_all->i1_mem_read
    _printf->___lwmod
    ___lwmod->___lwdiv
    _clear_mem->i1_mem_write
    _to_work->i1_mem_read
    _to_work->i1_mem_write
    i1_mem_write->i1_i2c_write
    i1_mem_read->i1_i2c_read
    i1_mem_read->i1_i2c_write
    _si_read_t->i1_i2c_read
    _si_read_t->i1_i2c_write
    _si_read_h->i1_i2c_read
    _si_read_h->i1_i2c_write

Critical Paths under _main in BANK0

    _si_reset->_i2c_write
    _mem_init->_mem_read
    _mem_init->_mem_write
    _mem_write->_i2c_write
    _mem_read->_i2c_read
    _mem_read->_i2c_write

Critical Paths under _ints_isr in BANK0

    _ints_isr->_uart_isr
    _uart_isr->_give_all
    _give_all->_printf
    _printf->___lwmod
    _clear_mem->i1_mem_write
    _tmr2_isr->_to_work
    _to_work->_si_read_h
    _to_work->_si_read_t

Critical Paths under _main in BANK1

    _main->_mem_init
    _mem_init->_mem_read
    _mem_init->_mem_write

Critical Paths under _ints_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ints_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ints_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7767
                                              7 BANK1      2     2      0
                           _i2c_init
                        _init_timer2
                           _mem_init
                           _si_reset
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _si_reset                                             0     0      0    1700
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _mem_init                                             2     2      0    5847
                                              5 BANK1      2     2      0
                           _mem_read
                          _mem_write
 ---------------------------------------------------------------------------------
 (2) _mem_write                                            6     3      3    3387
                                             42 BANK0      1     1      0
                                              0 BANK1      5     2      3
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _mem_read                                             6     4      2    2426
                                             42 BANK0      1     1      0
                                              0 BANK1      5     3      2
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                           10     9      1    1700
                                             32 BANK0     10     9      1
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             8     8      0       0
                                             32 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            8     8      0       0
                                             32 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                            10    10      0      65
                                             32 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) _init_timer2                                          6     4      2     220
                                             32 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ints_isr                                             4     4      0    8026
                                             28 BANK0      4     4      0
                           _tmr2_isr
                           _uart_isr
 ---------------------------------------------------------------------------------
 (5) _uart_isr                                             2     2      0    4319
                                             26 BANK0      2     2      0
                          _clear_mem
                           _give_all
 ---------------------------------------------------------------------------------
 (6) _give_all                                            10    10      0    3255
                                             16 BANK0     10    10      0
                             _printf
                         i1_mem_read
 ---------------------------------------------------------------------------------
 (7) _printf                                              23    21      2    2102
                                              1 BANK0     15    13      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lwmod                                              6     2      4     287
                                              8 COMMON     5     1      4
                                              0 BANK0      1     1      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___lwdiv                                              8     4      4     418
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (6) _clear_mem                                            0     0      0    1040
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) _tmr2_isr                                             1     1      0    3707
                                             19 BANK0      1     1      0
                            _to_work
 ---------------------------------------------------------------------------------
 (6) _to_work                                             13    13      0    3707
                                              6 BANK0     13    13      0
                          _si_read_h
                          _si_read_t
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (7) i1_mem_write                                          6     3      3    1040
                                             10 COMMON     3     0      3
                                              0 BANK0      3     3      0
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (7) i1_mem_read                                           6     4      2     878
                                             10 COMMON     3     1      2
                                              0 BANK0      3     3      0
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (7) _si_read_t                                            8     6      2     598
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (7) _si_read_h                                            8     6      2     599
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (8) i1_i2c_write                                         10     9      1     460
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (8) i1_i2c_stop                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (8) i1_i2c_start                                          8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (8) i1_i2c_read                                          10    10      0      45
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (8) _i2c_rstart                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _init_timer2
   _mem_init
     _mem_read
       _i2c_read
       _i2c_start
       _i2c_stop
       _i2c_write
     _mem_write
       _i2c_start
       _i2c_stop
       _i2c_write
   _si_reset
     _i2c_start
     _i2c_stop
     _i2c_write
   _uart_init

 _ints_isr (ROOT)
   _tmr2_isr
     _to_work
       _si_read_h
         _i2c_rstart
         i1_i2c_read
         i1_i2c_start
         i1_i2c_stop
         i1_i2c_write
       _si_read_t
         _i2c_rstart
         i1_i2c_read
         i1_i2c_start
         i1_i2c_stop
         i1_i2c_write
       i1_mem_read
         i1_i2c_read
         i1_i2c_start
         i1_i2c_stop
         i1_i2c_write
       i1_mem_write
         i1_i2c_start
         i1_i2c_stop
         i1_i2c_write
   _uart_isr
     _clear_mem
       i1_mem_write
         i1_i2c_start
         i1_i2c_stop
         i1_i2c_write
     _give_all
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
         _putch
       i1_mem_read
         i1_i2c_read
         i1_i2c_start
         i1_i2c_stop
         i1_i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      9       9       7       11.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2B      30       5       60.0%
BITBANK0            50      0       1       4        1.3%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      D       D       1      100.0%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      46      12        0.0%
ABS                  0      0      46       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Aug 29 05:57:25 2017

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      fsr 0004       ___wmul@multiplicand 0073            si_read_h@rta_h 0022  
          si_read_h@rta_l 0023                       l125 0205                       l173 015C  
                     l190 02F9                       l176 0160                       l193 030B  
                     l169 0153                       l187 02F7                       _PR2 0092  
            __CFG_CPD$OFF 0000                       _led 004F                       fsr0 0004  
          si_read_t@rta_h 0022                       indf 0000            si_read_t@rta_l 0023  
            __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000                      l2072 0F89  
              i1_mem_read 0089                      l2068 0F4E                      l2076 011A  
                    l2086 02BD                      l2088 0305                      STR_1 0829  
                    STR_2 0837                      STR_3 0830                      STR_4 0818  
                    u1715 0E99                      u1880 0302                      u1957 01D6  
                    u1967 01EB                      i1l70 0D83                      i1l81 04AF  
                    i1l94 0F30                      i1l95 0F4C                      i1l97 0F37  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 01B4  
                    _secs 004C                      btemp 007E                      start 0012  
           __CFG_MCLRE$ON 0000                     ?_main 0071             __CFG_WDTE$OFF 0000  
             i2c_read@ack 0048                     _T2CON 0012               i1_mem_write 00CF  
         __end_of___lwdiv 1000                     i1l104 0038                     i1l113 0DF5  
                   i1l300 0715                     i1l321 07F3                     i1l173 0EE0  
                   i1l405 0E0C                     i1l190 0071                     i1l176 0EE2  
                   i1l272 0614                     i1l193 0083                     i1l169 0ED9  
         __end_of___lwmod 0F1A                     i1l187 006F                     i1l291 06B6  
                   i1l284 068D                     i1l285 0671                     i1l296 06DA  
                   _RCREG 001A                     _SPBRG 0099                     _TRISA 0085  
                   _TRISB 0086                     u94_25 0E0D                     u95_25 0E14  
                   _TXREG 0019                     u98_25 0FCF              ?_init_timer2 0040  
             give_all@add 0034               give_all@aux 0038           __end_of_dpowers 0810  
                   _milis 004E           __end_of_isdigit 0DA1               ?i1_i2c_read 0071  
             ?i1_i2c_stop 0071                     _putch 0D82            __CFG_BOREN$OFF 0000  
                   pclath 000A           __end_of_to_work 05EA                     status 0003  
                   wtemp0 007E           __initialization 07F4              __end_of_main 0206  
              _i2c_rstart 0E23          __end_of_i2c_init 0DB0          __end_of_i2c_read 0313  
        __end_of_i2c_stop 0FC4           to_work@temp_add 002E           to_work@temp_val 002A  
                  ??_main 00A7               mem_init@aux 00A6               mem_read@add 00A0  
             mem_read@rta 00A2               ?i1_mem_read 007B                    ?_putch 0071  
            i2c_read@flag 0258                    u100_25 0FDB                    u101_25 0FE7  
                  u102_25 0FF1                    i1l2016 0DEB                    i1l1502 0F0A  
                  i1l1512 0E46                    i1l1520 0EB4                    i1l1434 0E23  
                  i1l1530 004D                    i1l1506 0F15                    i1l1450 0E04  
                  i1l1532 007D                    i1l1516 0E69                    i1l1444 0D9F  
                  i1l1604 06FE                    i1l1630 075D                    i1l1622 0744  
                  i1l1614 0734                    i1l1606 0707                    i1l1550 0619  
                  u121_20 007A                    i1l1480 0FF0                    i1l1472 0FCC  
                  i1l1640 0780                    i1l1616 0738                    i1l1552 0624  
                  i1l1544 060E                    i1l1474 0FDA                    i1l1642 07AE  
                  i1l1650 07DA                    i1l1634 076F                    i1l1484 0FFB  
                  i1l1652 07E0                    i1l1628 0759                    i1l1556 0636  
                  u105_25 0EF1                    i1l1638 0779                    i1l1566 0673  
                  i1l1654 05F1                    i1l1830 0406              i2c_read@resp 0049  
                  i1l1496 0EEE                    i1l1498 0EFC                    i1l1578 06A9  
                  u130_25 06D3                    i1l1944 0F3D                    i1l1948 0F41  
                  u107_25 0F02                    i1l1958 0029                    i1l1968 0039  
                  i1l1976 0045                    u108_25 0F0B                    u133_25 06F7  
                  _INTCON 000B                    u137_25 0724                    u163_25 040C  
                  _OSCCON 008F                    _SPBRGH 009A                    _SSPADD 0093  
                  _SSPBUF 0013        __size_of_i2c_start 003B        __size_of_i2c_write 004D  
          __CFG_PWRTE$OFF 0000                    ___wmul 0E02          __end_of_give_all 04B1  
               ??___lwdiv 0075                 ??___lwmod 007D          __end_of_mem_init 01B4  
        __end_of_mem_read 025E       __size_ofi1_i2c_read 0042       __size_ofi1_i2c_stop 0023  
                  _printf 05EA              ?i1_i2c_start 0071          __end_of_ints_isr 0E02  
            ?i1_i2c_write 0071          __end_of_tmr2_isr 0047          __end_of_si_reset 0DE4  
               ??_isdigit 0071          __end_of_uart_isr 0F4E                    saved_w 007E  
               ??_to_work 0026              i2c_write@ack 0040   __end_of__initialization 07FC  
          i1i2c_read@resp 007A            __pcstackCOMMON 0071               ?_i2c_rstart 0071  
            __pidataBANK0 001B             __end_of_putch 0D8A       __size_ofi1_mem_read 0046  
      __size_of_clear_mem 0009          i1i2c_write@datum 007A         __end_of_i2c_start 0F89  
       __end_of_i2c_write 0164      __size_of_init_timer2 0027                   ??_putch 0071  
              __pbssBANK0 004C                 ?_i2c_init 0071                 ?_i2c_read 0071  
               ?_i2c_stop 0071            i1i2c_write@ack 0071        __size_of_mem_write 005C  
              __pmaintext 01B4                   ?___wmul 0071                __pintentry 0004  
      __size_of_si_read_h 005D        __size_of_si_read_t 0059                   ?_printf 0021  
            ?i1_mem_write 007B        __size_of_uart_init 0017              ??i1_i2c_read 0071  
            ??i1_i2c_stop 0071       __size_of_i2c_rstart 0023                __stringtab 0800  
               ?_give_all 0071                ??_i2c_init 0040                ??_i2c_read 0040  
               ?_mem_init 0071                 ?_mem_read 00A0                ??_i2c_stop 0040  
       __end_of_clear_mem 0D93                 ?_ints_isr 0071                 ?_tmr2_isr 0071  
               ?_si_reset 0071                 ?_uart_isr 0071           __size_of___wmul 0021  
                 ___lwdiv 0FC4                   ___lwmod 0EE6              mem_write@add 00A0  
               _ANSELbits 0188        __end_ofi1_i2c_read 0089        __end_ofi1_i2c_stop 0E8C  
                 __ptext1 0DB0                   __ptext2 0DC7                   __ptext3 0164  
                 __ptext4 0313                   __ptext5 0206                   __ptext6 0117  
                 __ptext7 0F89                   __ptext8 0F4E                   __ptext9 02B7  
         __size_of_printf 020A         __end_of_hexpowers 0818                   _dpowers 0806  
       __end_of_mem_write 036F                   _isdigit 0D93      __size_ofi1_i2c_start 0023  
    __size_ofi1_i2c_write 0033                   _to_work 04B1              ??i1_mem_read 007D  
    end_of_initialization 07FC                ??_give_all 0030         __end_of_si_read_h 03CC  
       __end_of_si_read_t 02B7                ??_mem_init 00A5                ??_mem_read 004A  
              ??_ints_isr 003C         __end_of_uart_init 0DC7                ??_tmr2_isr 0033  
              ??_si_reset 004A                 _RCSTAbits 0018                ??_uart_isr 003A  
                 printf@c 002F                   printf@f 002B        __end_ofi1_mem_read 00CF  
             uart_isr@rcv 003B                 _PORTAbits 0005                 _PORTBbits 0006  
          i1mem_write@add 007B                 _TRISAbits 0085                 _TRISCbits 0087  
             printf@width 002D                 _TXSTAbits 0098              ??_i2c_rstart 0071  
          __end_of___wmul 0E23               _BAUDCTLbits 0187             __pbitbssBANK0 0258  
          __end_of_printf 07F4       start_initialization 07F4      __size_ofi1_mem_write 0048  
               _i2c_start 0F4E            to_work@hum_add 0030                 _i2c_write 0117  
          to_work@hum_val 0028        __end_of_i2c_rstart 0E46  __CFG_FOSC$INTRC_NOCLKOUT 0000  
       __size_of_i2c_init 000F         __size_of_i2c_read 005C         __size_of_i2c_stop 003B  
                ??___wmul 0075               __pdataBANK0 004F                  ??_printf 0023  
           i1i2c_read@ack 0079             ??_init_timer2 0042                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0                ?_i2c_start 0071  
              ?_i2c_write 0040         __size_of_give_all 00E5            mem_write@add_h 00A3  
          mem_write@add_l 00A4         __size_of_mem_init 0050         __size_of_mem_read 0058  
        ___lwdiv@dividend 0073                 _clear_mem 0D8A         __size_of_ints_isr 001E  
       __size_of_tmr2_isr 002B         __size_of_si_reset 001D                  ?___lwdiv 0071  
                ?___lwmod 0079         __size_of_uart_isr 0034           init_timer2@post 0040  
               __pstrings 0800             mem_read@add_h 00A3             mem_read@add_l 00A4  
                ?_isdigit 0071                 _hexpowers 0810                  ?_to_work 0071  
        ___lwdiv@quotient 0076                 _mem_write 0313             i1mem_read@add 007B  
           i1mem_read@rta 0020            __size_of_putch 0008       __end_of_init_timer2 0EB3  
       interrupt_function 0004            ___wmul@product 0075                  _PIE1bits 008C  
               _si_read_h 036F                 _si_read_t 025E                  _PIR1bits 000C  
              ?_clear_mem 0071                 _uart_init 0DB0             ??i1_i2c_start 0071  
           ??i1_i2c_write 0072               __stringbase 0805              si_read_h@rta 0024  
       ___wmul@multiplier 0071              si_read_t@rta 0024                printf@flag 002C  
              printf@prec 0028               ??_i2c_start 0040               ??_i2c_write 0041  
              ?_mem_write 00A0                 give_all@n 0036                  _i2c_init 0DA1  
                _i2c_read 02B7                  _i2c_stop 0F89                to_work@arg 0032  
              ?_si_read_h 007B                ?_si_read_t 007B                ?_uart_init 0071  
        __size_of___lwdiv 003C          __size_of___lwmod 0034        __end_of__stringtab 0806  
             _isdigit$954 0071                _ANSELHbits 0189             mem_write@data 00A2  
             _init_timer2 0E8C          __size_of_isdigit 000E           ___lwdiv@divisor 0071  
         i1mem_read@add_h 0021           i1mem_read@add_l 0022       __end_ofi1_i2c_start 0E69  
         ___lwdiv@counter 0078       __end_ofi1_i2c_write 0EE6                  __ptext10 0E8C  
                __ptext11 0DA1                  __ptext20 0FC4                  __ptext12 0DE4  
                __ptext21 0D8A                  __ptext13 0F1A                  __ptext30 0E46  
                __ptext22 001C                  __ptext14 03CC                  __ptext31 0047  
                __ptext23 04B1                  __ptext15 05EA                  __ptext32 0E23  
                __ptext24 00CF                  __ptext16 0D82                  __ptext25 0089  
                __ptext17 0D93                  __ptext26 025E                  __ptext18 0E02  
                __ptext27 036F                  __ptext19 0EE6                  __ptext28 0EB3  
                __ptext29 0E69         __CFG_BOR4V$BOR21V 0000            init_timer2@eoc 0041  
          init_timer2@pre 0044            init_timer2@sfr 0045          __size_of_to_work 0139  
                _give_all 03CC                  _mem_init 0164                  _mem_read 0206  
           __size_of_main 0052                  _ints_isr 0DE4                  _tmr2_isr 001C  
                _si_reset 0DC7               ??_clear_mem 007E                  _uart_isr 0F1A  
               printf@idx 0026                 printf@val 0029             ??i1_mem_write 0020  
               putch@data 0071                 to_work@up 002C                _INTCONbits 000B  
                isdigit@c 0072               ??_mem_write 004A                  intlevel1 0000  
        ___lwmod@dividend 007B               ??_si_read_h 0020               ??_si_read_t 0020  
               stringcode 0800               ??_uart_init 0040                  printf@ap 0027  
             i1_i2c_start 0E46          i1mem_write@add_h 0021          i1mem_write@add_l 0022  
             i1_i2c_write 0EB3           ___lwmod@divisor 0079           ___lwmod@counter 0020  
                stringdir 0800                  stringtab 0800              uart_isr@ferr 025A  
            uart_isr@oerr 0259               _SSPCON2bits 0091       __end_ofi1_mem_write 0117  
              i1_i2c_read 0047                i1_i2c_stop 0E69           i1mem_write@data 007D  
              _SSPCONbits 0014            i2c_write@datum 0049  
