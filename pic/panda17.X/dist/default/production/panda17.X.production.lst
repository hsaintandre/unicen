

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Sep 10 19:00:03 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 1.43
    49                           ; Generated 25/07/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F886 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310                           
   311                           	psect	idataBANK0
   312  07FB                     __pidataBANK0:	
   313                           
   314                           ;initializer for _led
   315  07FB  3405               	retlw	5
   316                           
   317                           	psect	strings
   318  0700                     __pstrings:	
   319  0700                     stringtab:	
   320  0700                     __stringtab:	
   321  0700                     stringcode:	
   322                           ;	String table - string pointers are 1 byte each
   323                           
   324  0700                     stringdir:	
   325  0700  3007               	movlw	high stringdir
   326  0701  008A               	movwf	10
   327  0702  0804               	movf	4,w
   328  0703  0A84               	incf	4,f
   329  0704  0782               	addwf	2,f
   330  0705                     __stringbase:	
   331  0705  3400               	retlw	0
   332  0706                     __end_of__stringtab:	
   333  0706                     _dpowers:	
   334  0706  3401               	retlw	1
   335  0707  3400               	retlw	0
   336  0708  340A               	retlw	10
   337  0709  3400               	retlw	0
   338  070A  3464               	retlw	100
   339  070B  3400               	retlw	0
   340  070C  34E8               	retlw	232
   341  070D  3403               	retlw	3
   342  070E  3410               	retlw	16
   343  070F  3427               	retlw	39
   344  0710                     __end_of_dpowers:	
   345  0710                     _hexpowers:	
   346  0710  3401               	retlw	1
   347  0711  3400               	retlw	0
   348  0712  3410               	retlw	16
   349  0713  3400               	retlw	0
   350  0714  3400               	retlw	0
   351  0715  3401               	retlw	1
   352  0716  3400               	retlw	0
   353  0717  3410               	retlw	16
   354  0718                     __end_of_hexpowers:	
   355  0013                     _SSPBUF	set	19
   356  0014                     _SSPCONbits	set	20
   357  000B                     _INTCON	set	11
   358  0012                     _T2CON	set	18
   359  0006                     _PORTBbits	set	6
   360  001A                     _RCREG	set	26
   361  000B                     _INTCONbits	set	11
   362  0019                     _TXREG	set	25
   363  000C                     _PIR1bits	set	12
   364  0018                     _RCSTAbits	set	24
   365  0091                     _SSPCON2bits	set	145
   366  0087                     _TRISCbits	set	135
   367  0094                     _SSPSTATbits	set	148
   368  0093                     _SSPADD	set	147
   369  0086                     _TRISBbits	set	134
   370  0086                     _TRISB	set	134
   371  0085                     _TRISA	set	133
   372  008F                     _OSCCON	set	143
   373  0092                     _PR2	set	146
   374  0099                     _SPBRG	set	153
   375  009A                     _SPBRGH	set	154
   376  0098                     _TXSTAbits	set	152
   377  008C                     _PIE1bits	set	140
   378  0189                     _ANSELHbits	set	393
   379  0187                     _BAUDCTLbits	set	391
   380  0718                     STR_17:	
   381  0718  3430               	retlw	48	;'0'
   382  0719  3431               	retlw	49	;'1'
   383  071A  3432               	retlw	50	;'2'
   384  071B  3433               	retlw	51	;'3'
   385  071C  3434               	retlw	52	;'4'
   386  071D  3435               	retlw	53	;'5'
   387  071E  3436               	retlw	54	;'6'
   388  071F  3437               	retlw	55	;'7'
   389  0720  3438               	retlw	56	;'8'
   390  0721  3439               	retlw	57	;'9'
   391  0722  3441               	retlw	65	;'A'
   392  0723  3442               	retlw	66	;'B'
   393  0724  3443               	retlw	67	;'C'
   394  0725  3444               	retlw	68	;'D'
   395  0726  3445               	retlw	69	;'E'
   396  0727  3446               	retlw	70	;'F'
   397  0728  3400               	retlw	0
   398  0729                     STR_18:	
   399  0729  3430               	retlw	48	;'0'
   400  072A  3431               	retlw	49	;'1'
   401  072B  3432               	retlw	50	;'2'
   402  072C  3433               	retlw	51	;'3'
   403  072D  3434               	retlw	52	;'4'
   404  072E  3435               	retlw	53	;'5'
   405  072F  3436               	retlw	54	;'6'
   406  0730  3437               	retlw	55	;'7'
   407  0731  3438               	retlw	56	;'8'
   408  0732  3439               	retlw	57	;'9'
   409  0733  3461               	retlw	97	;'a'
   410  0734  3462               	retlw	98	;'b'
   411  0735  3463               	retlw	99	;'c'
   412  0736  3464               	retlw	100	;'d'
   413  0737  3465               	retlw	101	;'e'
   414  0738  3466               	retlw	102	;'f'
   415  0739  3400               	retlw	0
   416  073A                     STR_1:	
   417  073A  3449               	retlw	73	;'I'
   418  073B  3425               	retlw	37	;'%'
   419  073C  3430               	retlw	48	;'0'
   420  073D  3435               	retlw	53	;'5'
   421  073E  3464               	retlw	100	;'d'
   422  073F  340D               	retlw	13
   423  0740  340A               	retlw	10
   424  0741  3400               	retlw	0
   425  0742                     STR_14:	
   426  0742  3449               	retlw	73	;'I'
   427  0743  3425               	retlw	37	;'%'
   428  0744  3430               	retlw	48	;'0'
   429  0745  3434               	retlw	52	;'4'
   430  0746  3478               	retlw	120	;'x'
   431  0747  343B               	retlw	59	;';'
   432  0748  3400               	retlw	0
   433  0749                     STR_9:	
   434  0749  3425               	retlw	37	;'%'
   435  074A  3430               	retlw	48	;'0'
   436  074B  3432               	retlw	50	;'2'
   437  074C  3478               	retlw	120	;'x'
   438  074D  3409               	retlw	9
   439  074E  3400               	retlw	0
   440  074F                     STR_6:	
   441  074F  3425               	retlw	37	;'%'
   442  0750  3430               	retlw	48	;'0'
   443  0751  3432               	retlw	50	;'2'
   444  0752  3478               	retlw	120	;'x'
   445  0753  3420               	retlw	32	;' '
   446  0754  3400               	retlw	0
   447  0755                     STR_7:	
   448  0755  3425               	retlw	37	;'%'
   449  0756  3430               	retlw	48	;'0'
   450  0757  3432               	retlw	50	;'2'
   451  0758  3478               	retlw	120	;'x'
   452  0759  342F               	retlw	47	;'/'
   453  075A  3400               	retlw	0
   454  075B                     STR_5:	
   455  075B  3425               	retlw	37	;'%'
   456  075C  3430               	retlw	48	;'0'
   457  075D  3432               	retlw	50	;'2'
   458  075E  3478               	retlw	120	;'x'
   459  075F  343A               	retlw	58	;':'
   460  0760  3400               	retlw	0
   461  0761                     STR_2:	
   462  0761  3425               	retlw	37	;'%'
   463  0762  3430               	retlw	48	;'0'
   464  0763  3434               	retlw	52	;'4'
   465  0764  3478               	retlw	120	;'x'
   466  0765  3400               	retlw	0
   467  0766                     STR_13:	
   468  0766  3425               	retlw	37	;'%'
   469  0767  3458               	retlw	88	;'X'
   470  0768  3420               	retlw	32	;' '
   471  0769  3400               	retlw	0
   472  076A                     STR_12:	
   473  076A  344F               	retlw	79	;'O'
   474  076B  344B               	retlw	75	;'K'
   475  076C  3400               	retlw	0
   476  076D                     STR_11:	
   477  076D  3458               	retlw	88	;'X'
   478  076E  3400               	retlw	0
   479  076F                     STR_4:	
   480  076F  345A               	retlw	90	;'Z'
   481  0770  3400               	retlw	0
   482  073F                     
   483                           ; #config settings
   484  0000                     
   485                           	psect	cinit
   486  0015                     start_initialization:	
   487  0015                     __initialization:	
   488                           
   489                           ; Initialize objects allocated to BANK0
   490  0015  120A  118A  27FB   	fcall	__pidataBANK0	;fetch initializer
   491  0018  00E0               	movwf	__pdataBANK0& (0+127)
   492                           
   493                           ; Clear objects allocated to BANK0
   494  0019  01D4               	clrf	__pbssBANK0& (0+127)
   495  001A  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   496  001B  01D6               	clrf	(__pbssBANK0+2)& (0+127)
   497  001C  01D7               	clrf	(__pbssBANK0+3)& (0+127)
   498  001D  01D8               	clrf	(__pbssBANK0+4)& (0+127)
   499  001E  01D9               	clrf	(__pbssBANK0+5)& (0+127)
   500  001F  01DA               	clrf	(__pbssBANK0+6)& (0+127)
   501  0020  01DB               	clrf	(__pbssBANK0+7)& (0+127)
   502  0021  01DC               	clrf	(__pbssBANK0+8)& (0+127)
   503  0022  01DD               	clrf	(__pbssBANK0+9)& (0+127)
   504  0023  01DE               	clrf	(__pbssBANK0+10)& (0+127)
   505                           
   506                           ; Clear objects allocated to BITBANK0
   507  0024  01DF               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   508  0025                     end_of_initialization:	
   509                           ;End of C runtime variable initialization code
   510                           
   511  0025                     __end_of__initialization:	
   512  0025  0183               	clrf	3
   513  0026  120A  158A  2FA0   	ljmp	_main	;jump to C main() function
   514                           
   515                           	psect	bitbssBANK0
   516  02F8                     __pbitbssBANK0:	
   517  02F8                     i2c_read@not_flag:	
   518  02F8                     	ds	1
   519  02F9                     i2c_read@flag:	
   520  02F9                     	ds	1
   521  02FA                     ints_isr@oerr:	
   522  02FA                     	ds	1
   523  02FB                     ints_isr@ferr:	
   524  02FB                     	ds	1
   525  02FC                     _measure:	
   526  02FC                     	ds	1
   527  02FD                     _fyh:	
   528  02FD                     	ds	1
   529                           
   530                           	psect	bssBANK0
   531  0054                     __pbssBANK0:	
   532  0054                     _secs:	
   533  0054                     	ds	2
   534  0056                     _condition:	
   535  0056                     	ds	1
   536  0057                     _milis:	
   537  0057                     	ds	1
   538  0058                     _time:	
   539  0058                     	ds	7
   540                           
   541                           	psect	dataBANK0
   542  0060                     __pdataBANK0:	
   543  0060                     _led:	
   544  0060                     	ds	1
   545                           
   546                           	psect	cstackBANK1
   547  00A0                     __pcstackBANK1:	
   548  00A0                     ??_i2c_init:	
   549  00A0                     ??_uart_init:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  00A0                     ?_init_timer2:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  00A0                     ??_i2c_start:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  00A0                     ??_i2c_stop:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  00A0                     ?_i2c_write:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  00A0                     ??_i2c_read:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  00A0                     init_timer2@post:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  00A0                     i2c_write@ack:	
   571                           ; 1 bytes @ 0x0
   572                           
   573                           
   574                           ; 1 bytes @ 0x0
   575  00A0                     	ds	1
   576  00A1                     ??_i2c_write:	
   577  00A1                     init_timer2@eoc:	
   578                           ; 1 bytes @ 0x1
   579                           
   580                           
   581                           ; 1 bytes @ 0x1
   582  00A1                     	ds	1
   583  00A2                     ??_init_timer2:	
   584                           
   585                           ; 1 bytes @ 0x2
   586  00A2                     	ds	2
   587  00A4                     init_timer2@pre:	
   588                           
   589                           ; 1 bytes @ 0x4
   590  00A4                     	ds	1
   591  00A5                     init_timer2@sfr:	
   592                           
   593                           ; 1 bytes @ 0x5
   594  00A5                     	ds	3
   595  00A8                     i2c_read@resp:	
   596                           
   597                           ; 1 bytes @ 0x8
   598  00A8                     	ds	1
   599  00A9                     i2c_write@datum:	
   600  00A9                     i2c_read@ack:	
   601                           ; 1 bytes @ 0x9
   602                           
   603                           
   604                           ; 1 bytes @ 0x9
   605  00A9                     	ds	1
   606  00AA                     ?_mem_read:	
   607  00AA                     ?_mem_write:	
   608                           ; 1 bytes @ 0xA
   609                           
   610  00AA                     ??_si_reset:	
   611                           ; 1 bytes @ 0xA
   612                           
   613  00AA                     mem_write@add:	
   614                           ; 1 bytes @ 0xA
   615                           
   616  00AA                     mem_read@add:	
   617                           ; 2 bytes @ 0xA
   618                           
   619                           
   620                           ; 2 bytes @ 0xA
   621  00AA                     	ds	2
   622  00AC                     ??_mem_read:	
   623  00AC                     mem_write@data:	
   624                           ; 1 bytes @ 0xC
   625                           
   626                           
   627                           ; 1 bytes @ 0xC
   628  00AC                     	ds	1
   629  00AD                     ??_mem_write:	
   630  00AD                     mem_read@rta:	
   631                           ; 1 bytes @ 0xD
   632                           
   633                           
   634                           ; 1 bytes @ 0xD
   635  00AD                     	ds	1
   636  00AE                     mem_write@add_h:	
   637  00AE                     mem_read@add_h:	
   638                           ; 1 bytes @ 0xE
   639                           
   640                           
   641                           ; 1 bytes @ 0xE
   642  00AE                     	ds	1
   643  00AF                     mem_write@add_l:	
   644  00AF                     mem_read@add_l:	
   645                           ; 1 bytes @ 0xF
   646                           
   647                           
   648                           ; 1 bytes @ 0xF
   649  00AF                     	ds	1
   650  00B0                     ??_mem_init:	
   651                           
   652                           ; 1 bytes @ 0x10
   653  00B0                     	ds	1
   654  00B1                     mem_init@aux:	
   655                           
   656                           ; 1 bytes @ 0x11
   657  00B1                     	ds	1
   658  00B2                     ??_main:	
   659                           
   660                           ; 1 bytes @ 0x12
   661  00B2                     	ds	3
   662                           
   663                           	psect	cstackCOMMON
   664  0070                     __pcstackCOMMON:	
   665  0070                     ?_isdigit:	
   666  0070                     ?_ds_get:	
   667                           ; 1 bit 
   668                           
   669  0070                     ?_ds_set:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_i2c_init:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_si_reset:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ??_isdigit:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_uart_init:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_putch:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ??_putch:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_mem_init:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_save_the_date:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_ints_isr:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_i2c_start:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_i2c_rstart:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ??_i2c_rstart:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_i2c_stop:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_i2c_read:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?i1_mem_init:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?i1_i2c_start:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ??i1_i2c_start:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?i1_i2c_stop:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ??i1_i2c_stop:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?i1_i2c_write:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?i1_i2c_read:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ??i1_i2c_read:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_main:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?___wmul:	
   742                           ; 2 bytes @ 0x0
   743                           
   744  0070                     ?___lwdiv:	
   745                           ; 2 bytes @ 0x0
   746                           
   747  0070                     putch@data:	
   748                           ; 2 bytes @ 0x0
   749                           
   750  0070                     _isdigit$934:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     i1i2c_write@ack:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ___wmul@multiplier:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ___lwdiv@divisor:	
   760                           ; 2 bytes @ 0x0
   761                           
   762                           
   763                           ; 2 bytes @ 0x0
   764  0070                     	ds	1
   765  0071                     ??i1_i2c_write:	
   766  0071                     isdigit@c:	
   767                           ; 1 bytes @ 0x1
   768                           
   769                           
   770                           ; 1 bytes @ 0x1
   771  0071                     	ds	1
   772  0072                     ___wmul@multiplicand:	
   773  0072                     ___lwdiv@dividend:	
   774                           ; 2 bytes @ 0x2
   775                           
   776                           
   777                           ; 2 bytes @ 0x2
   778  0072                     	ds	2
   779  0074                     ??___wmul:	
   780  0074                     ??___lwdiv:	
   781                           ; 1 bytes @ 0x4
   782                           
   783  0074                     ___wmul@product:	
   784                           ; 1 bytes @ 0x4
   785                           
   786                           
   787                           ; 2 bytes @ 0x4
   788  0074                     	ds	1
   789  0075                     ___lwdiv@quotient:	
   790                           
   791                           ; 2 bytes @ 0x5
   792  0075                     	ds	2
   793  0077                     ___lwdiv@counter:	
   794                           
   795                           ; 1 bytes @ 0x7
   796  0077                     	ds	1
   797  0078                     ?___lwmod:	
   798  0078                     i1i2c_read@resp:	
   799                           ; 2 bytes @ 0x8
   800                           
   801  0078                     ___lwmod@divisor:	
   802                           ; 1 bytes @ 0x8
   803                           
   804                           
   805                           ; 2 bytes @ 0x8
   806  0078                     	ds	1
   807  0079                     i1i2c_write@datum:	
   808  0079                     i1i2c_read@ack:	
   809                           ; 1 bytes @ 0x9
   810                           
   811                           
   812                           ; 1 bytes @ 0x9
   813  0079                     	ds	1
   814  007A                     ??_ds_get:	
   815  007A                     ??_ds_set:	
   816                           ; 1 bytes @ 0xA
   817                           
   818  007A                     ?i1_mem_write:	
   819                           ; 1 bytes @ 0xA
   820                           
   821  007A                     ?i1_mem_read:	
   822                           ; 1 bytes @ 0xA
   823                           
   824  007A                     ?_si_read_h:	
   825                           ; 1 bytes @ 0xA
   826                           
   827  007A                     ?_si_read_t:	
   828                           ; 2 bytes @ 0xA
   829                           
   830  007A                     ___lwmod@dividend:	
   831                           ; 2 bytes @ 0xA
   832                           
   833  007A                     i1mem_write@add:	
   834                           ; 2 bytes @ 0xA
   835                           
   836  007A                     i1mem_read@add:	
   837                           ; 2 bytes @ 0xA
   838                           
   839                           
   840                           ; 2 bytes @ 0xA
   841  007A                     	ds	1
   842  007B                     ds_set@data:	
   843  007B                     ds_get@data:	
   844                           ; 1 bytes @ 0xB
   845                           
   846                           
   847                           ; 1 bytes @ 0xB
   848  007B                     	ds	1
   849  007C                     ??_si_read_h:	
   850  007C                     ??_si_read_t:	
   851                           ; 1 bytes @ 0xC
   852                           
   853  007C                     ??___lwmod:	
   854                           ; 1 bytes @ 0xC
   855                           
   856  007C                     ??i1_mem_read:	
   857                           ; 1 bytes @ 0xC
   858                           
   859  007C                     ds_set@j:	
   860                           ; 1 bytes @ 0xC
   861                           
   862  007C                     ds_get@resp:	
   863                           ; 1 bytes @ 0xC
   864                           
   865  007C                     i1mem_write@data:	
   866                           ; 1 bytes @ 0xC
   867                           
   868                           
   869                           ; 1 bytes @ 0xC
   870  007C                     	ds	1
   871  007D                     ??i1_mem_write:	
   872  007D                     ___lwmod@counter:	
   873                           ; 1 bytes @ 0xD
   874                           
   875                           
   876                           ; 1 bytes @ 0xD
   877  007D                     	ds	1
   878                           
   879                           	psect	cstackBANK0
   880  0020                     __pcstackBANK0:	
   881  0020                     si_read_h@rta_h:	
   882  0020                     si_read_t@rta_h:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0020                     i1mem_write@add_h:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0020                     i1mem_read@rta:	
   889                           ; 1 bytes @ 0x0
   890                           
   891                           
   892                           ; 1 bytes @ 0x0
   893  0020                     	ds	1
   894  0021                     si_read_h@rta_l:	
   895  0021                     si_read_t@rta_l:	
   896                           ; 1 bytes @ 0x1
   897                           
   898  0021                     i1mem_write@add_l:	
   899                           ; 1 bytes @ 0x1
   900                           
   901  0021                     i1mem_read@add_h:	
   902                           ; 1 bytes @ 0x1
   903                           
   904                           
   905                           ; 1 bytes @ 0x1
   906  0021                     	ds	1
   907  0022                     ??_save_the_date:	
   908  0022                     i1mem_read@add_l:	
   909                           ; 1 bytes @ 0x2
   910                           
   911  0022                     si_read_h@rta:	
   912                           ; 1 bytes @ 0x2
   913                           
   914  0022                     si_read_t@rta:	
   915                           ; 2 bytes @ 0x2
   916                           
   917                           
   918                           ; 2 bytes @ 0x2
   919  0022                     	ds	1
   920  0023                     ??i1_mem_init:	
   921  0023                     save_the_date@ax:	
   922                           ; 1 bytes @ 0x3
   923                           
   924                           
   925                           ; 1 bytes @ 0x3
   926  0023                     	ds	1
   927  0024                     ?_printf:	
   928  0024                     i1mem_init@aux:	
   929                           ; 2 bytes @ 0x4
   930                           
   931                           
   932                           ; 1 bytes @ 0x4
   933  0024                     	ds	2
   934  0026                     ??_printf:	
   935                           
   936                           ; 1 bytes @ 0x6
   937  0026                     	ds	3
   938  0029                     printf@idx:	
   939                           
   940                           ; 1 bytes @ 0x9
   941  0029                     	ds	1
   942  002A                     _printf$748:	
   943                           
   944                           ; 1 bytes @ 0xA
   945  002A                     	ds	1
   946  002B                     printf@ap:	
   947                           
   948                           ; 1 bytes @ 0xB
   949  002B                     	ds	1
   950  002C                     printf@prec:	
   951                           
   952                           ; 1 bytes @ 0xC
   953  002C                     	ds	1
   954  002D                     printf@val:	
   955                           
   956                           ; 2 bytes @ 0xD
   957  002D                     	ds	2
   958  002F                     printf@width:	
   959                           
   960                           ; 2 bytes @ 0xF
   961  002F                     	ds	2
   962  0031                     printf@flag:	
   963                           
   964                           ; 1 bytes @ 0x11
   965  0031                     	ds	1
   966  0032                     printf@f:	
   967                           
   968                           ; 1 bytes @ 0x12
   969  0032                     	ds	1
   970  0033                     printf@c:	
   971                           
   972                           ; 1 bytes @ 0x13
   973  0033                     	ds	1
   974  0034                     ??_ints_isr:	
   975                           
   976                           ; 1 bytes @ 0x14
   977  0034                     	ds	8
   978  003C                     ints_isr@dt:	
   979                           
   980                           ; 2 bytes @ 0x1C
   981  003C                     	ds	2
   982  003E                     ints_isr@rcv:	
   983                           
   984                           ; 1 bytes @ 0x1E
   985  003E                     	ds	1
   986  003F                     ints_isr@hum_val:	
   987                           
   988                           ; 2 bytes @ 0x1F
   989  003F                     	ds	2
   990  0041                     ints_isr@temp_val:	
   991                           
   992                           ; 2 bytes @ 0x21
   993  0041                     	ds	2
   994  0043                     ints_isr@add:	
   995                           
   996                           ; 2 bytes @ 0x23
   997  0043                     	ds	2
   998  0045                     ints_isr@z:	
   999                           
  1000                           ; 1 bytes @ 0x25
  1001  0045                     	ds	1
  1002  0046                     ints_isr@k:	
  1003                           
  1004                           ; 1 bytes @ 0x26
  1005  0046                     	ds	1
  1006  0047                     ints_isr@up:	
  1007                           
  1008                           ; 2 bytes @ 0x27
  1009  0047                     	ds	2
  1010  0049                     ints_isr@n:	
  1011                           
  1012                           ; 2 bytes @ 0x29
  1013  0049                     	ds	2
  1014  004B                     ints_isr@aux:	
  1015                           
  1016                           ; 2 bytes @ 0x2B
  1017  004B                     	ds	2
  1018  004D                     ints_isr@temp_add:	
  1019                           
  1020                           ; 2 bytes @ 0x2D
  1021  004D                     	ds	2
  1022  004F                     ints_isr@hum_add:	
  1023                           
  1024                           ; 2 bytes @ 0x2F
  1025  004F                     	ds	2
  1026  0051                     ints_isr@aux2:	
  1027                           
  1028                           ; 2 bytes @ 0x31
  1029  0051                     	ds	2
  1030  0053                     ints_isr@arg:	
  1031                           
  1032                           ; 1 bytes @ 0x33
  1033  0053                     	ds	1
  1034                           
  1035                           	psect	maintext
  1036  0FA0                     __pmaintext:	
  1037 ;;
  1038 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1039 ;;
  1040 ;; *************** function _main *****************
  1041 ;; Defined at:
  1042 ;;		line 257 in file "panda17.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  2  134[None  ] int 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : B00/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         0       0       0       0       0
  1058 ;;      Temps:          0       0       3       0       0
  1059 ;;      Totals:         0       0       3       0       0
  1060 ;;Total ram usage:        3 bytes
  1061 ;; Hardware stack levels required when called:    7
  1062 ;; This function calls:
  1063 ;;		_i2c_init
  1064 ;;		_init_timer2
  1065 ;;		_mem_init
  1066 ;;		_si_reset
  1067 ;;		_uart_init
  1068 ;; This function is called by:
  1069 ;;		Startup code after reset
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           
  1074                           ;psect for function _main
  1075  0FA0                     _main:	
  1076                           
  1077                           ;panda17.c: 258: OSCCON = 0b01010001;
  1078                           
  1079                           ;incstack = 0
  1080                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1081  0FA0  3051               	movlw	81
  1082  0FA1  1683               	bsf	3,5	;RP0=1, select bank1
  1083  0FA2  1303               	bcf	3,6	;RP1=0, select bank1
  1084  0FA3  008F               	movwf	15	;volatile
  1085                           
  1086                           ;panda17.c: 259: INTCON = 0xC0;
  1087  0FA4  30C0               	movlw	192
  1088  0FA5  008B               	movwf	11	;volatile
  1089                           
  1090                           ;panda17.c: 261: TRISA = 0x00;
  1091  0FA6  0185               	clrf	5	;volatile
  1092                           
  1093                           ;panda17.c: 262: TRISB = 0x00;
  1094  0FA7  0186               	clrf	6	;volatile
  1095                           
  1096                           ;panda17.c: 263: ANSELHbits.ANS8 = 0;
  1097  0FA8  1683               	bsf	3,5	;RP0=1, select bank3
  1098  0FA9  1703               	bsf	3,6	;RP1=1, select bank3
  1099  0FAA  1009               	bcf	9,0	;volatile
  1100                           
  1101                           ;panda17.c: 264: TRISBbits.TRISB2 = 1;
  1102  0FAB  1683               	bsf	3,5	;RP0=1, select bank1
  1103  0FAC  1303               	bcf	3,6	;RP1=0, select bank1
  1104  0FAD  1506               	bsf	6,2	;volatile
  1105                           
  1106                           ;panda17.c: 265: PORTBbits.RB4 = 1;
  1107  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0FB0  1606               	bsf	6,4	;volatile
  1110                           
  1111                           ;panda17.c: 266: _delay((unsigned long)((1000)*(2000000/4000.0)));
  1112  0FB1  3003               	movlw	3
  1113  0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  1114  0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  1115  0FB4  00B4               	movwf	(??_main^(0+128)+2)
  1116  0FB5  308A               	movlw	138
  1117  0FB6  00B3               	movwf	(??_main^(0+128)+1)
  1118  0FB7  3055               	movlw	85
  1119  0FB8  00B2               	movwf	??_main^(0+128)
  1120  0FB9                     u2257:	
  1121  0FB9  0BB2               	decfsz	??_main^(0+128),f
  1122  0FBA  2FB9               	goto	u2257
  1123  0FBB  0BB3               	decfsz	(??_main^(0+128)+1),f
  1124  0FBC  2FB9               	goto	u2257
  1125  0FBD  0BB4               	decfsz	(??_main^(0+128)+2),f
  1126  0FBE  2FB9               	goto	u2257
  1127                           
  1128                           ;panda17.c: 267: PORTBbits.RB4 = 0;
  1129  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0FC0  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0FC1  1206               	bcf	6,4	;volatile
  1132                           
  1133                           ;panda17.c: 268: uart_init();
  1134  0FC2  120A  158A  22D1  120A  158A  	fcall	_uart_init
  1135                           
  1136                           ;panda17.c: 269: i2c_init();
  1137  0FC7  120A  158A  22C2  120A  158A  	fcall	_i2c_init
  1138                           
  1139                           ;panda17.c: 270: _delay((unsigned long)((10)*(2000000/4000.0)));
  1140  0FCC  3007               	movlw	7
  1141  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  1142  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  1143  0FCF  00B3               	movwf	(??_main^(0+128)+1)
  1144  0FD0  307C               	movlw	124
  1145  0FD1  00B2               	movwf	??_main^(0+128)
  1146  0FD2                     u2267:	
  1147  0FD2  0BB2               	decfsz	??_main^(0+128),f
  1148  0FD3  2FD2               	goto	u2267
  1149  0FD4  0BB3               	decfsz	(??_main^(0+128)+1),f
  1150  0FD5  2FD2               	goto	u2267
  1151  0FD6  0000               	nop
  1152                           
  1153                           ;panda17.c: 271: mem_init();
  1154  0FD7  120A  158A  26E7  120A  158A  	fcall	_mem_init
  1155                           
  1156                           ;panda17.c: 272: si_reset();
  1157  0FDC  120A  158A  22E9  120A  158A  	fcall	_si_reset
  1158                           
  1159                           ;panda17.c: 273: fyh = 1;
  1160  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0FE3  16DF               	bsf	_fyh/(0+8),_fyh& (0+7)
  1163                           
  1164                           ;panda17.c: 274: measure = 0;
  1165  0FE4  125F               	bcf	_measure/(0+8),_measure& (0+7)
  1166                           
  1167                           ;panda17.c: 276: _delay((unsigned long)((200)*(2000000/4000.0)));
  1168  0FE5  3082               	movlw	130
  1169  0FE6  1683               	bsf	3,5	;RP0=1, select bank1
  1170  0FE7  1303               	bcf	3,6	;RP1=0, select bank1
  1171  0FE8  00B3               	movwf	(??_main^(0+128)+1)
  1172  0FE9  30DD               	movlw	221
  1173  0FEA  00B2               	movwf	??_main^(0+128)
  1174  0FEB                     u2277:	
  1175  0FEB  0BB2               	decfsz	??_main^(0+128),f
  1176  0FEC  2FEB               	goto	u2277
  1177  0FED  0BB3               	decfsz	(??_main^(0+128)+1),f
  1178  0FEE  2FEB               	goto	u2277
  1179                           
  1180                           ;panda17.c: 277: init_timer2(2,5,250);
  1181  0FEF  3005               	movlw	5
  1182  0FF0  1683               	bsf	3,5	;RP0=1, select bank1
  1183  0FF1  1303               	bcf	3,6	;RP1=0, select bank1
  1184  0FF2  00B2               	movwf	??_main^(0+128)
  1185  0FF3  0832               	movf	??_main^(0+128),w
  1186  0FF4  00A0               	movwf	init_timer2@post^(0+128)
  1187  0FF5  30FA               	movlw	250
  1188  0FF6  00B3               	movwf	(??_main+1)^(0+128)
  1189  0FF7  0833               	movf	(??_main+1)^(0+128),w
  1190  0FF8  00A1               	movwf	init_timer2@eoc^(0+128)
  1191  0FF9  3002               	movlw	2
  1192  0FFA  120A  118A  27D6  120A  158A  	fcall	_init_timer2
  1193  0FFF                     l135:	
  1194                           ;panda17.c: 278: while(1){
  1195                           
  1196  0FFF  2FFF               	goto	l135
  1197  1000                     __end_of_main:	
  1198                           
  1199                           	psect	text1
  1200  0AD1                     __ptext1:	
  1201 ;; *************** function _uart_init *****************
  1202 ;; Defined at:
  1203 ;;		line 22 in file "panda17.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    4
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           
  1232                           ;psect for function _uart_init
  1233  0AD1                     _uart_init:	
  1234                           
  1235                           ;panda17.c: 23: PIE1bits.RCIE = 0;
  1236                           
  1237                           ;incstack = 0
  1238                           ; Regs used in _uart_init: [wreg+status,2]
  1239  0AD1  1683               	bsf	3,5	;RP0=1, select bank1
  1240  0AD2  1303               	bcf	3,6	;RP1=0, select bank1
  1241  0AD3  128C               	bcf	12,5	;volatile
  1242                           
  1243                           ;panda17.c: 24: PIE1bits.TXIE = 0;
  1244  0AD4  120C               	bcf	12,4	;volatile
  1245                           
  1246                           ;panda17.c: 25: TXSTAbits.BRGH = 1;
  1247  0AD5  1518               	bsf	24,2	;volatile
  1248                           
  1249                           ;panda17.c: 26: BAUDCTLbits.BRG16 = 0;
  1250  0AD6  1683               	bsf	3,5	;RP0=1, select bank3
  1251  0AD7  1703               	bsf	3,6	;RP1=1, select bank3
  1252  0AD8  1187               	bcf	7,3	;volatile
  1253                           
  1254                           ;panda17.c: 27: SPBRGH = 0x00;
  1255  0AD9  1683               	bsf	3,5	;RP0=1, select bank1
  1256  0ADA  1303               	bcf	3,6	;RP1=0, select bank1
  1257  0ADB  019A               	clrf	26	;volatile
  1258                           
  1259                           ;panda17.c: 29: SPBRG = 0x0C;
  1260  0ADC  300C               	movlw	12
  1261  0ADD  0099               	movwf	25	;volatile
  1262                           
  1263                           ;panda17.c: 30: TXSTAbits.SYNC = 0;
  1264  0ADE  1218               	bcf	24,4	;volatile
  1265                           
  1266                           ;panda17.c: 31: RCSTAbits.SPEN = 1;
  1267  0ADF  1283               	bcf	3,5	;RP0=0, select bank0
  1268  0AE0  1303               	bcf	3,6	;RP1=0, select bank0
  1269  0AE1  1798               	bsf	24,7	;volatile
  1270                           
  1271                           ;panda17.c: 32: TXSTAbits.TXEN = 1;
  1272  0AE2  1683               	bsf	3,5	;RP0=1, select bank1
  1273  0AE3  1303               	bcf	3,6	;RP1=0, select bank1
  1274  0AE4  1698               	bsf	24,5	;volatile
  1275                           
  1276                           ;panda17.c: 33: RCSTAbits.CREN = 1;
  1277  0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0AE6  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0AE7  1618               	bsf	24,4	;volatile
  1280  0AE8  0008               	return
  1281  0AE9                     __end_of_uart_init:	
  1282                           
  1283                           	psect	text2
  1284  0AE9                     __ptext2:	
  1285 ;; *************** function _si_reset *****************
  1286 ;; Defined at:
  1287 ;;		line 13 in file "si7021.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, pclath, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1301 ;;      Params:         0       0       0       0       0
  1302 ;;      Locals:         0       0       0       0       0
  1303 ;;      Temps:          0       0       0       0       0
  1304 ;;      Totals:         0       0       0       0       0
  1305 ;;Total ram usage:        0 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    5
  1308 ;; This function calls:
  1309 ;;		_i2c_start
  1310 ;;		_i2c_stop
  1311 ;;		_i2c_write
  1312 ;; This function is called by:
  1313 ;;		_main
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           
  1318                           ;psect for function _si_reset
  1319  0AE9                     _si_reset:	
  1320                           
  1321                           ;si7021.c: 14: i2c_start();
  1322                           
  1323                           ;incstack = 0
  1324                           ; Regs used in _si_reset: [wreg+status,2+status,0+pclath+cstack]
  1325  0AE9  120A  158A  2390  120A  158A  	fcall	_i2c_start
  1326                           
  1327                           ;si7021.c: 15: i2c_write(0x80,1);
  1328  0AEE  1683               	bsf	3,5	;RP0=1, select bank1
  1329  0AEF  1303               	bcf	3,6	;RP1=0, select bank1
  1330  0AF0  01A0               	clrf	i2c_write@ack^(0+128)
  1331  0AF1  0AA0               	incf	i2c_write@ack^(0+128),f
  1332  0AF2  3080               	movlw	128
  1333  0AF3  120A  158A  249F  120A  158A  	fcall	_i2c_write
  1334                           
  1335                           ;si7021.c: 16: i2c_write(0xFE,1);
  1336  0AF8  1683               	bsf	3,5	;RP0=1, select bank1
  1337  0AF9  1303               	bcf	3,6	;RP1=0, select bank1
  1338  0AFA  01A0               	clrf	i2c_write@ack^(0+128)
  1339  0AFB  0AA0               	incf	i2c_write@ack^(0+128),f
  1340  0AFC  30FE               	movlw	254
  1341  0AFD  120A  158A  249F  120A  158A  	fcall	_i2c_write
  1342                           
  1343                           ;si7021.c: 17: i2c_stop();
  1344  0B02  120A  158A  23B3   	fcall	_i2c_stop
  1345  0B05  0008               	return
  1346  0B06                     __end_of_si_reset:	
  1347                           
  1348                           	psect	text3
  1349  0EE7                     __ptext3:	
  1350 ;; *************** function _mem_init *****************
  1351 ;; Defined at:
  1352 ;;		line 42 in file "panda17.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;		None
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  aux             1   17[BANK1 ] unsigned char 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  1    wreg      void 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0, pclath, cstack
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/0
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1366 ;;      Params:         0       0       0       0       0
  1367 ;;      Locals:         0       0       1       0       0
  1368 ;;      Temps:          0       0       1       0       0
  1369 ;;      Totals:         0       0       2       0       0
  1370 ;;Total ram usage:        2 bytes
  1371 ;; Hardware stack levels used:    1
  1372 ;; Hardware stack levels required when called:    6
  1373 ;; This function calls:
  1374 ;;		_mem_read
  1375 ;;		_mem_write
  1376 ;; This function is called by:
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           
  1382                           ;psect for function _mem_init
  1383  0EE7                     _mem_init:	
  1384                           
  1385                           ;panda17.c: 43: unsigned char aux;
  1386                           ;panda17.c: 44: aux = mem_read(0x0002);
  1387                           
  1388                           ;incstack = 0
  1389                           ; Regs used in _mem_init: [wreg+status,2+status,0+pclath+cstack]
  1390  0EE7  3002               	movlw	2
  1391  0EE8  1683               	bsf	3,5	;RP0=1, select bank1
  1392  0EE9  1303               	bcf	3,6	;RP1=0, select bank1
  1393  0EEA  00AA               	movwf	mem_read@add^(0+128)
  1394  0EEB  3000               	movlw	0
  1395  0EEC  00AB               	movwf	(mem_read@add^(0+128)+1)
  1396  0EED  120A  158A  259C  120A  158A  	fcall	_mem_read
  1397  0EF2  1683               	bsf	3,5	;RP0=1, select bank1
  1398  0EF3  1303               	bcf	3,6	;RP1=0, select bank1
  1399  0EF4  00B0               	movwf	??_mem_init^(0+128)
  1400  0EF5  0830               	movf	??_mem_init^(0+128),w
  1401  0EF6  00B1               	movwf	mem_init@aux^(0+128)
  1402                           
  1403                           ;panda17.c: 45: if (aux != 0xAA){
  1404  0EF7  30AA               	movlw	170
  1405  0EF8  0631               	xorwf	mem_init@aux^(0+128),w
  1406  0EF9  1903               	btfsc	3,2
  1407  0EFA  0008               	return
  1408                           
  1409                           ;panda17.c: 46: mem_write(0x0002,0xAA);
  1410  0EFB  3002               	movlw	2
  1411  0EFC  00AA               	movwf	mem_write@add^(0+128)
  1412  0EFD  3000               	movlw	0
  1413  0EFE  00AB               	movwf	(mem_write@add^(0+128)+1)
  1414  0EFF  30AA               	movlw	170
  1415  0F00  00B0               	movwf	??_mem_init^(0+128)
  1416  0F01  0830               	movf	??_mem_init^(0+128),w
  1417  0F02  00AC               	movwf	mem_write@data^(0+128)
  1418  0F03  120A  158A  25E6  120A  158A  	fcall	_mem_write
  1419                           
  1420                           ;panda17.c: 47: mem_write(0x0003,0x00);
  1421  0F08  3003               	movlw	3
  1422  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  1423  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  1424  0F0B  00AA               	movwf	mem_write@add^(0+128)
  1425  0F0C  3000               	movlw	0
  1426  0F0D  00AB               	movwf	(mem_write@add^(0+128)+1)
  1427  0F0E  01AC               	clrf	mem_write@data^(0+128)
  1428  0F0F  120A  158A  25E6  120A  158A  	fcall	_mem_write
  1429                           
  1430                           ;panda17.c: 48: mem_write(0x000A,0x00);
  1431  0F14  300A               	movlw	10
  1432  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  1433  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  1434  0F17  00AA               	movwf	mem_write@add^(0+128)
  1435  0F18  3000               	movlw	0
  1436  0F19  00AB               	movwf	(mem_write@add^(0+128)+1)
  1437  0F1A  01AC               	clrf	mem_write@data^(0+128)
  1438  0F1B  120A  158A  25E6  120A  158A  	fcall	_mem_write
  1439                           
  1440                           ;panda17.c: 49: mem_write(0x000B,0x00);
  1441  0F20  300B               	movlw	11
  1442  0F21  1683               	bsf	3,5	;RP0=1, select bank1
  1443  0F22  1303               	bcf	3,6	;RP1=0, select bank1
  1444  0F23  00AA               	movwf	mem_write@add^(0+128)
  1445  0F24  3000               	movlw	0
  1446  0F25  00AB               	movwf	(mem_write@add^(0+128)+1)
  1447  0F26  01AC               	clrf	mem_write@data^(0+128)
  1448  0F27  120A  158A  25E6  120A  158A  	fcall	_mem_write
  1449                           
  1450                           ;panda17.c: 50: mem_write(0x000C,0x00);
  1451  0F2C  300C               	movlw	12
  1452  0F2D  1683               	bsf	3,5	;RP0=1, select bank1
  1453  0F2E  1303               	bcf	3,6	;RP1=0, select bank1
  1454  0F2F  00AA               	movwf	mem_write@add^(0+128)
  1455  0F30  3000               	movlw	0
  1456  0F31  00AB               	movwf	(mem_write@add^(0+128)+1)
  1457  0F32  01AC               	clrf	mem_write@data^(0+128)
  1458  0F33  120A  158A  25E6  120A  158A  	fcall	_mem_write
  1459                           
  1460                           ;panda17.c: 51: mem_write(0x000D,0x00);
  1461  0F38  300D               	movlw	13
  1462  0F39  1683               	bsf	3,5	;RP0=1, select bank1
  1463  0F3A  1303               	bcf	3,6	;RP1=0, select bank1
  1464  0F3B  00AA               	movwf	mem_write@add^(0+128)
  1465  0F3C  3000               	movlw	0
  1466  0F3D  00AB               	movwf	(mem_write@add^(0+128)+1)
  1467  0F3E  01AC               	clrf	mem_write@data^(0+128)
  1468  0F3F  120A  158A  25E6   	fcall	_mem_write
  1469  0F42  0008               	return
  1470  0F43                     __end_of_mem_init:	
  1471                           
  1472                           	psect	text4
  1473  0DE6                     __ptext4:	
  1474 ;; *************** function _mem_write *****************
  1475 ;; Defined at:
  1476 ;;		line 13 in file "24lc512.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  add             2   10[BANK1 ] unsigned int 
  1479 ;;  data            1   12[BANK1 ] unsigned char 
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;  add_l           1   15[BANK1 ] unsigned char 
  1482 ;;  add_h           1   14[BANK1 ] unsigned char 
  1483 ;; Return value:  Size  Location     Type
  1484 ;;                  1    wreg      void 
  1485 ;; Registers used:
  1486 ;;		wreg, status,2, status,0, pclath, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1492 ;;      Params:         0       0       3       0       0
  1493 ;;      Locals:         0       0       2       0       0
  1494 ;;      Temps:          0       0       1       0       0
  1495 ;;      Totals:         0       0       6       0       0
  1496 ;;Total ram usage:        6 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    5
  1499 ;; This function calls:
  1500 ;;		_i2c_start
  1501 ;;		_i2c_stop
  1502 ;;		_i2c_write
  1503 ;; This function is called by:
  1504 ;;		_mem_init
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           
  1509                           ;psect for function _mem_write
  1510  0DE6                     _mem_write:	
  1511                           
  1512                           ;24lc512.c: 14: unsigned char add_h,add_l;
  1513                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  1514                           
  1515                           ;incstack = 0
  1516                           ; Regs used in _mem_write: [wreg+status,2+status,0+pclath+cstack]
  1517  0DE6  1683               	bsf	3,5	;RP0=1, select bank1
  1518  0DE7  1303               	bcf	3,6	;RP1=0, select bank1
  1519  0DE8  082B               	movf	(mem_write@add+1)^(0+128),w
  1520  0DE9  00AD               	movwf	??_mem_write^(0+128)
  1521  0DEA  082D               	movf	??_mem_write^(0+128),w
  1522  0DEB  00AE               	movwf	mem_write@add_h^(0+128)
  1523                           
  1524                           ;24lc512.c: 16: add_l = add & 0x00FF;
  1525  0DEC  082A               	movf	mem_write@add^(0+128),w
  1526  0DED  00AD               	movwf	??_mem_write^(0+128)
  1527  0DEE  082D               	movf	??_mem_write^(0+128),w
  1528  0DEF  00AF               	movwf	mem_write@add_l^(0+128)
  1529                           
  1530                           ;24lc512.c: 17: i2c_start();
  1531  0DF0  120A  158A  2390  120A  158A  	fcall	_i2c_start
  1532                           
  1533                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  1534  0DF5  1683               	bsf	3,5	;RP0=1, select bank1
  1535  0DF6  1303               	bcf	3,6	;RP1=0, select bank1
  1536  0DF7  01A0               	clrf	i2c_write@ack^(0+128)
  1537  0DF8  30A0               	movlw	160
  1538  0DF9  120A  158A  249F  120A  158A  	fcall	_i2c_write
  1539                           
  1540                           ;24lc512.c: 19: i2c_write(add_h,0);
  1541  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  1542  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  1543  0E00  01A0               	clrf	i2c_write@ack^(0+128)
  1544  0E01  082E               	movf	mem_write@add_h^(0+128),w
  1545  0E02  120A  158A  249F  120A  158A  	fcall	_i2c_write
  1546                           
  1547                           ;24lc512.c: 20: i2c_write(add_l,0);
  1548  0E07  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0E08  1303               	bcf	3,6	;RP1=0, select bank1
  1550  0E09  01A0               	clrf	i2c_write@ack^(0+128)
  1551  0E0A  082F               	movf	mem_write@add_l^(0+128),w
  1552  0E0B  120A  158A  249F  120A  158A  	fcall	_i2c_write
  1553                           
  1554                           ;24lc512.c: 21: i2c_write(data,0);
  1555  0E10  1683               	bsf	3,5	;RP0=1, select bank1
  1556  0E11  1303               	bcf	3,6	;RP1=0, select bank1
  1557  0E12  01A0               	clrf	i2c_write@ack^(0+128)
  1558  0E13  082C               	movf	mem_write@data^(0+128),w
  1559  0E14  120A  158A  249F  120A  158A  	fcall	_i2c_write
  1560                           
  1561                           ;24lc512.c: 22: i2c_stop();
  1562  0E19  120A  158A  23B3  120A  158A  	fcall	_i2c_stop
  1563  0E1E                     L1:	
  1564                           
  1565                           ;24lc512.c: 24: i2c_start();
  1566  0E1E  120A  158A  2390  120A  158A  	fcall	_i2c_start
  1567                           
  1568                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  1569  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0E24  1303               	bcf	3,6	;RP1=0, select bank1
  1571  0E25  01A0               	clrf	i2c_write@ack^(0+128)
  1572  0E26  30A0               	movlw	160
  1573  0E27  120A  158A  249F  120A  158A  	fcall	_i2c_write
  1574                           
  1575                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  1576  0E2C  1683               	bsf	3,5	;RP0=1, select bank1
  1577  0E2D  1303               	bcf	3,6	;RP1=0, select bank1
  1578  0E2E  1B11               	btfsc	17,6	;volatile
  1579  0E2F  2E1E               	goto	L1
  1580                           
  1581                           ;24lc512.c: 30: }
  1582                           ;24lc512.c: 31: i2c_stop();
  1583                           
  1584                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  1585                           
  1586                           ;24lc512.c: 28: i2c_start();
  1587  0E30  120A  158A  23B3   	fcall	_i2c_stop
  1588  0E33  0008               	return
  1589  0E34                     __end_of_mem_write:	
  1590                           
  1591                           	psect	text5
  1592  0D9C                     __ptext5:	
  1593 ;; *************** function _mem_read *****************
  1594 ;; Defined at:
  1595 ;;		line 34 in file "24lc512.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;  add             2   10[BANK1 ] unsigned int 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  add_l           1   15[BANK1 ] unsigned char 
  1600 ;;  add_h           1   14[BANK1 ] unsigned char 
  1601 ;;  rta             1   13[BANK1 ] unsigned char 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      unsigned char 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, pclath, cstack
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1611 ;;      Params:         0       0       2       0       0
  1612 ;;      Locals:         0       0       3       0       0
  1613 ;;      Temps:          0       0       1       0       0
  1614 ;;      Totals:         0       0       6       0       0
  1615 ;;Total ram usage:        6 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    5
  1618 ;; This function calls:
  1619 ;;		_i2c_read
  1620 ;;		_i2c_start
  1621 ;;		_i2c_stop
  1622 ;;		_i2c_write
  1623 ;; This function is called by:
  1624 ;;		_mem_init
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function _mem_read
  1630  0D9C                     _mem_read:	
  1631                           
  1632                           ;24lc512.c: 35: unsigned char rta;
  1633                           ;24lc512.c: 36: unsigned char add_h,add_l;
  1634                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  1635                           
  1636                           ;incstack = 0
  1637                           ; Regs used in _mem_read: [wreg+status,2+status,0+pclath+cstack]
  1638  0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  1639  0D9D  1303               	bcf	3,6	;RP1=0, select bank1
  1640  0D9E  082B               	movf	(mem_read@add+1)^(0+128),w
  1641  0D9F  00AC               	movwf	??_mem_read^(0+128)
  1642  0DA0  082C               	movf	??_mem_read^(0+128),w
  1643  0DA1  00AE               	movwf	mem_read@add_h^(0+128)
  1644                           
  1645                           ;24lc512.c: 38: add_l = add & 0x00FF;
  1646  0DA2  082A               	movf	mem_read@add^(0+128),w
  1647  0DA3  00AC               	movwf	??_mem_read^(0+128)
  1648  0DA4  082C               	movf	??_mem_read^(0+128),w
  1649  0DA5  00AF               	movwf	mem_read@add_l^(0+128)
  1650                           
  1651                           ;24lc512.c: 39: i2c_start();
  1652  0DA6  120A  158A  2390  120A  158A  	fcall	_i2c_start
  1653                           
  1654                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  1655  0DAB  1683               	bsf	3,5	;RP0=1, select bank1
  1656  0DAC  1303               	bcf	3,6	;RP1=0, select bank1
  1657  0DAD  01A0               	clrf	i2c_write@ack^(0+128)
  1658  0DAE  30A0               	movlw	160
  1659  0DAF  120A  158A  249F  120A  158A  	fcall	_i2c_write
  1660                           
  1661                           ;24lc512.c: 41: i2c_write(add_h,0);
  1662  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  1663  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  1664  0DB6  01A0               	clrf	i2c_write@ack^(0+128)
  1665  0DB7  082E               	movf	mem_read@add_h^(0+128),w
  1666  0DB8  120A  158A  249F  120A  158A  	fcall	_i2c_write
  1667                           
  1668                           ;24lc512.c: 42: i2c_write(add_l,0);
  1669  0DBD  1683               	bsf	3,5	;RP0=1, select bank1
  1670  0DBE  1303               	bcf	3,6	;RP1=0, select bank1
  1671  0DBF  01A0               	clrf	i2c_write@ack^(0+128)
  1672  0DC0  082F               	movf	mem_read@add_l^(0+128),w
  1673  0DC1  120A  158A  249F  120A  158A  	fcall	_i2c_write
  1674                           
  1675                           ;24lc512.c: 43: i2c_start();
  1676  0DC6  120A  158A  2390  120A  158A  	fcall	_i2c_start
  1677                           
  1678                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  1679  0DCB  1683               	bsf	3,5	;RP0=1, select bank1
  1680  0DCC  1303               	bcf	3,6	;RP1=0, select bank1
  1681  0DCD  01A0               	clrf	i2c_write@ack^(0+128)
  1682  0DCE  30A1               	movlw	161
  1683  0DCF  120A  158A  249F  120A  158A  	fcall	_i2c_write
  1684                           
  1685                           ;24lc512.c: 45: rta = i2c_read(0);
  1686  0DD4  3000               	movlw	0
  1687  0DD5  120A  118A  2771  120A  158A  	fcall	_i2c_read
  1688  0DDA  1683               	bsf	3,5	;RP0=1, select bank1
  1689  0DDB  1303               	bcf	3,6	;RP1=0, select bank1
  1690  0DDC  00AC               	movwf	??_mem_read^(0+128)
  1691  0DDD  082C               	movf	??_mem_read^(0+128),w
  1692  0DDE  00AD               	movwf	mem_read@rta^(0+128)
  1693                           
  1694                           ;24lc512.c: 46: i2c_stop();
  1695  0DDF  120A  158A  23B3   	fcall	_i2c_stop
  1696                           
  1697                           ;24lc512.c: 47: return rta;
  1698  0DE2  1683               	bsf	3,5	;RP0=1, select bank1
  1699  0DE3  1303               	bcf	3,6	;RP1=0, select bank1
  1700  0DE4  082D               	movf	mem_read@rta^(0+128),w
  1701  0DE5  0008               	return
  1702  0DE6                     __end_of_mem_read:	
  1703                           
  1704                           	psect	text6
  1705  0C9F                     __ptext6:	
  1706 ;; *************** function _i2c_write *****************
  1707 ;; Defined at:
  1708 ;;		line 39 in file "i2clib.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  datum           1    wreg     unsigned char 
  1711 ;;  ack             1    0[BANK1 ] unsigned char 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;  datum           1    9[BANK1 ] unsigned char 
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1723 ;;      Params:         0       0       1       0       0
  1724 ;;      Locals:         0       0       1       0       0
  1725 ;;      Temps:          0       0       8       0       0
  1726 ;;      Totals:         0       0      10       0       0
  1727 ;;Total ram usage:       10 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; Hardware stack levels required when called:    4
  1730 ;; This function calls:
  1731 ;;		Nothing
  1732 ;; This function is called by:
  1733 ;;		_mem_write
  1734 ;;		_mem_read
  1735 ;;		_si_reset
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function _i2c_write
  1741  0C9F                     _i2c_write:	
  1742                           
  1743                           ;incstack = 0
  1744                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
  1745                           ;i2c_write@datum stored from wreg
  1746  0C9F  1683               	bsf	3,5	;RP0=1, select bank1
  1747  0CA0  1303               	bcf	3,6	;RP1=0, select bank1
  1748  0CA1  00A9               	movwf	i2c_write@datum^(0+128)
  1749  0CA2                     l1547:	
  1750                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1751                           
  1752  0CA2  0811               	movf	17,w	;volatile
  1753  0CA3  3901               	andlw	1
  1754  0CA4  00A1               	movwf	??_i2c_write^(0+128)
  1755  0CA5  0C11               	rrf	17,w	;volatile
  1756  0CA6  3901               	andlw	1
  1757  0CA7  00A2               	movwf	(??_i2c_write+1)^(0+128)
  1758  0CA8  0C11               	rrf	17,w	;volatile
  1759  0CA9  00A3               	movwf	(??_i2c_write+2)^(0+128)
  1760  0CAA  0CA3               	rrf	(??_i2c_write+2)^(0+128),f
  1761  0CAB  0C23               	rrf	(??_i2c_write+2)^(0+128),w
  1762  0CAC  3901               	andlw	1
  1763  0CAD  00A4               	movwf	(??_i2c_write+3)^(0+128)
  1764  0CAE  0E11               	swapf	17,w	;volatile
  1765  0CAF  3901               	andlw	1
  1766  0CB0  00A5               	movwf	(??_i2c_write+4)^(0+128)
  1767  0CB1  0C11               	rrf	17,w	;volatile
  1768  0CB2  00A6               	movwf	(??_i2c_write+5)^(0+128)
  1769  0CB3  0C26               	rrf	(??_i2c_write+5)^(0+128),w
  1770  0CB4  3901               	andlw	1
  1771  0CB5  00A7               	movwf	(??_i2c_write+6)^(0+128)
  1772  0CB6  0C14               	rrf	20,w	;volatile
  1773  0CB7  00A8               	movwf	(??_i2c_write+7)^(0+128)
  1774  0CB8  0C28               	rrf	(??_i2c_write+7)^(0+128),w
  1775  0CB9  3901               	andlw	1
  1776  0CBA  0427               	iorwf	(??_i2c_write+6)^(0+128),w
  1777  0CBB  0425               	iorwf	(??_i2c_write+4)^(0+128),w
  1778  0CBC  0424               	iorwf	(??_i2c_write+3)^(0+128),w
  1779  0CBD  0422               	iorwf	(??_i2c_write+1)^(0+128),w
  1780  0CBE  0421               	iorwf	??_i2c_write^(0+128),w
  1781  0CBF  1D03               	btfss	3,2
  1782  0CC0  2CA2               	goto	l1547
  1783                           
  1784                           ;i2clib.c: 42: SSPBUF = datum;
  1785  0CC1  0829               	movf	i2c_write@datum^(0+128),w
  1786  0CC2  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0CC3  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0CC4  0093               	movwf	19	;volatile
  1789  0CC5                     l179:	
  1790                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  1791                           
  1792  0CC5  1683               	bsf	3,5	;RP0=1, select bank1
  1793  0CC6  1303               	bcf	3,6	;RP1=0, select bank1
  1794  0CC7  1814               	btfsc	20,0	;volatile
  1795  0CC8  2CC5               	goto	l179
  1796                           
  1797                           ;i2clib.c: 44: if(ack){
  1798  0CC9  0820               	movf	i2c_write@ack^(0+128),w
  1799  0CCA  1903               	btfsc	3,2
  1800  0CCB  2CCE               	goto	l186
  1801  0CCC                     l183:	
  1802                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  1803                           
  1804  0CCC  1B11               	btfsc	17,6	;volatile
  1805  0CCD  2CCC               	goto	l183
  1806  0CCE                     l186:	
  1807                           ;i2clib.c: 46: }
  1808                           ;i2clib.c: 47: }
  1809                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  1810                           
  1811  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0CCF  198C               	btfsc	12,3	;volatile
  1813  0CD0  0008               	return
  1814  0CD1  2CCE               	goto	l186
  1815  0CD2                     __end_of_i2c_write:	
  1816                           
  1817                           	psect	text7
  1818  0BB3                     __ptext7:	
  1819 ;; *************** function _i2c_stop *****************
  1820 ;; Defined at:
  1821 ;;		line 34 in file "i2clib.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;		None
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;		None
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0
  1830 ;; Tracked objects:
  1831 ;;		On entry : 0/0
  1832 ;;		On exit  : 0/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1835 ;;      Params:         0       0       0       0       0
  1836 ;;      Locals:         0       0       0       0       0
  1837 ;;      Temps:          0       0       8       0       0
  1838 ;;      Totals:         0       0       8       0       0
  1839 ;;Total ram usage:        8 bytes
  1840 ;; Hardware stack levels used:    1
  1841 ;; Hardware stack levels required when called:    4
  1842 ;; This function calls:
  1843 ;;		Nothing
  1844 ;; This function is called by:
  1845 ;;		_mem_write
  1846 ;;		_mem_read
  1847 ;;		_si_reset
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           
  1852                           ;psect for function _i2c_stop
  1853  0BB3                     _i2c_stop:	
  1854  0BB3                     l1543:	
  1855                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1856                           
  1857                           ;incstack = 0
  1858                           ; Regs used in _i2c_stop: [wreg+status,2+status,0]
  1859                           
  1860  0BB3  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0BB4  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0BB5  0811               	movf	17,w	;volatile
  1863  0BB6  3901               	andlw	1
  1864  0BB7  00A0               	movwf	??_i2c_stop^(0+128)
  1865  0BB8  0C11               	rrf	17,w	;volatile
  1866  0BB9  3901               	andlw	1
  1867  0BBA  00A1               	movwf	(??_i2c_stop+1)^(0+128)
  1868  0BBB  0C11               	rrf	17,w	;volatile
  1869  0BBC  00A2               	movwf	(??_i2c_stop+2)^(0+128)
  1870  0BBD  0CA2               	rrf	(??_i2c_stop+2)^(0+128),f
  1871  0BBE  0C22               	rrf	(??_i2c_stop+2)^(0+128),w
  1872  0BBF  3901               	andlw	1
  1873  0BC0  00A3               	movwf	(??_i2c_stop+3)^(0+128)
  1874  0BC1  0E11               	swapf	17,w	;volatile
  1875  0BC2  3901               	andlw	1
  1876  0BC3  00A4               	movwf	(??_i2c_stop+4)^(0+128)
  1877  0BC4  0C11               	rrf	17,w	;volatile
  1878  0BC5  00A5               	movwf	(??_i2c_stop+5)^(0+128)
  1879  0BC6  0C25               	rrf	(??_i2c_stop+5)^(0+128),w
  1880  0BC7  3901               	andlw	1
  1881  0BC8  00A6               	movwf	(??_i2c_stop+6)^(0+128)
  1882  0BC9  0C14               	rrf	20,w	;volatile
  1883  0BCA  00A7               	movwf	(??_i2c_stop+7)^(0+128)
  1884  0BCB  0C27               	rrf	(??_i2c_stop+7)^(0+128),w
  1885  0BCC  3901               	andlw	1
  1886  0BCD  0426               	iorwf	(??_i2c_stop+6)^(0+128),w
  1887  0BCE  0424               	iorwf	(??_i2c_stop+4)^(0+128),w
  1888  0BCF  0423               	iorwf	(??_i2c_stop+3)^(0+128),w
  1889  0BD0  0421               	iorwf	(??_i2c_stop+1)^(0+128),w
  1890  0BD1  0420               	iorwf	??_i2c_stop^(0+128),w
  1891  0BD2  1D03               	btfss	3,2
  1892  0BD3  2BB3               	goto	l1543
  1893                           
  1894                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  1895  0BD4  1511               	bsf	17,2	;volatile
  1896  0BD5  0008               	return
  1897  0BD6                     __end_of_i2c_stop:	
  1898                           
  1899                           	psect	text8
  1900  0B90                     __ptext8:	
  1901 ;; *************** function _i2c_start *****************
  1902 ;; Defined at:
  1903 ;;		line 24 in file "i2clib.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;		None
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1917 ;;      Params:         0       0       0       0       0
  1918 ;;      Locals:         0       0       0       0       0
  1919 ;;      Temps:          0       0       8       0       0
  1920 ;;      Totals:         0       0       8       0       0
  1921 ;;Total ram usage:        8 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    4
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_mem_write
  1928 ;;		_mem_read
  1929 ;;		_si_reset
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _i2c_start
  1935  0B90                     _i2c_start:	
  1936  0B90                     l1535:	
  1937                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _i2c_start: [wreg+status,2+status,0]
  1941                           
  1942  0B90  1683               	bsf	3,5	;RP0=1, select bank1
  1943  0B91  1303               	bcf	3,6	;RP1=0, select bank1
  1944  0B92  0811               	movf	17,w	;volatile
  1945  0B93  3901               	andlw	1
  1946  0B94  00A0               	movwf	??_i2c_start^(0+128)
  1947  0B95  0C11               	rrf	17,w	;volatile
  1948  0B96  3901               	andlw	1
  1949  0B97  00A1               	movwf	(??_i2c_start+1)^(0+128)
  1950  0B98  0C11               	rrf	17,w	;volatile
  1951  0B99  00A2               	movwf	(??_i2c_start+2)^(0+128)
  1952  0B9A  0CA2               	rrf	(??_i2c_start+2)^(0+128),f
  1953  0B9B  0C22               	rrf	(??_i2c_start+2)^(0+128),w
  1954  0B9C  3901               	andlw	1
  1955  0B9D  00A3               	movwf	(??_i2c_start+3)^(0+128)
  1956  0B9E  0E11               	swapf	17,w	;volatile
  1957  0B9F  3901               	andlw	1
  1958  0BA0  00A4               	movwf	(??_i2c_start+4)^(0+128)
  1959  0BA1  0C11               	rrf	17,w	;volatile
  1960  0BA2  00A5               	movwf	(??_i2c_start+5)^(0+128)
  1961  0BA3  0C25               	rrf	(??_i2c_start+5)^(0+128),w
  1962  0BA4  3901               	andlw	1
  1963  0BA5  00A6               	movwf	(??_i2c_start+6)^(0+128)
  1964  0BA6  0C14               	rrf	20,w	;volatile
  1965  0BA7  00A7               	movwf	(??_i2c_start+7)^(0+128)
  1966  0BA8  0C27               	rrf	(??_i2c_start+7)^(0+128),w
  1967  0BA9  3901               	andlw	1
  1968  0BAA  0426               	iorwf	(??_i2c_start+6)^(0+128),w
  1969  0BAB  0424               	iorwf	(??_i2c_start+4)^(0+128),w
  1970  0BAC  0423               	iorwf	(??_i2c_start+3)^(0+128),w
  1971  0BAD  0421               	iorwf	(??_i2c_start+1)^(0+128),w
  1972  0BAE  0420               	iorwf	??_i2c_start^(0+128),w
  1973  0BAF  1D03               	btfss	3,2
  1974  0BB0  2B90               	goto	l1535
  1975                           
  1976                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  1977  0BB1  1411               	bsf	17,0	;volatile
  1978  0BB2  0008               	return
  1979  0BB3                     __end_of_i2c_start:	
  1980                           
  1981                           	psect	text9
  1982  0771                     __ptext9:	
  1983 ;; *************** function _i2c_read *****************
  1984 ;; Defined at:
  1985 ;;		line 51 in file "i2clib.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  ack             1    wreg     unsigned char 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  ack             1    9[BANK1 ] unsigned char 
  1990 ;;  resp            1    8[BANK1 ] unsigned char 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      unsigned char 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2000 ;;      Params:         0       0       0       0       0
  2001 ;;      Locals:         0       0       2       0       0
  2002 ;;      Temps:          0       0       8       0       0
  2003 ;;      Totals:         0       0      10       0       0
  2004 ;;Total ram usage:       10 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:    4
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_mem_read
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           
  2015                           ;psect for function _i2c_read
  2016  0771                     _i2c_read:	
  2017                           
  2018                           ;incstack = 0
  2019                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  2020                           ;i2c_read@ack stored from wreg
  2021  0771  1683               	bsf	3,5	;RP0=1, select bank1
  2022  0772  1303               	bcf	3,6	;RP1=0, select bank1
  2023  0773  00A9               	movwf	i2c_read@ack^(0+128)
  2024                           
  2025                           ;i2clib.c: 52: unsigned char resp;
  2026                           ;i2clib.c: 53: static bit flag, not_flag;
  2027                           ;i2clib.c: 54: flag = ack & 0x01;
  2028  0774  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0775  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0776  10DF               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2031  0777  1683               	bsf	3,5	;RP0=1, select bank1
  2032  0778  1303               	bcf	3,6	;RP1=0, select bank1
  2033  0779  1C29               	btfss	i2c_read@ack^(0+128),0
  2034  077A  2F7E               	goto	l1557
  2035  077B  1283               	bcf	3,5	;RP0=0, select bank0
  2036  077C  1303               	bcf	3,6	;RP1=0, select bank0
  2037  077D  14DF               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2038  077E                     l1557:	
  2039                           
  2040                           ;i2clib.c: 55: if (ack == 1){
  2041  077E  1683               	bsf	3,5	;RP0=1, select bank1
  2042  077F  1303               	bcf	3,6	;RP1=0, select bank1
  2043  0780  0329               	decf	i2c_read@ack^(0+128),w
  2044  0781  1D03               	btfss	3,2
  2045  0782  2F86               	goto	l1561
  2046                           
  2047                           ;i2clib.c: 56: not_flag = 0;
  2048  0783  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0784  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0785  105F               	bcf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2051  0786                     l1561:	
  2052                           
  2053                           ;i2clib.c: 57: }
  2054                           ;i2clib.c: 58: if (ack == 3){
  2055  0786  3003               	movlw	3
  2056  0787  1683               	bsf	3,5	;RP0=1, select bank1
  2057  0788  1303               	bcf	3,6	;RP1=0, select bank1
  2058  0789  0629               	xorwf	i2c_read@ack^(0+128),w
  2059  078A  1D03               	btfss	3,2
  2060  078B  2F8F               	goto	l1565
  2061                           
  2062                           ;i2clib.c: 59: not_flag = 1;
  2063  078C  1283               	bcf	3,5	;RP0=0, select bank0
  2064  078D  1303               	bcf	3,6	;RP1=0, select bank0
  2065  078E  145F               	bsf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2066  078F                     l1565:	
  2067                           ;i2clib.c: 60: }
  2068                           ;i2clib.c: 61: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  2069                           
  2070  078F  1683               	bsf	3,5	;RP0=1, select bank1
  2071  0790  1303               	bcf	3,6	;RP1=0, select bank1
  2072  0791  0811               	movf	17,w	;volatile
  2073  0792  3901               	andlw	1
  2074  0793  00A0               	movwf	??_i2c_read^(0+128)
  2075  0794  0C11               	rrf	17,w	;volatile
  2076  0795  3901               	andlw	1
  2077  0796  00A1               	movwf	(??_i2c_read+1)^(0+128)
  2078  0797  0C11               	rrf	17,w	;volatile
  2079  0798  00A2               	movwf	(??_i2c_read+2)^(0+128)
  2080  0799  0CA2               	rrf	(??_i2c_read+2)^(0+128),f
  2081  079A  0C22               	rrf	(??_i2c_read+2)^(0+128),w
  2082  079B  3901               	andlw	1
  2083  079C  00A3               	movwf	(??_i2c_read+3)^(0+128)
  2084  079D  0E11               	swapf	17,w	;volatile
  2085  079E  3901               	andlw	1
  2086  079F  00A4               	movwf	(??_i2c_read+4)^(0+128)
  2087  07A0  0C11               	rrf	17,w	;volatile
  2088  07A1  00A5               	movwf	(??_i2c_read+5)^(0+128)
  2089  07A2  0C25               	rrf	(??_i2c_read+5)^(0+128),w
  2090  07A3  3901               	andlw	1
  2091  07A4  00A6               	movwf	(??_i2c_read+6)^(0+128)
  2092  07A5  0C14               	rrf	20,w	;volatile
  2093  07A6  00A7               	movwf	(??_i2c_read+7)^(0+128)
  2094  07A7  0C27               	rrf	(??_i2c_read+7)^(0+128),w
  2095  07A8  3901               	andlw	1
  2096  07A9  0426               	iorwf	(??_i2c_read+6)^(0+128),w
  2097  07AA  0424               	iorwf	(??_i2c_read+4)^(0+128),w
  2098  07AB  0423               	iorwf	(??_i2c_read+3)^(0+128),w
  2099  07AC  0421               	iorwf	(??_i2c_read+1)^(0+128),w
  2100  07AD  0420               	iorwf	??_i2c_read^(0+128),w
  2101  07AE  1D03               	btfss	3,2
  2102  07AF  2F8F               	goto	l1565
  2103                           
  2104                           ;i2clib.c: 62: SSPCON2bits.RCEN = 1;
  2105  07B0  1591               	bsf	17,3	;volatile
  2106  07B1                     l201:	
  2107                           ;i2clib.c: 63: while(!SSPSTATbits.BF);
  2108                           
  2109  07B1  1C14               	btfss	20,0	;volatile
  2110  07B2  2FB1               	goto	l201
  2111  07B3                     l204:	
  2112                           ;i2clib.c: 64: while(!PIR1bits.SSPIF);
  2113                           
  2114  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  2115  07B4  1D8C               	btfss	12,3	;volatile
  2116  07B5  2FB3               	goto	l204
  2117                           
  2118                           ;i2clib.c: 65: SSPCON2bits.ACKDT = not_flag;
  2119  07B6  1C5F               	btfss	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2120  07B7  2FBC               	goto	u1270
  2121  07B8  1683               	bsf	3,5	;RP0=1, select bank1
  2122  07B9  1303               	bcf	3,6	;RP1=0, select bank1
  2123  07BA  1691               	bsf	17,5	;volatile
  2124  07BB  2FBF               	goto	u1284
  2125  07BC                     u1270:	
  2126  07BC  1683               	bsf	3,5	;RP0=1, select bank1
  2127  07BD  1303               	bcf	3,6	;RP1=0, select bank1
  2128  07BE  1291               	bcf	17,5	;volatile
  2129  07BF                     u1284:	
  2130                           
  2131                           ;i2clib.c: 66: SSPCON2bits.ACKEN = flag;
  2132  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  2133  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  2134  07C1  1CDF               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2135  07C2  2FC7               	goto	u1290
  2136  07C3  1683               	bsf	3,5	;RP0=1, select bank1
  2137  07C4  1303               	bcf	3,6	;RP1=0, select bank1
  2138  07C5  1611               	bsf	17,4	;volatile
  2139  07C6  2FCA               	goto	l1567
  2140  07C7                     u1290:	
  2141  07C7  1683               	bsf	3,5	;RP0=1, select bank1
  2142  07C8  1303               	bcf	3,6	;RP1=0, select bank1
  2143  07C9  1211               	bcf	17,4	;volatile
  2144  07CA                     l1567:	
  2145                           
  2146                           ;i2clib.c: 67: resp = SSPBUF;
  2147  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  2148  07CB  1303               	bcf	3,6	;RP1=0, select bank0
  2149  07CC  0813               	movf	19,w	;volatile
  2150  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  2151  07CE  1303               	bcf	3,6	;RP1=0, select bank1
  2152  07CF  00A0               	movwf	??_i2c_read^(0+128)
  2153  07D0  0820               	movf	??_i2c_read^(0+128),w
  2154  07D1  00A8               	movwf	i2c_read@resp^(0+128)
  2155  07D2                     l207:	
  2156                           ;i2clib.c: 68: while(SSPSTATbits.BF);
  2157                           
  2158  07D2  1814               	btfsc	20,0	;volatile
  2159  07D3  2FD2               	goto	l207
  2160                           
  2161                           ;i2clib.c: 69: return resp;
  2162  07D4  0828               	movf	i2c_read@resp^(0+128),w
  2163  07D5  0008               	return
  2164  07D6                     __end_of_i2c_read:	
  2165                           
  2166                           	psect	text10
  2167  07D6                     __ptext10:	
  2168 ;; *************** function _init_timer2 *****************
  2169 ;; Defined at:
  2170 ;;		line 245 in file "panda17.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  pre             1    wreg     unsigned char 
  2173 ;;  post            1    0[BANK1 ] unsigned char 
  2174 ;;  eoc             1    1[BANK1 ] unsigned char 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  pre             1    4[BANK1 ] unsigned char 
  2177 ;;  sfr             1    5[BANK1 ] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      void 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2187 ;;      Params:         0       0       2       0       0
  2188 ;;      Locals:         0       0       2       0       0
  2189 ;;      Temps:          0       0       2       0       0
  2190 ;;      Totals:         0       0       6       0       0
  2191 ;;Total ram usage:        6 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    4
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           
  2202                           ;psect for function _init_timer2
  2203  07D6                     _init_timer2:	
  2204                           
  2205                           ;incstack = 0
  2206                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
  2207                           ;init_timer2@pre stored from wreg
  2208  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  2209  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  2210  07D8  00A4               	movwf	init_timer2@pre^(0+128)
  2211                           
  2212                           ;panda17.c: 246: unsigned char sfr = 0x00;
  2213  07D9  01A5               	clrf	init_timer2@sfr^(0+128)
  2214                           
  2215                           ;panda17.c: 247: PR2 = eoc;
  2216  07DA  0821               	movf	init_timer2@eoc^(0+128),w
  2217  07DB  0092               	movwf	18	;volatile
  2218                           
  2219                           ;panda17.c: 248: sfr = ((post-1) << 3) & 0x78;
  2220  07DC  0820               	movf	init_timer2@post^(0+128),w
  2221  07DD  00A2               	movwf	??_init_timer2^(0+128)
  2222  07DE  3002               	movlw	2
  2223  07DF                     u1995:	
  2224  07DF  1003               	clrc
  2225  07E0  0DA2               	rlf	??_init_timer2^(0+128),f
  2226  07E1  3EFF               	addlw	-1
  2227  07E2  1D03               	skipz
  2228  07E3  2FDF               	goto	u1995
  2229  07E4  1003               	clrc
  2230  07E5  0D22               	rlf	??_init_timer2^(0+128),w
  2231  07E6  3EF8               	addlw	248
  2232  07E7  3978               	andlw	120
  2233  07E8  00A3               	movwf	(??_init_timer2+1)^(0+128)
  2234  07E9  0823               	movf	(??_init_timer2+1)^(0+128),w
  2235  07EA  00A5               	movwf	init_timer2@sfr^(0+128)
  2236                           
  2237                           ;panda17.c: 249: sfr += 4;
  2238  07EB  3004               	movlw	4
  2239  07EC  00A2               	movwf	??_init_timer2^(0+128)
  2240  07ED  0822               	movf	??_init_timer2^(0+128),w
  2241  07EE  07A5               	addwf	init_timer2@sfr^(0+128),f
  2242                           
  2243                           ;panda17.c: 250: sfr += pre;
  2244  07EF  0824               	movf	init_timer2@pre^(0+128),w
  2245  07F0  00A2               	movwf	??_init_timer2^(0+128)
  2246  07F1  0822               	movf	??_init_timer2^(0+128),w
  2247  07F2  07A5               	addwf	init_timer2@sfr^(0+128),f
  2248                           
  2249                           ;panda17.c: 251: T2CON = sfr;
  2250  07F3  0825               	movf	init_timer2@sfr^(0+128),w
  2251  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  2252  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  2253  07F6  0092               	movwf	18	;volatile
  2254                           
  2255                           ;panda17.c: 252: PIE1bits.TMR2IE = 1;
  2256  07F7  1683               	bsf	3,5	;RP0=1, select bank1
  2257  07F8  1303               	bcf	3,6	;RP1=0, select bank1
  2258  07F9  148C               	bsf	12,1	;volatile
  2259  07FA  0008               	return
  2260  07FB                     __end_of_init_timer2:	
  2261                           
  2262                           	psect	text11
  2263  0AC2                     __ptext11:	
  2264 ;; *************** function _i2c_init *****************
  2265 ;; Defined at:
  2266 ;;		line 13 in file "i2clib.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;		None
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;		None
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, status,2, status,0
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2280 ;;      Params:         0       0       0       0       0
  2281 ;;      Locals:         0       0       0       0       0
  2282 ;;      Temps:          0       0       0       0       0
  2283 ;;      Totals:         0       0       0       0       0
  2284 ;;Total ram usage:        0 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    4
  2287 ;; This function calls:
  2288 ;;		Nothing
  2289 ;; This function is called by:
  2290 ;;		_main
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294                           
  2295                           ;psect for function _i2c_init
  2296  0AC2                     _i2c_init:	
  2297                           
  2298                           ;i2clib.c: 15: SSPCONbits.SSPM = 0b1000;
  2299                           
  2300                           ;incstack = 0
  2301                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  2302  0AC2  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0AC3  1303               	bcf	3,6	;RP1=0, select bank0
  2304  0AC4  0814               	movf	20,w	;volatile
  2305  0AC5  39F0               	andlw	-16
  2306  0AC6  3808               	iorlw	8
  2307  0AC7  0094               	movwf	20	;volatile
  2308                           
  2309                           ;i2clib.c: 16: SSPCONbits.SSPEN = 1;
  2310  0AC8  1694               	bsf	20,5	;volatile
  2311                           
  2312                           ;i2clib.c: 18: SSPADD = 0x04;
  2313  0AC9  3004               	movlw	4
  2314  0ACA  1683               	bsf	3,5	;RP0=1, select bank1
  2315  0ACB  1303               	bcf	3,6	;RP1=0, select bank1
  2316  0ACC  0093               	movwf	19	;volatile
  2317                           
  2318                           ;i2clib.c: 19: SSPSTATbits.SMP = 1;
  2319  0ACD  1794               	bsf	20,7	;volatile
  2320                           
  2321                           ;i2clib.c: 20: TRISCbits.TRISC3 = 1;
  2322  0ACE  1587               	bsf	7,3	;volatile
  2323                           
  2324                           ;i2clib.c: 21: TRISCbits.TRISC4 = 1;
  2325  0ACF  1607               	bsf	7,4	;volatile
  2326  0AD0  0008               	return
  2327  0AD1                     __end_of_i2c_init:	
  2328                           
  2329                           	psect	text12
  2330  0029                     __ptext12:	
  2331 ;; *************** function _ints_isr *****************
  2332 ;; Defined at:
  2333 ;;		line 74 in file "panda17.c"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  k               1   38[BANK0 ] unsigned char 
  2338 ;;  z               1   37[BANK0 ] unsigned char 
  2339 ;;  hum_add         2   47[BANK0 ] unsigned int 
  2340 ;;  temp_add        2   45[BANK0 ] unsigned int 
  2341 ;;  up              2   39[BANK0 ] unsigned int 
  2342 ;;  temp_val        2   33[BANK0 ] unsigned int 
  2343 ;;  hum_val         2   31[BANK0 ] unsigned int 
  2344 ;;  arg             1   51[BANK0 ] unsigned char 
  2345 ;;  aux2            2   49[BANK0 ] unsigned int 
  2346 ;;  aux             2   43[BANK0 ] unsigned int 
  2347 ;;  n               2   41[BANK0 ] unsigned int 
  2348 ;;  add             2   35[BANK0 ] unsigned int 
  2349 ;;  dt              2   28[BANK0 ] unsigned int 
  2350 ;;  rcv             1   30[BANK0 ] unsigned char 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2360 ;;      Params:         0       0       0       0       0
  2361 ;;      Locals:         0      24       0       0       0
  2362 ;;      Temps:          0       8       0       0       0
  2363 ;;      Totals:         0      32       0       0       0
  2364 ;;Total ram usage:       32 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    3
  2367 ;; This function calls:
  2368 ;;		_ds_get
  2369 ;;		_ds_set
  2370 ;;		_printf
  2371 ;;		_save_the_date
  2372 ;;		_si_read_h
  2373 ;;		_si_read_t
  2374 ;;		i1_mem_init
  2375 ;;		i1_mem_read
  2376 ;;		i1_mem_write
  2377 ;; This function is called by:
  2378 ;;		Interrupt level 1
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           
  2383                           ;psect for function _ints_isr
  2384  0029                     _ints_isr:	
  2385                           
  2386                           ;panda17.c: 76: if (PIR1bits.RCIF){
  2387  0029  1E8C               	btfss	12,5	;volatile
  2388  002A  2A7D               	goto	i1l93
  2389                           
  2390                           ;panda17.c: 77: INTCONbits.GIE = 0;
  2391  002B  138B               	bcf	11,7	;volatile
  2392                           
  2393                           ;panda17.c: 78: static bit ferr = 0, oerr = 0;
  2394                           ;panda17.c: 79: unsigned char rcv = 0;
  2395  002C  01BE               	clrf	ints_isr@rcv
  2396                           
  2397                           ;panda17.c: 80: ferr = RCSTAbits.FERR;
  2398  002D  11DF               	bcf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2399  002E  1918               	btfsc	24,2	;volatile
  2400  002F  15DF               	bsf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2401                           
  2402                           ;panda17.c: 81: oerr = RCSTAbits.OERR;
  2403  0030  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0031  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0032  115F               	bcf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2406  0033  1898               	btfsc	24,1	;volatile
  2407  0034  155F               	bsf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2408                           
  2409                           ;panda17.c: 82: if (!ferr & !oerr){
  2410  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0036  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0037  1DDF               	btfss	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2413  0038  195F               	btfsc	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2414  0039  2A69               	goto	i1l2137
  2415                           
  2416                           ;panda17.c: 83: rcv = RCREG;
  2417  003A  081A               	movf	26,w	;volatile
  2418  003B  00B4               	movwf	??_ints_isr
  2419  003C  0834               	movf	??_ints_isr,w
  2420  003D  00BE               	movwf	ints_isr@rcv
  2421                           
  2422                           ;panda17.c: 84: }
  2423                           ;panda17.c: 85: switch (rcv){
  2424  003E  2A69               	goto	i1l2137
  2425  003F                     i1l100:	
  2426                           ;panda17.c: 86: case 'a':
  2427                           
  2428                           
  2429                           ;panda17.c: 87: PORTBbits.RB4 = 1;
  2430  003F  1606               	bsf	6,4	;volatile
  2431                           
  2432                           ;panda17.c: 88: unsigned int dt = 0,add,n,aux;
  2433  0040  01BC               	clrf	ints_isr@dt
  2434  0041  01BD               	clrf	ints_isr@dt+1
  2435                           
  2436                           ;panda17.c: 89: unsigned int aux2;
  2437                           ;panda17.c: 90: add = mem_read(0x0A);
  2438  0042  300A               	movlw	10
  2439  0043  00FA               	movwf	i1mem_read@add
  2440  0044  3000               	movlw	0
  2441  0045  00FB               	movwf	i1mem_read@add+1
  2442  0046  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2443  004B  1283               	bcf	3,5	;RP0=0, select bank0
  2444  004C  1303               	bcf	3,6	;RP1=0, select bank0
  2445  004D  00B4               	movwf	??_ints_isr
  2446  004E  01B5               	clrf	??_ints_isr+1
  2447  004F  0834               	movf	??_ints_isr,w
  2448  0050  00C3               	movwf	ints_isr@add
  2449  0051  0835               	movf	??_ints_isr+1,w
  2450  0052  00C4               	movwf	ints_isr@add+1
  2451                           
  2452                           ;panda17.c: 91: add = add << 8;
  2453  0053  0843               	movf	ints_isr@add,w
  2454  0054  00B5               	movwf	??_ints_isr+1
  2455  0055  01B4               	clrf	??_ints_isr
  2456  0056  0834               	movf	??_ints_isr,w
  2457  0057  00C3               	movwf	ints_isr@add
  2458  0058  0835               	movf	??_ints_isr+1,w
  2459  0059  00C4               	movwf	ints_isr@add+1
  2460                           
  2461                           ;panda17.c: 92: add += mem_read(0x0B);
  2462  005A  300B               	movlw	11
  2463  005B  00FA               	movwf	i1mem_read@add
  2464  005C  3000               	movlw	0
  2465  005D  00FB               	movwf	i1mem_read@add+1
  2466  005E  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2467  0063  1283               	bcf	3,5	;RP0=0, select bank0
  2468  0064  1303               	bcf	3,6	;RP1=0, select bank0
  2469  0065  00B4               	movwf	??_ints_isr
  2470  0066  01B5               	clrf	??_ints_isr+1
  2471  0067  0834               	movf	??_ints_isr,w
  2472  0068  07C3               	addwf	ints_isr@add,f
  2473  0069  1803               	skipnc
  2474  006A  0AC4               	incf	ints_isr@add+1,f
  2475  006B  0835               	movf	??_ints_isr+1,w
  2476  006C  07C4               	addwf	ints_isr@add+1,f
  2477                           
  2478                           ;panda17.c: 94: printf("I%05d\r\n",add);
  2479  006D  0844               	movf	ints_isr@add+1,w
  2480  006E  00A5               	movwf	?_printf+1
  2481  006F  0843               	movf	ints_isr@add,w
  2482  0070  00A4               	movwf	?_printf
  2483  0071  3035               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2484  0072  120A  118A  240F  120A  118A  	fcall	_printf
  2485                           
  2486                           ;panda17.c: 95: for (n=0;n<add;n++){
  2487  0077  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0078  1303               	bcf	3,6	;RP1=0, select bank0
  2489  0079  01C9               	clrf	ints_isr@n
  2490  007A  01CA               	clrf	ints_isr@n+1
  2491  007B                     i1l2073:	
  2492  007B  0844               	movf	ints_isr@add+1,w
  2493  007C  024A               	subwf	ints_isr@n+1,w
  2494  007D  1D03               	skipz
  2495  007E  2881               	goto	u206_25
  2496  007F  0843               	movf	ints_isr@add,w
  2497  0080  0249               	subwf	ints_isr@n,w
  2498  0081                     u206_25:	
  2499  0081  1803               	btfsc	3,0
  2500  0082  2924               	goto	i1l2075
  2501                           
  2502                           ;panda17.c: 96: aux = mem_read(2*n+0x0010);
  2503  0083  084A               	movf	ints_isr@n+1,w
  2504  0084  00B5               	movwf	??_ints_isr+1
  2505  0085  0849               	movf	ints_isr@n,w
  2506  0086  00B4               	movwf	??_ints_isr
  2507  0087  1003               	clrc
  2508  0088  0DB4               	rlf	??_ints_isr,f
  2509  0089  0DB5               	rlf	??_ints_isr+1,f
  2510  008A  0834               	movf	??_ints_isr,w
  2511  008B  3E10               	addlw	16
  2512  008C  00FA               	movwf	i1mem_read@add
  2513  008D  0835               	movf	??_ints_isr+1,w
  2514  008E  1803               	skipnc
  2515  008F  3E01               	addlw	1
  2516  0090  3E00               	addlw	0
  2517  0091  00FB               	movwf	i1mem_read@add+1
  2518  0092  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2519  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0099  00B6               	movwf	??_ints_isr+2
  2522  009A  01B7               	clrf	??_ints_isr+3
  2523  009B  0836               	movf	??_ints_isr+2,w
  2524  009C  00CB               	movwf	ints_isr@aux
  2525  009D  0837               	movf	??_ints_isr+3,w
  2526  009E  00CC               	movwf	ints_isr@aux+1
  2527                           
  2528                           ;panda17.c: 97: aux = aux << 8;
  2529  009F  084B               	movf	ints_isr@aux,w
  2530  00A0  00B5               	movwf	??_ints_isr+1
  2531  00A1  01B4               	clrf	??_ints_isr
  2532  00A2  0834               	movf	??_ints_isr,w
  2533  00A3  00CB               	movwf	ints_isr@aux
  2534  00A4  0835               	movf	??_ints_isr+1,w
  2535  00A5  00CC               	movwf	ints_isr@aux+1
  2536                           
  2537                           ;panda17.c: 98: aux += mem_read(2*n+0x0011);
  2538  00A6  084A               	movf	ints_isr@n+1,w
  2539  00A7  00B5               	movwf	??_ints_isr+1
  2540  00A8  0849               	movf	ints_isr@n,w
  2541  00A9  00B4               	movwf	??_ints_isr
  2542  00AA  1003               	clrc
  2543  00AB  0DB4               	rlf	??_ints_isr,f
  2544  00AC  0DB5               	rlf	??_ints_isr+1,f
  2545  00AD  0834               	movf	??_ints_isr,w
  2546  00AE  3E11               	addlw	17
  2547  00AF  00FA               	movwf	i1mem_read@add
  2548  00B0  0835               	movf	??_ints_isr+1,w
  2549  00B1  1803               	skipnc
  2550  00B2  3E01               	addlw	1
  2551  00B3  3E00               	addlw	0
  2552  00B4  00FB               	movwf	i1mem_read@add+1
  2553  00B5  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2554  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  2555  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  2556  00BC  00B6               	movwf	??_ints_isr+2
  2557  00BD  01B7               	clrf	??_ints_isr+3
  2558  00BE  0836               	movf	??_ints_isr+2,w
  2559  00BF  07CB               	addwf	ints_isr@aux,f
  2560  00C0  1803               	skipnc
  2561  00C1  0ACC               	incf	ints_isr@aux+1,f
  2562  00C2  0837               	movf	??_ints_isr+3,w
  2563  00C3  07CC               	addwf	ints_isr@aux+1,f
  2564                           
  2565                           ;panda17.c: 99: printf("%04x",aux);
  2566  00C4  084C               	movf	ints_isr@aux+1,w
  2567  00C5  00A5               	movwf	?_printf+1
  2568  00C6  084B               	movf	ints_isr@aux,w
  2569  00C7  00A4               	movwf	?_printf
  2570  00C8  305C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2571  00C9  120A  118A  240F  120A  118A  	fcall	_printf
  2572                           
  2573                           ;panda17.c: 100: aux = mem_read(2*n+0x7FF7);
  2574  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2575  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2576  00D0  084A               	movf	ints_isr@n+1,w
  2577  00D1  00B5               	movwf	??_ints_isr+1
  2578  00D2  0849               	movf	ints_isr@n,w
  2579  00D3  00B4               	movwf	??_ints_isr
  2580  00D4  1003               	clrc
  2581  00D5  0DB4               	rlf	??_ints_isr,f
  2582  00D6  0DB5               	rlf	??_ints_isr+1,f
  2583  00D7  0834               	movf	??_ints_isr,w
  2584  00D8  3EF7               	addlw	247
  2585  00D9  00FA               	movwf	i1mem_read@add
  2586  00DA  0835               	movf	??_ints_isr+1,w
  2587  00DB  1803               	skipnc
  2588  00DC  3E01               	addlw	1
  2589  00DD  3E7F               	addlw	127
  2590  00DE  00FB               	movwf	i1mem_read@add+1
  2591  00DF  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2592  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2593  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2594  00E6  00B6               	movwf	??_ints_isr+2
  2595  00E7  01B7               	clrf	??_ints_isr+3
  2596  00E8  0836               	movf	??_ints_isr+2,w
  2597  00E9  00CB               	movwf	ints_isr@aux
  2598  00EA  0837               	movf	??_ints_isr+3,w
  2599  00EB  00CC               	movwf	ints_isr@aux+1
  2600                           
  2601                           ;panda17.c: 101: aux = aux << 8;
  2602  00EC  084B               	movf	ints_isr@aux,w
  2603  00ED  00B5               	movwf	??_ints_isr+1
  2604  00EE  01B4               	clrf	??_ints_isr
  2605  00EF  0834               	movf	??_ints_isr,w
  2606  00F0  00CB               	movwf	ints_isr@aux
  2607  00F1  0835               	movf	??_ints_isr+1,w
  2608  00F2  00CC               	movwf	ints_isr@aux+1
  2609                           
  2610                           ;panda17.c: 102: aux += mem_read(2*n+0x7FF8);
  2611  00F3  084A               	movf	ints_isr@n+1,w
  2612  00F4  00B5               	movwf	??_ints_isr+1
  2613  00F5  0849               	movf	ints_isr@n,w
  2614  00F6  00B4               	movwf	??_ints_isr
  2615  00F7  1003               	clrc
  2616  00F8  0DB4               	rlf	??_ints_isr,f
  2617  00F9  0DB5               	rlf	??_ints_isr+1,f
  2618  00FA  0834               	movf	??_ints_isr,w
  2619  00FB  3EF8               	addlw	248
  2620  00FC  00FA               	movwf	i1mem_read@add
  2621  00FD  0835               	movf	??_ints_isr+1,w
  2622  00FE  1803               	skipnc
  2623  00FF  3E01               	addlw	1
  2624  0100  3E7F               	addlw	127
  2625  0101  00FB               	movwf	i1mem_read@add+1
  2626  0102  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2627  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2628  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2629  0109  00B6               	movwf	??_ints_isr+2
  2630  010A  01B7               	clrf	??_ints_isr+3
  2631  010B  0836               	movf	??_ints_isr+2,w
  2632  010C  07CB               	addwf	ints_isr@aux,f
  2633  010D  1803               	skipnc
  2634  010E  0ACC               	incf	ints_isr@aux+1,f
  2635  010F  0837               	movf	??_ints_isr+3,w
  2636  0110  07CC               	addwf	ints_isr@aux+1,f
  2637                           
  2638                           ;panda17.c: 103: printf("%04x",aux);
  2639  0111  084C               	movf	ints_isr@aux+1,w
  2640  0112  00A5               	movwf	?_printf+1
  2641  0113  084B               	movf	ints_isr@aux,w
  2642  0114  00A4               	movwf	?_printf
  2643  0115  305C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2644  0116  120A  118A  240F  120A  118A  	fcall	_printf
  2645  011B  3001               	movlw	1
  2646  011C  1283               	bcf	3,5	;RP0=0, select bank0
  2647  011D  1303               	bcf	3,6	;RP1=0, select bank0
  2648  011E  07C9               	addwf	ints_isr@n,f
  2649  011F  1803               	skipnc
  2650  0120  0ACA               	incf	ints_isr@n+1,f
  2651  0121  3000               	movlw	0
  2652  0122  07CA               	addwf	ints_isr@n+1,f
  2653  0123  287B               	goto	i1l2073
  2654  0124                     i1l2075:	
  2655                           
  2656                           ;panda17.c: 104: }
  2657                           ;panda17.c: 105: printf("Z");
  2658  0124  306A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2659  0125  120A  118A  240F  120A  118A  	fcall	_printf
  2660                           
  2661                           ;panda17.c: 106: aux2 = mem_read(0xFFF9);
  2662  012A  30F9               	movlw	249
  2663  012B  00FA               	movwf	i1mem_read@add
  2664  012C  30FF               	movlw	255
  2665  012D  00FB               	movwf	i1mem_read@add+1
  2666  012E  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2667  0133  1283               	bcf	3,5	;RP0=0, select bank0
  2668  0134  1303               	bcf	3,6	;RP1=0, select bank0
  2669  0135  00B4               	movwf	??_ints_isr
  2670  0136  01B5               	clrf	??_ints_isr+1
  2671  0137  0834               	movf	??_ints_isr,w
  2672  0138  00D1               	movwf	ints_isr@aux2
  2673  0139  0835               	movf	??_ints_isr+1,w
  2674  013A  00D2               	movwf	ints_isr@aux2+1
  2675                           
  2676                           ;panda17.c: 107: printf("%02x:",aux2);
  2677  013B  0852               	movf	ints_isr@aux2+1,w
  2678  013C  00A5               	movwf	?_printf+1
  2679  013D  0851               	movf	ints_isr@aux2,w
  2680  013E  00A4               	movwf	?_printf
  2681  013F  3056               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2682  0140  120A  118A  240F  120A  118A  	fcall	_printf
  2683                           
  2684                           ;panda17.c: 108: aux2 = mem_read(0xFFFA);
  2685  0145  30FA               	movlw	250
  2686  0146  00FA               	movwf	i1mem_read@add
  2687  0147  30FF               	movlw	255
  2688  0148  00FB               	movwf	i1mem_read@add+1
  2689  0149  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2690  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2691  014F  1303               	bcf	3,6	;RP1=0, select bank0
  2692  0150  00B4               	movwf	??_ints_isr
  2693  0151  01B5               	clrf	??_ints_isr+1
  2694  0152  0834               	movf	??_ints_isr,w
  2695  0153  00D1               	movwf	ints_isr@aux2
  2696  0154  0835               	movf	??_ints_isr+1,w
  2697  0155  00D2               	movwf	ints_isr@aux2+1
  2698                           
  2699                           ;panda17.c: 109: printf("%02x ",aux2);
  2700  0156  0852               	movf	ints_isr@aux2+1,w
  2701  0157  00A5               	movwf	?_printf+1
  2702  0158  0851               	movf	ints_isr@aux2,w
  2703  0159  00A4               	movwf	?_printf
  2704  015A  304A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2705  015B  120A  118A  240F  120A  118A  	fcall	_printf
  2706                           
  2707                           ;panda17.c: 110: aux2 = mem_read(0xFFFB);
  2708  0160  30FB               	movlw	251
  2709  0161  00FA               	movwf	i1mem_read@add
  2710  0162  30FF               	movlw	255
  2711  0163  00FB               	movwf	i1mem_read@add+1
  2712  0164  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2713  0169  1283               	bcf	3,5	;RP0=0, select bank0
  2714  016A  1303               	bcf	3,6	;RP1=0, select bank0
  2715  016B  00B4               	movwf	??_ints_isr
  2716  016C  01B5               	clrf	??_ints_isr+1
  2717  016D  0834               	movf	??_ints_isr,w
  2718  016E  00D1               	movwf	ints_isr@aux2
  2719  016F  0835               	movf	??_ints_isr+1,w
  2720  0170  00D2               	movwf	ints_isr@aux2+1
  2721                           
  2722                           ;panda17.c: 111: printf("%02x/",aux2);
  2723  0171  0852               	movf	ints_isr@aux2+1,w
  2724  0172  00A5               	movwf	?_printf+1
  2725  0173  0851               	movf	ints_isr@aux2,w
  2726  0174  00A4               	movwf	?_printf
  2727  0175  3050               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2728  0176  120A  118A  240F  120A  118A  	fcall	_printf
  2729                           
  2730                           ;panda17.c: 112: aux2 = mem_read(0xFFFC);
  2731  017B  30FC               	movlw	252
  2732  017C  00FA               	movwf	i1mem_read@add
  2733  017D  30FF               	movlw	255
  2734  017E  00FB               	movwf	i1mem_read@add+1
  2735  017F  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2736  0184  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0185  1303               	bcf	3,6	;RP1=0, select bank0
  2738  0186  00B4               	movwf	??_ints_isr
  2739  0187  01B5               	clrf	??_ints_isr+1
  2740  0188  0834               	movf	??_ints_isr,w
  2741  0189  00D1               	movwf	ints_isr@aux2
  2742  018A  0835               	movf	??_ints_isr+1,w
  2743  018B  00D2               	movwf	ints_isr@aux2+1
  2744                           
  2745                           ;panda17.c: 113: printf("%02x/",aux2);
  2746  018C  0852               	movf	ints_isr@aux2+1,w
  2747  018D  00A5               	movwf	?_printf+1
  2748  018E  0851               	movf	ints_isr@aux2,w
  2749  018F  00A4               	movwf	?_printf
  2750  0190  3050               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2751  0191  120A  118A  240F  120A  118A  	fcall	_printf
  2752                           
  2753                           ;panda17.c: 114: aux2 = mem_read(0xFFFD);
  2754  0196  30FD               	movlw	253
  2755  0197  00FA               	movwf	i1mem_read@add
  2756  0198  30FF               	movlw	255
  2757  0199  00FB               	movwf	i1mem_read@add+1
  2758  019A  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2759  019F  1283               	bcf	3,5	;RP0=0, select bank0
  2760  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  2761  01A1  00B4               	movwf	??_ints_isr
  2762  01A2  01B5               	clrf	??_ints_isr+1
  2763  01A3  0834               	movf	??_ints_isr,w
  2764  01A4  00D1               	movwf	ints_isr@aux2
  2765  01A5  0835               	movf	??_ints_isr+1,w
  2766  01A6  00D2               	movwf	ints_isr@aux2+1
  2767                           
  2768                           ;panda17.c: 115: printf("%02x\t",aux2);
  2769  01A7  0852               	movf	ints_isr@aux2+1,w
  2770  01A8  00A5               	movwf	?_printf+1
  2771  01A9  0851               	movf	ints_isr@aux2,w
  2772  01AA  00A4               	movwf	?_printf
  2773  01AB  3044               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2774  01AC  120A  118A  240F  120A  118A  	fcall	_printf
  2775                           
  2776                           ;panda17.c: 120: printf("\r\n");
  2777  01B1  303A               	movlw	(low (((STR_1+5)-__stringbase)| (0+32768)))& (0+255)
  2778  01B2  120A  118A  240F  120A  118A  	fcall	_printf
  2779                           
  2780                           ;panda17.c: 121: printf("X");
  2781  01B7  3068               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2782  01B8  120A  118A  240F  120A  118A  	fcall	_printf
  2783                           
  2784                           ;panda17.c: 122: PORTBbits.RB4 = 0;
  2785  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  2786  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  2787  01BF  1206               	bcf	6,4	;volatile
  2788                           
  2789                           ;panda17.c: 123: break;
  2790  01C0  2A7C               	goto	i1l104
  2791  01C1                     i1l2097:	
  2792                           ;panda17.c: 124: case 'b':
  2793                           
  2794                           
  2795                           ;panda17.c: 125: for (unsigned char z = 0;z<7;z++){
  2796  01C1  01C5               	clrf	ints_isr@z
  2797  01C2  3007               	movlw	7
  2798  01C3  0245               	subwf	ints_isr@z,w
  2799  01C4  1803               	btfsc	3,0
  2800  01C5  29E5               	goto	i1l2111
  2801  01C6                     i1l108:	
  2802                           ;panda17.c: 126: while(!PIR1bits.RCIF);
  2803                           
  2804  01C6  1E8C               	btfss	12,5	;volatile
  2805  01C7  29C6               	goto	i1l108
  2806                           
  2807                           ;panda17.c: 127: ferr = RCSTAbits.FERR;
  2808  01C8  11DF               	bcf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2809  01C9  1918               	btfsc	24,2	;volatile
  2810  01CA  15DF               	bsf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2811                           
  2812                           ;panda17.c: 128: oerr = RCSTAbits.OERR;
  2813  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2814  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2815  01CD  115F               	bcf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2816  01CE  1898               	btfsc	24,1	;volatile
  2817  01CF  155F               	bsf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2818                           
  2819                           ;panda17.c: 129: if (!ferr & !oerr){
  2820  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2821  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2822  01D2  1DDF               	btfss	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2823  01D3  195F               	btfsc	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2824  01D4  29DD               	goto	i1l2107
  2825                           
  2826                           ;panda17.c: 130: time[z] = RCREG;
  2827  01D5  081A               	movf	26,w	;volatile
  2828  01D6  00B4               	movwf	??_ints_isr
  2829  01D7  0845               	movf	ints_isr@z,w
  2830  01D8  3E58               	addlw	(low (_time| 0))& (0+255)
  2831  01D9  0084               	movwf	4
  2832  01DA  0834               	movf	??_ints_isr,w
  2833  01DB  1383               	bcf	3,7	;select IRP bank0
  2834  01DC  0080               	movwf	0
  2835  01DD                     i1l2107:	
  2836  01DD  3001               	movlw	1
  2837  01DE  00B4               	movwf	??_ints_isr
  2838  01DF  0834               	movf	??_ints_isr,w
  2839  01E0  07C5               	addwf	ints_isr@z,f
  2840  01E1  3007               	movlw	7
  2841  01E2  0245               	subwf	ints_isr@z,w
  2842  01E3  1C03               	skipc
  2843  01E4  29C6               	goto	i1l108
  2844  01E5                     i1l2111:	
  2845                           
  2846                           ;panda17.c: 131: }
  2847                           ;panda17.c: 132: }
  2848                           ;panda17.c: 133: ds_set(time);
  2849  01E5  3058               	movlw	(low (_time| 0))& (0+255)
  2850  01E6  120A  158A  246C  120A  118A  	fcall	_ds_set
  2851                           
  2852                           ;panda17.c: 134: break;
  2853  01EB  2A7C               	goto	i1l104
  2854  01EC                     i1l112:	
  2855                           ;panda17.c: 135: case 'c':
  2856                           
  2857                           
  2858                           ;panda17.c: 136: PORTBbits.RB4 = 1;
  2859  01EC  1606               	bsf	6,4	;volatile
  2860                           
  2861                           ;panda17.c: 137: mem_write(0x0002,0x00);
  2862  01ED  3002               	movlw	2
  2863  01EE  00FA               	movwf	i1mem_write@add
  2864  01EF  3000               	movlw	0
  2865  01F0  00FB               	movwf	i1mem_write@add+1
  2866  01F1  01FC               	clrf	i1mem_write@data
  2867  01F2  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  2868                           
  2869                           ;panda17.c: 138: mem_init();
  2870  01F7  120A  118A  26AB  120A  118A  	fcall	i1_mem_init
  2871                           
  2872                           ;panda17.c: 139: PORTBbits.RB4 = 0;
  2873  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  2874  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  2875  01FE  1206               	bcf	6,4	;volatile
  2876                           
  2877                           ;panda17.c: 140: if ((mem_read(0x0002) == 0xAA) && (mem_read(0x000D) == 0x00)){
  2878  01FF  3002               	movlw	2
  2879  0200  00FA               	movwf	i1mem_read@add
  2880  0201  3000               	movlw	0
  2881  0202  00FB               	movwf	i1mem_read@add+1
  2882  0203  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2883  0208  3AAA               	xorlw	170
  2884  0209  1D03               	skipz
  2885  020A  2A7C               	goto	i1l104
  2886  020B  300D               	movlw	13
  2887  020C  00FA               	movwf	i1mem_read@add
  2888  020D  3000               	movlw	0
  2889  020E  00FB               	movwf	i1mem_read@add+1
  2890  020F  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  2891  0214  3A00               	xorlw	0
  2892  0215  1D03               	skipz
  2893  0216  2A7C               	goto	i1l104
  2894                           
  2895                           ;panda17.c: 141: printf("OK");
  2896  0217  3065               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2897  0218  120A  118A  240F  120A  118A  	fcall	_printf
  2898                           
  2899                           ;panda17.c: 142: }
  2900                           ;panda17.c: 143: break;
  2901  021D  2A7C               	goto	i1l104
  2902  021E                     i1l2121:	
  2903                           ;panda17.c: 144: case 'd':
  2904                           
  2905                           
  2906                           ;panda17.c: 145: for (unsigned char k=0;k<7;k++){
  2907  021E  1283               	bcf	3,5	;RP0=0, select bank0
  2908  021F  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0220  01C6               	clrf	ints_isr@k
  2910  0221                     L2:	
  2911  0221  3007               	movlw	7
  2912  0222  0246               	subwf	ints_isr@k,w
  2913  0223  1803               	btfsc	3,0
  2914  0224  2A7C               	goto	i1l104
  2915                           
  2916                           ;panda17.c: 146: printf("%X ",ds_get(k));
  2917  0225  0846               	movf	ints_isr@k,w
  2918  0226  120A  158A  23D6  120A  118A  	fcall	_ds_get
  2919  022B  1283               	bcf	3,5	;RP0=0, select bank0
  2920  022C  1303               	bcf	3,6	;RP1=0, select bank0
  2921  022D  00B4               	movwf	??_ints_isr
  2922  022E  01B5               	clrf	??_ints_isr+1
  2923  022F  0834               	movf	??_ints_isr,w
  2924  0230  00A4               	movwf	?_printf
  2925  0231  0835               	movf	??_ints_isr+1,w
  2926  0232  00A5               	movwf	?_printf+1
  2927  0233  3061               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2928  0234  120A  118A  240F  120A  118A  	fcall	_printf
  2929  0239  3001               	movlw	1
  2930  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2931  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2932  023C  00B4               	movwf	??_ints_isr
  2933  023D  0834               	movf	??_ints_isr,w
  2934  023E  07C6               	addwf	ints_isr@k,f
  2935  023F  2A21               	goto	L2
  2936  0240                     i1l2133:	
  2937                           ;panda17.c: 149: case 'm':
  2938                           
  2939                           ;panda17.c: 147: }
  2940                           ;panda17.c: 148: break;
  2941                           
  2942                           
  2943                           ;panda17.c: 150: printf("I%04x;",si_read_h());
  2944  0240  120A  158A  2743  120A  118A  	fcall	_si_read_h
  2945  0245  087B               	movf	?_si_read_h+1,w
  2946  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0248  00A5               	movwf	?_printf+1
  2949  0249  087A               	movf	?_si_read_h,w
  2950  024A  00A4               	movwf	?_printf
  2951  024B  303D               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2952  024C  120A  118A  240F  120A  118A  	fcall	_printf
  2953                           
  2954                           ;panda17.c: 151: printf("%04x",si_read_t());
  2955  0251  120A  158A  2634  120A  118A  	fcall	_si_read_t
  2956  0256  087B               	movf	?_si_read_t+1,w
  2957  0257  1283               	bcf	3,5	;RP0=0, select bank0
  2958  0258  1303               	bcf	3,6	;RP1=0, select bank0
  2959  0259  00A5               	movwf	?_printf+1
  2960  025A  087A               	movf	?_si_read_t,w
  2961  025B  00A4               	movwf	?_printf
  2962  025C  305C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2963  025D  120A  118A  240F  120A  118A  	fcall	_printf
  2964                           
  2965                           ;panda17.c: 152: printf("X");
  2966  0262  3068               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2967  0263  120A  118A  240F  120A  118A  	fcall	_printf
  2968                           
  2969                           ;panda17.c: 155: }
  2970                           
  2971                           ;panda17.c: 153: break;
  2972  0268  2A7C               	goto	i1l104
  2973  0269                     i1l2137:	
  2974  0269  1283               	bcf	3,5	;RP0=0, select bank0
  2975  026A  1303               	bcf	3,6	;RP1=0, select bank0
  2976  026B  083E               	movf	ints_isr@rcv,w
  2977                           
  2978                           ; Switch size 1, requested type "space"
  2979                           ; Number of cases is 5, Range of values is 97 to 109
  2980                           ; switch strategies available:
  2981                           ; Name         Instructions Cycles
  2982                           ; simple_byte           16     9 (average)
  2983                           ; direct_byte           50    11 (fixed)
  2984                           ; jumptable            263     9 (fixed)
  2985                           ;	Chosen strategy is simple_byte
  2986  026C  3A61               	xorlw	97	; case 97
  2987  026D  1903               	skipnz
  2988  026E  283F               	goto	i1l100
  2989  026F  3A03               	xorlw	3	; case 98
  2990  0270  1903               	skipnz
  2991  0271  29C1               	goto	i1l2097
  2992  0272  3A01               	xorlw	1	; case 99
  2993  0273  1903               	skipnz
  2994  0274  29EC               	goto	i1l112
  2995  0275  3A07               	xorlw	7	; case 100
  2996  0276  1903               	skipnz
  2997  0277  2A1E               	goto	i1l2121
  2998  0278  3A09               	xorlw	9	; case 109
  2999  0279  1903               	skipnz
  3000  027A  2A40               	goto	i1l2133
  3001  027B  2A7C               	goto	i1l104
  3002  027C                     i1l104:	
  3003                           
  3004                           ;panda17.c: 156: INTCONbits.GIE = 1;
  3005  027C  178B               	bsf	11,7	;volatile
  3006  027D                     i1l93:	
  3007                           
  3008                           ;panda17.c: 157: }
  3009                           ;panda17.c: 161: if (PIR1bits.TMR2IF){
  3010  027D  1283               	bcf	3,5	;RP0=0, select bank0
  3011  027E  1303               	bcf	3,6	;RP1=0, select bank0
  3012  027F  1C8C               	btfss	12,1	;volatile
  3013  0280  2C02               	goto	i1l127
  3014                           
  3015                           ;panda17.c: 162: PIR1bits.TMR2IF = 0;
  3016  0281  108C               	bcf	12,1	;volatile
  3017                           
  3018                           ;panda17.c: 163: INTCONbits.GIE = 0;
  3019  0282  138B               	bcf	11,7	;volatile
  3020                           
  3021                           ;panda17.c: 164: if (!PORTBbits.RB2){
  3022  0283  1906               	btfsc	6,2	;volatile
  3023  0284  2A92               	goto	i1l119
  3024                           
  3025                           ;panda17.c: 165: PIE1bits.RCIE = 1;
  3026  0285  1683               	bsf	3,5	;RP0=1, select bank1
  3027  0286  1303               	bcf	3,6	;RP1=0, select bank1
  3028  0287  168C               	bsf	12,5	;volatile
  3029                           
  3030                           ;panda17.c: 166: led = 5;
  3031  0288  3005               	movlw	5
  3032  0289  1283               	bcf	3,5	;RP0=0, select bank0
  3033  028A  1303               	bcf	3,6	;RP1=0, select bank0
  3034  028B  00B4               	movwf	??_ints_isr
  3035  028C  0834               	movf	??_ints_isr,w
  3036  028D  00E0               	movwf	_led
  3037                           
  3038                           ;panda17.c: 167: milis = 0;
  3039  028E  01D7               	clrf	_milis
  3040                           
  3041                           ;panda17.c: 168: secs = 0;
  3042  028F  01D4               	clrf	_secs
  3043  0290  01D5               	clrf	_secs+1
  3044                           
  3045                           ;panda17.c: 169: }
  3046  0291  2AC6               	goto	i1l2173
  3047  0292                     i1l119:	
  3048                           
  3049                           ;panda17.c: 171: else {
  3050                           ;panda17.c: 172: PIE1bits.RCIE = 0;
  3051  0292  1683               	bsf	3,5	;RP0=1, select bank1
  3052  0293  1303               	bcf	3,6	;RP1=0, select bank1
  3053  0294  128C               	bcf	12,5	;volatile
  3054                           
  3055                           ;panda17.c: 173: if (mem_read(0x0003) != 0xAA){
  3056  0295  3003               	movlw	3
  3057  0296  00FA               	movwf	i1mem_read@add
  3058  0297  3000               	movlw	0
  3059  0298  00FB               	movwf	i1mem_read@add+1
  3060  0299  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  3061  029E  3AAA               	xorlw	170
  3062  029F  1903               	skipnz
  3063  02A0  2AA6               	goto	i1l2153
  3064                           
  3065                           ;panda17.c: 174: save_the_date();
  3066  02A1  120A  118A  2625  120A  118A  	fcall	_save_the_date
  3067  02A6                     i1l2153:	
  3068                           
  3069                           ;panda17.c: 175: }
  3070                           ;panda17.c: 176: milis++;
  3071  02A6  3001               	movlw	1
  3072  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  3073  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  3074  02A9  00B4               	movwf	??_ints_isr
  3075  02AA  0834               	movf	??_ints_isr,w
  3076  02AB  07D7               	addwf	_milis,f
  3077                           
  3078                           ;panda17.c: 177: if(milis > 6){
  3079  02AC  3007               	movlw	7
  3080  02AD  0257               	subwf	_milis,w
  3081  02AE  1C03               	skipc
  3082  02AF  2ABF               	goto	i1l2167
  3083                           
  3084                           ;panda17.c: 178: if (led > 0){
  3085  02B0  0860               	movf	_led,w
  3086  02B1  1903               	btfsc	3,2
  3087  02B2  2AB7               	goto	i1l123
  3088                           
  3089                           ;panda17.c: 179: PORTBbits.RB4 = 1;
  3090  02B3  1606               	bsf	6,4	;volatile
  3091                           
  3092                           ;panda17.c: 180: led--;
  3093  02B4  3001               	movlw	1
  3094  02B5  02E0               	subwf	_led,f
  3095                           
  3096                           ;panda17.c: 181: }
  3097  02B6  2AB8               	goto	i1l2163
  3098  02B7                     i1l123:	
  3099                           
  3100                           ;panda17.c: 182: else {
  3101                           ;panda17.c: 183: PORTBbits.RB4 = 0;
  3102  02B7  1206               	bcf	6,4	;volatile
  3103  02B8                     i1l2163:	
  3104                           
  3105                           ;panda17.c: 184: }
  3106                           ;panda17.c: 185: secs++;
  3107  02B8  3001               	movlw	1
  3108  02B9  07D4               	addwf	_secs,f
  3109  02BA  1803               	skipnc
  3110  02BB  0AD5               	incf	_secs+1,f
  3111  02BC  3000               	movlw	0
  3112  02BD  07D5               	addwf	_secs+1,f
  3113                           
  3114                           ;panda17.c: 186: milis = 0;
  3115  02BE  01D7               	clrf	_milis
  3116  02BF                     i1l2167:	
  3117                           
  3118                           ;panda17.c: 190: }
  3119                           ;panda17.c: 192: if (secs > 0){
  3120  02BF  0854               	movf	_secs,w
  3121  02C0  0455               	iorwf	_secs+1,w
  3122  02C1  1903               	btfsc	3,2
  3123  02C2  2AC6               	goto	i1l2173
  3124                           
  3125                           ;panda17.c: 194: secs = 0;
  3126  02C3  01D4               	clrf	_secs
  3127  02C4  01D5               	clrf	_secs+1
  3128                           
  3129                           ;panda17.c: 195: measure = 1;
  3130  02C5  165F               	bsf	_measure/(0+8),_measure& (0+7)
  3131  02C6                     i1l2173:	
  3132                           
  3133                           ;panda17.c: 196: }
  3134                           ;panda17.c: 197: }
  3135                           ;panda17.c: 201: if (measure){
  3136  02C6  1E5F               	btfss	_measure/(0+8),_measure& (0+7)
  3137  02C7  2C01               	goto	i1l2227
  3138                           
  3139                           ;panda17.c: 202: unsigned char arg;
  3140                           ;panda17.c: 203: unsigned int temp_add,hum_add,up;
  3141                           ;panda17.c: 204: unsigned int hum_val,temp_val;
  3142                           ;panda17.c: 205: measure = 0;
  3143  02C8  125F               	bcf	_measure/(0+8),_measure& (0+7)
  3144                           
  3145                           ;panda17.c: 207: hum_val = si_read_h();
  3146  02C9  120A  158A  2743  120A  118A  	fcall	_si_read_h
  3147  02CE  087B               	movf	?_si_read_h+1,w
  3148  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3149  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  3150  02D1  00C0               	movwf	ints_isr@hum_val+1
  3151  02D2  087A               	movf	?_si_read_h,w
  3152  02D3  00BF               	movwf	ints_isr@hum_val
  3153                           
  3154                           ;panda17.c: 208: temp_val = si_read_t();
  3155  02D4  120A  158A  2634  120A  118A  	fcall	_si_read_t
  3156  02D9  087B               	movf	?_si_read_t+1,w
  3157  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3158  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3159  02DC  00C2               	movwf	ints_isr@temp_val+1
  3160  02DD  087A               	movf	?_si_read_t,w
  3161  02DE  00C1               	movwf	ints_isr@temp_val
  3162                           
  3163                           ;panda17.c: 210: hum_add = mem_read(0x000A);
  3164  02DF  300A               	movlw	10
  3165  02E0  00FA               	movwf	i1mem_read@add
  3166  02E1  3000               	movlw	0
  3167  02E2  00FB               	movwf	i1mem_read@add+1
  3168  02E3  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  3169  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  3170  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  3171  02EA  00B4               	movwf	??_ints_isr
  3172  02EB  01B5               	clrf	??_ints_isr+1
  3173  02EC  0834               	movf	??_ints_isr,w
  3174  02ED  00CF               	movwf	ints_isr@hum_add
  3175  02EE  0835               	movf	??_ints_isr+1,w
  3176  02EF  00D0               	movwf	ints_isr@hum_add+1
  3177                           
  3178                           ;panda17.c: 211: hum_add = hum_add << 8;
  3179  02F0  084F               	movf	ints_isr@hum_add,w
  3180  02F1  00B5               	movwf	??_ints_isr+1
  3181  02F2  01B4               	clrf	??_ints_isr
  3182  02F3  0834               	movf	??_ints_isr,w
  3183  02F4  00CF               	movwf	ints_isr@hum_add
  3184  02F5  0835               	movf	??_ints_isr+1,w
  3185  02F6  00D0               	movwf	ints_isr@hum_add+1
  3186                           
  3187                           ;panda17.c: 212: hum_add += mem_read(0x000B);
  3188  02F7  300B               	movlw	11
  3189  02F8  00FA               	movwf	i1mem_read@add
  3190  02F9  3000               	movlw	0
  3191  02FA  00FB               	movwf	i1mem_read@add+1
  3192  02FB  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  3193  0300  1283               	bcf	3,5	;RP0=0, select bank0
  3194  0301  1303               	bcf	3,6	;RP1=0, select bank0
  3195  0302  00B4               	movwf	??_ints_isr
  3196  0303  01B5               	clrf	??_ints_isr+1
  3197  0304  0834               	movf	??_ints_isr,w
  3198  0305  07CF               	addwf	ints_isr@hum_add,f
  3199  0306  1803               	skipnc
  3200  0307  0AD0               	incf	ints_isr@hum_add+1,f
  3201  0308  0835               	movf	??_ints_isr+1,w
  3202  0309  07D0               	addwf	ints_isr@hum_add+1,f
  3203                           
  3204                           ;panda17.c: 213: up = hum_add + 1;
  3205  030A  084F               	movf	ints_isr@hum_add,w
  3206  030B  3E01               	addlw	1
  3207  030C  00C7               	movwf	ints_isr@up
  3208  030D  0850               	movf	ints_isr@hum_add+1,w
  3209  030E  1803               	skipnc
  3210  030F  3E01               	addlw	1
  3211  0310  3E00               	addlw	0
  3212  0311  00C8               	movwf	ints_isr@up+1
  3213                           
  3214                           ;panda17.c: 214: arg = up >> 8;
  3215  0312  0848               	movf	ints_isr@up+1,w
  3216  0313  00B4               	movwf	??_ints_isr
  3217  0314  0834               	movf	??_ints_isr,w
  3218  0315  00D3               	movwf	ints_isr@arg
  3219                           
  3220                           ;panda17.c: 215: mem_write(0x000A,arg);
  3221  0316  300A               	movlw	10
  3222  0317  00FA               	movwf	i1mem_write@add
  3223  0318  3000               	movlw	0
  3224  0319  00FB               	movwf	i1mem_write@add+1
  3225  031A  0853               	movf	ints_isr@arg,w
  3226  031B  00B4               	movwf	??_ints_isr
  3227  031C  0834               	movf	??_ints_isr,w
  3228  031D  00FC               	movwf	i1mem_write@data
  3229  031E  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3230                           
  3231                           ;panda17.c: 216: arg = up & 0x00FF;
  3232  0323  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0324  1303               	bcf	3,6	;RP1=0, select bank0
  3234  0325  0847               	movf	ints_isr@up,w
  3235  0326  00B4               	movwf	??_ints_isr
  3236  0327  0834               	movf	??_ints_isr,w
  3237  0328  00D3               	movwf	ints_isr@arg
  3238                           
  3239                           ;panda17.c: 217: mem_write(0x000B,arg);
  3240  0329  300B               	movlw	11
  3241  032A  00FA               	movwf	i1mem_write@add
  3242  032B  3000               	movlw	0
  3243  032C  00FB               	movwf	i1mem_write@add+1
  3244  032D  0853               	movf	ints_isr@arg,w
  3245  032E  00B4               	movwf	??_ints_isr
  3246  032F  0834               	movf	??_ints_isr,w
  3247  0330  00FC               	movwf	i1mem_write@data
  3248  0331  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3249                           
  3250                           ;panda17.c: 218: hum_add = (hum_add * 2) + 1 + 0x000F;
  3251  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0338  0850               	movf	ints_isr@hum_add+1,w
  3254  0339  00B5               	movwf	??_ints_isr+1
  3255  033A  084F               	movf	ints_isr@hum_add,w
  3256  033B  00B4               	movwf	??_ints_isr
  3257  033C  1003               	clrc
  3258  033D  0DB4               	rlf	??_ints_isr,f
  3259  033E  0DB5               	rlf	??_ints_isr+1,f
  3260  033F  0834               	movf	??_ints_isr,w
  3261  0340  3E10               	addlw	16
  3262  0341  00CF               	movwf	ints_isr@hum_add
  3263  0342  0835               	movf	??_ints_isr+1,w
  3264  0343  1803               	skipnc
  3265  0344  3E01               	addlw	1
  3266  0345  3E00               	addlw	0
  3267  0346  00D0               	movwf	ints_isr@hum_add+1
  3268                           
  3269                           ;panda17.c: 219: temp_add = mem_read(0x000C);
  3270  0347  300C               	movlw	12
  3271  0348  00FA               	movwf	i1mem_read@add
  3272  0349  3000               	movlw	0
  3273  034A  00FB               	movwf	i1mem_read@add+1
  3274  034B  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  3275  0350  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0351  1303               	bcf	3,6	;RP1=0, select bank0
  3277  0352  00B4               	movwf	??_ints_isr
  3278  0353  01B5               	clrf	??_ints_isr+1
  3279  0354  0834               	movf	??_ints_isr,w
  3280  0355  00CD               	movwf	ints_isr@temp_add
  3281  0356  0835               	movf	??_ints_isr+1,w
  3282  0357  00CE               	movwf	ints_isr@temp_add+1
  3283                           
  3284                           ;panda17.c: 220: temp_add = temp_add << 8;
  3285  0358  084D               	movf	ints_isr@temp_add,w
  3286  0359  00B5               	movwf	??_ints_isr+1
  3287  035A  01B4               	clrf	??_ints_isr
  3288  035B  0834               	movf	??_ints_isr,w
  3289  035C  00CD               	movwf	ints_isr@temp_add
  3290  035D  0835               	movf	??_ints_isr+1,w
  3291  035E  00CE               	movwf	ints_isr@temp_add+1
  3292                           
  3293                           ;panda17.c: 221: temp_add += mem_read(0x000D);
  3294  035F  300D               	movlw	13
  3295  0360  00FA               	movwf	i1mem_read@add
  3296  0361  3000               	movlw	0
  3297  0362  00FB               	movwf	i1mem_read@add+1
  3298  0363  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  3299  0368  1283               	bcf	3,5	;RP0=0, select bank0
  3300  0369  1303               	bcf	3,6	;RP1=0, select bank0
  3301  036A  00B4               	movwf	??_ints_isr
  3302  036B  01B5               	clrf	??_ints_isr+1
  3303  036C  0834               	movf	??_ints_isr,w
  3304  036D  07CD               	addwf	ints_isr@temp_add,f
  3305  036E  1803               	skipnc
  3306  036F  0ACE               	incf	ints_isr@temp_add+1,f
  3307  0370  0835               	movf	??_ints_isr+1,w
  3308  0371  07CE               	addwf	ints_isr@temp_add+1,f
  3309                           
  3310                           ;panda17.c: 222: up = temp_add + 1;
  3311  0372  084D               	movf	ints_isr@temp_add,w
  3312  0373  3E01               	addlw	1
  3313  0374  00C7               	movwf	ints_isr@up
  3314  0375  084E               	movf	ints_isr@temp_add+1,w
  3315  0376  1803               	skipnc
  3316  0377  3E01               	addlw	1
  3317  0378  3E00               	addlw	0
  3318  0379  00C8               	movwf	ints_isr@up+1
  3319                           
  3320                           ;panda17.c: 223: arg = up >> 8;
  3321  037A  0848               	movf	ints_isr@up+1,w
  3322  037B  00B4               	movwf	??_ints_isr
  3323  037C  0834               	movf	??_ints_isr,w
  3324  037D  00D3               	movwf	ints_isr@arg
  3325                           
  3326                           ;panda17.c: 224: mem_write(0x000C,arg);
  3327  037E  300C               	movlw	12
  3328  037F  00FA               	movwf	i1mem_write@add
  3329  0380  3000               	movlw	0
  3330  0381  00FB               	movwf	i1mem_write@add+1
  3331  0382  0853               	movf	ints_isr@arg,w
  3332  0383  00B4               	movwf	??_ints_isr
  3333  0384  0834               	movf	??_ints_isr,w
  3334  0385  00FC               	movwf	i1mem_write@data
  3335  0386  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3336                           
  3337                           ;panda17.c: 225: arg = up & 0x00FF;
  3338  038B  1283               	bcf	3,5	;RP0=0, select bank0
  3339  038C  1303               	bcf	3,6	;RP1=0, select bank0
  3340  038D  0847               	movf	ints_isr@up,w
  3341  038E  00B4               	movwf	??_ints_isr
  3342  038F  0834               	movf	??_ints_isr,w
  3343  0390  00D3               	movwf	ints_isr@arg
  3344                           
  3345                           ;panda17.c: 226: mem_write(0x000D,arg);
  3346  0391  300D               	movlw	13
  3347  0392  00FA               	movwf	i1mem_write@add
  3348  0393  3000               	movlw	0
  3349  0394  00FB               	movwf	i1mem_write@add+1
  3350  0395  0853               	movf	ints_isr@arg,w
  3351  0396  00B4               	movwf	??_ints_isr
  3352  0397  0834               	movf	??_ints_isr,w
  3353  0398  00FC               	movwf	i1mem_write@data
  3354  0399  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3355                           
  3356                           ;panda17.c: 227: temp_add = (temp_add * 2) + 1 + 0x7FF6;
  3357  039E  1283               	bcf	3,5	;RP0=0, select bank0
  3358  039F  1303               	bcf	3,6	;RP1=0, select bank0
  3359  03A0  084E               	movf	ints_isr@temp_add+1,w
  3360  03A1  00B5               	movwf	??_ints_isr+1
  3361  03A2  084D               	movf	ints_isr@temp_add,w
  3362  03A3  00B4               	movwf	??_ints_isr
  3363  03A4  1003               	clrc
  3364  03A5  0DB4               	rlf	??_ints_isr,f
  3365  03A6  0DB5               	rlf	??_ints_isr+1,f
  3366  03A7  0834               	movf	??_ints_isr,w
  3367  03A8  3EF7               	addlw	247
  3368  03A9  00CD               	movwf	ints_isr@temp_add
  3369  03AA  0835               	movf	??_ints_isr+1,w
  3370  03AB  1803               	skipnc
  3371  03AC  3E01               	addlw	1
  3372  03AD  3E7F               	addlw	127
  3373  03AE  00CE               	movwf	ints_isr@temp_add+1
  3374                           
  3375                           ;panda17.c: 229: arg = hum_val >> 8;
  3376  03AF  0840               	movf	ints_isr@hum_val+1,w
  3377  03B0  00B4               	movwf	??_ints_isr
  3378  03B1  0834               	movf	??_ints_isr,w
  3379  03B2  00D3               	movwf	ints_isr@arg
  3380                           
  3381                           ;panda17.c: 230: mem_write(hum_add,arg);
  3382  03B3  0850               	movf	ints_isr@hum_add+1,w
  3383  03B4  00FB               	movwf	i1mem_write@add+1
  3384  03B5  084F               	movf	ints_isr@hum_add,w
  3385  03B6  00FA               	movwf	i1mem_write@add
  3386  03B7  0853               	movf	ints_isr@arg,w
  3387  03B8  00B4               	movwf	??_ints_isr
  3388  03B9  0834               	movf	??_ints_isr,w
  3389  03BA  00FC               	movwf	i1mem_write@data
  3390  03BB  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3391                           
  3392                           ;panda17.c: 231: arg = hum_val & 0x00FF;
  3393  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  3394  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  3395  03C2  083F               	movf	ints_isr@hum_val,w
  3396  03C3  00B4               	movwf	??_ints_isr
  3397  03C4  0834               	movf	??_ints_isr,w
  3398  03C5  00D3               	movwf	ints_isr@arg
  3399                           
  3400                           ;panda17.c: 232: mem_write(hum_add + 1,arg);
  3401  03C6  084F               	movf	ints_isr@hum_add,w
  3402  03C7  3E01               	addlw	1
  3403  03C8  00FA               	movwf	i1mem_write@add
  3404  03C9  0850               	movf	ints_isr@hum_add+1,w
  3405  03CA  1803               	skipnc
  3406  03CB  3E01               	addlw	1
  3407  03CC  3E00               	addlw	0
  3408  03CD  00FB               	movwf	i1mem_write@add+1
  3409  03CE  0853               	movf	ints_isr@arg,w
  3410  03CF  00B4               	movwf	??_ints_isr
  3411  03D0  0834               	movf	??_ints_isr,w
  3412  03D1  00FC               	movwf	i1mem_write@data
  3413  03D2  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3414                           
  3415                           ;panda17.c: 233: arg = (temp_val >> 8) & 0x00FF;
  3416  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3417  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3418  03D9  0842               	movf	ints_isr@temp_val+1,w
  3419  03DA  00B4               	movwf	??_ints_isr
  3420  03DB  0834               	movf	??_ints_isr,w
  3421  03DC  00D3               	movwf	ints_isr@arg
  3422                           
  3423                           ;panda17.c: 234: mem_write(temp_add,arg);
  3424  03DD  084E               	movf	ints_isr@temp_add+1,w
  3425  03DE  00FB               	movwf	i1mem_write@add+1
  3426  03DF  084D               	movf	ints_isr@temp_add,w
  3427  03E0  00FA               	movwf	i1mem_write@add
  3428  03E1  0853               	movf	ints_isr@arg,w
  3429  03E2  00B4               	movwf	??_ints_isr
  3430  03E3  0834               	movf	??_ints_isr,w
  3431  03E4  00FC               	movwf	i1mem_write@data
  3432  03E5  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3433                           
  3434                           ;panda17.c: 235: arg = temp_val & 0x00FF;
  3435  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  3436  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  3437  03EC  0841               	movf	ints_isr@temp_val,w
  3438  03ED  00B4               	movwf	??_ints_isr
  3439  03EE  0834               	movf	??_ints_isr,w
  3440  03EF  00D3               	movwf	ints_isr@arg
  3441                           
  3442                           ;panda17.c: 236: mem_write(temp_add + 1,arg);
  3443  03F0  084D               	movf	ints_isr@temp_add,w
  3444  03F1  3E01               	addlw	1
  3445  03F2  00FA               	movwf	i1mem_write@add
  3446  03F3  084E               	movf	ints_isr@temp_add+1,w
  3447  03F4  1803               	skipnc
  3448  03F5  3E01               	addlw	1
  3449  03F6  3E00               	addlw	0
  3450  03F7  00FB               	movwf	i1mem_write@add+1
  3451  03F8  0853               	movf	ints_isr@arg,w
  3452  03F9  00B4               	movwf	??_ints_isr
  3453  03FA  0834               	movf	??_ints_isr,w
  3454  03FB  00FC               	movwf	i1mem_write@data
  3455  03FC  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3456  0401                     i1l2227:	
  3457                           
  3458                           ;panda17.c: 237: }
  3459                           ;panda17.c: 240: INTCONbits.GIE = 1;
  3460  0401  178B               	bsf	11,7	;volatile
  3461  0402                     i1l127:	
  3462  0402  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0403  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0404  083B               	movf	??_ints_isr+7,w
  3465  0405  00FF               	movwf	127
  3466  0406  083A               	movf	??_ints_isr+6,w
  3467  0407  008A               	movwf	10
  3468  0408  0839               	movf	??_ints_isr+5,w
  3469  0409  0084               	movwf	4
  3470  040A  0E38               	swapf	(??_ints_isr+4)^0,w
  3471  040B  0083               	movwf	3
  3472  040C  0EFE               	swapf	126,f
  3473  040D  0E7E               	swapf	126,w
  3474  040E  0009               	retfie
  3475  040F                     __end_of_ints_isr:	
  3476                           
  3477                           	psect	intentry
  3478  0004                     __pintentry:	
  3479                           ;incstack = 0
  3480                           ; Regs used in _ints_isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3481                           
  3482  0004                     interrupt_function:	
  3483  007E                     saved_w	set	btemp
  3484  0004  00FE               	movwf	btemp
  3485  0005  0E03               	swapf	3,w
  3486  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3488  0008  00B8               	movwf	??_ints_isr+4
  3489  0009  0804               	movf	4,w
  3490  000A  00B9               	movwf	??_ints_isr+5
  3491  000B  080A               	movf	10,w
  3492  000C  00BA               	movwf	??_ints_isr+6
  3493  000D  087F               	movf	btemp+1,w
  3494  000E  00BB               	movwf	??_ints_isr+7
  3495  000F  120A  118A  2829   	ljmp	_ints_isr
  3496                           
  3497                           	psect	text13
  3498  06AB                     __ptext13:	
  3499 ;; *************** function i1_mem_init *****************
  3500 ;; Defined at:
  3501 ;;		line 42 in file "panda17.c"
  3502 ;; Parameters:    Size  Location     Type
  3503 ;;		None
  3504 ;; Auto vars:     Size  Location     Type
  3505 ;;  mem_init        1    4[BANK0 ] unsigned char 
  3506 ;; Return value:  Size  Location     Type
  3507 ;;                  1    wreg      void 
  3508 ;; Registers used:
  3509 ;;		wreg, status,2, status,0, pclath, cstack
  3510 ;; Tracked objects:
  3511 ;;		On entry : 0/0
  3512 ;;		On exit  : 0/0
  3513 ;;		Unchanged: 0/0
  3514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3515 ;;      Params:         0       0       0       0       0
  3516 ;;      Locals:         0       1       0       0       0
  3517 ;;      Temps:          0       1       0       0       0
  3518 ;;      Totals:         0       2       0       0       0
  3519 ;;Total ram usage:        2 bytes
  3520 ;; Hardware stack levels used:    1
  3521 ;; Hardware stack levels required when called:    2
  3522 ;; This function calls:
  3523 ;;		i1_mem_read
  3524 ;;		i1_mem_write
  3525 ;; This function is called by:
  3526 ;;		_ints_isr
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           
  3531                           ;psect for function i1_mem_init
  3532  06AB                     i1_mem_init:	
  3533                           
  3534                           ;panda17.c: 43: unsigned char aux;
  3535                           ;panda17.c: 44: aux = mem_read(0x0002);
  3536                           
  3537                           ;incstack = 0
  3538                           ; Regs used in i1_mem_init: [wreg+status,2+status,0+pclath+cstack]
  3539  06AB  3002               	movlw	2
  3540  06AC  00FA               	movwf	i1mem_read@add
  3541  06AD  3000               	movlw	0
  3542  06AE  00FB               	movwf	i1mem_read@add+1
  3543  06AF  120A  158A  250E  120A  118A  	fcall	i1_mem_read
  3544  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  3545  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  3546  06B6  00A3               	movwf	??i1_mem_init
  3547  06B7  0823               	movf	??i1_mem_init,w
  3548  06B8  00A4               	movwf	i1mem_init@aux
  3549                           
  3550                           ;panda17.c: 45: if (aux != 0xAA){
  3551  06B9  30AA               	movlw	170
  3552  06BA  0624               	xorwf	i1mem_init@aux,w
  3553  06BB  1903               	btfsc	3,2
  3554  06BC  0008               	return
  3555                           
  3556                           ;panda17.c: 46: mem_write(0x0002,0xAA);
  3557  06BD  3002               	movlw	2
  3558  06BE  00FA               	movwf	i1mem_write@add
  3559  06BF  3000               	movlw	0
  3560  06C0  00FB               	movwf	i1mem_write@add+1
  3561  06C1  30AA               	movlw	170
  3562  06C2  00A3               	movwf	??i1_mem_init
  3563  06C3  0823               	movf	??i1_mem_init,w
  3564  06C4  00FC               	movwf	i1mem_write@data
  3565  06C5  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3566                           
  3567                           ;panda17.c: 47: mem_write(0x0003,0x00);
  3568  06CA  3003               	movlw	3
  3569  06CB  00FA               	movwf	i1mem_write@add
  3570  06CC  3000               	movlw	0
  3571  06CD  00FB               	movwf	i1mem_write@add+1
  3572  06CE  01FC               	clrf	i1mem_write@data
  3573  06CF  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3574                           
  3575                           ;panda17.c: 48: mem_write(0x000A,0x00);
  3576  06D4  300A               	movlw	10
  3577  06D5  00FA               	movwf	i1mem_write@add
  3578  06D6  3000               	movlw	0
  3579  06D7  00FB               	movwf	i1mem_write@add+1
  3580  06D8  01FC               	clrf	i1mem_write@data
  3581  06D9  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3582                           
  3583                           ;panda17.c: 49: mem_write(0x000B,0x00);
  3584  06DE  300B               	movlw	11
  3585  06DF  00FA               	movwf	i1mem_write@add
  3586  06E0  3000               	movlw	0
  3587  06E1  00FB               	movwf	i1mem_write@add+1
  3588  06E2  01FC               	clrf	i1mem_write@data
  3589  06E3  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3590                           
  3591                           ;panda17.c: 50: mem_write(0x000C,0x00);
  3592  06E8  300C               	movlw	12
  3593  06E9  00FA               	movwf	i1mem_write@add
  3594  06EA  3000               	movlw	0
  3595  06EB  00FB               	movwf	i1mem_write@add+1
  3596  06EC  01FC               	clrf	i1mem_write@data
  3597  06ED  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  3598                           
  3599                           ;panda17.c: 51: mem_write(0x000D,0x00);
  3600  06F2  300D               	movlw	13
  3601  06F3  00FA               	movwf	i1mem_write@add
  3602  06F4  3000               	movlw	0
  3603  06F5  00FB               	movwf	i1mem_write@add+1
  3604  06F6  01FC               	clrf	i1mem_write@data
  3605  06F7  120A  158A  2554   	fcall	i1_mem_write
  3606  06FA  0008               	return
  3607  06FB                     __end_ofi1_mem_init:	
  3608                           
  3609                           	psect	text14
  3610  0D0E                     __ptext14:	
  3611 ;; *************** function i1_mem_read *****************
  3612 ;; Defined at:
  3613 ;;		line 34 in file "24lc512.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  add             2   10[COMMON] unsigned int 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  mem_read        1    2[BANK0 ] unsigned char 
  3618 ;;  mem_read        1    1[BANK0 ] unsigned char 
  3619 ;;  mem_read        1    0[BANK0 ] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;                  1    wreg      unsigned char 
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0, pclath, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3629 ;;      Params:         2       0       0       0       0
  3630 ;;      Locals:         0       3       0       0       0
  3631 ;;      Temps:          1       0       0       0       0
  3632 ;;      Totals:         3       3       0       0       0
  3633 ;;Total ram usage:        6 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    1
  3636 ;; This function calls:
  3637 ;;		i1_i2c_read
  3638 ;;		i1_i2c_start
  3639 ;;		i1_i2c_stop
  3640 ;;		i1_i2c_write
  3641 ;; This function is called by:
  3642 ;;		_ints_isr
  3643 ;;		i1_mem_init
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           
  3648                           ;psect for function i1_mem_read
  3649  0D0E                     i1_mem_read:	
  3650                           
  3651                           ;24lc512.c: 35: unsigned char rta;
  3652                           ;24lc512.c: 36: unsigned char add_h,add_l;
  3653                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  3654                           
  3655                           ;incstack = 0
  3656                           ; Regs used in i1_mem_read: [wreg+status,2+status,0+pclath+cstack]
  3657  0D0E  087B               	movf	i1mem_read@add+1,w
  3658  0D0F  00FC               	movwf	??i1_mem_read
  3659  0D10  087C               	movf	??i1_mem_read,w
  3660  0D11  1283               	bcf	3,5	;RP0=0, select bank0
  3661  0D12  1303               	bcf	3,6	;RP1=0, select bank0
  3662  0D13  00A1               	movwf	i1mem_read@add_h
  3663                           
  3664                           ;24lc512.c: 38: add_l = add & 0x00FF;
  3665  0D14  087A               	movf	i1mem_read@add,w
  3666  0D15  00FC               	movwf	??i1_mem_read
  3667  0D16  087C               	movf	??i1_mem_read,w
  3668  0D17  00A2               	movwf	i1mem_read@add_l
  3669                           
  3670                           ;24lc512.c: 39: i2c_start();
  3671  0D18  120A  158A  2327  120A  158A  	fcall	i1_i2c_start
  3672                           
  3673                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  3674  0D1D  01F0               	clrf	i1i2c_write@ack
  3675  0D1E  30A0               	movlw	160
  3676  0D1F  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  3677                           
  3678                           ;24lc512.c: 41: i2c_write(add_h,0);
  3679  0D24  01F0               	clrf	i1i2c_write@ack
  3680  0D25  1283               	bcf	3,5	;RP0=0, select bank0
  3681  0D26  1303               	bcf	3,6	;RP1=0, select bank0
  3682  0D27  0821               	movf	i1mem_read@add_h,w
  3683  0D28  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  3684                           
  3685                           ;24lc512.c: 42: i2c_write(add_l,0);
  3686  0D2D  01F0               	clrf	i1i2c_write@ack
  3687  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  3688  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  3689  0D30  0822               	movf	i1mem_read@add_l,w
  3690  0D31  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  3691                           
  3692                           ;24lc512.c: 43: i2c_start();
  3693  0D36  120A  158A  2327  120A  158A  	fcall	i1_i2c_start
  3694                           
  3695                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  3696  0D3B  01F0               	clrf	i1i2c_write@ack
  3697  0D3C  30A1               	movlw	161
  3698  0D3D  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  3699                           
  3700                           ;24lc512.c: 45: rta = i2c_read(0);
  3701  0D42  3000               	movlw	0
  3702  0D43  120A  158A  268D  120A  158A  	fcall	i1_i2c_read
  3703  0D48  00FC               	movwf	??i1_mem_read
  3704  0D49  087C               	movf	??i1_mem_read,w
  3705  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  3706  0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  3707  0D4C  00A0               	movwf	i1mem_read@rta
  3708                           
  3709                           ;24lc512.c: 46: i2c_stop();
  3710  0D4D  120A  158A  234A   	fcall	i1_i2c_stop
  3711                           
  3712                           ;24lc512.c: 47: return rta;
  3713  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  3715  0D52  0820               	movf	i1mem_read@rta,w
  3716  0D53  0008               	return
  3717  0D54                     __end_ofi1_mem_read:	
  3718                           
  3719                           	psect	text15
  3720  0E34                     __ptext15:	
  3721 ;; *************** function _si_read_t *****************
  3722 ;; Defined at:
  3723 ;;		line 37 in file "si7021.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  rta             2    2[BANK0 ] unsigned int 
  3728 ;;  rta_l           1    1[BANK0 ] unsigned char 
  3729 ;;  rta_h           1    0[BANK0 ] unsigned char 
  3730 ;; Return value:  Size  Location     Type
  3731 ;;                  2   10[COMMON] unsigned int 
  3732 ;; Registers used:
  3733 ;;		wreg, status,2, status,0, pclath, cstack
  3734 ;; Tracked objects:
  3735 ;;		On entry : 0/0
  3736 ;;		On exit  : 0/0
  3737 ;;		Unchanged: 0/0
  3738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3739 ;;      Params:         2       0       0       0       0
  3740 ;;      Locals:         0       4       0       0       0
  3741 ;;      Temps:          2       0       0       0       0
  3742 ;;      Totals:         4       4       0       0       0
  3743 ;;Total ram usage:        8 bytes
  3744 ;; Hardware stack levels used:    1
  3745 ;; Hardware stack levels required when called:    1
  3746 ;; This function calls:
  3747 ;;		_i2c_rstart
  3748 ;;		i1_i2c_read
  3749 ;;		i1_i2c_start
  3750 ;;		i1_i2c_stop
  3751 ;;		i1_i2c_write
  3752 ;; This function is called by:
  3753 ;;		_ints_isr
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           
  3758                           ;psect for function _si_read_t
  3759  0E34                     _si_read_t:	
  3760                           
  3761                           ;si7021.c: 38: unsigned int rta;
  3762                           ;si7021.c: 39: unsigned char rta_h,rta_l;
  3763                           ;si7021.c: 40: i2c_start();
  3764                           
  3765                           ;incstack = 0
  3766                           ; Regs used in _si_read_t: [wreg+status,2+status,0+pclath+cstack]
  3767  0E34  120A  158A  2327  120A  158A  	fcall	i1_i2c_start
  3768                           
  3769                           ;si7021.c: 41: i2c_write(0x80,1);
  3770  0E39  01F0               	clrf	i1i2c_write@ack
  3771  0E3A  0AF0               	incf	i1i2c_write@ack,f
  3772  0E3B  3080               	movlw	128
  3773  0E3C  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  3774                           
  3775                           ;si7021.c: 42: i2c_write(0xE3,1);
  3776  0E41  01F0               	clrf	i1i2c_write@ack
  3777  0E42  0AF0               	incf	i1i2c_write@ack,f
  3778  0E43  30E3               	movlw	227
  3779  0E44  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  3780                           
  3781                           ;si7021.c: 43: i2c_rstart();
  3782  0E49  120A  158A  236D  120A  158A  	fcall	_i2c_rstart
  3783                           
  3784                           ;si7021.c: 44: i2c_write(0x81,1);
  3785  0E4E  01F0               	clrf	i1i2c_write@ack
  3786  0E4F  0AF0               	incf	i1i2c_write@ack,f
  3787  0E50  3081               	movlw	129
  3788  0E51  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  3789                           
  3790                           ;si7021.c: 45: rta_h = i2c_read(1);
  3791  0E56  3001               	movlw	1
  3792  0E57  120A  158A  268D  120A  158A  	fcall	i1_i2c_read
  3793  0E5C  00FC               	movwf	??_si_read_t
  3794  0E5D  087C               	movf	??_si_read_t,w
  3795  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  3797  0E60  00A0               	movwf	si_read_t@rta_h
  3798                           
  3799                           ;si7021.c: 46: rta_l = i2c_read(3);
  3800  0E61  3003               	movlw	3
  3801  0E62  120A  158A  268D  120A  158A  	fcall	i1_i2c_read
  3802  0E67  00FC               	movwf	??_si_read_t
  3803  0E68  087C               	movf	??_si_read_t,w
  3804  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3805  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  3806  0E6B  00A1               	movwf	si_read_t@rta_l
  3807                           
  3808                           ;si7021.c: 47: i2c_stop();
  3809  0E6C  120A  158A  234A   	fcall	i1_i2c_stop
  3810                           
  3811                           ;si7021.c: 48: rta = rta_h;
  3812  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  3813  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  3814  0E71  0820               	movf	si_read_t@rta_h,w
  3815  0E72  00FC               	movwf	??_si_read_t
  3816  0E73  01FD               	clrf	??_si_read_t+1
  3817  0E74  087C               	movf	??_si_read_t,w
  3818  0E75  00A2               	movwf	si_read_t@rta
  3819  0E76  087D               	movf	??_si_read_t+1,w
  3820  0E77  00A3               	movwf	si_read_t@rta+1
  3821                           
  3822                           ;si7021.c: 49: rta = rta << 8;
  3823  0E78  0822               	movf	si_read_t@rta,w
  3824  0E79  00FD               	movwf	??_si_read_t+1
  3825  0E7A  01FC               	clrf	??_si_read_t
  3826  0E7B  087C               	movf	??_si_read_t,w
  3827  0E7C  00A2               	movwf	si_read_t@rta
  3828  0E7D  087D               	movf	??_si_read_t+1,w
  3829  0E7E  00A3               	movwf	si_read_t@rta+1
  3830                           
  3831                           ;si7021.c: 50: rta += rta_l;
  3832  0E7F  0821               	movf	si_read_t@rta_l,w
  3833  0E80  00FC               	movwf	??_si_read_t
  3834  0E81  01FD               	clrf	??_si_read_t+1
  3835  0E82  087C               	movf	??_si_read_t,w
  3836  0E83  07A2               	addwf	si_read_t@rta,f
  3837  0E84  1803               	skipnc
  3838  0E85  0AA3               	incf	si_read_t@rta+1,f
  3839  0E86  087D               	movf	??_si_read_t+1,w
  3840  0E87  07A3               	addwf	si_read_t@rta+1,f
  3841                           
  3842                           ;si7021.c: 51: return rta;
  3843  0E88  0823               	movf	si_read_t@rta+1,w
  3844  0E89  00FB               	movwf	?_si_read_t+1
  3845  0E8A  0822               	movf	si_read_t@rta,w
  3846  0E8B  00FA               	movwf	?_si_read_t
  3847  0E8C  0008               	return
  3848  0E8D                     __end_of_si_read_t:	
  3849                           
  3850                           	psect	text16
  3851  0F43                     __ptext16:	
  3852 ;; *************** function _si_read_h *****************
  3853 ;; Defined at:
  3854 ;;		line 20 in file "si7021.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;  rta             2    2[BANK0 ] unsigned int 
  3859 ;;  rta_l           1    1[BANK0 ] unsigned char 
  3860 ;;  rta_h           1    0[BANK0 ] unsigned char 
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  2   10[COMMON] unsigned int 
  3863 ;; Registers used:
  3864 ;;		wreg, status,2, status,0, pclath, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3870 ;;      Params:         2       0       0       0       0
  3871 ;;      Locals:         0       4       0       0       0
  3872 ;;      Temps:          2       0       0       0       0
  3873 ;;      Totals:         4       4       0       0       0
  3874 ;;Total ram usage:        8 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    1
  3877 ;; This function calls:
  3878 ;;		_i2c_rstart
  3879 ;;		i1_i2c_read
  3880 ;;		i1_i2c_start
  3881 ;;		i1_i2c_stop
  3882 ;;		i1_i2c_write
  3883 ;; This function is called by:
  3884 ;;		_ints_isr
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           
  3889                           ;psect for function _si_read_h
  3890  0F43                     _si_read_h:	
  3891                           
  3892                           ;si7021.c: 21: unsigned int rta = 0;
  3893                           
  3894                           ;incstack = 0
  3895                           ; Regs used in _si_read_h: [wreg+status,2+status,0+pclath+cstack]
  3896  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  3897  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  3898  0F45  01A2               	clrf	si_read_h@rta
  3899  0F46  01A3               	clrf	si_read_h@rta+1
  3900                           
  3901                           ;si7021.c: 22: unsigned char rta_h,rta_l;
  3902                           ;si7021.c: 23: i2c_start();
  3903  0F47  120A  158A  2327  120A  158A  	fcall	i1_i2c_start
  3904                           
  3905                           ;si7021.c: 24: i2c_write(0x80,1);
  3906  0F4C  01F0               	clrf	i1i2c_write@ack
  3907  0F4D  0AF0               	incf	i1i2c_write@ack,f
  3908  0F4E  3080               	movlw	128
  3909  0F4F  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  3910                           
  3911                           ;si7021.c: 25: i2c_write(0xE5,1);
  3912  0F54  01F0               	clrf	i1i2c_write@ack
  3913  0F55  0AF0               	incf	i1i2c_write@ack,f
  3914  0F56  30E5               	movlw	229
  3915  0F57  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  3916                           
  3917                           ;si7021.c: 26: i2c_rstart();
  3918  0F5C  120A  158A  236D  120A  158A  	fcall	_i2c_rstart
  3919                           
  3920                           ;si7021.c: 27: i2c_write(0x81,1);
  3921  0F61  01F0               	clrf	i1i2c_write@ack
  3922  0F62  0AF0               	incf	i1i2c_write@ack,f
  3923  0F63  3081               	movlw	129
  3924  0F64  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  3925                           
  3926                           ;si7021.c: 28: rta_h = i2c_read(1);
  3927  0F69  3001               	movlw	1
  3928  0F6A  120A  158A  268D  120A  158A  	fcall	i1_i2c_read
  3929  0F6F  00FC               	movwf	??_si_read_h
  3930  0F70  087C               	movf	??_si_read_h,w
  3931  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  3932  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  3933  0F73  00A0               	movwf	si_read_h@rta_h
  3934                           
  3935                           ;si7021.c: 29: rta_l = i2c_read(3);
  3936  0F74  3003               	movlw	3
  3937  0F75  120A  158A  268D  120A  158A  	fcall	i1_i2c_read
  3938  0F7A  00FC               	movwf	??_si_read_h
  3939  0F7B  087C               	movf	??_si_read_h,w
  3940  0F7C  1283               	bcf	3,5	;RP0=0, select bank0
  3941  0F7D  1303               	bcf	3,6	;RP1=0, select bank0
  3942  0F7E  00A1               	movwf	si_read_h@rta_l
  3943                           
  3944                           ;si7021.c: 30: i2c_stop();
  3945  0F7F  120A  158A  234A   	fcall	i1_i2c_stop
  3946                           
  3947                           ;si7021.c: 31: rta = rta_h;
  3948  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0F83  1303               	bcf	3,6	;RP1=0, select bank0
  3950  0F84  0820               	movf	si_read_h@rta_h,w
  3951  0F85  00FC               	movwf	??_si_read_h
  3952  0F86  01FD               	clrf	??_si_read_h+1
  3953  0F87  087C               	movf	??_si_read_h,w
  3954  0F88  00A2               	movwf	si_read_h@rta
  3955  0F89  087D               	movf	??_si_read_h+1,w
  3956  0F8A  00A3               	movwf	si_read_h@rta+1
  3957                           
  3958                           ;si7021.c: 32: rta = rta << 8;
  3959  0F8B  0822               	movf	si_read_h@rta,w
  3960  0F8C  00FD               	movwf	??_si_read_h+1
  3961  0F8D  01FC               	clrf	??_si_read_h
  3962  0F8E  087C               	movf	??_si_read_h,w
  3963  0F8F  00A2               	movwf	si_read_h@rta
  3964  0F90  087D               	movf	??_si_read_h+1,w
  3965  0F91  00A3               	movwf	si_read_h@rta+1
  3966                           
  3967                           ;si7021.c: 33: rta += rta_l;
  3968  0F92  0821               	movf	si_read_h@rta_l,w
  3969  0F93  00FC               	movwf	??_si_read_h
  3970  0F94  01FD               	clrf	??_si_read_h+1
  3971  0F95  087C               	movf	??_si_read_h,w
  3972  0F96  07A2               	addwf	si_read_h@rta,f
  3973  0F97  1803               	skipnc
  3974  0F98  0AA3               	incf	si_read_h@rta+1,f
  3975  0F99  087D               	movf	??_si_read_h+1,w
  3976  0F9A  07A3               	addwf	si_read_h@rta+1,f
  3977                           
  3978                           ;si7021.c: 34: return rta;
  3979  0F9B  0823               	movf	si_read_h@rta+1,w
  3980  0F9C  00FB               	movwf	?_si_read_h+1
  3981  0F9D  0822               	movf	si_read_h@rta,w
  3982  0F9E  00FA               	movwf	?_si_read_h
  3983  0F9F  0008               	return
  3984  0FA0                     __end_of_si_read_h:	
  3985                           
  3986                           	psect	text17
  3987  0625                     __ptext17:	
  3988 ;; *************** function _save_the_date *****************
  3989 ;; Defined at:
  3990 ;;		line 55 in file "panda17.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;		None
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  ax              1    3[BANK0 ] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      void 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, status,0, pclath, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4004 ;;      Params:         0       0       0       0       0
  4005 ;;      Locals:         0       1       0       0       0
  4006 ;;      Temps:          0       1       0       0       0
  4007 ;;      Totals:         0       2       0       0       0
  4008 ;;Total ram usage:        2 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; Hardware stack levels required when called:    2
  4011 ;; This function calls:
  4012 ;;		_ds_get
  4013 ;;		i1_mem_write
  4014 ;; This function is called by:
  4015 ;;		_ints_isr
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019                           
  4020                           ;psect for function _save_the_date
  4021  0625                     _save_the_date:	
  4022                           
  4023                           ;panda17.c: 56: unsigned char ax;
  4024                           ;panda17.c: 57: ax = ds_get(0x01);
  4025                           
  4026                           ;incstack = 0
  4027                           ; Regs used in _save_the_date: [wreg+status,2+status,0+pclath+cstack]
  4028  0625  3001               	movlw	1
  4029  0626  120A  158A  23D6  120A  118A  	fcall	_ds_get
  4030  062B  1283               	bcf	3,5	;RP0=0, select bank0
  4031  062C  1303               	bcf	3,6	;RP1=0, select bank0
  4032  062D  00A2               	movwf	??_save_the_date
  4033  062E  0822               	movf	??_save_the_date,w
  4034  062F  00A3               	movwf	save_the_date@ax
  4035                           
  4036                           ;panda17.c: 58: mem_write(0xFFFA,ax);
  4037  0630  30FA               	movlw	250
  4038  0631  00FA               	movwf	i1mem_write@add
  4039  0632  30FF               	movlw	255
  4040  0633  00FB               	movwf	i1mem_write@add+1
  4041  0634  0823               	movf	save_the_date@ax,w
  4042  0635  00A2               	movwf	??_save_the_date
  4043  0636  0822               	movf	??_save_the_date,w
  4044  0637  00FC               	movwf	i1mem_write@data
  4045  0638  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  4046                           
  4047                           ;panda17.c: 59: ax = ds_get(0x02);
  4048  063D  3002               	movlw	2
  4049  063E  120A  158A  23D6  120A  118A  	fcall	_ds_get
  4050  0643  1283               	bcf	3,5	;RP0=0, select bank0
  4051  0644  1303               	bcf	3,6	;RP1=0, select bank0
  4052  0645  00A2               	movwf	??_save_the_date
  4053  0646  0822               	movf	??_save_the_date,w
  4054  0647  00A3               	movwf	save_the_date@ax
  4055                           
  4056                           ;panda17.c: 60: mem_write(0xFFF9,ax);
  4057  0648  30F9               	movlw	249
  4058  0649  00FA               	movwf	i1mem_write@add
  4059  064A  30FF               	movlw	255
  4060  064B  00FB               	movwf	i1mem_write@add+1
  4061  064C  0823               	movf	save_the_date@ax,w
  4062  064D  00A2               	movwf	??_save_the_date
  4063  064E  0822               	movf	??_save_the_date,w
  4064  064F  00FC               	movwf	i1mem_write@data
  4065  0650  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  4066                           
  4067                           ;panda17.c: 61: ax = ds_get(0x04);
  4068  0655  3004               	movlw	4
  4069  0656  120A  158A  23D6  120A  118A  	fcall	_ds_get
  4070  065B  1283               	bcf	3,5	;RP0=0, select bank0
  4071  065C  1303               	bcf	3,6	;RP1=0, select bank0
  4072  065D  00A2               	movwf	??_save_the_date
  4073  065E  0822               	movf	??_save_the_date,w
  4074  065F  00A3               	movwf	save_the_date@ax
  4075                           
  4076                           ;panda17.c: 62: mem_write(0xFFFB,ax);
  4077  0660  30FB               	movlw	251
  4078  0661  00FA               	movwf	i1mem_write@add
  4079  0662  30FF               	movlw	255
  4080  0663  00FB               	movwf	i1mem_write@add+1
  4081  0664  0823               	movf	save_the_date@ax,w
  4082  0665  00A2               	movwf	??_save_the_date
  4083  0666  0822               	movf	??_save_the_date,w
  4084  0667  00FC               	movwf	i1mem_write@data
  4085  0668  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  4086                           
  4087                           ;panda17.c: 63: ax = ds_get(0x05);
  4088  066D  3005               	movlw	5
  4089  066E  120A  158A  23D6  120A  118A  	fcall	_ds_get
  4090  0673  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0674  1303               	bcf	3,6	;RP1=0, select bank0
  4092  0675  00A2               	movwf	??_save_the_date
  4093  0676  0822               	movf	??_save_the_date,w
  4094  0677  00A3               	movwf	save_the_date@ax
  4095                           
  4096                           ;panda17.c: 64: mem_write(0xFFFC,ax);
  4097  0678  30FC               	movlw	252
  4098  0679  00FA               	movwf	i1mem_write@add
  4099  067A  30FF               	movlw	255
  4100  067B  00FB               	movwf	i1mem_write@add+1
  4101  067C  0823               	movf	save_the_date@ax,w
  4102  067D  00A2               	movwf	??_save_the_date
  4103  067E  0822               	movf	??_save_the_date,w
  4104  067F  00FC               	movwf	i1mem_write@data
  4105  0680  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  4106                           
  4107                           ;panda17.c: 65: ax = ds_get(0x06);
  4108  0685  3006               	movlw	6
  4109  0686  120A  158A  23D6  120A  118A  	fcall	_ds_get
  4110  068B  1283               	bcf	3,5	;RP0=0, select bank0
  4111  068C  1303               	bcf	3,6	;RP1=0, select bank0
  4112  068D  00A2               	movwf	??_save_the_date
  4113  068E  0822               	movf	??_save_the_date,w
  4114  068F  00A3               	movwf	save_the_date@ax
  4115                           
  4116                           ;panda17.c: 66: mem_write(0xFFFD,ax);
  4117  0690  30FD               	movlw	253
  4118  0691  00FA               	movwf	i1mem_write@add
  4119  0692  30FF               	movlw	255
  4120  0693  00FB               	movwf	i1mem_write@add+1
  4121  0694  0823               	movf	save_the_date@ax,w
  4122  0695  00A2               	movwf	??_save_the_date
  4123  0696  0822               	movf	??_save_the_date,w
  4124  0697  00FC               	movwf	i1mem_write@data
  4125  0698  120A  158A  2554  120A  118A  	fcall	i1_mem_write
  4126                           
  4127                           ;panda17.c: 71: mem_write(0x0003,0xAA);
  4128  069D  3003               	movlw	3
  4129  069E  00FA               	movwf	i1mem_write@add
  4130  069F  3000               	movlw	0
  4131  06A0  00FB               	movwf	i1mem_write@add+1
  4132  06A1  30AA               	movlw	170
  4133  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  4134  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  4135  06A4  00A2               	movwf	??_save_the_date
  4136  06A5  0822               	movf	??_save_the_date,w
  4137  06A6  00FC               	movwf	i1mem_write@data
  4138  06A7  120A  158A  2554   	fcall	i1_mem_write
  4139  06AA  0008               	return
  4140  06AB                     __end_of_save_the_date:	
  4141                           
  4142                           	psect	text18
  4143  0D54                     __ptext18:	
  4144 ;; *************** function i1_mem_write *****************
  4145 ;; Defined at:
  4146 ;;		line 13 in file "24lc512.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  add             2   10[COMMON] unsigned int 
  4149 ;;  data            1   12[COMMON] unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  mem_write       1    1[BANK0 ] unsigned char 
  4152 ;;  mem_write       1    0[BANK0 ] unsigned char 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  1    wreg      void 
  4155 ;; Registers used:
  4156 ;;		wreg, status,2, status,0, pclath, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4162 ;;      Params:         3       0       0       0       0
  4163 ;;      Locals:         0       2       0       0       0
  4164 ;;      Temps:          1       0       0       0       0
  4165 ;;      Totals:         4       2       0       0       0
  4166 ;;Total ram usage:        6 bytes
  4167 ;; Hardware stack levels used:    1
  4168 ;; Hardware stack levels required when called:    1
  4169 ;; This function calls:
  4170 ;;		i1_i2c_start
  4171 ;;		i1_i2c_stop
  4172 ;;		i1_i2c_write
  4173 ;; This function is called by:
  4174 ;;		_save_the_date
  4175 ;;		_ints_isr
  4176 ;;		i1_mem_init
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function i1_mem_write
  4182  0D54                     i1_mem_write:	
  4183                           
  4184                           ;24lc512.c: 14: unsigned char add_h,add_l;
  4185                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  4186                           
  4187                           ;incstack = 0
  4188                           ; Regs used in i1_mem_write: [wreg+status,2+status,0+pclath+cstack]
  4189  0D54  087B               	movf	i1mem_write@add+1,w
  4190  0D55  00FD               	movwf	??i1_mem_write
  4191  0D56  087D               	movf	??i1_mem_write,w
  4192  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  4193  0D58  1303               	bcf	3,6	;RP1=0, select bank0
  4194  0D59  00A0               	movwf	i1mem_write@add_h
  4195                           
  4196                           ;24lc512.c: 16: add_l = add & 0x00FF;
  4197  0D5A  087A               	movf	i1mem_write@add,w
  4198  0D5B  00FD               	movwf	??i1_mem_write
  4199  0D5C  087D               	movf	??i1_mem_write,w
  4200  0D5D  00A1               	movwf	i1mem_write@add_l
  4201                           
  4202                           ;24lc512.c: 17: i2c_start();
  4203  0D5E  120A  158A  2327  120A  158A  	fcall	i1_i2c_start
  4204                           
  4205                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  4206  0D63  01F0               	clrf	i1i2c_write@ack
  4207  0D64  30A0               	movlw	160
  4208  0D65  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  4209                           
  4210                           ;24lc512.c: 19: i2c_write(add_h,0);
  4211  0D6A  01F0               	clrf	i1i2c_write@ack
  4212  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  4213  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  4214  0D6D  0820               	movf	i1mem_write@add_h,w
  4215  0D6E  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  4216                           
  4217                           ;24lc512.c: 20: i2c_write(add_l,0);
  4218  0D73  01F0               	clrf	i1i2c_write@ack
  4219  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0D76  0821               	movf	i1mem_write@add_l,w
  4222  0D77  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  4223                           
  4224                           ;24lc512.c: 21: i2c_write(data,0);
  4225  0D7C  01F0               	clrf	i1i2c_write@ack
  4226  0D7D  087C               	movf	i1mem_write@data,w
  4227  0D7E  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  4228                           
  4229                           ;24lc512.c: 22: i2c_stop();
  4230  0D83  120A  158A  234A  120A  158A  	fcall	i1_i2c_stop
  4231  0D88                     L3:	
  4232                           
  4233                           ;24lc512.c: 24: i2c_start();
  4234  0D88  120A  158A  2327  120A  158A  	fcall	i1_i2c_start
  4235                           
  4236                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  4237  0D8D  01F0               	clrf	i1i2c_write@ack
  4238  0D8E  30A0               	movlw	160
  4239  0D8F  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  4240                           
  4241                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  4242  0D94  1683               	bsf	3,5	;RP0=1, select bank1
  4243  0D95  1303               	bcf	3,6	;RP1=0, select bank1
  4244  0D96  1B11               	btfsc	17,6	;volatile
  4245  0D97  2D88               	goto	L3
  4246                           
  4247                           ;24lc512.c: 30: }
  4248                           ;24lc512.c: 31: i2c_stop();
  4249                           
  4250                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  4251                           
  4252                           ;24lc512.c: 28: i2c_start();
  4253  0D98  120A  158A  234A   	fcall	i1_i2c_stop
  4254  0D9B  0008               	return
  4255  0D9C                     __end_ofi1_mem_write:	
  4256                           
  4257                           	psect	text19
  4258  0BD6                     __ptext19:	
  4259 ;; *************** function _ds_get *****************
  4260 ;; Defined at:
  4261 ;;		line 25 in file "ds1307.c"
  4262 ;; Parameters:    Size  Location     Type
  4263 ;;  data            1    wreg     unsigned char 
  4264 ;; Auto vars:     Size  Location     Type
  4265 ;;  data            1   11[COMMON] unsigned char 
  4266 ;;  resp            1   12[COMMON] unsigned char 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      unsigned char 
  4269 ;; Registers used:
  4270 ;;		wreg, status,2, status,0, pclath, cstack
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4276 ;;      Params:         0       0       0       0       0
  4277 ;;      Locals:         2       0       0       0       0
  4278 ;;      Temps:          1       0       0       0       0
  4279 ;;      Totals:         3       0       0       0       0
  4280 ;;Total ram usage:        3 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    1
  4283 ;; This function calls:
  4284 ;;		_i2c_rstart
  4285 ;;		i1_i2c_read
  4286 ;;		i1_i2c_start
  4287 ;;		i1_i2c_stop
  4288 ;;		i1_i2c_write
  4289 ;; This function is called by:
  4290 ;;		_save_the_date
  4291 ;;		_ints_isr
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           
  4296                           ;psect for function _ds_get
  4297  0BD6                     _ds_get:	
  4298                           
  4299                           ;incstack = 0
  4300                           ; Regs used in _ds_get: [wreg+status,2+status,0+pclath+cstack]
  4301                           ;ds_get@data stored from wreg
  4302  0BD6  00FB               	movwf	ds_get@data
  4303                           
  4304                           ;ds1307.c: 26: unsigned char resp;
  4305                           ;ds1307.c: 27: i2c_start();
  4306  0BD7  120A  158A  2327  120A  158A  	fcall	i1_i2c_start
  4307                           
  4308                           ;ds1307.c: 28: i2c_write(0b11010000,1);
  4309  0BDC  01F0               	clrf	i1i2c_write@ack
  4310  0BDD  0AF0               	incf	i1i2c_write@ack,f
  4311  0BDE  30D0               	movlw	208
  4312  0BDF  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  4313                           
  4314                           ;ds1307.c: 29: i2c_write(data,1);
  4315  0BE4  01F0               	clrf	i1i2c_write@ack
  4316  0BE5  0AF0               	incf	i1i2c_write@ack,f
  4317  0BE6  087B               	movf	ds_get@data,w
  4318  0BE7  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  4319                           
  4320                           ;ds1307.c: 30: i2c_rstart();
  4321  0BEC  120A  158A  236D  120A  158A  	fcall	_i2c_rstart
  4322                           
  4323                           ;ds1307.c: 31: i2c_write(0b11010001,1);
  4324  0BF1  01F0               	clrf	i1i2c_write@ack
  4325  0BF2  0AF0               	incf	i1i2c_write@ack,f
  4326  0BF3  30D1               	movlw	209
  4327  0BF4  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  4328                           
  4329                           ;ds1307.c: 32: resp = i2c_read(0);
  4330  0BF9  3000               	movlw	0
  4331  0BFA  120A  158A  268D  120A  158A  	fcall	i1_i2c_read
  4332  0BFF  00FA               	movwf	??_ds_get
  4333  0C00  087A               	movf	??_ds_get,w
  4334  0C01  00FC               	movwf	ds_get@resp
  4335                           
  4336                           ;ds1307.c: 33: i2c_stop();
  4337  0C02  120A  158A  234A   	fcall	i1_i2c_stop
  4338                           
  4339                           ;ds1307.c: 34: return resp;
  4340  0C05  087C               	movf	ds_get@resp,w
  4341  0C06  0008               	return
  4342  0C07                     __end_of_ds_get:	
  4343                           
  4344                           	psect	text20
  4345  0E8D                     __ptext20:	
  4346 ;; *************** function i1_i2c_read *****************
  4347 ;; Defined at:
  4348 ;;		line 51 in file "i2clib.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  ack             1    wreg     unsigned char 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  ack             1    9[COMMON] unsigned char 
  4353 ;;  i2c_read        1    8[COMMON] unsigned char 
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      unsigned char 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2, status,0
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4363 ;;      Params:         0       0       0       0       0
  4364 ;;      Locals:         2       0       0       0       0
  4365 ;;      Temps:          8       0       0       0       0
  4366 ;;      Totals:        10       0       0       0       0
  4367 ;;Total ram usage:       10 bytes
  4368 ;; Hardware stack levels used:    1
  4369 ;; This function calls:
  4370 ;;		Nothing
  4371 ;; This function is called by:
  4372 ;;		_si_read_h
  4373 ;;		_si_read_t
  4374 ;;		_ds_get
  4375 ;;		i1_mem_read
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           
  4380                           ;psect for function i1_i2c_read
  4381  0E8D                     i1_i2c_read:	
  4382                           
  4383                           ;incstack = 0
  4384                           ; Regs used in i1_i2c_read: [wreg+status,2+status,0]
  4385                           ;i1i2c_read@ack stored from wreg
  4386  0E8D  00F9               	movwf	i1i2c_read@ack
  4387                           
  4388                           ;i2clib.c: 52: unsigned char resp;
  4389                           ;i2clib.c: 53: static bit flag, not_flag;
  4390                           ;i2clib.c: 54: flag = ack & 0x01;
  4391  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  4392  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  4393  0E90  10DF               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  4394  0E91  1879               	btfsc	i1i2c_read@ack,0
  4395  0E92  14DF               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  4396                           
  4397                           ;i2clib.c: 55: if (ack == 1){
  4398  0E93  0379               	decf	i1i2c_read@ack,w
  4399  0E94  1D03               	btfss	3,2
  4400  0E95  2E99               	goto	i1l1597
  4401                           
  4402                           ;i2clib.c: 56: not_flag = 0;
  4403  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  4404  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  4405  0E98  105F               	bcf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  4406  0E99                     i1l1597:	
  4407                           
  4408                           ;i2clib.c: 57: }
  4409                           ;i2clib.c: 58: if (ack == 3){
  4410  0E99  3003               	movlw	3
  4411  0E9A  0679               	xorwf	i1i2c_read@ack,w
  4412  0E9B  1D03               	btfss	3,2
  4413  0E9C  2EA0               	goto	i1l1601
  4414                           
  4415                           ;i2clib.c: 59: not_flag = 1;
  4416  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  4417  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  4418  0E9F  145F               	bsf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  4419  0EA0                     i1l1601:	
  4420                           ;i2clib.c: 60: }
  4421                           ;i2clib.c: 61: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  4422                           
  4423  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  4424  0EA1  1303               	bcf	3,6	;RP1=0, select bank1
  4425  0EA2  0811               	movf	17,w	;volatile
  4426  0EA3  3901               	andlw	1
  4427  0EA4  00F0               	movwf	??i1_i2c_read
  4428  0EA5  0C11               	rrf	17,w	;volatile
  4429  0EA6  3901               	andlw	1
  4430  0EA7  00F1               	movwf	??i1_i2c_read+1
  4431  0EA8  0C11               	rrf	17,w	;volatile
  4432  0EA9  00F2               	movwf	??i1_i2c_read+2
  4433  0EAA  0CF2               	rrf	??i1_i2c_read+2,f
  4434  0EAB  0C72               	rrf	??i1_i2c_read+2,w
  4435  0EAC  3901               	andlw	1
  4436  0EAD  00F3               	movwf	??i1_i2c_read+3
  4437  0EAE  0E11               	swapf	17,w	;volatile
  4438  0EAF  3901               	andlw	1
  4439  0EB0  00F4               	movwf	??i1_i2c_read+4
  4440  0EB1  0C11               	rrf	17,w	;volatile
  4441  0EB2  00F5               	movwf	??i1_i2c_read+5
  4442  0EB3  0C75               	rrf	??i1_i2c_read+5,w
  4443  0EB4  3901               	andlw	1
  4444  0EB5  00F6               	movwf	??i1_i2c_read+6
  4445  0EB6  0C14               	rrf	20,w	;volatile
  4446  0EB7  00F7               	movwf	??i1_i2c_read+7
  4447  0EB8  0C77               	rrf	??i1_i2c_read+7,w
  4448  0EB9  3901               	andlw	1
  4449  0EBA  0476               	iorwf	??i1_i2c_read+6,w
  4450  0EBB  0474               	iorwf	??i1_i2c_read+4,w
  4451  0EBC  0473               	iorwf	??i1_i2c_read+3,w
  4452  0EBD  0471               	iorwf	??i1_i2c_read+1,w
  4453  0EBE  0470               	iorwf	??i1_i2c_read,w
  4454  0EBF  1D03               	btfss	3,2
  4455  0EC0  2EA0               	goto	i1l1601
  4456                           
  4457                           ;i2clib.c: 62: SSPCON2bits.RCEN = 1;
  4458  0EC1  1591               	bsf	17,3	;volatile
  4459  0EC2                     i1l201:	
  4460                           ;i2clib.c: 63: while(!SSPSTATbits.BF);
  4461                           
  4462  0EC2  1C14               	btfss	20,0	;volatile
  4463  0EC3  2EC2               	goto	i1l201
  4464  0EC4                     i1l204:	
  4465                           ;i2clib.c: 64: while(!PIR1bits.SSPIF);
  4466                           
  4467  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  4468  0EC5  1D8C               	btfss	12,3	;volatile
  4469  0EC6  2EC4               	goto	i1l204
  4470                           
  4471                           ;i2clib.c: 65: SSPCON2bits.ACKDT = not_flag;
  4472  0EC7  1C5F               	btfss	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  4473  0EC8  2ECD               	goto	u145_20
  4474  0EC9  1683               	bsf	3,5	;RP0=1, select bank1
  4475  0ECA  1303               	bcf	3,6	;RP1=0, select bank1
  4476  0ECB  1691               	bsf	17,5	;volatile
  4477  0ECC  2ED0               	goto	u146_24
  4478  0ECD                     u145_20:	
  4479  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  4480  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  4481  0ECF  1291               	bcf	17,5	;volatile
  4482  0ED0                     u146_24:	
  4483                           
  4484                           ;i2clib.c: 66: SSPCON2bits.ACKEN = flag;
  4485  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  4486  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  4487  0ED2  1CDF               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  4488  0ED3  2ED8               	goto	u147_20
  4489  0ED4  1683               	bsf	3,5	;RP0=1, select bank1
  4490  0ED5  1303               	bcf	3,6	;RP1=0, select bank1
  4491  0ED6  1611               	bsf	17,4	;volatile
  4492  0ED7  2EDB               	goto	i1l1603
  4493  0ED8                     u147_20:	
  4494  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  4495  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  4496  0EDA  1211               	bcf	17,4	;volatile
  4497  0EDB                     i1l1603:	
  4498                           
  4499                           ;i2clib.c: 67: resp = SSPBUF;
  4500  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  4501  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  4502  0EDD  0813               	movf	19,w	;volatile
  4503  0EDE  00F0               	movwf	??i1_i2c_read
  4504  0EDF  0870               	movf	??i1_i2c_read,w
  4505  0EE0  00F8               	movwf	i1i2c_read@resp
  4506  0EE1                     i1l207:	
  4507                           ;i2clib.c: 68: while(SSPSTATbits.BF);
  4508                           
  4509  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  4510  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  4511  0EE3  1814               	btfsc	20,0	;volatile
  4512  0EE4  2EE1               	goto	i1l207
  4513                           
  4514                           ;i2clib.c: 69: return resp;
  4515  0EE5  0878               	movf	i1i2c_read@resp,w
  4516  0EE6  0008               	return
  4517  0EE7                     __end_ofi1_i2c_read:	
  4518                           
  4519                           	psect	text21
  4520  0B6D                     __ptext21:	
  4521 ;; *************** function _i2c_rstart *****************
  4522 ;; Defined at:
  4523 ;;		line 29 in file "i2clib.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;		None
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;		None
  4528 ;; Return value:  Size  Location     Type
  4529 ;;                  1    wreg      void 
  4530 ;; Registers used:
  4531 ;;		wreg, status,2, status,0
  4532 ;; Tracked objects:
  4533 ;;		On entry : 0/0
  4534 ;;		On exit  : 0/0
  4535 ;;		Unchanged: 0/0
  4536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4537 ;;      Params:         0       0       0       0       0
  4538 ;;      Locals:         0       0       0       0       0
  4539 ;;      Temps:          8       0       0       0       0
  4540 ;;      Totals:         8       0       0       0       0
  4541 ;;Total ram usage:        8 bytes
  4542 ;; Hardware stack levels used:    1
  4543 ;; This function calls:
  4544 ;;		Nothing
  4545 ;; This function is called by:
  4546 ;;		_si_read_h
  4547 ;;		_si_read_t
  4548 ;;		_ds_get
  4549 ;; This function uses a non-reentrant model
  4550 ;;
  4551                           
  4552                           
  4553                           ;psect for function _i2c_rstart
  4554  0B6D                     _i2c_rstart:	
  4555  0B6D                     i1l1539:	
  4556                           ;i2clib.c: 30: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  4557                           
  4558                           ;incstack = 0
  4559                           ; Regs used in _i2c_rstart: [wreg+status,2+status,0]
  4560                           
  4561  0B6D  1683               	bsf	3,5	;RP0=1, select bank1
  4562  0B6E  1303               	bcf	3,6	;RP1=0, select bank1
  4563  0B6F  0811               	movf	17,w	;volatile
  4564  0B70  3901               	andlw	1
  4565  0B71  00F0               	movwf	??_i2c_rstart
  4566  0B72  0C11               	rrf	17,w	;volatile
  4567  0B73  3901               	andlw	1
  4568  0B74  00F1               	movwf	??_i2c_rstart+1
  4569  0B75  0C11               	rrf	17,w	;volatile
  4570  0B76  00F2               	movwf	??_i2c_rstart+2
  4571  0B77  0CF2               	rrf	??_i2c_rstart+2,f
  4572  0B78  0C72               	rrf	??_i2c_rstart+2,w
  4573  0B79  3901               	andlw	1
  4574  0B7A  00F3               	movwf	??_i2c_rstart+3
  4575  0B7B  0E11               	swapf	17,w	;volatile
  4576  0B7C  3901               	andlw	1
  4577  0B7D  00F4               	movwf	??_i2c_rstart+4
  4578  0B7E  0C11               	rrf	17,w	;volatile
  4579  0B7F  00F5               	movwf	??_i2c_rstart+5
  4580  0B80  0C75               	rrf	??_i2c_rstart+5,w
  4581  0B81  3901               	andlw	1
  4582  0B82  00F6               	movwf	??_i2c_rstart+6
  4583  0B83  0C14               	rrf	20,w	;volatile
  4584  0B84  00F7               	movwf	??_i2c_rstart+7
  4585  0B85  0C77               	rrf	??_i2c_rstart+7,w
  4586  0B86  3901               	andlw	1
  4587  0B87  0476               	iorwf	??_i2c_rstart+6,w
  4588  0B88  0474               	iorwf	??_i2c_rstart+4,w
  4589  0B89  0473               	iorwf	??_i2c_rstart+3,w
  4590  0B8A  0471               	iorwf	??_i2c_rstart+1,w
  4591  0B8B  0470               	iorwf	??_i2c_rstart,w
  4592  0B8C  1D03               	btfss	3,2
  4593  0B8D  2B6D               	goto	i1l1539
  4594                           
  4595                           ;i2clib.c: 31: SSPCON2bits.RSEN = 1;
  4596  0B8E  1491               	bsf	17,1	;volatile
  4597  0B8F  0008               	return
  4598  0B90                     __end_of_i2c_rstart:	
  4599                           
  4600                           	psect	text22
  4601  040F                     __ptext22:	
  4602 ;; *************** function _printf *****************
  4603 ;; Defined at:
  4604 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  f               1    wreg     PTR const unsigned char 
  4607 ;;		 -> STR_16(2), STR_15(5), STR_14(7), STR_13(4), 
  4608 ;;		 -> STR_12(3), STR_11(2), STR_10(3), STR_9(6), 
  4609 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_5(6), 
  4610 ;;		 -> STR_4(2), STR_3(5), STR_2(5), STR_1(8), 
  4611 ;; Auto vars:     Size  Location     Type
  4612 ;;  f               1   18[BANK0 ] PTR const unsigned char 
  4613 ;;		 -> STR_16(2), STR_15(5), STR_14(7), STR_13(4), 
  4614 ;;		 -> STR_12(3), STR_11(2), STR_10(3), STR_9(6), 
  4615 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_5(6), 
  4616 ;;		 -> STR_4(2), STR_3(5), STR_2(5), STR_1(8), 
  4617 ;;  idx             1    9[BANK0 ] unsigned char 
  4618 ;;  tmpval          4    0        struct .
  4619 ;;  width           2   15[BANK0 ] int 
  4620 ;;  val             2   13[BANK0 ] unsigned int 
  4621 ;;  cp              2    0        PTR const unsigned char 
  4622 ;;  len             2    0        unsigned int 
  4623 ;;  c               1   19[BANK0 ] char 
  4624 ;;  flag            1   17[BANK0 ] unsigned char 
  4625 ;;  prec            1   12[BANK0 ] char 
  4626 ;;  ap              1   11[BANK0 ] PTR void [1]
  4627 ;;		 -> ?_printf(2), 
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  2    4[BANK0 ] int 
  4630 ;; Registers used:
  4631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4637 ;;      Params:         0       2       0       0       0
  4638 ;;      Locals:         0      11       0       0       0
  4639 ;;      Temps:          0       3       0       0       0
  4640 ;;      Totals:         0      16       0       0       0
  4641 ;;Total ram usage:       16 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:    1
  4644 ;; This function calls:
  4645 ;;		___lwdiv
  4646 ;;		___lwmod
  4647 ;;		___wmul
  4648 ;;		_isdigit
  4649 ;;		_putch
  4650 ;; This function is called by:
  4651 ;;		_ints_isr
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           
  4656                           ;psect for function _printf
  4657  040F                     _printf:	
  4658                           
  4659                           ;incstack = 0
  4660                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4661                           ;printf@f stored from wreg
  4662  040F  1283               	bcf	3,5	;RP0=0, select bank0
  4663  0410  1303               	bcf	3,6	;RP1=0, select bank0
  4664  0411  00B2               	movwf	printf@f
  4665                           
  4666                           ;doprnt.c: 466: va_list ap;
  4667                           ;doprnt.c: 499: signed char c;
  4668                           ;doprnt.c: 501: int width;
  4669                           ;doprnt.c: 506: signed char prec;
  4670                           ;doprnt.c: 508: unsigned char flag;
  4671                           ;doprnt.c: 523: union {
  4672                           ;doprnt.c: 524: unsigned long vd;
  4673                           ;doprnt.c: 525: double integ;
  4674                           ;doprnt.c: 526: } tmpval;
  4675                           ;doprnt.c: 528: unsigned int val;
  4676                           ;doprnt.c: 529: unsigned len;
  4677                           ;doprnt.c: 530: const char * cp;
  4678                           ;doprnt.c: 533: *ap = __va_start();
  4679  0412  3024               	movlw	(low (?_printf| 0))& (0+255)
  4680  0413  00A6               	movwf	??_printf
  4681  0414  0826               	movf	??_printf,w
  4682  0415  00AB               	movwf	printf@ap
  4683  0416                     i1l1937:	
  4684                           ;doprnt.c: 536: while(c = *f++) {
  4685                           
  4686  0416  3001               	movlw	1
  4687  0417  1283               	bcf	3,5	;RP0=0, select bank0
  4688  0418  1303               	bcf	3,6	;RP1=0, select bank0
  4689  0419  07B2               	addwf	printf@f,f
  4690  041A  30FF               	movlw	-1
  4691  041B  0732               	addwf	printf@f,w
  4692  041C  0084               	movwf	4
  4693  041D  120A  118A  2700  120A  118A  	fcall	stringdir
  4694  0422  00A6               	movwf	??_printf
  4695  0423  0826               	movf	??_printf,w
  4696  0424  00B3               	movwf	printf@c
  4697  0425  0833               	movf	printf@c,w
  4698  0426  1903               	btfsc	3,2
  4699  0427  0008               	return
  4700                           
  4701                           ;doprnt.c: 538: if(c != '%')
  4702  0428  3025               	movlw	37
  4703  0429  0633               	xorwf	printf@c,w
  4704  042A  1903               	btfsc	3,2
  4705  042B  2C33               	goto	i1l1821
  4706                           
  4707                           ;doprnt.c: 540: {
  4708                           ;doprnt.c: 541: (putch(c) );
  4709  042C  0833               	movf	printf@c,w
  4710  042D  120A  158A  22AC  120A  118A  	fcall	_putch
  4711                           
  4712                           ;doprnt.c: 542: continue;
  4713  0432  2C16               	goto	i1l1937
  4714  0433                     i1l1821:	
  4715                           
  4716                           ;doprnt.c: 543: }
  4717                           ;doprnt.c: 546: width = 0;
  4718  0433  1283               	bcf	3,5	;RP0=0, select bank0
  4719  0434  1303               	bcf	3,6	;RP1=0, select bank0
  4720  0435  01AF               	clrf	printf@width
  4721  0436  01B0               	clrf	printf@width+1
  4722                           
  4723                           ;doprnt.c: 548: flag = 0;
  4724  0437  01B1               	clrf	printf@flag
  4725                           
  4726                           ;doprnt.c: 551: switch(*f) {
  4727                           
  4728                           ;doprnt.c: 550: for(;;) {
  4729  0438  2C3E               	goto	i1l1827
  4730  0439                     i1l286:	
  4731                           ;doprnt.c: 579: case '0':
  4732                           
  4733                           
  4734                           ;doprnt.c: 580: flag |= 0x04;
  4735  0439  1531               	bsf	printf@flag,2
  4736                           
  4737                           ;doprnt.c: 581: f++;
  4738  043A  3001               	movlw	1
  4739  043B  00A6               	movwf	??_printf
  4740  043C  0826               	movf	??_printf,w
  4741  043D  07B2               	addwf	printf@f,f
  4742  043E                     i1l1827:	
  4743                           ;doprnt.c: 584: }
  4744                           
  4745                           ;doprnt.c: 582: continue;
  4746                           
  4747  043E  0832               	movf	printf@f,w
  4748  043F  0084               	movwf	4
  4749  0440  120A  118A  2700  120A  118A  	fcall	stringdir
  4750                           
  4751                           ; Switch size 1, requested type "space"
  4752                           ; Number of cases is 1, Range of values is 48 to 48
  4753                           ; switch strategies available:
  4754                           ; Name         Instructions Cycles
  4755                           ; simple_byte            4     3 (average)
  4756                           ; direct_byte           14    11 (fixed)
  4757                           ; jumptable            263     9 (fixed)
  4758                           ;	Chosen strategy is simple_byte
  4759  0445  3A30               	xorlw	48	; case 48
  4760  0446  1903               	skipnz
  4761  0447  2C39               	goto	i1l286
  4762  0448  2C49               	goto	i1l1829
  4763  0449                     i1l1829:	
  4764                           ;doprnt.c: 586: }
  4765                           
  4766                           ;doprnt.c: 585: break;
  4767                           
  4768                           
  4769                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4770  0449  0832               	movf	printf@f,w
  4771  044A  0084               	movwf	4
  4772  044B  120A  118A  2700  120A  118A  	fcall	stringdir
  4773  0450  120A  158A  22B4  120A  118A  	fcall	_isdigit
  4774  0455  1C03               	btfss	3,0
  4775  0456  2C99               	goto	i1l1843
  4776                           
  4777                           ;doprnt.c: 598: width = 0;
  4778  0457  1283               	bcf	3,5	;RP0=0, select bank0
  4779  0458  1303               	bcf	3,6	;RP1=0, select bank0
  4780  0459  01AF               	clrf	printf@width
  4781  045A  01B0               	clrf	printf@width+1
  4782  045B                     i1l1833:	
  4783                           ;doprnt.c: 599: do {
  4784                           
  4785                           
  4786                           ;doprnt.c: 600: width *= 10;
  4787  045B  300A               	movlw	10
  4788  045C  00F0               	movwf	___wmul@multiplier
  4789  045D  3000               	movlw	0
  4790  045E  00F1               	movwf	___wmul@multiplier+1
  4791  045F  1283               	bcf	3,5	;RP0=0, select bank0
  4792  0460  1303               	bcf	3,6	;RP1=0, select bank0
  4793  0461  0830               	movf	printf@width+1,w
  4794  0462  00F3               	movwf	___wmul@multiplicand+1
  4795  0463  082F               	movf	printf@width,w
  4796  0464  00F2               	movwf	___wmul@multiplicand
  4797  0465  120A  158A  2306  120A  118A  	fcall	___wmul
  4798  046A  0871               	movf	?___wmul+1,w
  4799  046B  1283               	bcf	3,5	;RP0=0, select bank0
  4800  046C  1303               	bcf	3,6	;RP1=0, select bank0
  4801  046D  00B0               	movwf	printf@width+1
  4802  046E  0870               	movf	?___wmul,w
  4803  046F  00AF               	movwf	printf@width
  4804                           
  4805                           ;doprnt.c: 601: width += *f++ - '0';
  4806  0470  0832               	movf	printf@f,w
  4807  0471  0084               	movwf	4
  4808  0472  120A  118A  2700  120A  118A  	fcall	stringdir
  4809  0477  3ED0               	addlw	208
  4810  0478  00A6               	movwf	??_printf
  4811  0479  30FF               	movlw	255
  4812  047A  1803               	skipnc
  4813  047B  3000               	movlw	0
  4814  047C  00A7               	movwf	??_printf+1
  4815  047D  0826               	movf	??_printf,w
  4816  047E  07AF               	addwf	printf@width,f
  4817  047F  1803               	skipnc
  4818  0480  0AB0               	incf	printf@width+1,f
  4819  0481  0827               	movf	??_printf+1,w
  4820  0482  07B0               	addwf	printf@width+1,f
  4821  0483  3001               	movlw	1
  4822  0484  00A6               	movwf	??_printf
  4823  0485  0826               	movf	??_printf,w
  4824  0486  07B2               	addwf	printf@f,f
  4825                           
  4826                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4827  0487  0832               	movf	printf@f,w
  4828  0488  0084               	movwf	4
  4829  0489  120A  118A  2700  120A  118A  	fcall	stringdir
  4830  048E  120A  158A  22B4  120A  118A  	fcall	_isdigit
  4831  0493  1C03               	btfss	3,0
  4832  0494  2C99               	goto	i1l1843
  4833  0495  2C5B               	goto	i1l1833
  4834  0496                     i1l299:	
  4835                           ;doprnt.c: 712: case 'X':
  4836                           
  4837                           ;doprnt.c: 698: case 'i':
  4838                           ;doprnt.c: 699: break;
  4839                           
  4840                           ;doprnt.c: 697: case 'd':
  4841                           
  4842                           ;doprnt.c: 638: goto alldone;
  4843                           
  4844                           ;doprnt.c: 637: case 0:
  4845                           
  4846                           ;doprnt.c: 608: }
  4847                           ;doprnt.c: 635: switch(c = *f++) {
  4848                           
  4849                           
  4850                           ;doprnt.c: 714: flag |= 0x20;
  4851  0496  16B1               	bsf	printf@flag,5
  4852  0497                     i1l300:	
  4853                           ;doprnt.c: 718: case 'x':
  4854                           
  4855                           
  4856                           ;doprnt.c: 721: flag |= 0x80;
  4857  0497  17B1               	bsf	printf@flag,7
  4858                           
  4859                           ;doprnt.c: 723: break;
  4860  0498  2CB6               	goto	i1l298
  4861  0499                     i1l1843:	
  4862                           ;doprnt.c: 822: }
  4863                           
  4864                           ;doprnt.c: 813: continue;
  4865                           
  4866                           ;doprnt.c: 802: default:
  4867                           
  4868  0499  3001               	movlw	1
  4869  049A  1283               	bcf	3,5	;RP0=0, select bank0
  4870  049B  1303               	bcf	3,6	;RP1=0, select bank0
  4871  049C  07B2               	addwf	printf@f,f
  4872  049D  30FF               	movlw	-1
  4873  049E  0732               	addwf	printf@f,w
  4874  049F  0084               	movwf	4
  4875  04A0  120A  118A  2700  120A  118A  	fcall	stringdir
  4876  04A5  00B3               	movwf	printf@c
  4877                           
  4878                           ; Switch size 1, requested type "space"
  4879                           ; Number of cases is 5, Range of values is 0 to 120
  4880                           ; switch strategies available:
  4881                           ; Name         Instructions Cycles
  4882                           ; simple_byte           16     9 (average)
  4883                           ; jumptable            260     6 (fixed)
  4884                           ;	Chosen strategy is simple_byte
  4885  04A6  3A00               	xorlw	0	; case 0
  4886  04A7  1903               	skipnz
  4887  04A8  2E24               	goto	i1l340
  4888  04A9  3A58               	xorlw	88	; case 88
  4889  04AA  1903               	skipnz
  4890  04AB  2C96               	goto	i1l299
  4891  04AC  3A3C               	xorlw	60	; case 100
  4892  04AD  1903               	skipnz
  4893  04AE  2CB6               	goto	i1l298
  4894  04AF  3A0D               	xorlw	13	; case 105
  4895  04B0  1903               	skipnz
  4896  04B1  2CB6               	goto	i1l298
  4897  04B2  3A11               	xorlw	17	; case 120
  4898  04B3  1903               	skipnz
  4899  04B4  2C97               	goto	i1l300
  4900  04B5  2C16               	goto	i1l1937
  4901  04B6                     i1l298:	
  4902                           
  4903                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4904  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  4905  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  4906  04B8  1BB1               	btfsc	printf@flag,7
  4907  04B9  2CD2               	goto	i1l1855
  4908                           
  4909                           ;doprnt.c: 1253: {
  4910                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4911  04BA  082B               	movf	printf@ap,w
  4912  04BB  0084               	movwf	4
  4913  04BC  1383               	bcf	3,7	;select IRP bank0
  4914  04BD  0800               	movf	0,w
  4915  04BE  00AD               	movwf	printf@val
  4916  04BF  0A84               	incf	4,f
  4917  04C0  0800               	movf	0,w
  4918  04C1  00AE               	movwf	printf@val+1
  4919  04C2  3002               	movlw	2
  4920  04C3  00A6               	movwf	??_printf
  4921  04C4  0826               	movf	??_printf,w
  4922  04C5  07AB               	addwf	printf@ap,f
  4923                           
  4924                           ;doprnt.c: 1261: if((int)val < 0) {
  4925  04C6  1FAE               	btfss	printf@val+1,7
  4926  04C7  2D27               	goto	i1l1881
  4927                           
  4928                           ;doprnt.c: 1262: flag |= 0x03;
  4929  04C8  3003               	movlw	3
  4930  04C9  00A6               	movwf	??_printf
  4931  04CA  0826               	movf	??_printf,w
  4932  04CB  04B1               	iorwf	printf@flag,f
  4933                           
  4934                           ;doprnt.c: 1263: val = -val;
  4935  04CC  09AD               	comf	printf@val,f
  4936  04CD  09AE               	comf	printf@val+1,f
  4937  04CE  0AAD               	incf	printf@val,f
  4938  04CF  1903               	skipnz
  4939  04D0  0AAE               	incf	printf@val+1,f
  4940                           
  4941                           ;doprnt.c: 1264: }
  4942                           ;doprnt.c: 1266: }
  4943  04D1  2D27               	goto	i1l1881
  4944  04D2                     i1l1855:	
  4945                           
  4946                           ;doprnt.c: 1268: else
  4947                           ;doprnt.c: 1273: {
  4948                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4949  04D2  082B               	movf	printf@ap,w
  4950  04D3  0084               	movwf	4
  4951  04D4  1383               	bcf	3,7	;select IRP bank0
  4952  04D5  0800               	movf	0,w
  4953  04D6  00AD               	movwf	printf@val
  4954  04D7  0A84               	incf	4,f
  4955  04D8  0800               	movf	0,w
  4956  04D9  00AE               	movwf	printf@val+1
  4957  04DA  3002               	movlw	2
  4958  04DB  00A6               	movwf	??_printf
  4959  04DC  0826               	movf	??_printf,w
  4960  04DD  07AB               	addwf	printf@ap,f
  4961                           
  4962                           ;doprnt.c: 1287: }
  4963                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  4964  04DE  2D27               	goto	i1l1881
  4965  04DF                     i1l306:	
  4966                           ;doprnt.c: 1299: case 0x00:
  4967                           
  4968                           
  4969                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4970  04DF  01B3               	clrf	printf@c
  4971  04E0  0AB3               	incf	printf@c,f
  4972  04E1                     L7:	
  4973  04E1  3005               	movlw	5
  4974  04E2  0633               	xorwf	printf@c,w
  4975  04E3  1903               	btfsc	3,2
  4976  04E4  2D30               	goto	i1l1883
  4977                           
  4978                           ;doprnt.c: 1306: if(val < dpowers[c])
  4979  04E5  0833               	movf	printf@c,w
  4980  04E6  00A6               	movwf	??_printf
  4981  04E7  0726               	addwf	??_printf,w
  4982  04E8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4983  04E9  0084               	movwf	4
  4984  04EA  120A  118A  2700  120A  118A  	fcall	stringdir
  4985  04EF  00A7               	movwf	??_printf+1
  4986  04F0  120A  118A  2700  120A  118A  	fcall	stringdir
  4987  04F5  00A8               	movwf	??_printf+2
  4988  04F6  0828               	movf	??_printf+2,w
  4989  04F7  022E               	subwf	printf@val+1,w
  4990  04F8  1D03               	skipz
  4991  04F9  2CFC               	goto	u179_25
  4992  04FA  0827               	movf	??_printf+1,w
  4993  04FB  022D               	subwf	printf@val,w
  4994  04FC                     u179_25:	
  4995  04FC  1C03               	btfss	3,0
  4996  04FD  2D30               	goto	i1l1883
  4997                           
  4998                           ;doprnt.c: 1307: break;
  4999  04FE  3001               	movlw	1
  5000  04FF  00A6               	movwf	??_printf
  5001  0500  0826               	movf	??_printf,w
  5002  0501  07B3               	addwf	printf@c,f
  5003  0502  2CE1               	goto	L7
  5004  0503                     i1l311:	
  5005                           ;doprnt.c: 1314: case 0x80:
  5006                           
  5007                           ;doprnt.c: 1309: break;
  5008                           
  5009                           
  5010                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5011  0503  01B3               	clrf	printf@c
  5012  0504  0AB3               	incf	printf@c,f
  5013  0505                     L8:	
  5014  0505  3004               	movlw	4
  5015  0506  0633               	xorwf	printf@c,w
  5016  0507  1903               	btfsc	3,2
  5017  0508  2D30               	goto	i1l1883
  5018                           
  5019                           ;doprnt.c: 1317: if(val < hexpowers[c])
  5020  0509  0833               	movf	printf@c,w
  5021  050A  00A6               	movwf	??_printf
  5022  050B  0726               	addwf	??_printf,w
  5023  050C  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  5024  050D  0084               	movwf	4
  5025  050E  120A  118A  2700  120A  118A  	fcall	stringdir
  5026  0513  00A7               	movwf	??_printf+1
  5027  0514  120A  118A  2700  120A  118A  	fcall	stringdir
  5028  0519  00A8               	movwf	??_printf+2
  5029  051A  0828               	movf	??_printf+2,w
  5030  051B  022E               	subwf	printf@val+1,w
  5031  051C  1D03               	skipz
  5032  051D  2D20               	goto	u182_25
  5033  051E  0827               	movf	??_printf+1,w
  5034  051F  022D               	subwf	printf@val,w
  5035  0520                     u182_25:	
  5036  0520  1C03               	btfss	3,0
  5037  0521  2D30               	goto	i1l1883
  5038                           
  5039                           ;doprnt.c: 1318: break;
  5040  0522  3001               	movlw	1
  5041  0523  00A6               	movwf	??_printf
  5042  0524  0826               	movf	??_printf,w
  5043  0525  07B3               	addwf	printf@c,f
  5044  0526  2D05               	goto	L8
  5045  0527                     i1l1881:	
  5046                           ;doprnt.c: 1336: }
  5047                           
  5048                           ;doprnt.c: 1320: break;
  5049                           
  5050  0527  0831               	movf	printf@flag,w
  5051  0528  3980               	andlw	128
  5052                           
  5053                           ; Switch size 1, requested type "space"
  5054                           ; Number of cases is 2, Range of values is 0 to 128
  5055                           ; switch strategies available:
  5056                           ; Name         Instructions Cycles
  5057                           ; simple_byte            7     4 (average)
  5058                           ; jumptable            260     6 (fixed)
  5059                           ;	Chosen strategy is simple_byte
  5060  0529  3A00               	xorlw	0	; case 0
  5061  052A  1903               	skipnz
  5062  052B  2CDF               	goto	i1l306
  5063  052C  3A80               	xorlw	128	; case 128
  5064  052D  1903               	skipnz
  5065  052E  2D03               	goto	i1l311
  5066  052F  2D30               	goto	i1l1883
  5067  0530                     i1l1883:	
  5068                           
  5069                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5070  0530  082F               	movf	printf@width,w
  5071  0531  0430               	iorwf	printf@width+1,w
  5072  0532  1903               	btfsc	3,2
  5073  0533  2D3E               	goto	i1l315
  5074  0534  0831               	movf	printf@flag,w
  5075  0535  3903               	andlw	3
  5076  0536  1903               	btfsc	3,2
  5077  0537  2D3E               	goto	i1l315
  5078                           
  5079                           ;doprnt.c: 1346: width--;
  5080  0538  30FF               	movlw	255
  5081  0539  07AF               	addwf	printf@width,f
  5082  053A  1803               	skipnc
  5083  053B  0AB0               	incf	printf@width+1,f
  5084  053C  30FF               	movlw	255
  5085  053D  07B0               	addwf	printf@width+1,f
  5086  053E                     i1l315:	
  5087                           
  5088                           ;doprnt.c: 1381: if(width > c)
  5089  053E  0833               	movf	printf@c,w
  5090  053F  00A6               	movwf	??_printf
  5091  0540  01A7               	clrf	??_printf+1
  5092  0541  1BA6               	btfsc	??_printf,7
  5093  0542  03A7               	decf	??_printf+1,f
  5094  0543  0827               	movf	??_printf+1,w
  5095  0544  3A80               	xorlw	128
  5096  0545  00A8               	movwf	??_printf+2
  5097  0546  0830               	movf	printf@width+1,w
  5098  0547  3A80               	xorlw	128
  5099  0548  0228               	subwf	??_printf+2,w
  5100  0549  1D03               	skipz
  5101  054A  2D4D               	goto	u186_25
  5102  054B  082F               	movf	printf@width,w
  5103  054C  0226               	subwf	??_printf,w
  5104  054D                     u186_25:	
  5105  054D  1803               	skipnc
  5106  054E  2D5D               	goto	i1l1891
  5107                           
  5108                           ;doprnt.c: 1382: width -= c;
  5109  054F  1283               	bcf	3,5	;RP0=0, select bank0
  5110  0550  1303               	bcf	3,6	;RP1=0, select bank0
  5111  0551  0833               	movf	printf@c,w
  5112  0552  00A6               	movwf	??_printf
  5113  0553  01A7               	clrf	??_printf+1
  5114  0554  1BA6               	btfsc	??_printf,7
  5115  0555  03A7               	decf	??_printf+1,f
  5116  0556  0826               	movf	??_printf,w
  5117  0557  02AF               	subwf	printf@width,f
  5118  0558  0827               	movf	??_printf+1,w
  5119  0559  1C03               	skipc
  5120  055A  03B0               	decf	printf@width+1,f
  5121  055B  02B0               	subwf	printf@width+1,f
  5122  055C  2D61               	goto	i1l1893
  5123  055D                     i1l1891:	
  5124                           
  5125                           ;doprnt.c: 1383: else
  5126                           ;doprnt.c: 1384: width = 0;
  5127  055D  1283               	bcf	3,5	;RP0=0, select bank0
  5128  055E  1303               	bcf	3,6	;RP1=0, select bank0
  5129  055F  01AF               	clrf	printf@width
  5130  0560  01B0               	clrf	printf@width+1
  5131  0561                     i1l1893:	
  5132                           
  5133                           ;doprnt.c: 1387: if(flag & 0x04) {
  5134  0561  1D31               	btfss	printf@flag,2
  5135  0562  2D82               	goto	i1l1905
  5136                           
  5137                           ;doprnt.c: 1392: if(flag & 0x03)
  5138  0563  0831               	movf	printf@flag,w
  5139  0564  3903               	andlw	3
  5140  0565  1903               	btfsc	3,2
  5141  0566  2D6D               	goto	i1l1899
  5142                           
  5143                           ;doprnt.c: 1393: (putch('-') );
  5144  0567  302D               	movlw	45
  5145  0568  120A  158A  22AC  120A  118A  	fcall	_putch
  5146  056D                     i1l1899:	
  5147                           
  5148                           ;doprnt.c: 1415: if(width)
  5149  056D  1283               	bcf	3,5	;RP0=0, select bank0
  5150  056E  1303               	bcf	3,6	;RP1=0, select bank0
  5151  056F                     L9:	
  5152  056F  082F               	movf	printf@width,w
  5153  0570  0430               	iorwf	printf@width+1,w
  5154  0571  1903               	btfsc	3,2
  5155  0572  2DA2               	goto	i1l1915
  5156                           
  5157                           ;doprnt.c: 1417: (putch('0') );
  5158                           
  5159                           ;doprnt.c: 1416: do
  5160  0573  3030               	movlw	48
  5161  0574  120A  158A  22AC  120A  118A  	fcall	_putch
  5162                           
  5163                           ;doprnt.c: 1418: while(--width);
  5164  0579  30FF               	movlw	255
  5165  057A  1283               	bcf	3,5	;RP0=0, select bank0
  5166  057B  1303               	bcf	3,6	;RP1=0, select bank0
  5167  057C  07AF               	addwf	printf@width,f
  5168  057D  1803               	skipnc
  5169  057E  0AB0               	incf	printf@width+1,f
  5170  057F  30FF               	movlw	255
  5171  0580  07B0               	addwf	printf@width+1,f
  5172  0581  2D6F               	goto	L9
  5173  0582                     i1l1905:	
  5174                           ;doprnt.c: 1420: } else
  5175                           
  5176                           
  5177                           ;doprnt.c: 1422: {
  5178                           ;doprnt.c: 1424: if(width
  5179                           ;doprnt.c: 1428: )
  5180  0582  082F               	movf	printf@width,w
  5181  0583  0430               	iorwf	printf@width+1,w
  5182  0584  1903               	btfsc	3,2
  5183  0585  2D98               	goto	i1l1911
  5184  0586                     i1l1907:	
  5185                           ;doprnt.c: 1429: do
  5186                           
  5187                           
  5188                           ;doprnt.c: 1430: (putch(' ') );
  5189  0586  3020               	movlw	32
  5190  0587  120A  158A  22AC  120A  118A  	fcall	_putch
  5191                           
  5192                           ;doprnt.c: 1431: while(--width);
  5193  058C  30FF               	movlw	255
  5194  058D  1283               	bcf	3,5	;RP0=0, select bank0
  5195  058E  1303               	bcf	3,6	;RP1=0, select bank0
  5196  058F  07AF               	addwf	printf@width,f
  5197  0590  1803               	skipnc
  5198  0591  0AB0               	incf	printf@width+1,f
  5199  0592  30FF               	movlw	255
  5200  0593  07B0               	addwf	printf@width+1,f
  5201  0594  082F               	movf	printf@width,w
  5202  0595  0430               	iorwf	printf@width+1,w
  5203  0596  1D03               	btfss	3,2
  5204  0597  2D86               	goto	i1l1907
  5205  0598                     i1l1911:	
  5206                           
  5207                           ;doprnt.c: 1438: if(flag & 0x03)
  5208  0598  0831               	movf	printf@flag,w
  5209  0599  3903               	andlw	3
  5210  059A  1903               	btfsc	3,2
  5211  059B  2DA2               	goto	i1l1915
  5212                           
  5213                           ;doprnt.c: 1439: (putch('-') );
  5214  059C  302D               	movlw	45
  5215  059D  120A  158A  22AC  120A  118A  	fcall	_putch
  5216  05A2                     i1l1915:	
  5217                           
  5218                           ;doprnt.c: 1469: }
  5219                           ;doprnt.c: 1472: prec = c;
  5220  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  5221  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  5222  05A4  0833               	movf	printf@c,w
  5223  05A5  00A6               	movwf	??_printf
  5224  05A6  0826               	movf	??_printf,w
  5225  05A7  00AC               	movwf	printf@prec
  5226                           
  5227                           ;doprnt.c: 1474: while(prec--) {
  5228  05A8  2E11               	goto	i1l1935
  5229  05A9                     i1l1917:	
  5230                           ;doprnt.c: 1478: {
  5231                           ;doprnt.c: 1483: case 0x00:
  5232                           
  5233                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  5234                           
  5235                           
  5236                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5237  05A9  300A               	movlw	10
  5238  05AA  00F8               	movwf	___lwmod@divisor
  5239  05AB  3000               	movlw	0
  5240  05AC  00F9               	movwf	___lwmod@divisor+1
  5241  05AD  082C               	movf	printf@prec,w
  5242  05AE  00A6               	movwf	??_printf
  5243  05AF  0726               	addwf	??_printf,w
  5244  05B0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5245  05B1  0084               	movwf	4
  5246  05B2  120A  118A  2700  120A  118A  	fcall	stringdir
  5247  05B7  00F0               	movwf	___lwdiv@divisor
  5248  05B8  120A  118A  2700  120A  118A  	fcall	stringdir
  5249  05BD  00F1               	movwf	___lwdiv@divisor+1
  5250  05BE  082E               	movf	printf@val+1,w
  5251  05BF  00F3               	movwf	___lwdiv@dividend+1
  5252  05C0  082D               	movf	printf@val,w
  5253  05C1  00F2               	movwf	___lwdiv@dividend
  5254  05C2  120A  158A  24D2  120A  118A  	fcall	___lwdiv
  5255  05C7  0871               	movf	?___lwdiv+1,w
  5256  05C8  00FB               	movwf	___lwmod@dividend+1
  5257  05C9  0870               	movf	?___lwdiv,w
  5258  05CA  00FA               	movwf	___lwmod@dividend
  5259  05CB  120A  158A  2407  120A  118A  	fcall	___lwmod
  5260  05D0  0878               	movf	?___lwmod,w
  5261  05D1  3E30               	addlw	48
  5262  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  5263  05D3  1303               	bcf	3,6	;RP1=0, select bank0
  5264  05D4  00A7               	movwf	??_printf+1
  5265  05D5  0827               	movf	??_printf+1,w
  5266  05D6  2E0A               	goto	L5
  5267  05D7                     i1l1919:	
  5268                           ;doprnt.c: 1497: case 0x80:
  5269                           
  5270                           ;doprnt.c: 1491: break;
  5271                           
  5272                           
  5273                           ;doprnt.c: 1499: {
  5274                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5275  05D7  082C               	movf	printf@prec,w
  5276  05D8  00A6               	movwf	??_printf
  5277  05D9  0726               	addwf	??_printf,w
  5278  05DA  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  5279  05DB  0084               	movwf	4
  5280  05DC  120A  118A  2700  120A  118A  	fcall	stringdir
  5281  05E1  00F0               	movwf	___lwdiv@divisor
  5282  05E2  120A  118A  2700  120A  118A  	fcall	stringdir
  5283  05E7  00F1               	movwf	___lwdiv@divisor+1
  5284  05E8  082E               	movf	printf@val+1,w
  5285  05E9  00F3               	movwf	___lwdiv@dividend+1
  5286  05EA  082D               	movf	printf@val,w
  5287  05EB  00F2               	movwf	___lwdiv@dividend
  5288  05EC  120A  158A  24D2  120A  118A  	fcall	___lwdiv
  5289  05F1  0870               	movf	?___lwdiv,w
  5290  05F2  390F               	andlw	15
  5291  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  5292  05F4  1303               	bcf	3,6	;RP1=0, select bank0
  5293  05F5  00A7               	movwf	??_printf+1
  5294  05F6  0827               	movf	??_printf+1,w
  5295  05F7  00A9               	movwf	printf@idx
  5296                           
  5297                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  5298  05F8  1AB1               	btfsc	printf@flag,5
  5299  05F9  2DFC               	goto	i1l1925
  5300  05FA  3024               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  5301  05FB  2DFD               	goto	L6
  5302  05FC                     i1l1925:	
  5303  05FC  3013               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  5304  05FD                     L6:	
  5305  05FD  00A6               	movwf	??_printf
  5306  05FE  0826               	movf	??_printf,w
  5307  05FF  00AA               	movwf	_printf$748
  5308  0600  0829               	movf	printf@idx,w
  5309  0601  072A               	addwf	_printf$748,w
  5310  0602  0084               	movwf	4
  5311  0603  120A  118A  2700  120A  118A  	fcall	stringdir
  5312  0608  00A6               	movwf	??_printf
  5313  0609  0826               	movf	??_printf,w
  5314  060A                     L5:	
  5315  060A  00B3               	movwf	printf@c
  5316  060B                     i1l1933:	
  5317                           ;doprnt.c: 1523: }
  5318                           
  5319                           ;doprnt.c: 1508: }
  5320                           ;doprnt.c: 1510: break;
  5321                           
  5322                           
  5323                           ;doprnt.c: 1524: (putch(c) );
  5324  060B  0833               	movf	printf@c,w
  5325  060C  120A  158A  22AC  120A  118A  	fcall	_putch
  5326  0611                     i1l1935:	
  5327  0611  30FF               	movlw	255
  5328  0612  1283               	bcf	3,5	;RP0=0, select bank0
  5329  0613  1303               	bcf	3,6	;RP1=0, select bank0
  5330  0614  00A6               	movwf	??_printf
  5331  0615  0826               	movf	??_printf,w
  5332  0616  07AC               	addwf	printf@prec,f
  5333  0617  0A2C               	incf	printf@prec,w
  5334  0618  1903               	btfsc	3,2
  5335  0619  2C16               	goto	i1l1937
  5336  061A  0831               	movf	printf@flag,w
  5337  061B  3980               	andlw	128
  5338                           
  5339                           ; Switch size 1, requested type "space"
  5340                           ; Number of cases is 2, Range of values is 0 to 128
  5341                           ; switch strategies available:
  5342                           ; Name         Instructions Cycles
  5343                           ; simple_byte            7     4 (average)
  5344                           ; jumptable            260     6 (fixed)
  5345                           ;	Chosen strategy is simple_byte
  5346  061C  3A00               	xorlw	0	; case 0
  5347  061D  1903               	skipnz
  5348  061E  2DA9               	goto	i1l1917
  5349  061F  3A80               	xorlw	128	; case 128
  5350  0620  1903               	skipnz
  5351  0621  2DD7               	goto	i1l1919
  5352  0622  2E0B               	goto	i1l1933
  5353  0623  2E0B               	goto	i1l1933
  5354  0624                     i1l340:	
  5355                           ;doprnt.c: 1540: return 0;
  5356                           ;	Return value of _printf is never used
  5357                           
  5358                           ;doprnt.c: 1525: }
  5359                           ;doprnt.c: 1533: }
  5360                           ;doprnt.c: 1535: alldone:
  5361                           
  5362  0624  0008               	return
  5363  0625                     __end_of_printf:	
  5364                           
  5365                           	psect	text23
  5366  0AAC                     __ptext23:	
  5367 ;; *************** function _putch *****************
  5368 ;; Defined at:
  5369 ;;		line 36 in file "panda17.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  data            1    wreg     unsigned char 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  data            1    0[COMMON] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5383 ;;      Params:         0       0       0       0       0
  5384 ;;      Locals:         1       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0
  5386 ;;      Totals:         1       0       0       0       0
  5387 ;;Total ram usage:        1 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_printf
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           
  5397                           ;psect for function _putch
  5398  0AAC                     _putch:	
  5399                           
  5400                           ;incstack = 0
  5401                           ; Regs used in _putch: [wreg]
  5402                           ;putch@data stored from wreg
  5403  0AAC  00F0               	movwf	putch@data
  5404  0AAD                     i1l78:	
  5405                           ;panda17.c: 38: continue;
  5406                           
  5407                           ;panda17.c: 37: while(!PIR1bits.TXIF)
  5408                           
  5409  0AAD  1283               	bcf	3,5	;RP0=0, select bank0
  5410  0AAE  1303               	bcf	3,6	;RP1=0, select bank0
  5411  0AAF  1E0C               	btfss	12,4	;volatile
  5412  0AB0  2AAD               	goto	i1l78
  5413                           
  5414                           ;panda17.c: 39: TXREG = data;
  5415  0AB1  0870               	movf	putch@data,w
  5416  0AB2  0099               	movwf	25	;volatile
  5417  0AB3  0008               	return
  5418  0AB4                     __end_of_putch:	
  5419                           
  5420                           	psect	text24
  5421  0AB4                     __ptext24:	
  5422 ;; *************** function _isdigit *****************
  5423 ;; Defined at:
  5424 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  5425 ;; Parameters:    Size  Location     Type
  5426 ;;  c               1    wreg     unsigned char 
  5427 ;; Auto vars:     Size  Location     Type
  5428 ;;  c               1    1[COMMON] unsigned char 
  5429 ;; Return value:  Size  Location     Type
  5430 ;;		None               void
  5431 ;; Registers used:
  5432 ;;		wreg, status,2, status,0
  5433 ;; Tracked objects:
  5434 ;;		On entry : 0/0
  5435 ;;		On exit  : 0/0
  5436 ;;		Unchanged: 0/0
  5437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5438 ;;      Params:         0       0       0       0       0
  5439 ;;      Locals:         2       0       0       0       0
  5440 ;;      Temps:          0       0       0       0       0
  5441 ;;      Totals:         2       0       0       0       0
  5442 ;;Total ram usage:        2 bytes
  5443 ;; Hardware stack levels used:    1
  5444 ;; This function calls:
  5445 ;;		Nothing
  5446 ;; This function is called by:
  5447 ;;		_printf
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           
  5452                           ;psect for function _isdigit
  5453  0AB4                     _isdigit:	
  5454                           
  5455                           ;incstack = 0
  5456                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5457                           ;isdigit@c stored from wreg
  5458  0AB4  00F1               	movwf	isdigit@c
  5459  0AB5  01F0               	clrf	_isdigit$934
  5460  0AB6  303A               	movlw	58
  5461  0AB7  0271               	subwf	isdigit@c,w
  5462  0AB8  1803               	skipnc
  5463  0AB9  2AC0               	goto	i1l1677
  5464  0ABA  3030               	movlw	48
  5465  0ABB  0271               	subwf	isdigit@c,w
  5466  0ABC  1C03               	skipc
  5467  0ABD  2AC0               	goto	i1l1677
  5468  0ABE  01F0               	clrf	_isdigit$934
  5469  0ABF  0AF0               	incf	_isdigit$934,f
  5470  0AC0                     i1l1677:	
  5471  0AC0  0C70               	rrf	_isdigit$934,w
  5472  0AC1  0008               	return
  5473  0AC2                     __end_of_isdigit:	
  5474                           
  5475                           	psect	text25
  5476  0B06                     __ptext25:	
  5477 ;; *************** function ___wmul *****************
  5478 ;; Defined at:
  5479 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  multiplier      2    0[COMMON] unsigned int 
  5482 ;;  multiplicand    2    2[COMMON] unsigned int 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  product         2    4[COMMON] unsigned int 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  2    0[COMMON] unsigned int 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5494 ;;      Params:         4       0       0       0       0
  5495 ;;      Locals:         2       0       0       0       0
  5496 ;;      Temps:          0       0       0       0       0
  5497 ;;      Totals:         6       0       0       0       0
  5498 ;;Total ram usage:        6 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; This function calls:
  5501 ;;		Nothing
  5502 ;; This function is called by:
  5503 ;;		_printf
  5504 ;; This function uses a non-reentrant model
  5505 ;;
  5506                           
  5507                           
  5508                           ;psect for function ___wmul
  5509  0B06                     ___wmul:	
  5510                           
  5511                           ;incstack = 0
  5512                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5513  0B06  01F4               	clrf	___wmul@product
  5514  0B07  01F5               	clrf	___wmul@product+1
  5515  0B08                     i1l1683:	
  5516  0B08  1C70               	btfss	___wmul@multiplier,0
  5517  0B09  2B10               	goto	i1l424
  5518  0B0A  0872               	movf	___wmul@multiplicand,w
  5519  0B0B  07F4               	addwf	___wmul@product,f
  5520  0B0C  1803               	skipnc
  5521  0B0D  0AF5               	incf	___wmul@product+1,f
  5522  0B0E  0873               	movf	___wmul@multiplicand+1,w
  5523  0B0F  07F5               	addwf	___wmul@product+1,f
  5524  0B10                     i1l424:	
  5525  0B10  3001               	movlw	1
  5526  0B11                     u155_25:	
  5527  0B11  1003               	clrc
  5528  0B12  0DF2               	rlf	___wmul@multiplicand,f
  5529  0B13  0DF3               	rlf	___wmul@multiplicand+1,f
  5530  0B14  3EFF               	addlw	-1
  5531  0B15  1D03               	skipz
  5532  0B16  2B11               	goto	u155_25
  5533  0B17  3001               	movlw	1
  5534  0B18                     u156_25:	
  5535  0B18  1003               	clrc
  5536  0B19  0CF1               	rrf	___wmul@multiplier+1,f
  5537  0B1A  0CF0               	rrf	___wmul@multiplier,f
  5538  0B1B  3EFF               	addlw	-1
  5539  0B1C  1D03               	skipz
  5540  0B1D  2B18               	goto	u156_25
  5541  0B1E  0870               	movf	___wmul@multiplier,w
  5542  0B1F  0471               	iorwf	___wmul@multiplier+1,w
  5543  0B20  1D03               	btfss	3,2
  5544  0B21  2B08               	goto	i1l1683
  5545  0B22  0875               	movf	___wmul@product+1,w
  5546  0B23  00F1               	movwf	?___wmul+1
  5547  0B24  0874               	movf	___wmul@product,w
  5548  0B25  00F0               	movwf	?___wmul
  5549  0B26  0008               	return
  5550  0B27                     __end_of___wmul:	
  5551                           
  5552                           	psect	text26
  5553  0C07                     __ptext26:	
  5554 ;; *************** function ___lwmod *****************
  5555 ;; Defined at:
  5556 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;  divisor         2    8[COMMON] unsigned int 
  5559 ;;  dividend        2   10[COMMON] unsigned int 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  counter         1   13[COMMON] unsigned char 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  2    8[COMMON] unsigned int 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5571 ;;      Params:         4       0       0       0       0
  5572 ;;      Locals:         1       0       0       0       0
  5573 ;;      Temps:          1       0       0       0       0
  5574 ;;      Totals:         6       0       0       0       0
  5575 ;;Total ram usage:        6 bytes
  5576 ;; Hardware stack levels used:    1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_printf
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           
  5585                           ;psect for function ___lwmod
  5586  0C07                     ___lwmod:	
  5587                           
  5588                           ;incstack = 0
  5589                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5590  0C07  0878               	movf	___lwmod@divisor,w
  5591  0C08  0479               	iorwf	___lwmod@divisor+1,w
  5592  0C09  1903               	btfsc	3,2
  5593  0C0A  2C34               	goto	i1l1739
  5594  0C0B  01FD               	clrf	___lwmod@counter
  5595  0C0C  0AFD               	incf	___lwmod@counter,f
  5596  0C0D                     i1l1729:	
  5597  0C0D  1BF9               	btfsc	___lwmod@divisor+1,7
  5598  0C0E  2C1B               	goto	i1l1731
  5599  0C0F  3001               	movlw	1
  5600  0C10                     u166_25:	
  5601  0C10  1003               	clrc
  5602  0C11  0DF8               	rlf	___lwmod@divisor,f
  5603  0C12  0DF9               	rlf	___lwmod@divisor+1,f
  5604  0C13  3EFF               	addlw	-1
  5605  0C14  1D03               	skipz
  5606  0C15  2C10               	goto	u166_25
  5607  0C16  3001               	movlw	1
  5608  0C17  00FC               	movwf	??___lwmod
  5609  0C18  087C               	movf	??___lwmod,w
  5610  0C19  07FD               	addwf	___lwmod@counter,f
  5611  0C1A  2C0D               	goto	i1l1729
  5612  0C1B                     i1l1731:	
  5613  0C1B  0879               	movf	___lwmod@divisor+1,w
  5614  0C1C  027B               	subwf	___lwmod@dividend+1,w
  5615  0C1D  1D03               	skipz
  5616  0C1E  2C21               	goto	u168_25
  5617  0C1F  0878               	movf	___lwmod@divisor,w
  5618  0C20  027A               	subwf	___lwmod@dividend,w
  5619  0C21                     u168_25:	
  5620  0C21  1C03               	skipc
  5621  0C22  2C29               	goto	i1l1735
  5622  0C23  0878               	movf	___lwmod@divisor,w
  5623  0C24  02FA               	subwf	___lwmod@dividend,f
  5624  0C25  0879               	movf	___lwmod@divisor+1,w
  5625  0C26  1C03               	skipc
  5626  0C27  03FB               	decf	___lwmod@dividend+1,f
  5627  0C28  02FB               	subwf	___lwmod@dividend+1,f
  5628  0C29                     i1l1735:	
  5629  0C29  3001               	movlw	1
  5630  0C2A                     u169_25:	
  5631  0C2A  1003               	clrc
  5632  0C2B  0CF9               	rrf	___lwmod@divisor+1,f
  5633  0C2C  0CF8               	rrf	___lwmod@divisor,f
  5634  0C2D  3EFF               	addlw	-1
  5635  0C2E  1D03               	skipz
  5636  0C2F  2C2A               	goto	u169_25
  5637  0C30  3001               	movlw	1
  5638  0C31  02FD               	subwf	___lwmod@counter,f
  5639  0C32  1D03               	btfss	3,2
  5640  0C33  2C1B               	goto	i1l1731
  5641  0C34                     i1l1739:	
  5642  0C34  087B               	movf	___lwmod@dividend+1,w
  5643  0C35  00F9               	movwf	?___lwmod+1
  5644  0C36  087A               	movf	___lwmod@dividend,w
  5645  0C37  00F8               	movwf	?___lwmod
  5646  0C38  0008               	return
  5647  0C39                     __end_of___lwmod:	
  5648                           
  5649                           	psect	text27
  5650  0CD2                     __ptext27:	
  5651 ;; *************** function ___lwdiv *****************
  5652 ;; Defined at:
  5653 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  divisor         2    0[COMMON] unsigned int 
  5656 ;;  dividend        2    2[COMMON] unsigned int 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  quotient        2    5[COMMON] unsigned int 
  5659 ;;  counter         1    7[COMMON] unsigned char 
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  2    0[COMMON] unsigned int 
  5662 ;; Registers used:
  5663 ;;		wreg, status,2, status,0
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5669 ;;      Params:         4       0       0       0       0
  5670 ;;      Locals:         3       0       0       0       0
  5671 ;;      Temps:          1       0       0       0       0
  5672 ;;      Totals:         8       0       0       0       0
  5673 ;;Total ram usage:        8 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_printf
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           
  5683                           ;psect for function ___lwdiv
  5684  0CD2                     ___lwdiv:	
  5685                           
  5686                           ;incstack = 0
  5687                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5688  0CD2  01F5               	clrf	___lwdiv@quotient
  5689  0CD3  01F6               	clrf	___lwdiv@quotient+1
  5690  0CD4  0870               	movf	___lwdiv@divisor,w
  5691  0CD5  0471               	iorwf	___lwdiv@divisor+1,w
  5692  0CD6  1903               	btfsc	3,2
  5693  0CD7  2D09               	goto	i1l1717
  5694  0CD8  01F7               	clrf	___lwdiv@counter
  5695  0CD9  0AF7               	incf	___lwdiv@counter,f
  5696  0CDA                     i1l1705:	
  5697  0CDA  1BF1               	btfsc	___lwdiv@divisor+1,7
  5698  0CDB  2CE8               	goto	i1l1707
  5699  0CDC  3001               	movlw	1
  5700  0CDD                     u159_25:	
  5701  0CDD  1003               	clrc
  5702  0CDE  0DF0               	rlf	___lwdiv@divisor,f
  5703  0CDF  0DF1               	rlf	___lwdiv@divisor+1,f
  5704  0CE0  3EFF               	addlw	-1
  5705  0CE1  1D03               	skipz
  5706  0CE2  2CDD               	goto	u159_25
  5707  0CE3  3001               	movlw	1
  5708  0CE4  00F4               	movwf	??___lwdiv
  5709  0CE5  0874               	movf	??___lwdiv,w
  5710  0CE6  07F7               	addwf	___lwdiv@counter,f
  5711  0CE7  2CDA               	goto	i1l1705
  5712  0CE8                     i1l1707:	
  5713  0CE8  3001               	movlw	1
  5714  0CE9                     u161_25:	
  5715  0CE9  1003               	clrc
  5716  0CEA  0DF5               	rlf	___lwdiv@quotient,f
  5717  0CEB  0DF6               	rlf	___lwdiv@quotient+1,f
  5718  0CEC  3EFF               	addlw	-1
  5719  0CED  1D03               	skipz
  5720  0CEE  2CE9               	goto	u161_25
  5721  0CEF  0871               	movf	___lwdiv@divisor+1,w
  5722  0CF0  0273               	subwf	___lwdiv@dividend+1,w
  5723  0CF1  1D03               	skipz
  5724  0CF2  2CF5               	goto	u162_25
  5725  0CF3  0870               	movf	___lwdiv@divisor,w
  5726  0CF4  0272               	subwf	___lwdiv@dividend,w
  5727  0CF5                     u162_25:	
  5728  0CF5  1C03               	skipc
  5729  0CF6  2CFE               	goto	i1l1713
  5730  0CF7  0870               	movf	___lwdiv@divisor,w
  5731  0CF8  02F2               	subwf	___lwdiv@dividend,f
  5732  0CF9  0871               	movf	___lwdiv@divisor+1,w
  5733  0CFA  1C03               	skipc
  5734  0CFB  03F3               	decf	___lwdiv@dividend+1,f
  5735  0CFC  02F3               	subwf	___lwdiv@dividend+1,f
  5736  0CFD  1475               	bsf	___lwdiv@quotient,0
  5737  0CFE                     i1l1713:	
  5738  0CFE  3001               	movlw	1
  5739  0CFF                     u163_25:	
  5740  0CFF  1003               	clrc
  5741  0D00  0CF1               	rrf	___lwdiv@divisor+1,f
  5742  0D01  0CF0               	rrf	___lwdiv@divisor,f
  5743  0D02  3EFF               	addlw	-1
  5744  0D03  1D03               	skipz
  5745  0D04  2CFF               	goto	u163_25
  5746  0D05  3001               	movlw	1
  5747  0D06  02F7               	subwf	___lwdiv@counter,f
  5748  0D07  1D03               	btfss	3,2
  5749  0D08  2CE8               	goto	i1l1707
  5750  0D09                     i1l1717:	
  5751  0D09  0876               	movf	___lwdiv@quotient+1,w
  5752  0D0A  00F1               	movwf	?___lwdiv+1
  5753  0D0B  0875               	movf	___lwdiv@quotient,w
  5754  0D0C  00F0               	movwf	?___lwdiv
  5755  0D0D  0008               	return
  5756  0D0E                     __end_of___lwdiv:	
  5757                           
  5758                           	psect	text28
  5759  0C6C                     __ptext28:	
  5760 ;; *************** function _ds_set *****************
  5761 ;; Defined at:
  5762 ;;		line 13 in file "ds1307.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  data            1    wreg     PTR unsigned char 
  5765 ;;		 -> time(7), 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  data            1   11[COMMON] PTR unsigned char 
  5768 ;;		 -> time(7), 
  5769 ;;  j               1   12[COMMON] unsigned char 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      void 
  5772 ;; Registers used:
  5773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5779 ;;      Params:         0       0       0       0       0
  5780 ;;      Locals:         2       0       0       0       0
  5781 ;;      Temps:          1       0       0       0       0
  5782 ;;      Totals:         3       0       0       0       0
  5783 ;;Total ram usage:        3 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; Hardware stack levels required when called:    1
  5786 ;; This function calls:
  5787 ;;		i1_i2c_start
  5788 ;;		i1_i2c_stop
  5789 ;;		i1_i2c_write
  5790 ;; This function is called by:
  5791 ;;		_ints_isr
  5792 ;; This function uses a non-reentrant model
  5793 ;;
  5794                           
  5795                           
  5796                           ;psect for function _ds_set
  5797  0C6C                     _ds_set:	
  5798                           
  5799                           ;incstack = 0
  5800                           ; Regs used in _ds_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5801                           ;ds_set@data stored from wreg
  5802  0C6C  00FB               	movwf	ds_set@data
  5803                           
  5804                           ;ds1307.c: 14: unsigned char j;
  5805                           ;ds1307.c: 15: for (j=0;j<7;j++){
  5806  0C6D  01FC               	clrf	ds_set@j
  5807  0C6E                     L10:	
  5808  0C6E  3007               	movlw	7
  5809  0C6F  027C               	subwf	ds_set@j,w
  5810  0C70  1803               	btfsc	3,0
  5811  0C71  0008               	return
  5812                           
  5813                           ;ds1307.c: 16: i2c_start();
  5814  0C72  120A  158A  2327  120A  158A  	fcall	i1_i2c_start
  5815                           
  5816                           ;ds1307.c: 17: i2c_write(0b11010000,1);
  5817  0C77  01F0               	clrf	i1i2c_write@ack
  5818  0C78  0AF0               	incf	i1i2c_write@ack,f
  5819  0C79  30D0               	movlw	208
  5820  0C7A  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  5821                           
  5822                           ;ds1307.c: 18: i2c_write(j,1);
  5823  0C7F  01F0               	clrf	i1i2c_write@ack
  5824  0C80  0AF0               	incf	i1i2c_write@ack,f
  5825  0C81  087C               	movf	ds_set@j,w
  5826  0C82  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  5827                           
  5828                           ;ds1307.c: 19: i2c_write(*(data+j),1);
  5829  0C87  01F0               	clrf	i1i2c_write@ack
  5830  0C88  0AF0               	incf	i1i2c_write@ack,f
  5831  0C89  087C               	movf	ds_set@j,w
  5832  0C8A  077B               	addwf	ds_set@data,w
  5833  0C8B  00FA               	movwf	??_ds_set
  5834  0C8C  087A               	movf	??_ds_set,w
  5835  0C8D  0084               	movwf	4
  5836  0C8E  1383               	bcf	3,7	;select IRP bank0
  5837  0C8F  0800               	movf	0,w
  5838  0C90  120A  158A  2439  120A  158A  	fcall	i1_i2c_write
  5839                           
  5840                           ;ds1307.c: 20: i2c_stop();
  5841  0C95  120A  158A  234A  120A  158A  	fcall	i1_i2c_stop
  5842  0C9A  3001               	movlw	1
  5843  0C9B  00FA               	movwf	??_ds_set
  5844  0C9C  087A               	movf	??_ds_set,w
  5845  0C9D  07FC               	addwf	ds_set@j,f
  5846  0C9E  2C6E               	goto	L10
  5847  0C9F                     __end_of_ds_set:	
  5848                           
  5849                           	psect	text29
  5850  0C39                     __ptext29:	
  5851 ;; *************** function i1_i2c_write *****************
  5852 ;; Defined at:
  5853 ;;		line 39 in file "i2clib.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  datum           1    wreg     unsigned char 
  5856 ;;  ack             1    0[COMMON] unsigned char 
  5857 ;; Auto vars:     Size  Location     Type
  5858 ;;  datum           1    9[COMMON] unsigned char 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;                  1    wreg      void 
  5861 ;; Registers used:
  5862 ;;		wreg, status,2, status,0
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5868 ;;      Params:         1       0       0       0       0
  5869 ;;      Locals:         1       0       0       0       0
  5870 ;;      Temps:          8       0       0       0       0
  5871 ;;      Totals:        10       0       0       0       0
  5872 ;;Total ram usage:       10 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; This function calls:
  5875 ;;		Nothing
  5876 ;; This function is called by:
  5877 ;;		_si_read_h
  5878 ;;		_si_read_t
  5879 ;;		_ds_set
  5880 ;;		_ds_get
  5881 ;;		i1_mem_write
  5882 ;;		i1_mem_read
  5883 ;; This function uses a non-reentrant model
  5884 ;;
  5885                           
  5886                           
  5887                           ;psect for function i1_i2c_write
  5888  0C39                     i1_i2c_write:	
  5889                           
  5890                           ;incstack = 0
  5891                           ; Regs used in i1_i2c_write: [wreg+status,2+status,0]
  5892                           ;i1i2c_write@datum stored from wreg
  5893  0C39  00F9               	movwf	i1i2c_write@datum
  5894  0C3A                     i1l1583:	
  5895                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5896                           
  5897  0C3A  1683               	bsf	3,5	;RP0=1, select bank1
  5898  0C3B  1303               	bcf	3,6	;RP1=0, select bank1
  5899  0C3C  0811               	movf	17,w	;volatile
  5900  0C3D  3901               	andlw	1
  5901  0C3E  00F1               	movwf	??i1_i2c_write
  5902  0C3F  0C11               	rrf	17,w	;volatile
  5903  0C40  3901               	andlw	1
  5904  0C41  00F2               	movwf	??i1_i2c_write+1
  5905  0C42  0C11               	rrf	17,w	;volatile
  5906  0C43  00F3               	movwf	??i1_i2c_write+2
  5907  0C44  0CF3               	rrf	??i1_i2c_write+2,f
  5908  0C45  0C73               	rrf	??i1_i2c_write+2,w
  5909  0C46  3901               	andlw	1
  5910  0C47  00F4               	movwf	??i1_i2c_write+3
  5911  0C48  0E11               	swapf	17,w	;volatile
  5912  0C49  3901               	andlw	1
  5913  0C4A  00F5               	movwf	??i1_i2c_write+4
  5914  0C4B  0C11               	rrf	17,w	;volatile
  5915  0C4C  00F6               	movwf	??i1_i2c_write+5
  5916  0C4D  0C76               	rrf	??i1_i2c_write+5,w
  5917  0C4E  3901               	andlw	1
  5918  0C4F  00F7               	movwf	??i1_i2c_write+6
  5919  0C50  0C14               	rrf	20,w	;volatile
  5920  0C51  00F8               	movwf	??i1_i2c_write+7
  5921  0C52  0C78               	rrf	??i1_i2c_write+7,w
  5922  0C53  3901               	andlw	1
  5923  0C54  0477               	iorwf	??i1_i2c_write+6,w
  5924  0C55  0475               	iorwf	??i1_i2c_write+4,w
  5925  0C56  0474               	iorwf	??i1_i2c_write+3,w
  5926  0C57  0472               	iorwf	??i1_i2c_write+1,w
  5927  0C58  0471               	iorwf	??i1_i2c_write,w
  5928  0C59  1D03               	btfss	3,2
  5929  0C5A  2C3A               	goto	i1l1583
  5930                           
  5931                           ;i2clib.c: 42: SSPBUF = datum;
  5932  0C5B  0879               	movf	i1i2c_write@datum,w
  5933  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  5934  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  5935  0C5E  0093               	movwf	19	;volatile
  5936  0C5F                     i1l179:	
  5937                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  5938                           
  5939  0C5F  1683               	bsf	3,5	;RP0=1, select bank1
  5940  0C60  1303               	bcf	3,6	;RP1=0, select bank1
  5941  0C61  1814               	btfsc	20,0	;volatile
  5942  0C62  2C5F               	goto	i1l179
  5943                           
  5944                           ;i2clib.c: 44: if(ack){
  5945  0C63  0870               	movf	i1i2c_write@ack,w
  5946  0C64  1903               	btfsc	3,2
  5947  0C65  2C68               	goto	i1l186
  5948  0C66                     i1l183:	
  5949                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  5950                           
  5951  0C66  1B11               	btfsc	17,6	;volatile
  5952  0C67  2C66               	goto	i1l183
  5953  0C68                     i1l186:	
  5954                           ;i2clib.c: 46: }
  5955                           ;i2clib.c: 47: }
  5956                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  5957                           
  5958  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  5959  0C69  198C               	btfsc	12,3	;volatile
  5960  0C6A  0008               	return
  5961  0C6B  2C68               	goto	i1l186
  5962  0C6C                     __end_ofi1_i2c_write:	
  5963                           
  5964                           	psect	text30
  5965  0B4A                     __ptext30:	
  5966 ;; *************** function i1_i2c_stop *****************
  5967 ;; Defined at:
  5968 ;;		line 34 in file "i2clib.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;		None
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;		None
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  1    wreg      void 
  5975 ;; Registers used:
  5976 ;;		wreg, status,2, status,0
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5982 ;;      Params:         0       0       0       0       0
  5983 ;;      Locals:         0       0       0       0       0
  5984 ;;      Temps:          8       0       0       0       0
  5985 ;;      Totals:         8       0       0       0       0
  5986 ;;Total ram usage:        8 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; This function calls:
  5989 ;;		Nothing
  5990 ;; This function is called by:
  5991 ;;		_si_read_h
  5992 ;;		_si_read_t
  5993 ;;		_ds_set
  5994 ;;		_ds_get
  5995 ;;		i1_mem_write
  5996 ;;		i1_mem_read
  5997 ;; This function uses a non-reentrant model
  5998 ;;
  5999                           
  6000                           
  6001                           ;psect for function i1_i2c_stop
  6002  0B4A                     i1_i2c_stop:	
  6003  0B4A                     i1l1579:	
  6004                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  6005                           
  6006                           ;incstack = 0
  6007                           ; Regs used in i1_i2c_stop: [wreg+status,2+status,0]
  6008                           
  6009  0B4A  1683               	bsf	3,5	;RP0=1, select bank1
  6010  0B4B  1303               	bcf	3,6	;RP1=0, select bank1
  6011  0B4C  0811               	movf	17,w	;volatile
  6012  0B4D  3901               	andlw	1
  6013  0B4E  00F0               	movwf	??i1_i2c_stop
  6014  0B4F  0C11               	rrf	17,w	;volatile
  6015  0B50  3901               	andlw	1
  6016  0B51  00F1               	movwf	??i1_i2c_stop+1
  6017  0B52  0C11               	rrf	17,w	;volatile
  6018  0B53  00F2               	movwf	??i1_i2c_stop+2
  6019  0B54  0CF2               	rrf	??i1_i2c_stop+2,f
  6020  0B55  0C72               	rrf	??i1_i2c_stop+2,w
  6021  0B56  3901               	andlw	1
  6022  0B57  00F3               	movwf	??i1_i2c_stop+3
  6023  0B58  0E11               	swapf	17,w	;volatile
  6024  0B59  3901               	andlw	1
  6025  0B5A  00F4               	movwf	??i1_i2c_stop+4
  6026  0B5B  0C11               	rrf	17,w	;volatile
  6027  0B5C  00F5               	movwf	??i1_i2c_stop+5
  6028  0B5D  0C75               	rrf	??i1_i2c_stop+5,w
  6029  0B5E  3901               	andlw	1
  6030  0B5F  00F6               	movwf	??i1_i2c_stop+6
  6031  0B60  0C14               	rrf	20,w	;volatile
  6032  0B61  00F7               	movwf	??i1_i2c_stop+7
  6033  0B62  0C77               	rrf	??i1_i2c_stop+7,w
  6034  0B63  3901               	andlw	1
  6035  0B64  0476               	iorwf	??i1_i2c_stop+6,w
  6036  0B65  0474               	iorwf	??i1_i2c_stop+4,w
  6037  0B66  0473               	iorwf	??i1_i2c_stop+3,w
  6038  0B67  0471               	iorwf	??i1_i2c_stop+1,w
  6039  0B68  0470               	iorwf	??i1_i2c_stop,w
  6040  0B69  1D03               	btfss	3,2
  6041  0B6A  2B4A               	goto	i1l1579
  6042                           
  6043                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  6044  0B6B  1511               	bsf	17,2	;volatile
  6045  0B6C  0008               	return
  6046  0B6D                     __end_ofi1_i2c_stop:	
  6047                           
  6048                           	psect	text31
  6049  0B27                     __ptext31:	
  6050 ;; *************** function i1_i2c_start *****************
  6051 ;; Defined at:
  6052 ;;		line 24 in file "i2clib.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;		None
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;		None
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6066 ;;      Params:         0       0       0       0       0
  6067 ;;      Locals:         0       0       0       0       0
  6068 ;;      Temps:          8       0       0       0       0
  6069 ;;      Totals:         8       0       0       0       0
  6070 ;;Total ram usage:        8 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_si_read_h
  6076 ;;		_si_read_t
  6077 ;;		_ds_set
  6078 ;;		_ds_get
  6079 ;;		i1_mem_write
  6080 ;;		i1_mem_read
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           
  6085                           ;psect for function i1_i2c_start
  6086  0B27                     i1_i2c_start:	
  6087  0B27                     i1l1575:	
  6088                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  6089                           
  6090                           ;incstack = 0
  6091                           ; Regs used in i1_i2c_start: [wreg+status,2+status,0]
  6092                           
  6093  0B27  1683               	bsf	3,5	;RP0=1, select bank1
  6094  0B28  1303               	bcf	3,6	;RP1=0, select bank1
  6095  0B29  0811               	movf	17,w	;volatile
  6096  0B2A  3901               	andlw	1
  6097  0B2B  00F0               	movwf	??i1_i2c_start
  6098  0B2C  0C11               	rrf	17,w	;volatile
  6099  0B2D  3901               	andlw	1
  6100  0B2E  00F1               	movwf	??i1_i2c_start+1
  6101  0B2F  0C11               	rrf	17,w	;volatile
  6102  0B30  00F2               	movwf	??i1_i2c_start+2
  6103  0B31  0CF2               	rrf	??i1_i2c_start+2,f
  6104  0B32  0C72               	rrf	??i1_i2c_start+2,w
  6105  0B33  3901               	andlw	1
  6106  0B34  00F3               	movwf	??i1_i2c_start+3
  6107  0B35  0E11               	swapf	17,w	;volatile
  6108  0B36  3901               	andlw	1
  6109  0B37  00F4               	movwf	??i1_i2c_start+4
  6110  0B38  0C11               	rrf	17,w	;volatile
  6111  0B39  00F5               	movwf	??i1_i2c_start+5
  6112  0B3A  0C75               	rrf	??i1_i2c_start+5,w
  6113  0B3B  3901               	andlw	1
  6114  0B3C  00F6               	movwf	??i1_i2c_start+6
  6115  0B3D  0C14               	rrf	20,w	;volatile
  6116  0B3E  00F7               	movwf	??i1_i2c_start+7
  6117  0B3F  0C77               	rrf	??i1_i2c_start+7,w
  6118  0B40  3901               	andlw	1
  6119  0B41  0476               	iorwf	??i1_i2c_start+6,w
  6120  0B42  0474               	iorwf	??i1_i2c_start+4,w
  6121  0B43  0473               	iorwf	??i1_i2c_start+3,w
  6122  0B44  0471               	iorwf	??i1_i2c_start+1,w
  6123  0B45  0470               	iorwf	??i1_i2c_start,w
  6124  0B46  1D03               	btfss	3,2
  6125  0B47  2B27               	goto	i1l1575
  6126                           
  6127                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  6128  0B48  1411               	bsf	17,0	;volatile
  6129  0B49  0008               	return
  6130  0B4A                     __end_ofi1_i2c_start:	
  6131  007E                     btemp	set	126	;btemp
  6132  007E                     wtemp0	set	126


Data Sizes:
    Strings     89
    Constant    18
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      65
    BANK1            80     21      21
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf$748	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_18(CODE[17]), STR_17(CODE[17]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_16(CODE[2]), STR_15(CODE[5]), STR_14(CODE[7]), STR_13(CODE[4]), 
		 -> STR_12(CODE[3]), STR_11(CODE[2]), STR_10(CODE[3]), STR_9(CODE[6]), 
		 -> STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), STR_5(CODE[6]), 
		 -> STR_4(CODE[2]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    ds_set@data	PTR unsigned char  size(1) Largest target is 7
		 -> time(BANK0[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ints_isr in COMMON

    _ints_isr->_si_read_h
    _ints_isr->_si_read_t
    _ints_isr->i1_mem_write
    i1_mem_init->i1_mem_write
    i1_mem_read->i1_i2c_read
    i1_mem_read->i1_i2c_write
    _si_read_t->i1_i2c_read
    _si_read_t->i1_i2c_write
    _si_read_h->i1_i2c_read
    _si_read_h->i1_i2c_write
    _save_the_date->i1_mem_write
    i1_mem_write->i1_i2c_write
    _ds_get->i1_i2c_read
    _ds_get->i1_i2c_write
    _printf->___lwmod
    _printf->_si_read_h
    _printf->_si_read_t
    ___lwmod->___lwdiv
    _ds_set->i1_i2c_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _ints_isr in BANK0

    _ints_isr->_printf
    i1_mem_init->i1_mem_read
    _save_the_date->i1_mem_write
    _printf->_si_read_h
    _printf->_si_read_t

Critical Paths under _main in BANK1

    _main->_mem_init
    _si_reset->_i2c_write
    _mem_init->_mem_read
    _mem_init->_mem_write
    _mem_write->_i2c_write
    _mem_read->_i2c_read
    _mem_read->_i2c_write

Critical Paths under _ints_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ints_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ints_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7017
                                             18 BANK1      3     3      0
                           _i2c_init
                        _init_timer2
                           _mem_init
                           _si_reset
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _si_reset                                             0     0      0    1268
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _mem_init                                             2     2      0    5529
                                             16 BANK1      2     2      0
                           _mem_read
                          _mem_write
 ---------------------------------------------------------------------------------
 (2) _mem_write                                            6     3      3    3288
                                             10 BANK1      6     3      3
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _mem_read                                             6     4      2    2218
                                             10 BANK1      6     4      2
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                           10     9      1    1268
                                              0 BANK1     10     9      1
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             8     8      0       0
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            8     8      0       0
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                            10    10      0      89
                                              0 BANK1     10    10      0
 ---------------------------------------------------------------------------------
 (1) _init_timer2                                          6     4      2     220
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ints_isr                                            32    32      0   15759
                                             20 BANK0     32    32      0
                             _ds_get
                             _ds_set
                             _printf
                      _save_the_date
                          _si_read_h
                          _si_read_t
                         i1_mem_init
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_init                                           2     2      0    3155
                                              3 BANK0      2     2      0
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_read                                           6     4      2    1312
                                             10 COMMON     3     1      2
                                              0 BANK0      3     3      0
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _si_read_t                                            8     6      2     798
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _si_read_h                                            8     6      2     799
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _save_the_date                                        2     2      0    2685
                                              2 BANK0      2     2      0
                             _ds_get
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_write                                          6     3      3    1820
                                             10 COMMON     4     1      3
                                              0 BANK0      2     2      0
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) _ds_get                                               3     3      0     750
                                             10 COMMON     3     3      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) i1_i2c_read                                          10    10      0      89
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (6) _i2c_rstart                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (5) _printf                                              24    22      2    2539
                                              4 BANK0     16    14      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
                             _ds_get (ARG)
                            _isdigit
                              _putch
                          _si_read_h (ARG)
                          _si_read_t (ARG)
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     418
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _ds_set                                               3     3      0     758
                                             10 COMMON     3     3      0
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) i1_i2c_write                                         10     9      1     616
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (6) i1_i2c_stop                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (6) i1_i2c_start                                          8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _init_timer2
   _mem_init
     _mem_read
       _i2c_read
       _i2c_start
       _i2c_stop
       _i2c_write
     _mem_write
       _i2c_start
       _i2c_stop
       _i2c_write
   _si_reset
     _i2c_start
     _i2c_stop
     _i2c_write
   _uart_init

 _ints_isr (ROOT)
   _ds_get
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _ds_set
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _ds_get (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     _isdigit (ARG)
     _putch (ARG)
     _si_read_h (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     _si_read_t (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
   _save_the_date
     _ds_get
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     i1_mem_write
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
   _si_read_h
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _si_read_t
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   i1_mem_init
     i1_mem_read
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     i1_mem_write
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
   i1_mem_read
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   i1_mem_write
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     15      15       7       26.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     34      41       5       81.3%
BITBANK0            50      0       1       4        1.3%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      64      12        0.0%
ABS                  0      0      64       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Sep 10 19:00:03 2017

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      fsr 0004       ___wmul@multiplicand 0072            si_read_h@rta_h 0020  
          si_read_h@rta_l 0021                       l201 07B1                       l204 07B3  
                     l207 07D2                       l135 0FFF                       l183 0CCC  
                     l186 0CCE                       l179 0CC5                       _PR2 0092  
            __CFG_CPD$OFF 0000                       _led 0060                       _fyh 02FD  
                     fsr0 0004            si_read_t@rta_h 0020                       indf 0000  
          si_read_t@rta_l 0021              __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000  
              i1_mem_init 06AB                i1_mem_read 0D0E                      l1535 0B90  
                    l1543 0BB3                      l1561 0786                      l1547 0CA2  
                    l1565 078F                      l1557 077E                      l1567 07CA  
                    STR_1 073A                      STR_2 0761                      STR_3 0761  
                    STR_4 076F                      STR_5 075B                      STR_6 074F  
                    STR_7 0755                      STR_8 0755                      STR_9 0749  
                    u1270 07BC                      u1290 07C7                      u1284 07BF  
                    u2257 0FB9                      u2267 0FD2                      u2277 0FEB  
                    u1995 07DF                      i1l93 027D                      i1l78 0AAD  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 0FA0  
                    _secs 0054                      _time 0058                      btemp 007E  
                    start 0012             __CFG_MCLRE$ON 0000                     ?_main 0070  
                   STR_10 073F                     STR_11 076D                     STR_12 076A  
                   STR_13 0766                     STR_14 0742                     STR_15 0761  
                   STR_16 076D                     STR_17 0718             __CFG_WDTE$OFF 0000  
                   STR_18 0729               i2c_read@ack 00A9                     _T2CON 0012  
             i1_mem_write 0D54           __end_of___lwdiv 0D0E                     i1l100 003F  
                   i1l112 01EC                     i1l104 027C                     i1l201 0EC2  
                   i1l123 02B7                     i1l300 0497                     i1l204 0EC4  
                   i1l108 01C6                     i1l311 0503                     i1l207 0EE1  
                   i1l119 0292                     i1l127 0402                     i1l306 04DF  
                   i1l315 053E                     i1l340 0624                     i1l183 0C66  
                   i1l424 0B10           __end_of___lwmod 0C39                     i1l186 0C68  
                   i1l179 0C5F                     i1l286 0439                     i1l298 04B6  
                   i1l299 0496                     _RCREG 001A                     _SPBRG 0099  
                   _TRISA 0085                     _TRISB 0086                     _TXREG 0019  
            ?_init_timer2 00A0           __end_of_dpowers 0710                     _milis 0057  
         __end_of_isdigit 0AC2               ?i1_i2c_read 0070               ?i1_i2c_stop 0070  
                   _putch 0AAC            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 0015  
            __end_of_main 1000                _i2c_rstart 0B6D          __end_of_i2c_init 0AD1  
        __end_of_i2c_read 07D6          __end_of_i2c_stop 0BD6                    ??_main 00B2  
             mem_init@aux 00B1               mem_read@add 00AA               mem_read@rta 00AD  
             ?i1_mem_init 0070               ?i1_mem_read 007A                    ?_putch 0070  
            i2c_read@flag 02F9                    i1l2111 01E5                    i1l2121 021E  
                  i1l2107 01DD                    i1l2133 0240                    i1l1601 0EA0  
                  i1l2153 02A6                    i1l2073 007B                    i1l2137 0269  
                  i1l1603 0EDB                    i1l2227 0401                    i1l2163 02B8  
                  i1l2075 0124                    i1l2173 02C6                    i1l2167 02BF  
                  i1l1713 0CFE                    i1l1705 0CDA                    i1l2097 01C1  
                  i1l1707 0CE8                    i1l1731 0C1B                    i1l1539 0B6D  
                  i1l1717 0D09                    i1l1821 0433              i2c_read@resp 00A8  
                  i1l1575 0B27                    i1l1583 0C3A                    i1l1735 0C29  
                  i1l1911 0598                    i1l1729 0C0D                    i1l1905 0582  
                  i1l1833 045B                    i1l1579 0B4A                    i1l1739 0C34  
                  i1l1683 0B08                    i1l1907 0586                    i1l1915 05A2  
                  i1l1843 0499                    i1l1827 043E                    i1l1677 0AC0  
                  i1l1925 05FC                    i1l1933 060B                    i1l1917 05A9  
                  i1l1829 0449                    i1l1597 0E99     __end_of_save_the_date 06AB  
                  i1l1919 05D7                    i1l1935 0611                    i1l1855 04D2  
                  i1l1881 0527                    i1l1937 0416                    i1l1891 055D  
                  i1l1883 0530                    i1l1893 0561                    i1l1899 056D  
                  u206_25 0081                    u145_20 0ECD                    _INTCON 000B  
                  u161_25 0CE9                    u146_24 0ED0                    u162_25 0CF5  
                  u147_20 0ED8                    u163_25 0CFF                    u155_25 0B11  
                  u156_25 0B18                    u166_25 0C10                    u182_25 0520  
                  u159_25 0CDD                    u168_25 0C21                    u169_25 0C2A  
                  u186_25 054D                    u179_25 04FC                    _OSCCON 008F  
                  _SPBRGH 009A                    _SSPADD 0093                    _SSPBUF 0013  
      __size_of_i2c_start 0023        __size_of_i2c_write 0033            __CFG_PWRTE$OFF 0000  
                  ___wmul 0B06                 ??___lwdiv 0074                 ??___lwmod 007C  
                  _ds_get 0BD6          __end_of_mem_init 0F43          __end_of_mem_read 0DE6  
                  _ds_set 0C6C       __size_ofi1_i2c_read 005A       __size_ofi1_i2c_stop 0023  
                  _printf 040F              ?i1_i2c_start 0070          __end_of_ints_isr 040F  
            ?i1_i2c_write 0070          __end_of_si_reset 0B06                 ??_isdigit 0070  
                  saved_w 007E              i2c_write@ack 00A0   __end_of__initialization 0025  
          i1i2c_read@resp 0078            __pcstackCOMMON 0070               ?_i2c_rstart 0070  
            __pidataBANK0 07FB             __end_of_putch 0AB4       __size_ofi1_mem_init 0050  
     __size_ofi1_mem_read 0046           save_the_date@ax 0023          i1i2c_write@datum 0079  
       __end_of_i2c_start 0BB3         __end_of_i2c_write 0CD2      __size_of_init_timer2 0025  
                 ??_putch 0070               ints_isr@add 0043               ints_isr@arg 0053  
             ints_isr@aux 004B               ints_isr@rcv 003E                __pbssBANK0 0054  
               ?_i2c_init 0070                 ?_i2c_read 0070                 ?_i2c_stop 0070  
          i1i2c_write@ack 0070        __size_of_mem_write 004E                __pmaintext 0FA0  
                 ?___wmul 0070                __pintentry 0004                   ?_ds_get 0070  
                 ?_ds_set 0070        __size_of_si_read_h 005D        __size_of_si_read_t 0059  
                 ?_printf 0024              ?i1_mem_write 007A        __size_of_uart_init 0018  
            ??i1_i2c_read 0070              ??i1_i2c_stop 0070       __size_of_i2c_rstart 0023  
              __stringtab 0700                ??_i2c_init 00A0                ??_i2c_read 00A0  
               ?_mem_init 0070                 ?_mem_read 00AA                ??_i2c_stop 00A0  
               ?_ints_isr 0070                 ?_si_reset 0070           __size_of___wmul 0021  
                 ___lwdiv 0CD2                   ___lwmod 0C07           __size_of_ds_get 0031  
         __size_of_ds_set 0033              mem_write@add 00AA        __end_ofi1_i2c_read 0EE7  
      __end_ofi1_i2c_stop 0B6D                   __ptext1 0AD1                   __ptext2 0AE9  
                 __ptext3 0EE7                   __ptext4 0DE6                   __ptext5 0D9C  
                 __ptext6 0C9F                   __ptext7 0BB3                   __ptext8 0B90  
                 __ptext9 0771           __size_of_printf 0216         __end_of_hexpowers 0718  
                 _dpowers 0706                   _measure 02FC         __end_of_mem_write 0E34  
                 _isdigit 0AB4      __size_ofi1_i2c_start 0023      __size_ofi1_i2c_write 0033  
                 ds_set@j 007C              ??i1_mem_init 0023              ??i1_mem_read 007C  
    end_of_initialization 0025         __end_of_si_read_h 0FA0         __end_of_si_read_t 0E8D  
              ??_mem_init 00B0                ??_mem_read 00AC                ??_ints_isr 0034  
       __end_of_uart_init 0AE9                ??_si_reset 00AA                 _RCSTAbits 0018  
                 printf@c 0033                   printf@f 0032                _printf$748 002A  
      __end_ofi1_mem_init 06FB        __end_ofi1_mem_read 0D54                 _PORTBbits 0006  
          i1mem_write@add 007A                ds_get@data 007B                 _TRISBbits 0086  
               _TRISCbits 0087                ds_get@resp 007C               printf@width 002F  
               _TXSTAbits 0098                ds_set@data 007B              ??_i2c_rstart 0070  
          __end_of___wmul 0B27               _BAUDCTLbits 0187            __end_of_ds_get 0C07  
          __end_of_ds_set 0C9F    __size_of_save_the_date 0086             __pbitbssBANK0 02F8  
          __end_of_printf 0625       start_initialization 0015      __size_ofi1_mem_write 0048  
               _i2c_start 0B90                 _i2c_write 0C9F        __end_of_i2c_rstart 0B90  
__CFG_FOSC$INTRC_NOCLKOUT 0000         __size_of_i2c_init 000F         __size_of_i2c_read 0065  
       __size_of_i2c_stop 0023                  ??___wmul 0074                  ??_ds_get 007A  
                ??_ds_set 007A               __pdataBANK0 0060                  ??_printf 0026  
            ints_isr@aux2 0051              ints_isr@ferr 02FB              ints_isr@oerr 02FA  
           i1i2c_read@ack 0079             ??_init_timer2 00A2                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0                ?_i2c_start 0070  
              ?_i2c_write 00A0             _save_the_date 0625                ints_isr@dt 003C  
              ints_isr@up 0047            mem_write@add_h 00AE            mem_write@add_l 00AF  
       __size_of_mem_init 005C         __size_of_mem_read 004A          ___lwdiv@dividend 0072  
       __size_of_ints_isr 03E6         __size_of_si_reset 001D                  ?___lwdiv 0070  
                ?___lwmod 0078           init_timer2@post 00A0                 _condition 0056  
               __pstrings 0700             mem_read@add_h 00AE             mem_read@add_l 00AF  
                ?_isdigit 0070                 _hexpowers 0710          ___lwdiv@quotient 0075  
               _mem_write 0DE6             i1mem_init@aux 0024             i1mem_read@add 007A  
           i1mem_read@rta 0020            __size_of_putch 0008       __end_of_init_timer2 07FB  
          ?_save_the_date 0070         interrupt_function 0004            ___wmul@product 0074  
                _PIE1bits 008C                 _si_read_h 0F43                 _si_read_t 0E34  
                _PIR1bits 000C                 _uart_init 0AD1             ??i1_i2c_start 0070  
           ??i1_i2c_write 0071               __stringbase 0705              si_read_h@rta 0022  
       ___wmul@multiplier 0070              si_read_t@rta 0022                printf@flag 0031  
              printf@prec 002C               ??_i2c_start 00A0               ??_i2c_write 00A1  
              ?_mem_write 00AA                  _i2c_init 0AC2                  _i2c_read 0771  
                _i2c_stop 0BB3                ?_si_read_h 007A                ?_si_read_t 007A  
              ?_uart_init 0070          __size_of___lwdiv 003C          __size_of___lwmod 0032  
      __end_of__stringtab 0706               _isdigit$934 0070                _ANSELHbits 0189  
               ints_isr@k 0046                 ints_isr@n 0049                 ints_isr@z 0045  
           mem_write@data 00AC               _init_timer2 07D6          __size_of_isdigit 000E  
         ___lwdiv@divisor 0070           i1mem_read@add_h 0021           i1mem_read@add_l 0022  
     __end_ofi1_i2c_start 0B4A           ___lwdiv@counter 0077       __end_ofi1_i2c_write 0C6C  
                __ptext10 07D6                  __ptext11 0AC2                  __ptext20 0E8D  
                __ptext12 0029                  __ptext21 0B6D                  __ptext13 06AB  
                __ptext30 0B4A                  __ptext22 040F                  __ptext14 0D0E  
                __ptext31 0B27                  __ptext23 0AAC                  __ptext15 0E34  
                __ptext24 0AB4                  __ptext16 0F43                  __ptext25 0B06  
                __ptext17 0625                  __ptext26 0C07                  __ptext18 0D54  
                __ptext27 0CD2                  __ptext19 0BD6                  __ptext28 0C6C  
                __ptext29 0C39         __CFG_BOR4V$BOR21V 0000            init_timer2@eoc 00A1  
          init_timer2@pre 00A4            init_timer2@sfr 00A5           ??_save_the_date 0022  
                _mem_init 0EE7                  _mem_read 0D9C             __size_of_main 0060  
                _ints_isr 0029                  _si_reset 0AE9          i2c_read@not_flag 02F8  
               printf@idx 0029                 printf@val 002D             ??i1_mem_write 007D  
               putch@data 0070                _INTCONbits 000B                  isdigit@c 0071  
             ??_mem_write 00AD                  intlevel1 0000          ___lwmod@dividend 007A  
             ??_si_read_h 007C               ??_si_read_t 007C                 stringcode 0700  
             ??_uart_init 00A0                  printf@ap 002B               i1_i2c_start 0B27  
        i1mem_write@add_h 0020          i1mem_write@add_l 0021               i1_i2c_write 0C39  
         ___lwmod@divisor 0078           ___lwmod@counter 007D          ints_isr@temp_add 004D  
                stringdir 0700                  stringtab 0700          ints_isr@temp_val 0041  
             _SSPCON2bits 0091       __end_ofi1_mem_write 0D9C                i1_i2c_read 0E8D  
         ints_isr@hum_add 004F                i1_i2c_stop 0B4A           ints_isr@hum_val 003F  
         i1mem_write@data 007C                _SSPCONbits 0014            i2c_write@datum 00A9  
