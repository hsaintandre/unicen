

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Sep 06 19:12:36 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 1.43
    48                           ; Generated 25/07/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F886 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309                           
   310                           	psect	idataBANK0
   311  07FC                     __pidataBANK0:	
   312                           
   313                           ;initializer for _led
   314  07FC  3405               	retlw	5
   315                           
   316                           	psect	strings
   317  0800                     __pstrings:	
   318  0800                     stringtab:	
   319  0800                     __stringtab:	
   320  0800                     stringcode:	
   321                           ;	String table - string pointers are 1 byte each
   322                           
   323  0800                     stringdir:	
   324  0800  3008               	movlw	high stringdir
   325  0801  008A               	movwf	10
   326  0802  0804               	movf	4,w
   327  0803  0A84               	incf	4,f
   328  0804  0782               	addwf	2,f
   329  0805                     __stringbase:	
   330  0805  3400               	retlw	0
   331  0806                     __end_of__stringtab:	
   332  0806                     _dpowers:	
   333  0806  3401               	retlw	1
   334  0807  3400               	retlw	0
   335  0808  340A               	retlw	10
   336  0809  3400               	retlw	0
   337  080A  3464               	retlw	100
   338  080B  3400               	retlw	0
   339  080C  34E8               	retlw	232
   340  080D  3403               	retlw	3
   341  080E  3410               	retlw	16
   342  080F  3427               	retlw	39
   343  0810                     __end_of_dpowers:	
   344  0810                     _hexpowers:	
   345  0810  3401               	retlw	1
   346  0811  3400               	retlw	0
   347  0812  3410               	retlw	16
   348  0813  3400               	retlw	0
   349  0814  3400               	retlw	0
   350  0815  3401               	retlw	1
   351  0816  3400               	retlw	0
   352  0817  3410               	retlw	16
   353  0818                     __end_of_hexpowers:	
   354  0013                     _SSPBUF	set	19
   355  0014                     _SSPCONbits	set	20
   356  000B                     _INTCON	set	11
   357  0012                     _T2CON	set	18
   358  0006                     _PORTBbits	set	6
   359  001A                     _RCREG	set	26
   360  000B                     _INTCONbits	set	11
   361  0019                     _TXREG	set	25
   362  000C                     _PIR1bits	set	12
   363  0018                     _RCSTAbits	set	24
   364  0091                     _SSPCON2bits	set	145
   365  0087                     _TRISCbits	set	135
   366  0094                     _SSPSTATbits	set	148
   367  0093                     _SSPADD	set	147
   368  0086                     _TRISBbits	set	134
   369  0086                     _TRISB	set	134
   370  0085                     _TRISA	set	133
   371  008F                     _OSCCON	set	143
   372  0092                     _PR2	set	146
   373  0099                     _SPBRG	set	153
   374  009A                     _SPBRGH	set	154
   375  0098                     _TXSTAbits	set	152
   376  008C                     _PIE1bits	set	140
   377  0189                     _ANSELHbits	set	393
   378  0187                     _BAUDCTLbits	set	391
   379  0818                     STR_12:	
   380  0818  3430               	retlw	48	;'0'
   381  0819  3431               	retlw	49	;'1'
   382  081A  3432               	retlw	50	;'2'
   383  081B  3433               	retlw	51	;'3'
   384  081C  3434               	retlw	52	;'4'
   385  081D  3435               	retlw	53	;'5'
   386  081E  3436               	retlw	54	;'6'
   387  081F  3437               	retlw	55	;'7'
   388  0820  3438               	retlw	56	;'8'
   389  0821  3439               	retlw	57	;'9'
   390  0822  3441               	retlw	65	;'A'
   391  0823  3442               	retlw	66	;'B'
   392  0824  3443               	retlw	67	;'C'
   393  0825  3444               	retlw	68	;'D'
   394  0826  3445               	retlw	69	;'E'
   395  0827  3446               	retlw	70	;'F'
   396  0828  3400               	retlw	0
   397  0829                     STR_13:	
   398  0829  3430               	retlw	48	;'0'
   399  082A  3431               	retlw	49	;'1'
   400  082B  3432               	retlw	50	;'2'
   401  082C  3433               	retlw	51	;'3'
   402  082D  3434               	retlw	52	;'4'
   403  082E  3435               	retlw	53	;'5'
   404  082F  3436               	retlw	54	;'6'
   405  0830  3437               	retlw	55	;'7'
   406  0831  3438               	retlw	56	;'8'
   407  0832  3439               	retlw	57	;'9'
   408  0833  3461               	retlw	97	;'a'
   409  0834  3462               	retlw	98	;'b'
   410  0835  3463               	retlw	99	;'c'
   411  0836  3464               	retlw	100	;'d'
   412  0837  3465               	retlw	101	;'e'
   413  0838  3466               	retlw	102	;'f'
   414  0839  3400               	retlw	0
   415  083A                     STR_1:	
   416  083A  3449               	retlw	73	;'I'
   417  083B  3425               	retlw	37	;'%'
   418  083C  3430               	retlw	48	;'0'
   419  083D  3435               	retlw	53	;'5'
   420  083E  3464               	retlw	100	;'d'
   421  083F  340D               	retlw	13
   422  0840  340A               	retlw	10
   423  0841  3400               	retlw	0
   424  0842                     STR_3:	
   425  0842  3425               	retlw	37	;'%'
   426  0843  3430               	retlw	48	;'0'
   427  0844  3434               	retlw	52	;'4'
   428  0845  3478               	retlw	120	;'x'
   429  0846  340D               	retlw	13
   430  0847  340A               	retlw	10
   431  0848  3400               	retlw	0
   432  0849                     STR_9:	
   433  0849  3449               	retlw	73	;'I'
   434  084A  3425               	retlw	37	;'%'
   435  084B  3430               	retlw	48	;'0'
   436  084C  3434               	retlw	52	;'4'
   437  084D  3478               	retlw	120	;'x'
   438  084E  343B               	retlw	59	;';'
   439  084F  3400               	retlw	0
   440  0850                     STR_10:	
   441  0850  3425               	retlw	37	;'%'
   442  0851  3430               	retlw	48	;'0'
   443  0852  3434               	retlw	52	;'4'
   444  0853  3478               	retlw	120	;'x'
   445  0854  3400               	retlw	0
   446  0855                     STR_8:	
   447  0855  3425               	retlw	37	;'%'
   448  0856  3458               	retlw	88	;'X'
   449  0857  3420               	retlw	32	;' '
   450  0858  3400               	retlw	0
   451  0859                     STR_4:	
   452  0859  345A               	retlw	90	;'Z'
   453  085A  3425               	retlw	37	;'%'
   454  085B  3478               	retlw	120	;'x'
   455  085C  3400               	retlw	0
   456  085D                     STR_7:	
   457  085D  344F               	retlw	79	;'O'
   458  085E  344B               	retlw	75	;'K'
   459  085F  3400               	retlw	0
   460  0860                     STR_6:	
   461  0860  3458               	retlw	88	;'X'
   462  0861  3400               	retlw	0
   463  084A                     
   464                           ; #config settings
   465  0000                     
   466                           	psect	cinit
   467  0015                     start_initialization:	
   468  0015                     __initialization:	
   469                           
   470                           ; Initialize objects allocated to BANK0
   471  0015  120A  118A  27FC   	fcall	__pidataBANK0	;fetch initializer
   472  0018  00E0               	movwf	__pdataBANK0& (0+127)
   473                           
   474                           ; Clear objects allocated to BANK0
   475  0019  01D5               	clrf	__pbssBANK0& (0+127)
   476  001A  01D6               	clrf	(__pbssBANK0+1)& (0+127)
   477  001B  01D7               	clrf	(__pbssBANK0+2)& (0+127)
   478  001C  01D8               	clrf	(__pbssBANK0+3)& (0+127)
   479  001D  01D9               	clrf	(__pbssBANK0+4)& (0+127)
   480  001E  01DA               	clrf	(__pbssBANK0+5)& (0+127)
   481  001F  01DB               	clrf	(__pbssBANK0+6)& (0+127)
   482  0020  01DC               	clrf	(__pbssBANK0+7)& (0+127)
   483  0021  01DD               	clrf	(__pbssBANK0+8)& (0+127)
   484  0022  01DE               	clrf	(__pbssBANK0+9)& (0+127)
   485                           
   486                           ; Clear objects allocated to BITBANK0
   487  0023  01DF               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   488  0024                     end_of_initialization:	
   489                           ;End of C runtime variable initialization code
   490                           
   491  0024                     __end_of__initialization:	
   492  0024  0183               	clrf	3
   493  0025  120A  158A  2DEF   	ljmp	_main	;jump to C main() function
   494                           
   495                           	psect	bitbssBANK0
   496  02F8                     __pbitbssBANK0:	
   497  02F8                     i2c_read@not_flag:	
   498  02F8                     	ds	1
   499  02F9                     i2c_read@flag:	
   500  02F9                     	ds	1
   501  02FA                     ints_isr@oerr:	
   502  02FA                     	ds	1
   503  02FB                     ints_isr@ferr:	
   504  02FB                     	ds	1
   505                           
   506                           	psect	bssBANK0
   507  0055                     __pbssBANK0:	
   508  0055                     _secs:	
   509  0055                     	ds	2
   510  0057                     _milis:	
   511  0057                     	ds	1
   512  0058                     _time:	
   513  0058                     	ds	7
   514                           
   515                           	psect	dataBANK0
   516  0060                     __pdataBANK0:	
   517  0060                     _led:	
   518  0060                     	ds	1
   519                           
   520                           	psect	cstackBANK1
   521  00A0                     __pcstackBANK1:	
   522  00A0                     ??_i2c_init:	
   523  00A0                     ??_uart_init:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  00A0                     ?_init_timer2:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  00A0                     ??_i2c_start:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  00A0                     ??_i2c_stop:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  00A0                     ?_i2c_write:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  00A0                     ??_i2c_read:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  00A0                     init_timer2@post:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  00A0                     i2c_write@ack:	
   545                           ; 1 bytes @ 0x0
   546                           
   547                           
   548                           ; 1 bytes @ 0x0
   549  00A0                     	ds	1
   550  00A1                     ??_i2c_write:	
   551  00A1                     init_timer2@eoc:	
   552                           ; 1 bytes @ 0x1
   553                           
   554                           
   555                           ; 1 bytes @ 0x1
   556  00A1                     	ds	1
   557  00A2                     ??_init_timer2:	
   558                           
   559                           ; 1 bytes @ 0x2
   560  00A2                     	ds	2
   561  00A4                     init_timer2@pre:	
   562                           
   563                           ; 1 bytes @ 0x4
   564  00A4                     	ds	1
   565  00A5                     init_timer2@sfr:	
   566                           
   567                           ; 1 bytes @ 0x5
   568  00A5                     	ds	3
   569  00A8                     i2c_read@resp:	
   570                           
   571                           ; 1 bytes @ 0x8
   572  00A8                     	ds	1
   573  00A9                     i2c_write@datum:	
   574  00A9                     i2c_read@ack:	
   575                           ; 1 bytes @ 0x9
   576                           
   577                           
   578                           ; 1 bytes @ 0x9
   579  00A9                     	ds	1
   580  00AA                     ?_mem_read:	
   581  00AA                     ?_mem_write:	
   582                           ; 1 bytes @ 0xA
   583                           
   584  00AA                     ??_si_reset:	
   585                           ; 1 bytes @ 0xA
   586                           
   587  00AA                     mem_write@add:	
   588                           ; 1 bytes @ 0xA
   589                           
   590  00AA                     mem_read@add:	
   591                           ; 2 bytes @ 0xA
   592                           
   593                           
   594                           ; 2 bytes @ 0xA
   595  00AA                     	ds	2
   596  00AC                     ??_mem_read:	
   597  00AC                     mem_write@data:	
   598                           ; 1 bytes @ 0xC
   599                           
   600                           
   601                           ; 1 bytes @ 0xC
   602  00AC                     	ds	1
   603  00AD                     ??_mem_write:	
   604  00AD                     mem_read@rta:	
   605                           ; 1 bytes @ 0xD
   606                           
   607                           
   608                           ; 1 bytes @ 0xD
   609  00AD                     	ds	1
   610  00AE                     mem_write@add_h:	
   611  00AE                     mem_read@add_h:	
   612                           ; 1 bytes @ 0xE
   613                           
   614                           
   615                           ; 1 bytes @ 0xE
   616  00AE                     	ds	1
   617  00AF                     mem_write@add_l:	
   618  00AF                     mem_read@add_l:	
   619                           ; 1 bytes @ 0xF
   620                           
   621                           
   622                           ; 1 bytes @ 0xF
   623  00AF                     	ds	1
   624  00B0                     ??_mem_init:	
   625                           
   626                           ; 1 bytes @ 0x10
   627  00B0                     	ds	1
   628  00B1                     mem_init@aux:	
   629                           
   630                           ; 1 bytes @ 0x11
   631  00B1                     	ds	1
   632  00B2                     ??_main:	
   633                           
   634                           ; 1 bytes @ 0x12
   635  00B2                     	ds	2
   636                           
   637                           	psect	cstackCOMMON
   638  0070                     __pcstackCOMMON:	
   639  0070                     ?_isdigit:	
   640  0070                     ?_ds_set:	
   641                           ; 1 bit 
   642                           
   643  0070                     ?_ds_get:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_i2c_init:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_si_reset:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ??_isdigit:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_uart_init:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_putch:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ??_putch:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_mem_init:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_ints_isr:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_i2c_start:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_i2c_rstart:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??_i2c_rstart:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_i2c_stop:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_i2c_read:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?i1_mem_init:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?i1_i2c_start:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??i1_i2c_start:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?i1_i2c_stop:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ??i1_i2c_stop:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?i1_i2c_write:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?i1_i2c_read:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ??i1_i2c_read:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_main:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?___wmul:	
   713                           ; 2 bytes @ 0x0
   714                           
   715  0070                     ?___lwdiv:	
   716                           ; 2 bytes @ 0x0
   717                           
   718  0070                     putch@data:	
   719                           ; 2 bytes @ 0x0
   720                           
   721  0070                     _isdigit$924:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     i1i2c_write@ack:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ___wmul@multiplier:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ___lwdiv@divisor:	
   731                           ; 2 bytes @ 0x0
   732                           
   733                           
   734                           ; 2 bytes @ 0x0
   735  0070                     	ds	1
   736  0071                     ??i1_i2c_write:	
   737  0071                     isdigit@c:	
   738                           ; 1 bytes @ 0x1
   739                           
   740                           
   741                           ; 1 bytes @ 0x1
   742  0071                     	ds	1
   743  0072                     ___wmul@multiplicand:	
   744  0072                     ___lwdiv@dividend:	
   745                           ; 2 bytes @ 0x2
   746                           
   747                           
   748                           ; 2 bytes @ 0x2
   749  0072                     	ds	2
   750  0074                     ??___wmul:	
   751  0074                     ??___lwdiv:	
   752                           ; 1 bytes @ 0x4
   753                           
   754  0074                     ___wmul@product:	
   755                           ; 1 bytes @ 0x4
   756                           
   757                           
   758                           ; 2 bytes @ 0x4
   759  0074                     	ds	1
   760  0075                     ___lwdiv@quotient:	
   761                           
   762                           ; 2 bytes @ 0x5
   763  0075                     	ds	2
   764  0077                     ___lwdiv@counter:	
   765                           
   766                           ; 1 bytes @ 0x7
   767  0077                     	ds	1
   768  0078                     ?___lwmod:	
   769  0078                     i1i2c_read@resp:	
   770                           ; 2 bytes @ 0x8
   771                           
   772  0078                     ___lwmod@divisor:	
   773                           ; 1 bytes @ 0x8
   774                           
   775                           
   776                           ; 2 bytes @ 0x8
   777  0078                     	ds	1
   778  0079                     i1i2c_write@datum:	
   779  0079                     i1i2c_read@ack:	
   780                           ; 1 bytes @ 0x9
   781                           
   782                           
   783                           ; 1 bytes @ 0x9
   784  0079                     	ds	1
   785  007A                     ??_ds_set:	
   786  007A                     ??_ds_get:	
   787                           ; 1 bytes @ 0xA
   788                           
   789  007A                     ?i1_mem_read:	
   790                           ; 1 bytes @ 0xA
   791                           
   792  007A                     ?_si_read_h:	
   793                           ; 1 bytes @ 0xA
   794                           
   795  007A                     ?_si_read_t:	
   796                           ; 2 bytes @ 0xA
   797                           
   798  007A                     ___lwmod@dividend:	
   799                           ; 2 bytes @ 0xA
   800                           
   801  007A                     i1mem_read@add:	
   802                           ; 2 bytes @ 0xA
   803                           
   804                           
   805                           ; 2 bytes @ 0xA
   806  007A                     	ds	1
   807  007B                     ds_set@data:	
   808  007B                     ds_get@data:	
   809                           ; 1 bytes @ 0xB
   810                           
   811                           
   812                           ; 1 bytes @ 0xB
   813  007B                     	ds	1
   814  007C                     ??_si_read_h:	
   815  007C                     ??_si_read_t:	
   816                           ; 1 bytes @ 0xC
   817                           
   818  007C                     ??___lwmod:	
   819                           ; 1 bytes @ 0xC
   820                           
   821  007C                     ??i1_mem_read:	
   822                           ; 1 bytes @ 0xC
   823                           
   824  007C                     ds_set@j:	
   825                           ; 1 bytes @ 0xC
   826                           
   827  007C                     ds_get@resp:	
   828                           ; 1 bytes @ 0xC
   829                           
   830                           
   831                           ; 1 bytes @ 0xC
   832  007C                     	ds	1
   833  007D                     ??i1_mem_write:	
   834  007D                     ___lwmod@counter:	
   835                           ; 1 bytes @ 0xD
   836                           
   837                           
   838                           ; 1 bytes @ 0xD
   839  007D                     	ds	1
   840                           
   841                           	psect	cstackBANK0
   842  0020                     __pcstackBANK0:	
   843  0020                     si_read_h@rta_h:	
   844  0020                     si_read_t@rta_h:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0020                     i1mem_read@rta:	
   848                           ; 1 bytes @ 0x0
   849                           
   850                           
   851                           ; 1 bytes @ 0x0
   852  0020                     	ds	1
   853  0021                     si_read_h@rta_l:	
   854  0021                     si_read_t@rta_l:	
   855                           ; 1 bytes @ 0x1
   856                           
   857  0021                     i1mem_read@add_h:	
   858                           ; 1 bytes @ 0x1
   859                           
   860                           
   861                           ; 1 bytes @ 0x1
   862  0021                     	ds	1
   863  0022                     i1mem_read@add_l:	
   864  0022                     si_read_h@rta:	
   865                           ; 1 bytes @ 0x2
   866                           
   867  0022                     si_read_t@rta:	
   868                           ; 2 bytes @ 0x2
   869                           
   870                           
   871                           ; 2 bytes @ 0x2
   872  0022                     	ds	1
   873  0023                     ?i1_mem_write:	
   874  0023                     i1mem_write@add:	
   875                           ; 1 bytes @ 0x3
   876                           
   877                           
   878                           ; 2 bytes @ 0x3
   879  0023                     	ds	1
   880  0024                     ?_printf:	
   881                           
   882                           ; 2 bytes @ 0x4
   883  0024                     	ds	1
   884  0025                     i1mem_write@data:	
   885                           
   886                           ; 1 bytes @ 0x5
   887  0025                     	ds	1
   888  0026                     ??_printf:	
   889  0026                     i1mem_write@add_h:	
   890                           ; 1 bytes @ 0x6
   891                           
   892                           
   893                           ; 1 bytes @ 0x6
   894  0026                     	ds	1
   895  0027                     i1mem_write@add_l:	
   896                           
   897                           ; 1 bytes @ 0x7
   898  0027                     	ds	1
   899  0028                     ??i1_mem_init:	
   900                           
   901                           ; 1 bytes @ 0x8
   902  0028                     	ds	1
   903  0029                     printf@idx:	
   904  0029                     i1mem_init@aux:	
   905                           ; 1 bytes @ 0x9
   906                           
   907                           
   908                           ; 1 bytes @ 0x9
   909  0029                     	ds	1
   910  002A                     _printf$738:	
   911                           
   912                           ; 1 bytes @ 0xA
   913  002A                     	ds	1
   914  002B                     printf@ap:	
   915                           
   916                           ; 1 bytes @ 0xB
   917  002B                     	ds	1
   918  002C                     printf@prec:	
   919                           
   920                           ; 1 bytes @ 0xC
   921  002C                     	ds	1
   922  002D                     printf@val:	
   923                           
   924                           ; 2 bytes @ 0xD
   925  002D                     	ds	2
   926  002F                     printf@width:	
   927                           
   928                           ; 2 bytes @ 0xF
   929  002F                     	ds	2
   930  0031                     printf@flag:	
   931                           
   932                           ; 1 bytes @ 0x11
   933  0031                     	ds	1
   934  0032                     printf@f:	
   935                           
   936                           ; 1 bytes @ 0x12
   937  0032                     	ds	1
   938  0033                     printf@c:	
   939                           
   940                           ; 1 bytes @ 0x13
   941  0033                     	ds	1
   942  0034                     ??_ints_isr:	
   943                           
   944                           ; 1 bytes @ 0x14
   945  0034                     	ds	8
   946  003C                     _ints_isr$1143:	
   947                           
   948                           ; 2 bytes @ 0x1C
   949  003C                     	ds	2
   950  003E                     ints_isr@rcv:	
   951                           
   952                           ; 1 bytes @ 0x1E
   953  003E                     	ds	1
   954  003F                     ints_isr@dt:	
   955                           
   956                           ; 1 bytes @ 0x1F
   957  003F                     	ds	1
   958  0040                     ints_isr@hum_val:	
   959                           
   960                           ; 2 bytes @ 0x20
   961  0040                     	ds	2
   962  0042                     ints_isr@temp_val:	
   963                           
   964                           ; 2 bytes @ 0x22
   965  0042                     	ds	2
   966  0044                     ints_isr@u:	
   967                           
   968                           ; 1 bytes @ 0x24
   969  0044                     	ds	1
   970  0045                     ints_isr@add:	
   971                           
   972                           ; 2 bytes @ 0x25
   973  0045                     	ds	2
   974  0047                     ints_isr@z:	
   975                           
   976                           ; 1 bytes @ 0x27
   977  0047                     	ds	1
   978  0048                     ints_isr@k:	
   979                           
   980                           ; 1 bytes @ 0x28
   981  0048                     	ds	1
   982  0049                     ints_isr@up:	
   983                           
   984                           ; 2 bytes @ 0x29
   985  0049                     	ds	2
   986  004B                     ints_isr@aux:	
   987                           
   988                           ; 2 bytes @ 0x2B
   989  004B                     	ds	2
   990  004D                     ints_isr@temp_add:	
   991                           
   992                           ; 2 bytes @ 0x2D
   993  004D                     	ds	2
   994  004F                     ints_isr@hum_add:	
   995                           
   996                           ; 2 bytes @ 0x2F
   997  004F                     	ds	2
   998  0051                     ints_isr@n:	
   999                           
  1000                           ; 2 bytes @ 0x31
  1001  0051                     	ds	2
  1002  0053                     ints_isr@o:	
  1003                           
  1004                           ; 1 bytes @ 0x33
  1005  0053                     	ds	1
  1006  0054                     ints_isr@arg:	
  1007                           
  1008                           ; 1 bytes @ 0x34
  1009  0054                     	ds	1
  1010                           
  1011                           	psect	maintext
  1012  0DEF                     __pmaintext:	
  1013 ;;
  1014 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1015 ;;
  1016 ;; *************** function _main *****************
  1017 ;; Defined at:
  1018 ;;		line 223 in file "panda17.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  2  128[None  ] int 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0, pclath, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : B00/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1032 ;;      Params:         0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0
  1034 ;;      Temps:          0       0       2       0       0
  1035 ;;      Totals:         0       0       2       0       0
  1036 ;;Total ram usage:        2 bytes
  1037 ;; Hardware stack levels required when called:    7
  1038 ;; This function calls:
  1039 ;;		_i2c_init
  1040 ;;		_init_timer2
  1041 ;;		_mem_init
  1042 ;;		_si_reset
  1043 ;;		_uart_init
  1044 ;; This function is called by:
  1045 ;;		Startup code after reset
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _main
  1051  0DEF                     _main:	
  1052                           
  1053                           ;panda17.c: 224: OSCCON = 0b01010001;
  1054                           
  1055                           ;incstack = 0
  1056                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1057  0DEF  3051               	movlw	81
  1058  0DF0  1683               	bsf	3,5	;RP0=1, select bank1
  1059  0DF1  1303               	bcf	3,6	;RP1=0, select bank1
  1060  0DF2  008F               	movwf	15	;volatile
  1061                           
  1062                           ;panda17.c: 225: INTCON = 0xC0;
  1063  0DF3  30C0               	movlw	192
  1064  0DF4  008B               	movwf	11	;volatile
  1065                           
  1066                           ;panda17.c: 227: TRISA = 0x00;
  1067  0DF5  0185               	clrf	5	;volatile
  1068                           
  1069                           ;panda17.c: 228: TRISB = 0x00;
  1070  0DF6  0186               	clrf	6	;volatile
  1071                           
  1072                           ;panda17.c: 231: ANSELHbits.ANS8 = 0;
  1073  0DF7  1683               	bsf	3,5	;RP0=1, select bank3
  1074  0DF8  1703               	bsf	3,6	;RP1=1, select bank3
  1075  0DF9  1009               	bcf	9,0	;volatile
  1076                           
  1077                           ;panda17.c: 232: TRISBbits.TRISB2 = 1;
  1078  0DFA  1683               	bsf	3,5	;RP0=1, select bank1
  1079  0DFB  1303               	bcf	3,6	;RP1=0, select bank1
  1080  0DFC  1506               	bsf	6,2	;volatile
  1081                           
  1082                           ;panda17.c: 233: PORTBbits.RB4 = 0;
  1083  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  1084  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  1085  0DFF  1206               	bcf	6,4	;volatile
  1086                           
  1087                           ;panda17.c: 234: uart_init();
  1088  0E00  120A  158A  22B3  120A  158A  	fcall	_uart_init
  1089                           
  1090                           ;panda17.c: 235: i2c_init();
  1091  0E05  120A  158A  22A4  120A  158A  	fcall	_i2c_init
  1092                           
  1093                           ;panda17.c: 236: _delay((unsigned long)((10)*(2000000/4000.0)));
  1094  0E0A  3007               	movlw	7
  1095  0E0B  1683               	bsf	3,5	;RP0=1, select bank1
  1096  0E0C  1303               	bcf	3,6	;RP1=0, select bank1
  1097  0E0D  00B3               	movwf	(??_main^(0+128)+1)
  1098  0E0E  307C               	movlw	124
  1099  0E0F  00B2               	movwf	??_main^(0+128)
  1100  0E10                     u2297:	
  1101  0E10  0BB2               	decfsz	??_main^(0+128),f
  1102  0E11  2E10               	goto	u2297
  1103  0E12  0BB3               	decfsz	(??_main^(0+128)+1),f
  1104  0E13  2E10               	goto	u2297
  1105  0E14  0000               	nop
  1106                           
  1107                           ;panda17.c: 237: mem_init();
  1108  0E15  120A  158A  2747  120A  158A  	fcall	_mem_init
  1109                           
  1110                           ;panda17.c: 238: si_reset();
  1111  0E1A  120A  158A  22CB  120A  158A  	fcall	_si_reset
  1112                           
  1113                           ;panda17.c: 242: _delay((unsigned long)((200)*(2000000/4000.0)));
  1114  0E1F  3082               	movlw	130
  1115  0E20  1683               	bsf	3,5	;RP0=1, select bank1
  1116  0E21  1303               	bcf	3,6	;RP1=0, select bank1
  1117  0E22  00B3               	movwf	(??_main^(0+128)+1)
  1118  0E23  30DD               	movlw	221
  1119  0E24  00B2               	movwf	??_main^(0+128)
  1120  0E25                     u2307:	
  1121  0E25  0BB2               	decfsz	??_main^(0+128),f
  1122  0E26  2E25               	goto	u2307
  1123  0E27  0BB3               	decfsz	(??_main^(0+128)+1),f
  1124  0E28  2E25               	goto	u2307
  1125                           
  1126                           ;panda17.c: 243: init_timer2(2,5,250);
  1127  0E29  3005               	movlw	5
  1128  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  1129  0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  1130  0E2C  00B2               	movwf	??_main^(0+128)
  1131  0E2D  0832               	movf	??_main^(0+128),w
  1132  0E2E  00A0               	movwf	init_timer2@post^(0+128)
  1133  0E2F  30FA               	movlw	250
  1134  0E30  00B3               	movwf	(??_main+1)^(0+128)
  1135  0E31  0833               	movf	(??_main+1)^(0+128),w
  1136  0E32  00A1               	movwf	init_timer2@eoc^(0+128)
  1137  0E33  3002               	movlw	2
  1138  0E34  120A  158A  23B8  120A  158A  	fcall	_init_timer2
  1139  0E39                     l129:	
  1140                           ;panda17.c: 244: while(1){
  1141                           
  1142  0E39  2E39               	goto	l129
  1143  0E3A                     __end_of_main:	
  1144                           
  1145                           	psect	text1
  1146  0AB3                     __ptext1:	
  1147 ;; *************** function _uart_init *****************
  1148 ;; Defined at:
  1149 ;;		line 21 in file "panda17.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1163 ;;      Params:         0       0       0       0       0
  1164 ;;      Locals:         0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0
  1166 ;;      Totals:         0       0       0       0       0
  1167 ;;Total ram usage:        0 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    4
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_main
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           
  1178                           ;psect for function _uart_init
  1179  0AB3                     _uart_init:	
  1180                           
  1181                           ;panda17.c: 22: PIE1bits.RCIE = 1;
  1182                           
  1183                           ;incstack = 0
  1184                           ; Regs used in _uart_init: [wreg+status,2]
  1185  0AB3  1683               	bsf	3,5	;RP0=1, select bank1
  1186  0AB4  1303               	bcf	3,6	;RP1=0, select bank1
  1187  0AB5  168C               	bsf	12,5	;volatile
  1188                           
  1189                           ;panda17.c: 23: PIE1bits.TXIE = 0;
  1190  0AB6  120C               	bcf	12,4	;volatile
  1191                           
  1192                           ;panda17.c: 24: TXSTAbits.BRGH = 1;
  1193  0AB7  1518               	bsf	24,2	;volatile
  1194                           
  1195                           ;panda17.c: 25: BAUDCTLbits.BRG16 = 0;
  1196  0AB8  1683               	bsf	3,5	;RP0=1, select bank3
  1197  0AB9  1703               	bsf	3,6	;RP1=1, select bank3
  1198  0ABA  1187               	bcf	7,3	;volatile
  1199                           
  1200                           ;panda17.c: 26: SPBRGH = 0x00;
  1201  0ABB  1683               	bsf	3,5	;RP0=1, select bank1
  1202  0ABC  1303               	bcf	3,6	;RP1=0, select bank1
  1203  0ABD  019A               	clrf	26	;volatile
  1204                           
  1205                           ;panda17.c: 28: SPBRG = 0x0C;
  1206  0ABE  300C               	movlw	12
  1207  0ABF  0099               	movwf	25	;volatile
  1208                           
  1209                           ;panda17.c: 29: TXSTAbits.SYNC = 0;
  1210  0AC0  1218               	bcf	24,4	;volatile
  1211                           
  1212                           ;panda17.c: 30: RCSTAbits.SPEN = 1;
  1213  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  1214  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  1215  0AC3  1798               	bsf	24,7	;volatile
  1216                           
  1217                           ;panda17.c: 31: TXSTAbits.TXEN = 1;
  1218  0AC4  1683               	bsf	3,5	;RP0=1, select bank1
  1219  0AC5  1303               	bcf	3,6	;RP1=0, select bank1
  1220  0AC6  1698               	bsf	24,5	;volatile
  1221                           
  1222                           ;panda17.c: 32: RCSTAbits.CREN = 1;
  1223  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  1224  0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  1225  0AC9  1618               	bsf	24,4	;volatile
  1226  0ACA  0008               	return
  1227  0ACB                     __end_of_uart_init:	
  1228                           
  1229                           	psect	text2
  1230  0ACB                     __ptext2:	
  1231 ;; *************** function _si_reset *****************
  1232 ;; Defined at:
  1233 ;;		line 13 in file "si7021.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;		None
  1236 ;; Auto vars:     Size  Location     Type
  1237 ;;		None
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  1    wreg      void 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0, pclath, cstack
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1247 ;;      Params:         0       0       0       0       0
  1248 ;;      Locals:         0       0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0
  1250 ;;      Totals:         0       0       0       0       0
  1251 ;;Total ram usage:        0 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    5
  1254 ;; This function calls:
  1255 ;;		_i2c_start
  1256 ;;		_i2c_stop
  1257 ;;		_i2c_write
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           
  1264                           ;psect for function _si_reset
  1265  0ACB                     _si_reset:	
  1266                           
  1267                           ;si7021.c: 14: i2c_start();
  1268                           
  1269                           ;incstack = 0
  1270                           ; Regs used in _si_reset: [wreg+status,2+status,0+pclath+cstack]
  1271  0ACB  120A  158A  2372  120A  158A  	fcall	_i2c_start
  1272                           
  1273                           ;si7021.c: 15: i2c_write(0x80,1);
  1274  0AD0  1683               	bsf	3,5	;RP0=1, select bank1
  1275  0AD1  1303               	bcf	3,6	;RP1=0, select bank1
  1276  0AD2  01A0               	clrf	i2c_write@ack^(0+128)
  1277  0AD3  0AA0               	incf	i2c_write@ack^(0+128),f
  1278  0AD4  3080               	movlw	128
  1279  0AD5  120A  158A  24A6  120A  158A  	fcall	_i2c_write
  1280                           
  1281                           ;si7021.c: 16: i2c_write(0xFE,1);
  1282  0ADA  1683               	bsf	3,5	;RP0=1, select bank1
  1283  0ADB  1303               	bcf	3,6	;RP1=0, select bank1
  1284  0ADC  01A0               	clrf	i2c_write@ack^(0+128)
  1285  0ADD  0AA0               	incf	i2c_write@ack^(0+128),f
  1286  0ADE  30FE               	movlw	254
  1287  0ADF  120A  158A  24A6  120A  158A  	fcall	_i2c_write
  1288                           
  1289                           ;si7021.c: 17: i2c_stop();
  1290  0AE4  120A  158A  2395   	fcall	_i2c_stop
  1291  0AE7  0008               	return
  1292  0AE8                     __end_of_si_reset:	
  1293                           
  1294                           	psect	text3
  1295  0F47                     __ptext3:	
  1296 ;; *************** function _mem_init *****************
  1297 ;; Defined at:
  1298 ;;		line 41 in file "panda17.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  aux             1   17[BANK1 ] unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2, status,0, pclath, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       0       0       0       0
  1313 ;;      Locals:         0       0       1       0       0
  1314 ;;      Temps:          0       0       1       0       0
  1315 ;;      Totals:         0       0       2       0       0
  1316 ;;Total ram usage:        2 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    6
  1319 ;; This function calls:
  1320 ;;		_mem_read
  1321 ;;		_mem_write
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           
  1328                           ;psect for function _mem_init
  1329  0F47                     _mem_init:	
  1330                           
  1331                           ;panda17.c: 42: unsigned char aux;
  1332                           ;panda17.c: 43: aux = mem_read(0x0002);
  1333                           
  1334                           ;incstack = 0
  1335                           ; Regs used in _mem_init: [wreg+status,2+status,0+pclath+cstack]
  1336  0F47  3002               	movlw	2
  1337  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  1338  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  1339  0F4A  00AA               	movwf	mem_read@add^(0+128)
  1340  0F4B  3000               	movlw	0
  1341  0F4C  00AB               	movwf	(mem_read@add^(0+128)+1)
  1342  0F4D  120A  158A  25A5  120A  158A  	fcall	_mem_read
  1343  0F52  1683               	bsf	3,5	;RP0=1, select bank1
  1344  0F53  1303               	bcf	3,6	;RP1=0, select bank1
  1345  0F54  00B0               	movwf	??_mem_init^(0+128)
  1346  0F55  0830               	movf	??_mem_init^(0+128),w
  1347  0F56  00B1               	movwf	mem_init@aux^(0+128)
  1348                           
  1349                           ;panda17.c: 44: if (aux != 0xAA){
  1350  0F57  30AA               	movlw	170
  1351  0F58  0631               	xorwf	mem_init@aux^(0+128),w
  1352  0F59  1903               	btfsc	3,2
  1353  0F5A  0008               	return
  1354                           
  1355                           ;panda17.c: 45: mem_write(0x0002,0xAA);
  1356  0F5B  3002               	movlw	2
  1357  0F5C  00AA               	movwf	mem_write@add^(0+128)
  1358  0F5D  3000               	movlw	0
  1359  0F5E  00AB               	movwf	(mem_write@add^(0+128)+1)
  1360  0F5F  30AA               	movlw	170
  1361  0F60  00B0               	movwf	??_mem_init^(0+128)
  1362  0F61  0830               	movf	??_mem_init^(0+128),w
  1363  0F62  00AC               	movwf	mem_write@data^(0+128)
  1364  0F63  120A  118A  27AE  120A  158A  	fcall	_mem_write
  1365                           
  1366                           ;panda17.c: 46: mem_write(0x0003,0x00);
  1367  0F68  3003               	movlw	3
  1368  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  1369  0F6A  1303               	bcf	3,6	;RP1=0, select bank1
  1370  0F6B  00AA               	movwf	mem_write@add^(0+128)
  1371  0F6C  3000               	movlw	0
  1372  0F6D  00AB               	movwf	(mem_write@add^(0+128)+1)
  1373  0F6E  01AC               	clrf	mem_write@data^(0+128)
  1374  0F6F  120A  118A  27AE  120A  158A  	fcall	_mem_write
  1375                           
  1376                           ;panda17.c: 47: mem_write(0x000A,0x00);
  1377  0F74  300A               	movlw	10
  1378  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  1379  0F76  1303               	bcf	3,6	;RP1=0, select bank1
  1380  0F77  00AA               	movwf	mem_write@add^(0+128)
  1381  0F78  3000               	movlw	0
  1382  0F79  00AB               	movwf	(mem_write@add^(0+128)+1)
  1383  0F7A  01AC               	clrf	mem_write@data^(0+128)
  1384  0F7B  120A  118A  27AE  120A  158A  	fcall	_mem_write
  1385                           
  1386                           ;panda17.c: 48: mem_write(0x000B,0x00);
  1387  0F80  300B               	movlw	11
  1388  0F81  1683               	bsf	3,5	;RP0=1, select bank1
  1389  0F82  1303               	bcf	3,6	;RP1=0, select bank1
  1390  0F83  00AA               	movwf	mem_write@add^(0+128)
  1391  0F84  3000               	movlw	0
  1392  0F85  00AB               	movwf	(mem_write@add^(0+128)+1)
  1393  0F86  01AC               	clrf	mem_write@data^(0+128)
  1394  0F87  120A  118A  27AE  120A  158A  	fcall	_mem_write
  1395                           
  1396                           ;panda17.c: 49: mem_write(0x000C,0x00);
  1397  0F8C  300C               	movlw	12
  1398  0F8D  1683               	bsf	3,5	;RP0=1, select bank1
  1399  0F8E  1303               	bcf	3,6	;RP1=0, select bank1
  1400  0F8F  00AA               	movwf	mem_write@add^(0+128)
  1401  0F90  3000               	movlw	0
  1402  0F91  00AB               	movwf	(mem_write@add^(0+128)+1)
  1403  0F92  01AC               	clrf	mem_write@data^(0+128)
  1404  0F93  120A  118A  27AE  120A  158A  	fcall	_mem_write
  1405                           
  1406                           ;panda17.c: 50: mem_write(0x000D,0x00);
  1407  0F98  300D               	movlw	13
  1408  0F99  1683               	bsf	3,5	;RP0=1, select bank1
  1409  0F9A  1303               	bcf	3,6	;RP1=0, select bank1
  1410  0F9B  00AA               	movwf	mem_write@add^(0+128)
  1411  0F9C  3000               	movlw	0
  1412  0F9D  00AB               	movwf	(mem_write@add^(0+128)+1)
  1413  0F9E  01AC               	clrf	mem_write@data^(0+128)
  1414  0F9F  120A  118A  27AE   	fcall	_mem_write
  1415  0FA2  0008               	return
  1416  0FA3                     __end_of_mem_init:	
  1417                           
  1418                           	psect	text4
  1419  07AE                     __ptext4:	
  1420 ;; *************** function _mem_write *****************
  1421 ;; Defined at:
  1422 ;;		line 13 in file "24lc512.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  add             2   10[BANK1 ] unsigned int 
  1425 ;;  data            1   12[BANK1 ] unsigned char 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  add_l           1   15[BANK1 ] unsigned char 
  1428 ;;  add_h           1   14[BANK1 ] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       3       0       0
  1439 ;;      Locals:         0       0       2       0       0
  1440 ;;      Temps:          0       0       1       0       0
  1441 ;;      Totals:         0       0       6       0       0
  1442 ;;Total ram usage:        6 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    5
  1445 ;; This function calls:
  1446 ;;		_i2c_start
  1447 ;;		_i2c_stop
  1448 ;;		_i2c_write
  1449 ;; This function is called by:
  1450 ;;		_mem_init
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           
  1455                           ;psect for function _mem_write
  1456  07AE                     _mem_write:	
  1457                           
  1458                           ;24lc512.c: 14: unsigned char add_h,add_l;
  1459                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  1460                           
  1461                           ;incstack = 0
  1462                           ; Regs used in _mem_write: [wreg+status,2+status,0+pclath+cstack]
  1463  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  1464  07AF  1303               	bcf	3,6	;RP1=0, select bank1
  1465  07B0  082B               	movf	(mem_write@add+1)^(0+128),w
  1466  07B1  00AD               	movwf	??_mem_write^(0+128)
  1467  07B2  082D               	movf	??_mem_write^(0+128),w
  1468  07B3  00AE               	movwf	mem_write@add_h^(0+128)
  1469                           
  1470                           ;24lc512.c: 16: add_l = add & 0x00FF;
  1471  07B4  082A               	movf	mem_write@add^(0+128),w
  1472  07B5  00AD               	movwf	??_mem_write^(0+128)
  1473  07B6  082D               	movf	??_mem_write^(0+128),w
  1474  07B7  00AF               	movwf	mem_write@add_l^(0+128)
  1475                           
  1476                           ;24lc512.c: 17: i2c_start();
  1477  07B8  120A  158A  2372  120A  118A  	fcall	_i2c_start
  1478                           
  1479                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  1480  07BD  1683               	bsf	3,5	;RP0=1, select bank1
  1481  07BE  1303               	bcf	3,6	;RP1=0, select bank1
  1482  07BF  01A0               	clrf	i2c_write@ack^(0+128)
  1483  07C0  30A0               	movlw	160
  1484  07C1  120A  158A  24A6  120A  118A  	fcall	_i2c_write
  1485                           
  1486                           ;24lc512.c: 19: i2c_write(add_h,0);
  1487  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  1488  07C7  1303               	bcf	3,6	;RP1=0, select bank1
  1489  07C8  01A0               	clrf	i2c_write@ack^(0+128)
  1490  07C9  082E               	movf	mem_write@add_h^(0+128),w
  1491  07CA  120A  158A  24A6  120A  118A  	fcall	_i2c_write
  1492                           
  1493                           ;24lc512.c: 20: i2c_write(add_l,0);
  1494  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  1495  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  1496  07D1  01A0               	clrf	i2c_write@ack^(0+128)
  1497  07D2  082F               	movf	mem_write@add_l^(0+128),w
  1498  07D3  120A  158A  24A6  120A  118A  	fcall	_i2c_write
  1499                           
  1500                           ;24lc512.c: 21: i2c_write(data,0);
  1501  07D8  1683               	bsf	3,5	;RP0=1, select bank1
  1502  07D9  1303               	bcf	3,6	;RP1=0, select bank1
  1503  07DA  01A0               	clrf	i2c_write@ack^(0+128)
  1504  07DB  082C               	movf	mem_write@data^(0+128),w
  1505  07DC  120A  158A  24A6  120A  118A  	fcall	_i2c_write
  1506                           
  1507                           ;24lc512.c: 22: i2c_stop();
  1508  07E1  120A  158A  2395  120A  118A  	fcall	_i2c_stop
  1509  07E6                     L1:	
  1510                           
  1511                           ;24lc512.c: 24: i2c_start();
  1512  07E6  120A  158A  2372  120A  118A  	fcall	_i2c_start
  1513                           
  1514                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  1515  07EB  1683               	bsf	3,5	;RP0=1, select bank1
  1516  07EC  1303               	bcf	3,6	;RP1=0, select bank1
  1517  07ED  01A0               	clrf	i2c_write@ack^(0+128)
  1518  07EE  30A0               	movlw	160
  1519  07EF  120A  158A  24A6  120A  118A  	fcall	_i2c_write
  1520                           
  1521                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  1522  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  1523  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  1524  07F6  1B11               	btfsc	17,6	;volatile
  1525  07F7  2FE6               	goto	L1
  1526                           
  1527                           ;24lc512.c: 30: }
  1528                           ;24lc512.c: 31: i2c_stop();
  1529                           
  1530                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  1531                           
  1532                           ;24lc512.c: 28: i2c_start();
  1533  07F8  120A  158A  2395   	fcall	_i2c_stop
  1534  07FB  0008               	return
  1535  07FC                     __end_of_mem_write:	
  1536                           
  1537                           	psect	text5
  1538  0DA5                     __ptext5:	
  1539 ;; *************** function _mem_read *****************
  1540 ;; Defined at:
  1541 ;;		line 34 in file "24lc512.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  add             2   10[BANK1 ] unsigned int 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  add_l           1   15[BANK1 ] unsigned char 
  1546 ;;  add_h           1   14[BANK1 ] unsigned char 
  1547 ;;  rta             1   13[BANK1 ] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      unsigned char 
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0, pclath, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1557 ;;      Params:         0       0       2       0       0
  1558 ;;      Locals:         0       0       3       0       0
  1559 ;;      Temps:          0       0       1       0       0
  1560 ;;      Totals:         0       0       6       0       0
  1561 ;;Total ram usage:        6 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    5
  1564 ;; This function calls:
  1565 ;;		_i2c_read
  1566 ;;		_i2c_start
  1567 ;;		_i2c_stop
  1568 ;;		_i2c_write
  1569 ;; This function is called by:
  1570 ;;		_mem_init
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           
  1575                           ;psect for function _mem_read
  1576  0DA5                     _mem_read:	
  1577                           
  1578                           ;24lc512.c: 35: unsigned char rta;
  1579                           ;24lc512.c: 36: unsigned char add_h,add_l;
  1580                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  1581                           
  1582                           ;incstack = 0
  1583                           ; Regs used in _mem_read: [wreg+status,2+status,0+pclath+cstack]
  1584  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  1585  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  1586  0DA7  082B               	movf	(mem_read@add+1)^(0+128),w
  1587  0DA8  00AC               	movwf	??_mem_read^(0+128)
  1588  0DA9  082C               	movf	??_mem_read^(0+128),w
  1589  0DAA  00AE               	movwf	mem_read@add_h^(0+128)
  1590                           
  1591                           ;24lc512.c: 38: add_l = add & 0x00FF;
  1592  0DAB  082A               	movf	mem_read@add^(0+128),w
  1593  0DAC  00AC               	movwf	??_mem_read^(0+128)
  1594  0DAD  082C               	movf	??_mem_read^(0+128),w
  1595  0DAE  00AF               	movwf	mem_read@add_l^(0+128)
  1596                           
  1597                           ;24lc512.c: 39: i2c_start();
  1598  0DAF  120A  158A  2372  120A  158A  	fcall	_i2c_start
  1599                           
  1600                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  1601  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  1603  0DB6  01A0               	clrf	i2c_write@ack^(0+128)
  1604  0DB7  30A0               	movlw	160
  1605  0DB8  120A  158A  24A6  120A  158A  	fcall	_i2c_write
  1606                           
  1607                           ;24lc512.c: 41: i2c_write(add_h,0);
  1608  0DBD  1683               	bsf	3,5	;RP0=1, select bank1
  1609  0DBE  1303               	bcf	3,6	;RP1=0, select bank1
  1610  0DBF  01A0               	clrf	i2c_write@ack^(0+128)
  1611  0DC0  082E               	movf	mem_read@add_h^(0+128),w
  1612  0DC1  120A  158A  24A6  120A  158A  	fcall	_i2c_write
  1613                           
  1614                           ;24lc512.c: 42: i2c_write(add_l,0);
  1615  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  1616  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  1617  0DC8  01A0               	clrf	i2c_write@ack^(0+128)
  1618  0DC9  082F               	movf	mem_read@add_l^(0+128),w
  1619  0DCA  120A  158A  24A6  120A  158A  	fcall	_i2c_write
  1620                           
  1621                           ;24lc512.c: 43: i2c_start();
  1622  0DCF  120A  158A  2372  120A  158A  	fcall	_i2c_start
  1623                           
  1624                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  1625  0DD4  1683               	bsf	3,5	;RP0=1, select bank1
  1626  0DD5  1303               	bcf	3,6	;RP1=0, select bank1
  1627  0DD6  01A0               	clrf	i2c_write@ack^(0+128)
  1628  0DD7  30A1               	movlw	161
  1629  0DD8  120A  158A  24A6  120A  158A  	fcall	_i2c_write
  1630                           
  1631                           ;24lc512.c: 45: rta = i2c_read(0);
  1632  0DDD  3000               	movlw	0
  1633  0DDE  120A  118A  2749  120A  158A  	fcall	_i2c_read
  1634  0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0DE4  1303               	bcf	3,6	;RP1=0, select bank1
  1636  0DE5  00AC               	movwf	??_mem_read^(0+128)
  1637  0DE6  082C               	movf	??_mem_read^(0+128),w
  1638  0DE7  00AD               	movwf	mem_read@rta^(0+128)
  1639                           
  1640                           ;24lc512.c: 46: i2c_stop();
  1641  0DE8  120A  158A  2395   	fcall	_i2c_stop
  1642                           
  1643                           ;24lc512.c: 47: return rta;
  1644  0DEB  1683               	bsf	3,5	;RP0=1, select bank1
  1645  0DEC  1303               	bcf	3,6	;RP1=0, select bank1
  1646  0DED  082D               	movf	mem_read@rta^(0+128),w
  1647  0DEE  0008               	return
  1648  0DEF                     __end_of_mem_read:	
  1649                           
  1650                           	psect	text6
  1651  0CA6                     __ptext6:	
  1652 ;; *************** function _i2c_write *****************
  1653 ;; Defined at:
  1654 ;;		line 39 in file "i2clib.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  datum           1    wreg     unsigned char 
  1657 ;;  ack             1    0[BANK1 ] unsigned char 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  datum           1    9[BANK1 ] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      unsigned char 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1669 ;;      Params:         0       0       1       0       0
  1670 ;;      Locals:         0       0       1       0       0
  1671 ;;      Temps:          0       0       8       0       0
  1672 ;;      Totals:         0       0      10       0       0
  1673 ;;Total ram usage:       10 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    4
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_mem_write
  1680 ;;		_mem_read
  1681 ;;		_si_reset
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function _i2c_write
  1687  0CA6                     _i2c_write:	
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
  1691                           ;i2c_write@datum stored from wreg
  1692  0CA6  1683               	bsf	3,5	;RP0=1, select bank1
  1693  0CA7  1303               	bcf	3,6	;RP1=0, select bank1
  1694  0CA8  00A9               	movwf	i2c_write@datum^(0+128)
  1695  0CA9                     l1527:	
  1696                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1697                           
  1698  0CA9  0811               	movf	17,w	;volatile
  1699  0CAA  3901               	andlw	1
  1700  0CAB  00A1               	movwf	??_i2c_write^(0+128)
  1701  0CAC  0C11               	rrf	17,w	;volatile
  1702  0CAD  3901               	andlw	1
  1703  0CAE  00A2               	movwf	(??_i2c_write+1)^(0+128)
  1704  0CAF  0C11               	rrf	17,w	;volatile
  1705  0CB0  00A3               	movwf	(??_i2c_write+2)^(0+128)
  1706  0CB1  0CA3               	rrf	(??_i2c_write+2)^(0+128),f
  1707  0CB2  0C23               	rrf	(??_i2c_write+2)^(0+128),w
  1708  0CB3  3901               	andlw	1
  1709  0CB4  00A4               	movwf	(??_i2c_write+3)^(0+128)
  1710  0CB5  0E11               	swapf	17,w	;volatile
  1711  0CB6  3901               	andlw	1
  1712  0CB7  00A5               	movwf	(??_i2c_write+4)^(0+128)
  1713  0CB8  0C11               	rrf	17,w	;volatile
  1714  0CB9  00A6               	movwf	(??_i2c_write+5)^(0+128)
  1715  0CBA  0C26               	rrf	(??_i2c_write+5)^(0+128),w
  1716  0CBB  3901               	andlw	1
  1717  0CBC  00A7               	movwf	(??_i2c_write+6)^(0+128)
  1718  0CBD  0C14               	rrf	20,w	;volatile
  1719  0CBE  00A8               	movwf	(??_i2c_write+7)^(0+128)
  1720  0CBF  0C28               	rrf	(??_i2c_write+7)^(0+128),w
  1721  0CC0  3901               	andlw	1
  1722  0CC1  0427               	iorwf	(??_i2c_write+6)^(0+128),w
  1723  0CC2  0425               	iorwf	(??_i2c_write+4)^(0+128),w
  1724  0CC3  0424               	iorwf	(??_i2c_write+3)^(0+128),w
  1725  0CC4  0422               	iorwf	(??_i2c_write+1)^(0+128),w
  1726  0CC5  0421               	iorwf	??_i2c_write^(0+128),w
  1727  0CC6  1D03               	btfss	3,2
  1728  0CC7  2CA9               	goto	l1527
  1729                           
  1730                           ;i2clib.c: 42: SSPBUF = datum;
  1731  0CC8  0829               	movf	i2c_write@datum^(0+128),w
  1732  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0CCB  0093               	movwf	19	;volatile
  1735  0CCC                     l173:	
  1736                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  1737                           
  1738  0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  1739  0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  1740  0CCE  1814               	btfsc	20,0	;volatile
  1741  0CCF  2CCC               	goto	l173
  1742                           
  1743                           ;i2clib.c: 44: if(ack){
  1744  0CD0  0820               	movf	i2c_write@ack^(0+128),w
  1745  0CD1  1903               	btfsc	3,2
  1746  0CD2  2CD5               	goto	l180
  1747  0CD3                     l177:	
  1748                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  1749                           
  1750  0CD3  1B11               	btfsc	17,6	;volatile
  1751  0CD4  2CD3               	goto	l177
  1752  0CD5                     l180:	
  1753                           ;i2clib.c: 46: }
  1754                           ;i2clib.c: 47: }
  1755                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  1756                           
  1757  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0CD6  198C               	btfsc	12,3	;volatile
  1759  0CD7  0008               	return
  1760  0CD8  2CD5               	goto	l180
  1761  0CD9                     __end_of_i2c_write:	
  1762                           
  1763                           	psect	text7
  1764  0B95                     __ptext7:	
  1765 ;; *************** function _i2c_stop *****************
  1766 ;; Defined at:
  1767 ;;		line 34 in file "i2clib.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0
  1783 ;;      Temps:          0       0       8       0       0
  1784 ;;      Totals:         0       0       8       0       0
  1785 ;;Total ram usage:        8 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    4
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_mem_write
  1792 ;;		_mem_read
  1793 ;;		_si_reset
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           
  1798                           ;psect for function _i2c_stop
  1799  0B95                     _i2c_stop:	
  1800  0B95                     l1523:	
  1801                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _i2c_stop: [wreg+status,2+status,0]
  1805                           
  1806  0B95  1683               	bsf	3,5	;RP0=1, select bank1
  1807  0B96  1303               	bcf	3,6	;RP1=0, select bank1
  1808  0B97  0811               	movf	17,w	;volatile
  1809  0B98  3901               	andlw	1
  1810  0B99  00A0               	movwf	??_i2c_stop^(0+128)
  1811  0B9A  0C11               	rrf	17,w	;volatile
  1812  0B9B  3901               	andlw	1
  1813  0B9C  00A1               	movwf	(??_i2c_stop+1)^(0+128)
  1814  0B9D  0C11               	rrf	17,w	;volatile
  1815  0B9E  00A2               	movwf	(??_i2c_stop+2)^(0+128)
  1816  0B9F  0CA2               	rrf	(??_i2c_stop+2)^(0+128),f
  1817  0BA0  0C22               	rrf	(??_i2c_stop+2)^(0+128),w
  1818  0BA1  3901               	andlw	1
  1819  0BA2  00A3               	movwf	(??_i2c_stop+3)^(0+128)
  1820  0BA3  0E11               	swapf	17,w	;volatile
  1821  0BA4  3901               	andlw	1
  1822  0BA5  00A4               	movwf	(??_i2c_stop+4)^(0+128)
  1823  0BA6  0C11               	rrf	17,w	;volatile
  1824  0BA7  00A5               	movwf	(??_i2c_stop+5)^(0+128)
  1825  0BA8  0C25               	rrf	(??_i2c_stop+5)^(0+128),w
  1826  0BA9  3901               	andlw	1
  1827  0BAA  00A6               	movwf	(??_i2c_stop+6)^(0+128)
  1828  0BAB  0C14               	rrf	20,w	;volatile
  1829  0BAC  00A7               	movwf	(??_i2c_stop+7)^(0+128)
  1830  0BAD  0C27               	rrf	(??_i2c_stop+7)^(0+128),w
  1831  0BAE  3901               	andlw	1
  1832  0BAF  0426               	iorwf	(??_i2c_stop+6)^(0+128),w
  1833  0BB0  0424               	iorwf	(??_i2c_stop+4)^(0+128),w
  1834  0BB1  0423               	iorwf	(??_i2c_stop+3)^(0+128),w
  1835  0BB2  0421               	iorwf	(??_i2c_stop+1)^(0+128),w
  1836  0BB3  0420               	iorwf	??_i2c_stop^(0+128),w
  1837  0BB4  1D03               	btfss	3,2
  1838  0BB5  2B95               	goto	l1523
  1839                           
  1840                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  1841  0BB6  1511               	bsf	17,2	;volatile
  1842  0BB7  0008               	return
  1843  0BB8                     __end_of_i2c_stop:	
  1844                           
  1845                           	psect	text8
  1846  0B72                     __ptext8:	
  1847 ;; *************** function _i2c_start *****************
  1848 ;; Defined at:
  1849 ;;		line 24 in file "i2clib.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;		None
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;		None
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         0       0       0       0       0
  1864 ;;      Locals:         0       0       0       0       0
  1865 ;;      Temps:          0       0       8       0       0
  1866 ;;      Totals:         0       0       8       0       0
  1867 ;;Total ram usage:        8 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; Hardware stack levels required when called:    4
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_mem_write
  1874 ;;		_mem_read
  1875 ;;		_si_reset
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879                           
  1880                           ;psect for function _i2c_start
  1881  0B72                     _i2c_start:	
  1882  0B72                     l1519:	
  1883                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1884                           
  1885                           ;incstack = 0
  1886                           ; Regs used in _i2c_start: [wreg+status,2+status,0]
  1887                           
  1888  0B72  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0B73  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0B74  0811               	movf	17,w	;volatile
  1891  0B75  3901               	andlw	1
  1892  0B76  00A0               	movwf	??_i2c_start^(0+128)
  1893  0B77  0C11               	rrf	17,w	;volatile
  1894  0B78  3901               	andlw	1
  1895  0B79  00A1               	movwf	(??_i2c_start+1)^(0+128)
  1896  0B7A  0C11               	rrf	17,w	;volatile
  1897  0B7B  00A2               	movwf	(??_i2c_start+2)^(0+128)
  1898  0B7C  0CA2               	rrf	(??_i2c_start+2)^(0+128),f
  1899  0B7D  0C22               	rrf	(??_i2c_start+2)^(0+128),w
  1900  0B7E  3901               	andlw	1
  1901  0B7F  00A3               	movwf	(??_i2c_start+3)^(0+128)
  1902  0B80  0E11               	swapf	17,w	;volatile
  1903  0B81  3901               	andlw	1
  1904  0B82  00A4               	movwf	(??_i2c_start+4)^(0+128)
  1905  0B83  0C11               	rrf	17,w	;volatile
  1906  0B84  00A5               	movwf	(??_i2c_start+5)^(0+128)
  1907  0B85  0C25               	rrf	(??_i2c_start+5)^(0+128),w
  1908  0B86  3901               	andlw	1
  1909  0B87  00A6               	movwf	(??_i2c_start+6)^(0+128)
  1910  0B88  0C14               	rrf	20,w	;volatile
  1911  0B89  00A7               	movwf	(??_i2c_start+7)^(0+128)
  1912  0B8A  0C27               	rrf	(??_i2c_start+7)^(0+128),w
  1913  0B8B  3901               	andlw	1
  1914  0B8C  0426               	iorwf	(??_i2c_start+6)^(0+128),w
  1915  0B8D  0424               	iorwf	(??_i2c_start+4)^(0+128),w
  1916  0B8E  0423               	iorwf	(??_i2c_start+3)^(0+128),w
  1917  0B8F  0421               	iorwf	(??_i2c_start+1)^(0+128),w
  1918  0B90  0420               	iorwf	??_i2c_start^(0+128),w
  1919  0B91  1D03               	btfss	3,2
  1920  0B92  2B72               	goto	l1519
  1921                           
  1922                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  1923  0B93  1411               	bsf	17,0	;volatile
  1924  0B94  0008               	return
  1925  0B95                     __end_of_i2c_start:	
  1926                           
  1927                           	psect	text9
  1928  0749                     __ptext9:	
  1929 ;; *************** function _i2c_read *****************
  1930 ;; Defined at:
  1931 ;;		line 51 in file "i2clib.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  ack             1    wreg     unsigned char 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  ack             1    9[BANK1 ] unsigned char 
  1936 ;;  resp            1    8[BANK1 ] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      unsigned char 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1946 ;;      Params:         0       0       0       0       0
  1947 ;;      Locals:         0       0       2       0       0
  1948 ;;      Temps:          0       0       8       0       0
  1949 ;;      Totals:         0       0      10       0       0
  1950 ;;Total ram usage:       10 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    4
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_mem_read
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           
  1961                           ;psect for function _i2c_read
  1962  0749                     _i2c_read:	
  1963                           
  1964                           ;incstack = 0
  1965                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  1966                           ;i2c_read@ack stored from wreg
  1967  0749  1683               	bsf	3,5	;RP0=1, select bank1
  1968  074A  1303               	bcf	3,6	;RP1=0, select bank1
  1969  074B  00A9               	movwf	i2c_read@ack^(0+128)
  1970                           
  1971                           ;i2clib.c: 52: unsigned char resp;
  1972                           ;i2clib.c: 53: static bit flag, not_flag;
  1973                           ;i2clib.c: 54: flag = ack & 0x01;
  1974  074C  1283               	bcf	3,5	;RP0=0, select bank0
  1975  074D  1303               	bcf	3,6	;RP1=0, select bank0
  1976  074E  10DF               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  1977  074F  1683               	bsf	3,5	;RP0=1, select bank1
  1978  0750  1303               	bcf	3,6	;RP1=0, select bank1
  1979  0751  1C29               	btfss	i2c_read@ack^(0+128),0
  1980  0752  2F56               	goto	l1537
  1981  0753  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0754  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0755  14DF               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  1984  0756                     l1537:	
  1985                           
  1986                           ;i2clib.c: 55: if (ack == 1){
  1987  0756  1683               	bsf	3,5	;RP0=1, select bank1
  1988  0757  1303               	bcf	3,6	;RP1=0, select bank1
  1989  0758  0329               	decf	i2c_read@ack^(0+128),w
  1990  0759  1D03               	btfss	3,2
  1991  075A  2F5E               	goto	l1541
  1992                           
  1993                           ;i2clib.c: 56: not_flag = 0;
  1994  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1995  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1996  075D  105F               	bcf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  1997  075E                     l1541:	
  1998                           
  1999                           ;i2clib.c: 57: }
  2000                           ;i2clib.c: 58: if (ack == 3){
  2001  075E  3003               	movlw	3
  2002  075F  1683               	bsf	3,5	;RP0=1, select bank1
  2003  0760  1303               	bcf	3,6	;RP1=0, select bank1
  2004  0761  0629               	xorwf	i2c_read@ack^(0+128),w
  2005  0762  1D03               	btfss	3,2
  2006  0763  2F67               	goto	l1545
  2007                           
  2008                           ;i2clib.c: 59: not_flag = 1;
  2009  0764  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0765  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0766  145F               	bsf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2012  0767                     l1545:	
  2013                           ;i2clib.c: 60: }
  2014                           ;i2clib.c: 61: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  2015                           
  2016  0767  1683               	bsf	3,5	;RP0=1, select bank1
  2017  0768  1303               	bcf	3,6	;RP1=0, select bank1
  2018  0769  0811               	movf	17,w	;volatile
  2019  076A  3901               	andlw	1
  2020  076B  00A0               	movwf	??_i2c_read^(0+128)
  2021  076C  0C11               	rrf	17,w	;volatile
  2022  076D  3901               	andlw	1
  2023  076E  00A1               	movwf	(??_i2c_read+1)^(0+128)
  2024  076F  0C11               	rrf	17,w	;volatile
  2025  0770  00A2               	movwf	(??_i2c_read+2)^(0+128)
  2026  0771  0CA2               	rrf	(??_i2c_read+2)^(0+128),f
  2027  0772  0C22               	rrf	(??_i2c_read+2)^(0+128),w
  2028  0773  3901               	andlw	1
  2029  0774  00A3               	movwf	(??_i2c_read+3)^(0+128)
  2030  0775  0E11               	swapf	17,w	;volatile
  2031  0776  3901               	andlw	1
  2032  0777  00A4               	movwf	(??_i2c_read+4)^(0+128)
  2033  0778  0C11               	rrf	17,w	;volatile
  2034  0779  00A5               	movwf	(??_i2c_read+5)^(0+128)
  2035  077A  0C25               	rrf	(??_i2c_read+5)^(0+128),w
  2036  077B  3901               	andlw	1
  2037  077C  00A6               	movwf	(??_i2c_read+6)^(0+128)
  2038  077D  0C14               	rrf	20,w	;volatile
  2039  077E  00A7               	movwf	(??_i2c_read+7)^(0+128)
  2040  077F  0C27               	rrf	(??_i2c_read+7)^(0+128),w
  2041  0780  3901               	andlw	1
  2042  0781  0426               	iorwf	(??_i2c_read+6)^(0+128),w
  2043  0782  0424               	iorwf	(??_i2c_read+4)^(0+128),w
  2044  0783  0423               	iorwf	(??_i2c_read+3)^(0+128),w
  2045  0784  0421               	iorwf	(??_i2c_read+1)^(0+128),w
  2046  0785  0420               	iorwf	??_i2c_read^(0+128),w
  2047  0786  1D03               	btfss	3,2
  2048  0787  2F67               	goto	l1545
  2049                           
  2050                           ;i2clib.c: 62: SSPCON2bits.RCEN = 1;
  2051  0788  1591               	bsf	17,3	;volatile
  2052  0789                     l195:	
  2053                           ;i2clib.c: 63: while(!SSPSTATbits.BF);
  2054                           
  2055  0789  1C14               	btfss	20,0	;volatile
  2056  078A  2F89               	goto	l195
  2057  078B                     l198:	
  2058                           ;i2clib.c: 64: while(!PIR1bits.SSPIF);
  2059                           
  2060  078B  1283               	bcf	3,5	;RP0=0, select bank0
  2061  078C  1D8C               	btfss	12,3	;volatile
  2062  078D  2F8B               	goto	l198
  2063                           
  2064                           ;i2clib.c: 65: SSPCON2bits.ACKDT = not_flag;
  2065  078E  1C5F               	btfss	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2066  078F  2F94               	goto	u1280
  2067  0790  1683               	bsf	3,5	;RP0=1, select bank1
  2068  0791  1303               	bcf	3,6	;RP1=0, select bank1
  2069  0792  1691               	bsf	17,5	;volatile
  2070  0793  2F97               	goto	u1294
  2071  0794                     u1280:	
  2072  0794  1683               	bsf	3,5	;RP0=1, select bank1
  2073  0795  1303               	bcf	3,6	;RP1=0, select bank1
  2074  0796  1291               	bcf	17,5	;volatile
  2075  0797                     u1294:	
  2076                           
  2077                           ;i2clib.c: 66: SSPCON2bits.ACKEN = flag;
  2078  0797  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0798  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0799  1CDF               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2081  079A  2F9F               	goto	u1300
  2082  079B  1683               	bsf	3,5	;RP0=1, select bank1
  2083  079C  1303               	bcf	3,6	;RP1=0, select bank1
  2084  079D  1611               	bsf	17,4	;volatile
  2085  079E  2FA2               	goto	l1547
  2086  079F                     u1300:	
  2087  079F  1683               	bsf	3,5	;RP0=1, select bank1
  2088  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  2089  07A1  1211               	bcf	17,4	;volatile
  2090  07A2                     l1547:	
  2091                           
  2092                           ;i2clib.c: 67: resp = SSPBUF;
  2093  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  2094  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  2095  07A4  0813               	movf	19,w	;volatile
  2096  07A5  1683               	bsf	3,5	;RP0=1, select bank1
  2097  07A6  1303               	bcf	3,6	;RP1=0, select bank1
  2098  07A7  00A0               	movwf	??_i2c_read^(0+128)
  2099  07A8  0820               	movf	??_i2c_read^(0+128),w
  2100  07A9  00A8               	movwf	i2c_read@resp^(0+128)
  2101  07AA                     l201:	
  2102                           ;i2clib.c: 68: while(SSPSTATbits.BF);
  2103                           
  2104  07AA  1814               	btfsc	20,0	;volatile
  2105  07AB  2FAA               	goto	l201
  2106                           
  2107                           ;i2clib.c: 69: return resp;
  2108  07AC  0828               	movf	i2c_read@resp^(0+128),w
  2109  07AD  0008               	return
  2110  07AE                     __end_of_i2c_read:	
  2111                           
  2112                           	psect	text10
  2113  0BB8                     __ptext10:	
  2114 ;; *************** function _init_timer2 *****************
  2115 ;; Defined at:
  2116 ;;		line 211 in file "panda17.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  pre             1    wreg     unsigned char 
  2119 ;;  post            1    0[BANK1 ] unsigned char 
  2120 ;;  eoc             1    1[BANK1 ] unsigned char 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  pre             1    4[BANK1 ] unsigned char 
  2123 ;;  sfr             1    5[BANK1 ] unsigned char 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  1    wreg      void 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2133 ;;      Params:         0       0       2       0       0
  2134 ;;      Locals:         0       0       2       0       0
  2135 ;;      Temps:          0       0       2       0       0
  2136 ;;      Totals:         0       0       6       0       0
  2137 ;;Total ram usage:        6 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    4
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           
  2148                           ;psect for function _init_timer2
  2149  0BB8                     _init_timer2:	
  2150                           
  2151                           ;incstack = 0
  2152                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
  2153                           ;init_timer2@pre stored from wreg
  2154  0BB8  1683               	bsf	3,5	;RP0=1, select bank1
  2155  0BB9  1303               	bcf	3,6	;RP1=0, select bank1
  2156  0BBA  00A4               	movwf	init_timer2@pre^(0+128)
  2157                           
  2158                           ;panda17.c: 212: unsigned char sfr = 0x00;
  2159  0BBB  01A5               	clrf	init_timer2@sfr^(0+128)
  2160                           
  2161                           ;panda17.c: 213: PR2 = eoc;
  2162  0BBC  0821               	movf	init_timer2@eoc^(0+128),w
  2163  0BBD  0092               	movwf	18	;volatile
  2164                           
  2165                           ;panda17.c: 214: sfr = ((post-1) << 3) & 0x78;
  2166  0BBE  0820               	movf	init_timer2@post^(0+128),w
  2167  0BBF  00A2               	movwf	??_init_timer2^(0+128)
  2168  0BC0  3002               	movlw	2
  2169  0BC1                     u2015:	
  2170  0BC1  1003               	clrc
  2171  0BC2  0DA2               	rlf	??_init_timer2^(0+128),f
  2172  0BC3  3EFF               	addlw	-1
  2173  0BC4  1D03               	skipz
  2174  0BC5  2BC1               	goto	u2015
  2175  0BC6  1003               	clrc
  2176  0BC7  0D22               	rlf	??_init_timer2^(0+128),w
  2177  0BC8  3EF8               	addlw	248
  2178  0BC9  3978               	andlw	120
  2179  0BCA  00A3               	movwf	(??_init_timer2+1)^(0+128)
  2180  0BCB  0823               	movf	(??_init_timer2+1)^(0+128),w
  2181  0BCC  00A5               	movwf	init_timer2@sfr^(0+128)
  2182                           
  2183                           ;panda17.c: 215: sfr += 4;
  2184  0BCD  3004               	movlw	4
  2185  0BCE  00A2               	movwf	??_init_timer2^(0+128)
  2186  0BCF  0822               	movf	??_init_timer2^(0+128),w
  2187  0BD0  07A5               	addwf	init_timer2@sfr^(0+128),f
  2188                           
  2189                           ;panda17.c: 216: sfr += pre;
  2190  0BD1  0824               	movf	init_timer2@pre^(0+128),w
  2191  0BD2  00A2               	movwf	??_init_timer2^(0+128)
  2192  0BD3  0822               	movf	??_init_timer2^(0+128),w
  2193  0BD4  07A5               	addwf	init_timer2@sfr^(0+128),f
  2194                           
  2195                           ;panda17.c: 217: T2CON = sfr;
  2196  0BD5  0825               	movf	init_timer2@sfr^(0+128),w
  2197  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0BD8  0092               	movwf	18	;volatile
  2200                           
  2201                           ;panda17.c: 218: PIE1bits.TMR2IE = 1;
  2202  0BD9  1683               	bsf	3,5	;RP0=1, select bank1
  2203  0BDA  1303               	bcf	3,6	;RP1=0, select bank1
  2204  0BDB  148C               	bsf	12,1	;volatile
  2205  0BDC  0008               	return
  2206  0BDD                     __end_of_init_timer2:	
  2207                           
  2208                           	psect	text11
  2209  0AA4                     __ptext11:	
  2210 ;; *************** function _i2c_init *****************
  2211 ;; Defined at:
  2212 ;;		line 13 in file "i2clib.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2226 ;;      Params:         0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used:    1
  2232 ;; Hardware stack levels required when called:    4
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           
  2241                           ;psect for function _i2c_init
  2242  0AA4                     _i2c_init:	
  2243                           
  2244                           ;i2clib.c: 15: SSPCONbits.SSPM = 0b1000;
  2245                           
  2246                           ;incstack = 0
  2247                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  2248  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  2250  0AA6  0814               	movf	20,w	;volatile
  2251  0AA7  39F0               	andlw	-16
  2252  0AA8  3808               	iorlw	8
  2253  0AA9  0094               	movwf	20	;volatile
  2254                           
  2255                           ;i2clib.c: 16: SSPCONbits.SSPEN = 1;
  2256  0AAA  1694               	bsf	20,5	;volatile
  2257                           
  2258                           ;i2clib.c: 18: SSPADD = 0x04;
  2259  0AAB  3004               	movlw	4
  2260  0AAC  1683               	bsf	3,5	;RP0=1, select bank1
  2261  0AAD  1303               	bcf	3,6	;RP1=0, select bank1
  2262  0AAE  0093               	movwf	19	;volatile
  2263                           
  2264                           ;i2clib.c: 19: SSPSTATbits.SMP = 1;
  2265  0AAF  1794               	bsf	20,7	;volatile
  2266                           
  2267                           ;i2clib.c: 20: TRISCbits.TRISC3 = 1;
  2268  0AB0  1587               	bsf	7,3	;volatile
  2269                           
  2270                           ;i2clib.c: 21: TRISCbits.TRISC4 = 1;
  2271  0AB1  1607               	bsf	7,4	;volatile
  2272  0AB2  0008               	return
  2273  0AB3                     __end_of_i2c_init:	
  2274                           
  2275                           	psect	text12
  2276  0028                     __ptext12:	
  2277 ;; *************** function _ints_isr *****************
  2278 ;; Defined at:
  2279 ;;		line 54 in file "panda17.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;		None
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  o               1   51[BANK0 ] unsigned char 
  2284 ;;  u               1   36[BANK0 ] unsigned char 
  2285 ;;  hum_add         2   47[BANK0 ] unsigned int 
  2286 ;;  temp_add        2   45[BANK0 ] unsigned int 
  2287 ;;  up              2   41[BANK0 ] unsigned int 
  2288 ;;  temp_val        2   34[BANK0 ] unsigned int 
  2289 ;;  hum_val         2   32[BANK0 ] unsigned int 
  2290 ;;  arg             1   52[BANK0 ] unsigned char 
  2291 ;;  k               1   40[BANK0 ] unsigned char 
  2292 ;;  z               1   39[BANK0 ] unsigned char 
  2293 ;;  n               2   49[BANK0 ] unsigned int 
  2294 ;;  aux             2   43[BANK0 ] unsigned int 
  2295 ;;  add             2   37[BANK0 ] unsigned int 
  2296 ;;  dt              1   31[BANK0 ] unsigned char 
  2297 ;;  rcv             1   30[BANK0 ] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2307 ;;      Params:         0       0       0       0       0
  2308 ;;      Locals:         0      25       0       0       0
  2309 ;;      Temps:          0       8       0       0       0
  2310 ;;      Totals:         0      33       0       0       0
  2311 ;;Total ram usage:       33 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    3
  2314 ;; This function calls:
  2315 ;;		___wmul
  2316 ;;		_ds_get
  2317 ;;		_ds_set
  2318 ;;		_printf
  2319 ;;		_si_read_h
  2320 ;;		_si_read_t
  2321 ;;		i1_mem_init
  2322 ;;		i1_mem_read
  2323 ;;		i1_mem_write
  2324 ;; This function is called by:
  2325 ;;		Interrupt level 1
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _ints_isr
  2331  0028                     _ints_isr:	
  2332                           
  2333                           ;panda17.c: 56: if (PIR1bits.RCIF){
  2334  0028  1E8C               	btfss	12,5	;volatile
  2335  0029  2A64               	goto	i1l84
  2336                           
  2337                           ;panda17.c: 57: INTCONbits.GIE = 0;
  2338  002A  138B               	bcf	11,7	;volatile
  2339                           
  2340                           ;panda17.c: 58: static bit ferr = 0, oerr = 0;
  2341                           ;panda17.c: 59: unsigned char rcv = 0;
  2342  002B  01BE               	clrf	ints_isr@rcv
  2343                           
  2344                           ;panda17.c: 60: ferr = RCSTAbits.FERR;
  2345  002C  11DF               	bcf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2346  002D  1918               	btfsc	24,2	;volatile
  2347  002E  15DF               	bsf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2348                           
  2349                           ;panda17.c: 61: oerr = RCSTAbits.OERR;
  2350  002F  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0030  1303               	bcf	3,6	;RP1=0, select bank0
  2352  0031  115F               	bcf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2353  0032  1898               	btfsc	24,1	;volatile
  2354  0033  155F               	bsf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2355                           
  2356                           ;panda17.c: 62: if (!ferr & !oerr){
  2357  0034  1283               	bcf	3,5	;RP0=0, select bank0
  2358  0035  1303               	bcf	3,6	;RP1=0, select bank0
  2359  0036  1DDF               	btfss	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2360  0037  195F               	btfsc	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2361  0038  2A50               	goto	i1l2121
  2362                           
  2363                           ;panda17.c: 63: rcv = RCREG;
  2364  0039  081A               	movf	26,w	;volatile
  2365  003A  00B4               	movwf	??_ints_isr
  2366  003B  0834               	movf	??_ints_isr,w
  2367  003C  00BE               	movwf	ints_isr@rcv
  2368                           
  2369                           ;panda17.c: 64: }
  2370                           ;panda17.c: 65: switch (rcv){
  2371  003D  2A50               	goto	i1l2121
  2372  003E                     i1l91:	
  2373                           ;panda17.c: 66: case 'a':
  2374                           
  2375                           
  2376                           ;panda17.c: 67: PORTBbits.RB4 = 1;
  2377  003E  1606               	bsf	6,4	;volatile
  2378                           
  2379                           ;panda17.c: 68: unsigned int add,n,aux;
  2380                           ;panda17.c: 69: unsigned char dt = 0;
  2381  003F  01BF               	clrf	ints_isr@dt
  2382                           
  2383                           ;panda17.c: 70: add = mem_read(0x0A);
  2384  0040  300A               	movlw	10
  2385  0041  00FA               	movwf	i1mem_read@add
  2386  0042  3000               	movlw	0
  2387  0043  00FB               	movwf	i1mem_read@add+1
  2388  0044  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  2389  0049  1283               	bcf	3,5	;RP0=0, select bank0
  2390  004A  1303               	bcf	3,6	;RP1=0, select bank0
  2391  004B  00B4               	movwf	??_ints_isr
  2392  004C  01B5               	clrf	??_ints_isr+1
  2393  004D  0834               	movf	??_ints_isr,w
  2394  004E  00C5               	movwf	ints_isr@add
  2395  004F  0835               	movf	??_ints_isr+1,w
  2396  0050  00C6               	movwf	ints_isr@add+1
  2397                           
  2398                           ;panda17.c: 71: add = add << 8;
  2399  0051  0845               	movf	ints_isr@add,w
  2400  0052  00B5               	movwf	??_ints_isr+1
  2401  0053  01B4               	clrf	??_ints_isr
  2402  0054  0834               	movf	??_ints_isr,w
  2403  0055  00C5               	movwf	ints_isr@add
  2404  0056  0835               	movf	??_ints_isr+1,w
  2405  0057  00C6               	movwf	ints_isr@add+1
  2406                           
  2407                           ;panda17.c: 72: add += mem_read(0x0B);
  2408  0058  300B               	movlw	11
  2409  0059  00FA               	movwf	i1mem_read@add
  2410  005A  3000               	movlw	0
  2411  005B  00FB               	movwf	i1mem_read@add+1
  2412  005C  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  2413  0061  1283               	bcf	3,5	;RP0=0, select bank0
  2414  0062  1303               	bcf	3,6	;RP1=0, select bank0
  2415  0063  00B4               	movwf	??_ints_isr
  2416  0064  01B5               	clrf	??_ints_isr+1
  2417  0065  0834               	movf	??_ints_isr,w
  2418  0066  07C5               	addwf	ints_isr@add,f
  2419  0067  1803               	skipnc
  2420  0068  0AC6               	incf	ints_isr@add+1,f
  2421  0069  0835               	movf	??_ints_isr+1,w
  2422  006A  07C6               	addwf	ints_isr@add+1,f
  2423                           
  2424                           ;panda17.c: 74: printf("I%05d\r\n",add);
  2425  006B  0846               	movf	ints_isr@add+1,w
  2426  006C  00A5               	movwf	?_printf+1
  2427  006D  0845               	movf	ints_isr@add,w
  2428  006E  00A4               	movwf	?_printf
  2429  006F  3035               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2430  0070  120A  118A  2533  120A  118A  	fcall	_printf
  2431                           
  2432                           ;panda17.c: 75: for (n=0;n<add;n++){
  2433  0075  1283               	bcf	3,5	;RP0=0, select bank0
  2434  0076  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0077  01D1               	clrf	ints_isr@n
  2436  0078  01D2               	clrf	ints_isr@n+1
  2437  0079                     i1l2055:	
  2438  0079  0846               	movf	ints_isr@add+1,w
  2439  007A  0252               	subwf	ints_isr@n+1,w
  2440  007B  1D03               	skipz
  2441  007C  287F               	goto	u208_25
  2442  007D  0845               	movf	ints_isr@add,w
  2443  007E  0251               	subwf	ints_isr@n,w
  2444  007F                     u208_25:	
  2445  007F  1803               	btfsc	3,0
  2446  0080  2922               	goto	i1l2057
  2447                           
  2448                           ;panda17.c: 76: aux = mem_read(2*n+0x0010);
  2449  0081  0852               	movf	ints_isr@n+1,w
  2450  0082  00B5               	movwf	??_ints_isr+1
  2451  0083  0851               	movf	ints_isr@n,w
  2452  0084  00B4               	movwf	??_ints_isr
  2453  0085  1003               	clrc
  2454  0086  0DB4               	rlf	??_ints_isr,f
  2455  0087  0DB5               	rlf	??_ints_isr+1,f
  2456  0088  0834               	movf	??_ints_isr,w
  2457  0089  3E10               	addlw	16
  2458  008A  00FA               	movwf	i1mem_read@add
  2459  008B  0835               	movf	??_ints_isr+1,w
  2460  008C  1803               	skipnc
  2461  008D  3E01               	addlw	1
  2462  008E  3E00               	addlw	0
  2463  008F  00FB               	movwf	i1mem_read@add+1
  2464  0090  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  2465  0095  1283               	bcf	3,5	;RP0=0, select bank0
  2466  0096  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0097  00B6               	movwf	??_ints_isr+2
  2468  0098  01B7               	clrf	??_ints_isr+3
  2469  0099  0836               	movf	??_ints_isr+2,w
  2470  009A  00CB               	movwf	ints_isr@aux
  2471  009B  0837               	movf	??_ints_isr+3,w
  2472  009C  00CC               	movwf	ints_isr@aux+1
  2473                           
  2474                           ;panda17.c: 77: aux = aux << 8;
  2475  009D  084B               	movf	ints_isr@aux,w
  2476  009E  00B5               	movwf	??_ints_isr+1
  2477  009F  01B4               	clrf	??_ints_isr
  2478  00A0  0834               	movf	??_ints_isr,w
  2479  00A1  00CB               	movwf	ints_isr@aux
  2480  00A2  0835               	movf	??_ints_isr+1,w
  2481  00A3  00CC               	movwf	ints_isr@aux+1
  2482                           
  2483                           ;panda17.c: 78: aux += mem_read(2*n+0x0011);
  2484  00A4  0852               	movf	ints_isr@n+1,w
  2485  00A5  00B5               	movwf	??_ints_isr+1
  2486  00A6  0851               	movf	ints_isr@n,w
  2487  00A7  00B4               	movwf	??_ints_isr
  2488  00A8  1003               	clrc
  2489  00A9  0DB4               	rlf	??_ints_isr,f
  2490  00AA  0DB5               	rlf	??_ints_isr+1,f
  2491  00AB  0834               	movf	??_ints_isr,w
  2492  00AC  3E11               	addlw	17
  2493  00AD  00FA               	movwf	i1mem_read@add
  2494  00AE  0835               	movf	??_ints_isr+1,w
  2495  00AF  1803               	skipnc
  2496  00B0  3E01               	addlw	1
  2497  00B1  3E00               	addlw	0
  2498  00B2  00FB               	movwf	i1mem_read@add+1
  2499  00B3  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  2500  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  2501  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  2502  00BA  00B6               	movwf	??_ints_isr+2
  2503  00BB  01B7               	clrf	??_ints_isr+3
  2504  00BC  0836               	movf	??_ints_isr+2,w
  2505  00BD  07CB               	addwf	ints_isr@aux,f
  2506  00BE  1803               	skipnc
  2507  00BF  0ACC               	incf	ints_isr@aux+1,f
  2508  00C0  0837               	movf	??_ints_isr+3,w
  2509  00C1  07CC               	addwf	ints_isr@aux+1,f
  2510                           
  2511                           ;panda17.c: 79: printf("%04x;",aux);
  2512  00C2  084C               	movf	ints_isr@aux+1,w
  2513  00C3  00A5               	movwf	?_printf+1
  2514  00C4  084B               	movf	ints_isr@aux,w
  2515  00C5  00A4               	movwf	?_printf
  2516  00C6  3045               	movlw	(low (((STR_9+1)-__stringbase)| (0+32768)))& (0+255)
  2517  00C7  120A  118A  2533  120A  118A  	fcall	_printf
  2518                           
  2519                           ;panda17.c: 80: aux = mem_read(2*n+0x7FF7);
  2520  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  2521  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  2522  00CE  0852               	movf	ints_isr@n+1,w
  2523  00CF  00B5               	movwf	??_ints_isr+1
  2524  00D0  0851               	movf	ints_isr@n,w
  2525  00D1  00B4               	movwf	??_ints_isr
  2526  00D2  1003               	clrc
  2527  00D3  0DB4               	rlf	??_ints_isr,f
  2528  00D4  0DB5               	rlf	??_ints_isr+1,f
  2529  00D5  0834               	movf	??_ints_isr,w
  2530  00D6  3EF7               	addlw	247
  2531  00D7  00FA               	movwf	i1mem_read@add
  2532  00D8  0835               	movf	??_ints_isr+1,w
  2533  00D9  1803               	skipnc
  2534  00DA  3E01               	addlw	1
  2535  00DB  3E7F               	addlw	127
  2536  00DC  00FB               	movwf	i1mem_read@add+1
  2537  00DD  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  2538  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  2539  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  2540  00E4  00B6               	movwf	??_ints_isr+2
  2541  00E5  01B7               	clrf	??_ints_isr+3
  2542  00E6  0836               	movf	??_ints_isr+2,w
  2543  00E7  00CB               	movwf	ints_isr@aux
  2544  00E8  0837               	movf	??_ints_isr+3,w
  2545  00E9  00CC               	movwf	ints_isr@aux+1
  2546                           
  2547                           ;panda17.c: 81: aux = aux << 8;
  2548  00EA  084B               	movf	ints_isr@aux,w
  2549  00EB  00B5               	movwf	??_ints_isr+1
  2550  00EC  01B4               	clrf	??_ints_isr
  2551  00ED  0834               	movf	??_ints_isr,w
  2552  00EE  00CB               	movwf	ints_isr@aux
  2553  00EF  0835               	movf	??_ints_isr+1,w
  2554  00F0  00CC               	movwf	ints_isr@aux+1
  2555                           
  2556                           ;panda17.c: 82: aux += mem_read(2*n+0x7FF8);
  2557  00F1  0852               	movf	ints_isr@n+1,w
  2558  00F2  00B5               	movwf	??_ints_isr+1
  2559  00F3  0851               	movf	ints_isr@n,w
  2560  00F4  00B4               	movwf	??_ints_isr
  2561  00F5  1003               	clrc
  2562  00F6  0DB4               	rlf	??_ints_isr,f
  2563  00F7  0DB5               	rlf	??_ints_isr+1,f
  2564  00F8  0834               	movf	??_ints_isr,w
  2565  00F9  3EF8               	addlw	248
  2566  00FA  00FA               	movwf	i1mem_read@add
  2567  00FB  0835               	movf	??_ints_isr+1,w
  2568  00FC  1803               	skipnc
  2569  00FD  3E01               	addlw	1
  2570  00FE  3E7F               	addlw	127
  2571  00FF  00FB               	movwf	i1mem_read@add+1
  2572  0100  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  2573  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0106  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0107  00B6               	movwf	??_ints_isr+2
  2576  0108  01B7               	clrf	??_ints_isr+3
  2577  0109  0836               	movf	??_ints_isr+2,w
  2578  010A  07CB               	addwf	ints_isr@aux,f
  2579  010B  1803               	skipnc
  2580  010C  0ACC               	incf	ints_isr@aux+1,f
  2581  010D  0837               	movf	??_ints_isr+3,w
  2582  010E  07CC               	addwf	ints_isr@aux+1,f
  2583                           
  2584                           ;panda17.c: 83: printf("%04x\r\n",aux);
  2585  010F  084C               	movf	ints_isr@aux+1,w
  2586  0110  00A5               	movwf	?_printf+1
  2587  0111  084B               	movf	ints_isr@aux,w
  2588  0112  00A4               	movwf	?_printf
  2589  0113  303D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2590  0114  120A  118A  2533  120A  118A  	fcall	_printf
  2591  0119  3001               	movlw	1
  2592  011A  1283               	bcf	3,5	;RP0=0, select bank0
  2593  011B  1303               	bcf	3,6	;RP1=0, select bank0
  2594  011C  07D1               	addwf	ints_isr@n,f
  2595  011D  1803               	skipnc
  2596  011E  0AD2               	incf	ints_isr@n+1,f
  2597  011F  3000               	movlw	0
  2598  0120  07D2               	addwf	ints_isr@n+1,f
  2599  0121  2879               	goto	i1l2055
  2600  0122                     i1l2057:	
  2601                           
  2602                           ;panda17.c: 84: }
  2603                           ;panda17.c: 85: printf("Z%x",mem_read(0x0003));
  2604  0122  3003               	movlw	3
  2605  0123  00FA               	movwf	i1mem_read@add
  2606  0124  3000               	movlw	0
  2607  0125  00FB               	movwf	i1mem_read@add+1
  2608  0126  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  2609  012B  1283               	bcf	3,5	;RP0=0, select bank0
  2610  012C  1303               	bcf	3,6	;RP1=0, select bank0
  2611  012D  00B4               	movwf	??_ints_isr
  2612  012E  01B5               	clrf	??_ints_isr+1
  2613  012F  0834               	movf	??_ints_isr,w
  2614  0130  00A4               	movwf	?_printf
  2615  0131  0835               	movf	??_ints_isr+1,w
  2616  0132  00A5               	movwf	?_printf+1
  2617  0133  3054               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2618  0134  120A  118A  2533  120A  118A  	fcall	_printf
  2619                           
  2620                           ;panda17.c: 86: dt = mem_read(0x0003);
  2621  0139  3003               	movlw	3
  2622  013A  00FA               	movwf	i1mem_read@add
  2623  013B  3000               	movlw	0
  2624  013C  00FB               	movwf	i1mem_read@add+1
  2625  013D  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  2626  0142  1283               	bcf	3,5	;RP0=0, select bank0
  2627  0143  1303               	bcf	3,6	;RP1=0, select bank0
  2628  0144  00B4               	movwf	??_ints_isr
  2629  0145  0834               	movf	??_ints_isr,w
  2630  0146  00BF               	movwf	ints_isr@dt
  2631                           
  2632                           ;panda17.c: 87: for (n=0;n<dt;n++){
  2633  0147  01D1               	clrf	ints_isr@n
  2634  0148  01D2               	clrf	ints_isr@n+1
  2635  0149                     i1l95:	
  2636  0149  083F               	movf	ints_isr@dt,w
  2637  014A  00B4               	movwf	??_ints_isr
  2638  014B  01B5               	clrf	??_ints_isr+1
  2639  014C  0835               	movf	??_ints_isr+1,w
  2640  014D  0252               	subwf	ints_isr@n+1,w
  2641  014E  1D03               	skipz
  2642  014F  2952               	goto	u211_25
  2643  0150  0834               	movf	??_ints_isr,w
  2644  0151  0251               	subwf	ints_isr@n,w
  2645  0152                     u211_25:	
  2646  0152  1803               	btfsc	3,0
  2647  0153  299E               	goto	i1l2077
  2648                           
  2649                           ;panda17.c: 88: for ( unsigned char u;u<7;u++){
  2650  0154  3007               	movlw	7
  2651  0155  0244               	subwf	ints_isr@u,w
  2652  0156  1803               	btfsc	3,0
  2653  0157  2997               	goto	i1l2075
  2654  0158                     i1l2067:	
  2655                           
  2656                           ;panda17.c: 89: printf("%x",mem_read(0xFF74 + u + 7*n));
  2657  0158  0852               	movf	ints_isr@n+1,w
  2658  0159  00F1               	movwf	___wmul@multiplier+1
  2659  015A  0851               	movf	ints_isr@n,w
  2660  015B  00F0               	movwf	___wmul@multiplier
  2661  015C  3007               	movlw	7
  2662  015D  00F2               	movwf	___wmul@multiplicand
  2663  015E  3000               	movlw	0
  2664  015F  00F3               	movwf	___wmul@multiplicand+1
  2665  0160  120A  158A  22E8  120A  118A  	fcall	___wmul
  2666  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0166  1303               	bcf	3,6	;RP1=0, select bank0
  2668  0167  0844               	movf	ints_isr@u,w
  2669  0168  0770               	addwf	?___wmul,w
  2670  0169  00B4               	movwf	??_ints_isr
  2671  016A  0871               	movf	?___wmul+1,w
  2672  016B  1803               	skipnc
  2673  016C  0A71               	incf	?___wmul+1,w
  2674  016D  00B5               	movwf	??_ints_isr+1
  2675  016E  0834               	movf	??_ints_isr,w
  2676  016F  3E74               	addlw	116
  2677  0170  00FA               	movwf	i1mem_read@add
  2678  0171  0835               	movf	??_ints_isr+1,w
  2679  0172  1803               	skipnc
  2680  0173  3E01               	addlw	1
  2681  0174  3EFF               	addlw	255
  2682  0175  00FB               	movwf	i1mem_read@add+1
  2683  0176  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  2684  017B  1283               	bcf	3,5	;RP0=0, select bank0
  2685  017C  1303               	bcf	3,6	;RP1=0, select bank0
  2686  017D  00B6               	movwf	??_ints_isr+2
  2687  017E  01B7               	clrf	??_ints_isr+3
  2688  017F  0836               	movf	??_ints_isr+2,w
  2689  0180  00BC               	movwf	_ints_isr$1143
  2690  0181  0837               	movf	??_ints_isr+3,w
  2691  0182  00BD               	movwf	_ints_isr$1143+1
  2692                           
  2693                           ;panda17.c: 89: printf("%x",mem_read(0xFF74 + u + 7*n));
  2694  0183  083D               	movf	_ints_isr$1143+1,w
  2695  0184  00A5               	movwf	?_printf+1
  2696  0185  083C               	movf	_ints_isr$1143,w
  2697  0186  00A4               	movwf	?_printf
  2698  0187  3055               	movlw	(low (((STR_4+1)-__stringbase)| (0+32768)))& (0+255)
  2699  0188  120A  118A  2533  120A  118A  	fcall	_printf
  2700  018D  3001               	movlw	1
  2701  018E  1283               	bcf	3,5	;RP0=0, select bank0
  2702  018F  1303               	bcf	3,6	;RP1=0, select bank0
  2703  0190  00B4               	movwf	??_ints_isr
  2704  0191  0834               	movf	??_ints_isr,w
  2705  0192  07C4               	addwf	ints_isr@u,f
  2706  0193  3007               	movlw	7
  2707  0194  0244               	subwf	ints_isr@u,w
  2708  0195  1C03               	skipc
  2709  0196  2958               	goto	i1l2067
  2710  0197                     i1l2075:	
  2711  0197  3001               	movlw	1
  2712  0198  07D1               	addwf	ints_isr@n,f
  2713  0199  1803               	skipnc
  2714  019A  0AD2               	incf	ints_isr@n+1,f
  2715  019B  3000               	movlw	0
  2716  019C  07D2               	addwf	ints_isr@n+1,f
  2717  019D  2949               	goto	i1l95
  2718  019E                     i1l2077:	
  2719                           
  2720                           ;panda17.c: 90: }
  2721                           ;panda17.c: 91: }
  2722                           ;panda17.c: 92: printf("X");
  2723  019E  305B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2724  019F  120A  118A  2533  120A  118A  	fcall	_printf
  2725                           
  2726                           ;panda17.c: 93: PORTBbits.RB4 = 0;
  2727  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2728  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2729  01A6  1206               	bcf	6,4	;volatile
  2730                           
  2731                           ;panda17.c: 94: break;
  2732  01A7  2A63               	goto	i1l100
  2733  01A8                     i1l2081:	
  2734                           ;panda17.c: 95: case 'b':
  2735                           
  2736                           
  2737                           ;panda17.c: 96: for (unsigned char z = 0;z<7;z++){
  2738  01A8  01C7               	clrf	ints_isr@z
  2739  01A9  3007               	movlw	7
  2740  01AA  0247               	subwf	ints_isr@z,w
  2741  01AB  1803               	btfsc	3,0
  2742  01AC  29CC               	goto	i1l2095
  2743  01AD                     i1l104:	
  2744                           ;panda17.c: 97: while(!PIR1bits.RCIF);
  2745                           
  2746  01AD  1E8C               	btfss	12,5	;volatile
  2747  01AE  29AD               	goto	i1l104
  2748                           
  2749                           ;panda17.c: 98: ferr = RCSTAbits.FERR;
  2750  01AF  11DF               	bcf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2751  01B0  1918               	btfsc	24,2	;volatile
  2752  01B1  15DF               	bsf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2753                           
  2754                           ;panda17.c: 99: oerr = RCSTAbits.OERR;
  2755  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2756  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  2757  01B4  115F               	bcf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2758  01B5  1898               	btfsc	24,1	;volatile
  2759  01B6  155F               	bsf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2760                           
  2761                           ;panda17.c: 100: if (!ferr & !oerr){
  2762  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  2763  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  2764  01B9  1DDF               	btfss	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2765  01BA  195F               	btfsc	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2766  01BB  29C4               	goto	i1l2091
  2767                           
  2768                           ;panda17.c: 101: time[z] = RCREG;
  2769  01BC  081A               	movf	26,w	;volatile
  2770  01BD  00B4               	movwf	??_ints_isr
  2771  01BE  0847               	movf	ints_isr@z,w
  2772  01BF  3E58               	addlw	(low (_time| 0))& (0+255)
  2773  01C0  0084               	movwf	4
  2774  01C1  0834               	movf	??_ints_isr,w
  2775  01C2  1383               	bcf	3,7	;select IRP bank0
  2776  01C3  0080               	movwf	0
  2777  01C4                     i1l2091:	
  2778  01C4  3001               	movlw	1
  2779  01C5  00B4               	movwf	??_ints_isr
  2780  01C6  0834               	movf	??_ints_isr,w
  2781  01C7  07C7               	addwf	ints_isr@z,f
  2782  01C8  3007               	movlw	7
  2783  01C9  0247               	subwf	ints_isr@z,w
  2784  01CA  1C03               	skipc
  2785  01CB  29AD               	goto	i1l104
  2786  01CC                     i1l2095:	
  2787                           
  2788                           ;panda17.c: 102: }
  2789                           ;panda17.c: 103: }
  2790                           ;panda17.c: 104: ds_set(time);
  2791  01CC  3058               	movlw	(low (_time| 0))& (0+255)
  2792  01CD  120A  158A  2473  120A  118A  	fcall	_ds_set
  2793                           
  2794                           ;panda17.c: 105: break;
  2795  01D2  2A63               	goto	i1l100
  2796  01D3                     i1l108:	
  2797                           ;panda17.c: 106: case 'c':
  2798                           
  2799                           
  2800                           ;panda17.c: 107: PORTBbits.RB4 = 1;
  2801  01D3  1606               	bsf	6,4	;volatile
  2802                           
  2803                           ;panda17.c: 108: mem_write(0x0002,0x00);
  2804  01D4  3002               	movlw	2
  2805  01D5  00A3               	movwf	i1mem_write@add
  2806  01D6  3000               	movlw	0
  2807  01D7  00A4               	movwf	i1mem_write@add+1
  2808  01D8  01A5               	clrf	i1mem_write@data
  2809  01D9  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  2810                           
  2811                           ;panda17.c: 109: mem_init();
  2812  01DE  120A  158A  26ED  120A  118A  	fcall	i1_mem_init
  2813                           
  2814                           ;panda17.c: 110: PORTBbits.RB4 = 0;
  2815  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2816  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2817  01E5  1206               	bcf	6,4	;volatile
  2818                           
  2819                           ;panda17.c: 111: if ((mem_read(0x0002) == 0xAA) && (mem_read(0x000D) == 0x00)){
  2820  01E6  3002               	movlw	2
  2821  01E7  00FA               	movwf	i1mem_read@add
  2822  01E8  3000               	movlw	0
  2823  01E9  00FB               	movwf	i1mem_read@add+1
  2824  01EA  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  2825  01EF  3AAA               	xorlw	170
  2826  01F0  1D03               	skipz
  2827  01F1  2A63               	goto	i1l100
  2828  01F2  300D               	movlw	13
  2829  01F3  00FA               	movwf	i1mem_read@add
  2830  01F4  3000               	movlw	0
  2831  01F5  00FB               	movwf	i1mem_read@add+1
  2832  01F6  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  2833  01FB  3A00               	xorlw	0
  2834  01FC  1D03               	skipz
  2835  01FD  2A63               	goto	i1l100
  2836                           
  2837                           ;panda17.c: 112: printf("OK");
  2838  01FE  3058               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2839  01FF  120A  118A  2533  120A  118A  	fcall	_printf
  2840                           
  2841                           ;panda17.c: 113: }
  2842                           ;panda17.c: 114: break;
  2843  0204  2A63               	goto	i1l100
  2844  0205                     i1l2105:	
  2845                           ;panda17.c: 115: case 'd':
  2846                           
  2847                           
  2848                           ;panda17.c: 116: for (unsigned char k=0;k<7;k++){
  2849  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2850  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2851  0207  01C8               	clrf	ints_isr@k
  2852  0208                     L2:	
  2853  0208  3007               	movlw	7
  2854  0209  0248               	subwf	ints_isr@k,w
  2855  020A  1803               	btfsc	3,0
  2856  020B  2A63               	goto	i1l100
  2857                           
  2858                           ;panda17.c: 117: printf("%X ",ds_get(k));
  2859  020C  0848               	movf	ints_isr@k,w
  2860  020D  120A  158A  23DD  120A  118A  	fcall	_ds_get
  2861  0212  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0213  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0214  00B4               	movwf	??_ints_isr
  2864  0215  01B5               	clrf	??_ints_isr+1
  2865  0216  0834               	movf	??_ints_isr,w
  2866  0217  00A4               	movwf	?_printf
  2867  0218  0835               	movf	??_ints_isr+1,w
  2868  0219  00A5               	movwf	?_printf+1
  2869  021A  3050               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2870  021B  120A  118A  2533  120A  118A  	fcall	_printf
  2871  0220  3001               	movlw	1
  2872  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2873  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2874  0223  00B4               	movwf	??_ints_isr
  2875  0224  0834               	movf	??_ints_isr,w
  2876  0225  07C8               	addwf	ints_isr@k,f
  2877  0226  2A08               	goto	L2
  2878  0227                     i1l2117:	
  2879                           ;panda17.c: 120: case 'm':
  2880                           
  2881                           ;panda17.c: 118: }
  2882                           ;panda17.c: 119: break;
  2883                           
  2884                           
  2885                           ;panda17.c: 121: printf("I%04x;",si_read_h());
  2886  0227  120A  158A  27A3  120A  118A  	fcall	_si_read_h
  2887  022C  087B               	movf	?_si_read_h+1,w
  2888  022D  1283               	bcf	3,5	;RP0=0, select bank0
  2889  022E  1303               	bcf	3,6	;RP1=0, select bank0
  2890  022F  00A5               	movwf	?_printf+1
  2891  0230  087A               	movf	?_si_read_h,w
  2892  0231  00A4               	movwf	?_printf
  2893  0232  3044               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2894  0233  120A  118A  2533  120A  118A  	fcall	_printf
  2895                           
  2896                           ;panda17.c: 122: printf("%04x",si_read_t());
  2897  0238  120A  158A  263A  120A  118A  	fcall	_si_read_t
  2898  023D  087B               	movf	?_si_read_t+1,w
  2899  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2900  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2901  0240  00A5               	movwf	?_printf+1
  2902  0241  087A               	movf	?_si_read_t,w
  2903  0242  00A4               	movwf	?_printf
  2904  0243  304B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2905  0244  120A  118A  2533  120A  118A  	fcall	_printf
  2906                           
  2907                           ;panda17.c: 123: printf("X");
  2908  0249  305B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2909  024A  120A  118A  2533  120A  118A  	fcall	_printf
  2910                           
  2911                           ;panda17.c: 126: }
  2912                           
  2913                           ;panda17.c: 124: break;
  2914  024F  2A63               	goto	i1l100
  2915  0250                     i1l2121:	
  2916  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0252  083E               	movf	ints_isr@rcv,w
  2919                           
  2920                           ; Switch size 1, requested type "space"
  2921                           ; Number of cases is 5, Range of values is 97 to 109
  2922                           ; switch strategies available:
  2923                           ; Name         Instructions Cycles
  2924                           ; simple_byte           16     9 (average)
  2925                           ; direct_byte           50    11 (fixed)
  2926                           ; jumptable            263     9 (fixed)
  2927                           ;	Chosen strategy is simple_byte
  2928  0253  3A61               	xorlw	97	; case 97
  2929  0254  1903               	skipnz
  2930  0255  283E               	goto	i1l91
  2931  0256  3A03               	xorlw	3	; case 98
  2932  0257  1903               	skipnz
  2933  0258  29A8               	goto	i1l2081
  2934  0259  3A01               	xorlw	1	; case 99
  2935  025A  1903               	skipnz
  2936  025B  29D3               	goto	i1l108
  2937  025C  3A07               	xorlw	7	; case 100
  2938  025D  1903               	skipnz
  2939  025E  2A05               	goto	i1l2105
  2940  025F  3A09               	xorlw	9	; case 109
  2941  0260  1903               	skipnz
  2942  0261  2A27               	goto	i1l2117
  2943  0262  2A63               	goto	i1l100
  2944  0263                     i1l100:	
  2945                           
  2946                           ;panda17.c: 127: INTCONbits.GIE = 1;
  2947  0263  178B               	bsf	11,7	;volatile
  2948  0264                     i1l84:	
  2949                           
  2950                           ;panda17.c: 128: }
  2951                           ;panda17.c: 132: if (PIR1bits.TMR2IF){
  2952  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2953  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2954  0266  1C8C               	btfss	12,1	;volatile
  2955  0267  2D26               	goto	i1l121
  2956                           
  2957                           ;panda17.c: 133: PIR1bits.TMR2IF = 0;
  2958  0268  108C               	bcf	12,1	;volatile
  2959                           
  2960                           ;panda17.c: 134: INTCONbits.GIE = 0;
  2961  0269  138B               	bcf	11,7	;volatile
  2962                           
  2963                           ;panda17.c: 135: if (!PORTBbits.RB2){
  2964  026A  1906               	btfsc	6,2	;volatile
  2965  026B  2A73               	goto	i1l2131
  2966                           
  2967                           ;panda17.c: 136: led = 5;
  2968  026C  3005               	movlw	5
  2969  026D  00B4               	movwf	??_ints_isr
  2970  026E  0834               	movf	??_ints_isr,w
  2971  026F  00E0               	movwf	_led
  2972                           
  2973                           ;panda17.c: 137: milis = 0;
  2974  0270  01D7               	clrf	_milis
  2975                           
  2976                           ;panda17.c: 138: secs = 0;
  2977  0271  01D5               	clrf	_secs
  2978  0272  01D6               	clrf	_secs+1
  2979  0273                     i1l2131:	
  2980                           
  2981                           ;panda17.c: 139: }
  2982                           ;panda17.c: 140: if (PORTBbits.RB2){
  2983  0273  1D06               	btfss	6,2	;volatile
  2984  0274  2D25               	goto	i1l2207
  2985                           
  2986                           ;panda17.c: 141: milis++;
  2987  0275  3001               	movlw	1
  2988  0276  00B4               	movwf	??_ints_isr
  2989  0277  0834               	movf	??_ints_isr,w
  2990  0278  07D7               	addwf	_milis,f
  2991                           
  2992                           ;panda17.c: 142: if(milis > 24){
  2993  0279  3019               	movlw	25
  2994  027A  0257               	subwf	_milis,w
  2995  027B  1C03               	skipc
  2996  027C  2D25               	goto	i1l2207
  2997                           
  2998                           ;panda17.c: 143: if (led > 0){
  2999  027D  0860               	movf	_led,w
  3000  027E  1903               	btfsc	3,2
  3001  027F  2BE3               	goto	i1l118
  3002                           
  3003                           ;panda17.c: 144: if (led == 5){
  3004  0280  3005               	movlw	5
  3005  0281  0660               	xorwf	_led,w
  3006  0282  1D03               	btfss	3,2
  3007  0283  2BDD               	goto	i1l2147
  3008                           
  3009                           ;panda17.c: 145: unsigned char o;
  3010                           ;panda17.c: 146: o = mem_read(0x0003);
  3011  0284  3003               	movlw	3
  3012  0285  00FA               	movwf	i1mem_read@add
  3013  0286  3000               	movlw	0
  3014  0287  00FB               	movwf	i1mem_read@add+1
  3015  0288  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  3016  028D  1283               	bcf	3,5	;RP0=0, select bank0
  3017  028E  1303               	bcf	3,6	;RP1=0, select bank0
  3018  028F  00B4               	movwf	??_ints_isr
  3019  0290  0834               	movf	??_ints_isr,w
  3020  0291  00D3               	movwf	ints_isr@o
  3021                           
  3022                           ;panda17.c: 147: mem_write(0xFF74 + 7*o,ds_get(0x01));
  3023  0292  0853               	movf	ints_isr@o,w
  3024  0293  00B4               	movwf	??_ints_isr
  3025  0294  01B5               	clrf	??_ints_isr+1
  3026  0295  0834               	movf	??_ints_isr,w
  3027  0296  00F0               	movwf	___wmul@multiplier
  3028  0297  0835               	movf	??_ints_isr+1,w
  3029  0298  00F1               	movwf	___wmul@multiplier+1
  3030  0299  3007               	movlw	7
  3031  029A  00F2               	movwf	___wmul@multiplicand
  3032  029B  3000               	movlw	0
  3033  029C  00F3               	movwf	___wmul@multiplicand+1
  3034  029D  120A  158A  22E8  120A  118A  	fcall	___wmul
  3035  02A2  0870               	movf	?___wmul,w
  3036  02A3  3E74               	addlw	116
  3037  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  3038  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  3039  02A6  00A3               	movwf	i1mem_write@add
  3040  02A7  0871               	movf	?___wmul+1,w
  3041  02A8  1803               	skipnc
  3042  02A9  3E01               	addlw	1
  3043  02AA  3EFF               	addlw	255
  3044  02AB  00A4               	movwf	i1mem_write@add+1
  3045  02AC  3001               	movlw	1
  3046  02AD  120A  158A  23DD  120A  118A  	fcall	_ds_get
  3047  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  3048  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  3049  02B4  00B6               	movwf	??_ints_isr+2
  3050  02B5  0836               	movf	??_ints_isr+2,w
  3051  02B6  00A5               	movwf	i1mem_write@data
  3052  02B7  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3053                           
  3054                           ;panda17.c: 148: mem_write(0xFF75 + 7*o,ds_get(0x02));
  3055  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3056  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  3057  02BE  0853               	movf	ints_isr@o,w
  3058  02BF  00B4               	movwf	??_ints_isr
  3059  02C0  01B5               	clrf	??_ints_isr+1
  3060  02C1  0834               	movf	??_ints_isr,w
  3061  02C2  00F0               	movwf	___wmul@multiplier
  3062  02C3  0835               	movf	??_ints_isr+1,w
  3063  02C4  00F1               	movwf	___wmul@multiplier+1
  3064  02C5  3007               	movlw	7
  3065  02C6  00F2               	movwf	___wmul@multiplicand
  3066  02C7  3000               	movlw	0
  3067  02C8  00F3               	movwf	___wmul@multiplicand+1
  3068  02C9  120A  158A  22E8  120A  118A  	fcall	___wmul
  3069  02CE  0870               	movf	?___wmul,w
  3070  02CF  3E75               	addlw	117
  3071  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  3072  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  3073  02D2  00A3               	movwf	i1mem_write@add
  3074  02D3  0871               	movf	?___wmul+1,w
  3075  02D4  1803               	skipnc
  3076  02D5  3E01               	addlw	1
  3077  02D6  3EFF               	addlw	255
  3078  02D7  00A4               	movwf	i1mem_write@add+1
  3079  02D8  3002               	movlw	2
  3080  02D9  120A  158A  23DD  120A  118A  	fcall	_ds_get
  3081  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  3082  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  3083  02E0  00B6               	movwf	??_ints_isr+2
  3084  02E1  0836               	movf	??_ints_isr+2,w
  3085  02E2  00A5               	movwf	i1mem_write@data
  3086  02E3  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3087                           
  3088                           ;panda17.c: 149: mem_write(0xFF76 + 7*o,ds_get(0x04));
  3089  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  3090  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  3091  02EA  0853               	movf	ints_isr@o,w
  3092  02EB  00B4               	movwf	??_ints_isr
  3093  02EC  01B5               	clrf	??_ints_isr+1
  3094  02ED  0834               	movf	??_ints_isr,w
  3095  02EE  00F0               	movwf	___wmul@multiplier
  3096  02EF  0835               	movf	??_ints_isr+1,w
  3097  02F0  00F1               	movwf	___wmul@multiplier+1
  3098  02F1  3007               	movlw	7
  3099  02F2  00F2               	movwf	___wmul@multiplicand
  3100  02F3  3000               	movlw	0
  3101  02F4  00F3               	movwf	___wmul@multiplicand+1
  3102  02F5  120A  158A  22E8  120A  118A  	fcall	___wmul
  3103  02FA  0870               	movf	?___wmul,w
  3104  02FB  3E76               	addlw	118
  3105  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  3106  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  3107  02FE  00A3               	movwf	i1mem_write@add
  3108  02FF  0871               	movf	?___wmul+1,w
  3109  0300  1803               	skipnc
  3110  0301  3E01               	addlw	1
  3111  0302  3EFF               	addlw	255
  3112  0303  00A4               	movwf	i1mem_write@add+1
  3113  0304  3004               	movlw	4
  3114  0305  120A  158A  23DD  120A  118A  	fcall	_ds_get
  3115  030A  1283               	bcf	3,5	;RP0=0, select bank0
  3116  030B  1303               	bcf	3,6	;RP1=0, select bank0
  3117  030C  00B6               	movwf	??_ints_isr+2
  3118  030D  0836               	movf	??_ints_isr+2,w
  3119  030E  00A5               	movwf	i1mem_write@data
  3120  030F  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3121                           
  3122                           ;panda17.c: 150: mem_write(0xFF77 + 7*o,ds_get(0x05));
  3123  0314  1283               	bcf	3,5	;RP0=0, select bank0
  3124  0315  1303               	bcf	3,6	;RP1=0, select bank0
  3125  0316  0853               	movf	ints_isr@o,w
  3126  0317  00B4               	movwf	??_ints_isr
  3127  0318  01B5               	clrf	??_ints_isr+1
  3128  0319  0834               	movf	??_ints_isr,w
  3129  031A  00F0               	movwf	___wmul@multiplier
  3130  031B  0835               	movf	??_ints_isr+1,w
  3131  031C  00F1               	movwf	___wmul@multiplier+1
  3132  031D  3007               	movlw	7
  3133  031E  00F2               	movwf	___wmul@multiplicand
  3134  031F  3000               	movlw	0
  3135  0320  00F3               	movwf	___wmul@multiplicand+1
  3136  0321  120A  158A  22E8  120A  118A  	fcall	___wmul
  3137  0326  0870               	movf	?___wmul,w
  3138  0327  3E77               	addlw	119
  3139  0328  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0329  1303               	bcf	3,6	;RP1=0, select bank0
  3141  032A  00A3               	movwf	i1mem_write@add
  3142  032B  0871               	movf	?___wmul+1,w
  3143  032C  1803               	skipnc
  3144  032D  3E01               	addlw	1
  3145  032E  3EFF               	addlw	255
  3146  032F  00A4               	movwf	i1mem_write@add+1
  3147  0330  3005               	movlw	5
  3148  0331  120A  158A  23DD  120A  118A  	fcall	_ds_get
  3149  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0338  00B6               	movwf	??_ints_isr+2
  3152  0339  0836               	movf	??_ints_isr+2,w
  3153  033A  00A5               	movwf	i1mem_write@data
  3154  033B  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3155                           
  3156                           ;panda17.c: 151: mem_write(0xFF78 + 7*o,ds_get(0x06));
  3157  0340  1283               	bcf	3,5	;RP0=0, select bank0
  3158  0341  1303               	bcf	3,6	;RP1=0, select bank0
  3159  0342  0853               	movf	ints_isr@o,w
  3160  0343  00B4               	movwf	??_ints_isr
  3161  0344  01B5               	clrf	??_ints_isr+1
  3162  0345  0834               	movf	??_ints_isr,w
  3163  0346  00F0               	movwf	___wmul@multiplier
  3164  0347  0835               	movf	??_ints_isr+1,w
  3165  0348  00F1               	movwf	___wmul@multiplier+1
  3166  0349  3007               	movlw	7
  3167  034A  00F2               	movwf	___wmul@multiplicand
  3168  034B  3000               	movlw	0
  3169  034C  00F3               	movwf	___wmul@multiplicand+1
  3170  034D  120A  158A  22E8  120A  118A  	fcall	___wmul
  3171  0352  0870               	movf	?___wmul,w
  3172  0353  3E78               	addlw	120
  3173  0354  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0355  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0356  00A3               	movwf	i1mem_write@add
  3176  0357  0871               	movf	?___wmul+1,w
  3177  0358  1803               	skipnc
  3178  0359  3E01               	addlw	1
  3179  035A  3EFF               	addlw	255
  3180  035B  00A4               	movwf	i1mem_write@add+1
  3181  035C  3006               	movlw	6
  3182  035D  120A  158A  23DD  120A  118A  	fcall	_ds_get
  3183  0362  1283               	bcf	3,5	;RP0=0, select bank0
  3184  0363  1303               	bcf	3,6	;RP1=0, select bank0
  3185  0364  00B6               	movwf	??_ints_isr+2
  3186  0365  0836               	movf	??_ints_isr+2,w
  3187  0366  00A5               	movwf	i1mem_write@data
  3188  0367  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3189                           
  3190                           ;panda17.c: 152: mem_write(0xFF79 + 7*o,mem_read(0x000A));
  3191  036C  1283               	bcf	3,5	;RP0=0, select bank0
  3192  036D  1303               	bcf	3,6	;RP1=0, select bank0
  3193  036E  0853               	movf	ints_isr@o,w
  3194  036F  00B4               	movwf	??_ints_isr
  3195  0370  01B5               	clrf	??_ints_isr+1
  3196  0371  0834               	movf	??_ints_isr,w
  3197  0372  00F0               	movwf	___wmul@multiplier
  3198  0373  0835               	movf	??_ints_isr+1,w
  3199  0374  00F1               	movwf	___wmul@multiplier+1
  3200  0375  3007               	movlw	7
  3201  0376  00F2               	movwf	___wmul@multiplicand
  3202  0377  3000               	movlw	0
  3203  0378  00F3               	movwf	___wmul@multiplicand+1
  3204  0379  120A  158A  22E8  120A  118A  	fcall	___wmul
  3205  037E  0870               	movf	?___wmul,w
  3206  037F  3E79               	addlw	121
  3207  0380  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0381  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0382  00A3               	movwf	i1mem_write@add
  3210  0383  0871               	movf	?___wmul+1,w
  3211  0384  1803               	skipnc
  3212  0385  3E01               	addlw	1
  3213  0386  3EFF               	addlw	255
  3214  0387  00A4               	movwf	i1mem_write@add+1
  3215  0388  300A               	movlw	10
  3216  0389  00FA               	movwf	i1mem_read@add
  3217  038A  3000               	movlw	0
  3218  038B  00FB               	movwf	i1mem_read@add+1
  3219  038C  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  3220  0391  1283               	bcf	3,5	;RP0=0, select bank0
  3221  0392  1303               	bcf	3,6	;RP1=0, select bank0
  3222  0393  00B6               	movwf	??_ints_isr+2
  3223  0394  0836               	movf	??_ints_isr+2,w
  3224  0395  00A5               	movwf	i1mem_write@data
  3225  0396  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3226                           
  3227                           ;panda17.c: 153: mem_write(0xFF7A + 7*o,mem_read(0x000B));
  3228  039B  1283               	bcf	3,5	;RP0=0, select bank0
  3229  039C  1303               	bcf	3,6	;RP1=0, select bank0
  3230  039D  0853               	movf	ints_isr@o,w
  3231  039E  00B4               	movwf	??_ints_isr
  3232  039F  01B5               	clrf	??_ints_isr+1
  3233  03A0  0834               	movf	??_ints_isr,w
  3234  03A1  00F0               	movwf	___wmul@multiplier
  3235  03A2  0835               	movf	??_ints_isr+1,w
  3236  03A3  00F1               	movwf	___wmul@multiplier+1
  3237  03A4  3007               	movlw	7
  3238  03A5  00F2               	movwf	___wmul@multiplicand
  3239  03A6  3000               	movlw	0
  3240  03A7  00F3               	movwf	___wmul@multiplicand+1
  3241  03A8  120A  158A  22E8  120A  118A  	fcall	___wmul
  3242  03AD  0870               	movf	?___wmul,w
  3243  03AE  3E7A               	addlw	122
  3244  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  3245  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  3246  03B1  00A3               	movwf	i1mem_write@add
  3247  03B2  0871               	movf	?___wmul+1,w
  3248  03B3  1803               	skipnc
  3249  03B4  3E01               	addlw	1
  3250  03B5  3EFF               	addlw	255
  3251  03B6  00A4               	movwf	i1mem_write@add+1
  3252  03B7  300B               	movlw	11
  3253  03B8  00FA               	movwf	i1mem_read@add
  3254  03B9  3000               	movlw	0
  3255  03BA  00FB               	movwf	i1mem_read@add+1
  3256  03BB  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  3257  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  3258  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  3259  03C2  00B6               	movwf	??_ints_isr+2
  3260  03C3  0836               	movf	??_ints_isr+2,w
  3261  03C4  00A5               	movwf	i1mem_write@data
  3262  03C5  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3263                           
  3264                           ;panda17.c: 154: o++;
  3265  03CA  3001               	movlw	1
  3266  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3267  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  3268  03CD  00B4               	movwf	??_ints_isr
  3269  03CE  0834               	movf	??_ints_isr,w
  3270  03CF  07D3               	addwf	ints_isr@o,f
  3271                           
  3272                           ;panda17.c: 155: mem_write(0x0003,o);
  3273  03D0  3003               	movlw	3
  3274  03D1  00A3               	movwf	i1mem_write@add
  3275  03D2  3000               	movlw	0
  3276  03D3  00A4               	movwf	i1mem_write@add+1
  3277  03D4  0853               	movf	ints_isr@o,w
  3278  03D5  00B4               	movwf	??_ints_isr
  3279  03D6  0834               	movf	??_ints_isr,w
  3280  03D7  00A5               	movwf	i1mem_write@data
  3281  03D8  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3282  03DD                     i1l2147:	
  3283                           
  3284                           ;panda17.c: 156: }
  3285                           ;panda17.c: 157: PORTBbits.RB4 = 1;
  3286  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  3287  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  3288  03DF  1606               	bsf	6,4	;volatile
  3289                           
  3290                           ;panda17.c: 158: led--;
  3291  03E0  3001               	movlw	1
  3292  03E1  02E0               	subwf	_led,f
  3293                           
  3294                           ;panda17.c: 159: }
  3295  03E2  2BE4               	goto	i1l2149
  3296  03E3                     i1l118:	
  3297                           
  3298                           ;panda17.c: 160: else {
  3299                           ;panda17.c: 161: PORTBbits.RB4 = 0;
  3300  03E3  1206               	bcf	6,4	;volatile
  3301  03E4                     i1l2149:	
  3302                           
  3303                           ;panda17.c: 162: }
  3304                           ;panda17.c: 163: secs++;
  3305  03E4  3001               	movlw	1
  3306  03E5  07D5               	addwf	_secs,f
  3307  03E6  1803               	skipnc
  3308  03E7  0AD6               	incf	_secs+1,f
  3309  03E8  3000               	movlw	0
  3310  03E9  07D6               	addwf	_secs+1,f
  3311                           
  3312                           ;panda17.c: 164: milis = 0;
  3313  03EA  01D7               	clrf	_milis
  3314                           
  3315                           ;panda17.c: 166: secs = 0;
  3316  03EB  01D5               	clrf	_secs
  3317  03EC  01D6               	clrf	_secs+1
  3318                           
  3319                           ;panda17.c: 168: unsigned char arg;
  3320                           ;panda17.c: 169: unsigned int temp_add,hum_add,up;
  3321                           ;panda17.c: 170: unsigned int hum_val,temp_val;
  3322                           ;panda17.c: 172: hum_val = si_read_h();
  3323  03ED  120A  158A  27A3  120A  118A  	fcall	_si_read_h
  3324  03F2  087B               	movf	?_si_read_h+1,w
  3325  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  3326  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  3327  03F5  00C1               	movwf	ints_isr@hum_val+1
  3328  03F6  087A               	movf	?_si_read_h,w
  3329  03F7  00C0               	movwf	ints_isr@hum_val
  3330                           
  3331                           ;panda17.c: 173: temp_val = si_read_t();
  3332  03F8  120A  158A  263A  120A  118A  	fcall	_si_read_t
  3333  03FD  087B               	movf	?_si_read_t+1,w
  3334  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3335  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3336  0400  00C3               	movwf	ints_isr@temp_val+1
  3337  0401  087A               	movf	?_si_read_t,w
  3338  0402  00C2               	movwf	ints_isr@temp_val
  3339                           
  3340                           ;panda17.c: 175: hum_add = mem_read(0x000A);
  3341  0403  300A               	movlw	10
  3342  0404  00FA               	movwf	i1mem_read@add
  3343  0405  3000               	movlw	0
  3344  0406  00FB               	movwf	i1mem_read@add+1
  3345  0407  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  3346  040C  1283               	bcf	3,5	;RP0=0, select bank0
  3347  040D  1303               	bcf	3,6	;RP1=0, select bank0
  3348  040E  00B4               	movwf	??_ints_isr
  3349  040F  01B5               	clrf	??_ints_isr+1
  3350  0410  0834               	movf	??_ints_isr,w
  3351  0411  00CF               	movwf	ints_isr@hum_add
  3352  0412  0835               	movf	??_ints_isr+1,w
  3353  0413  00D0               	movwf	ints_isr@hum_add+1
  3354                           
  3355                           ;panda17.c: 176: hum_add = hum_add << 8;
  3356  0414  084F               	movf	ints_isr@hum_add,w
  3357  0415  00B5               	movwf	??_ints_isr+1
  3358  0416  01B4               	clrf	??_ints_isr
  3359  0417  0834               	movf	??_ints_isr,w
  3360  0418  00CF               	movwf	ints_isr@hum_add
  3361  0419  0835               	movf	??_ints_isr+1,w
  3362  041A  00D0               	movwf	ints_isr@hum_add+1
  3363                           
  3364                           ;panda17.c: 177: hum_add += mem_read(0x000B);
  3365  041B  300B               	movlw	11
  3366  041C  00FA               	movwf	i1mem_read@add
  3367  041D  3000               	movlw	0
  3368  041E  00FB               	movwf	i1mem_read@add+1
  3369  041F  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  3370  0424  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0425  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0426  00B4               	movwf	??_ints_isr
  3373  0427  01B5               	clrf	??_ints_isr+1
  3374  0428  0834               	movf	??_ints_isr,w
  3375  0429  07CF               	addwf	ints_isr@hum_add,f
  3376  042A  1803               	skipnc
  3377  042B  0AD0               	incf	ints_isr@hum_add+1,f
  3378  042C  0835               	movf	??_ints_isr+1,w
  3379  042D  07D0               	addwf	ints_isr@hum_add+1,f
  3380                           
  3381                           ;panda17.c: 178: up = hum_add + 1;
  3382  042E  084F               	movf	ints_isr@hum_add,w
  3383  042F  3E01               	addlw	1
  3384  0430  00C9               	movwf	ints_isr@up
  3385  0431  0850               	movf	ints_isr@hum_add+1,w
  3386  0432  1803               	skipnc
  3387  0433  3E01               	addlw	1
  3388  0434  3E00               	addlw	0
  3389  0435  00CA               	movwf	ints_isr@up+1
  3390                           
  3391                           ;panda17.c: 179: arg = up >> 8;
  3392  0436  084A               	movf	ints_isr@up+1,w
  3393  0437  00B4               	movwf	??_ints_isr
  3394  0438  0834               	movf	??_ints_isr,w
  3395  0439  00D4               	movwf	ints_isr@arg
  3396                           
  3397                           ;panda17.c: 180: mem_write(0x000A,arg);
  3398  043A  300A               	movlw	10
  3399  043B  00A3               	movwf	i1mem_write@add
  3400  043C  3000               	movlw	0
  3401  043D  00A4               	movwf	i1mem_write@add+1
  3402  043E  0854               	movf	ints_isr@arg,w
  3403  043F  00B4               	movwf	??_ints_isr
  3404  0440  0834               	movf	??_ints_isr,w
  3405  0441  00A5               	movwf	i1mem_write@data
  3406  0442  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3407                           
  3408                           ;panda17.c: 181: arg = up & 0x00FF;
  3409  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3410  0448  1303               	bcf	3,6	;RP1=0, select bank0
  3411  0449  0849               	movf	ints_isr@up,w
  3412  044A  00B4               	movwf	??_ints_isr
  3413  044B  0834               	movf	??_ints_isr,w
  3414  044C  00D4               	movwf	ints_isr@arg
  3415                           
  3416                           ;panda17.c: 182: mem_write(0x000B,arg);
  3417  044D  300B               	movlw	11
  3418  044E  00A3               	movwf	i1mem_write@add
  3419  044F  3000               	movlw	0
  3420  0450  00A4               	movwf	i1mem_write@add+1
  3421  0451  0854               	movf	ints_isr@arg,w
  3422  0452  00B4               	movwf	??_ints_isr
  3423  0453  0834               	movf	??_ints_isr,w
  3424  0454  00A5               	movwf	i1mem_write@data
  3425  0455  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3426                           
  3427                           ;panda17.c: 183: hum_add = (hum_add * 2) + 1 + 0x000F;
  3428  045A  1283               	bcf	3,5	;RP0=0, select bank0
  3429  045B  1303               	bcf	3,6	;RP1=0, select bank0
  3430  045C  0850               	movf	ints_isr@hum_add+1,w
  3431  045D  00B5               	movwf	??_ints_isr+1
  3432  045E  084F               	movf	ints_isr@hum_add,w
  3433  045F  00B4               	movwf	??_ints_isr
  3434  0460  1003               	clrc
  3435  0461  0DB4               	rlf	??_ints_isr,f
  3436  0462  0DB5               	rlf	??_ints_isr+1,f
  3437  0463  0834               	movf	??_ints_isr,w
  3438  0464  3E10               	addlw	16
  3439  0465  00CF               	movwf	ints_isr@hum_add
  3440  0466  0835               	movf	??_ints_isr+1,w
  3441  0467  1803               	skipnc
  3442  0468  3E01               	addlw	1
  3443  0469  3E00               	addlw	0
  3444  046A  00D0               	movwf	ints_isr@hum_add+1
  3445                           
  3446                           ;panda17.c: 184: temp_add = mem_read(0x000C);
  3447  046B  300C               	movlw	12
  3448  046C  00FA               	movwf	i1mem_read@add
  3449  046D  3000               	movlw	0
  3450  046E  00FB               	movwf	i1mem_read@add+1
  3451  046F  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  3452  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3453  0475  1303               	bcf	3,6	;RP1=0, select bank0
  3454  0476  00B4               	movwf	??_ints_isr
  3455  0477  01B5               	clrf	??_ints_isr+1
  3456  0478  0834               	movf	??_ints_isr,w
  3457  0479  00CD               	movwf	ints_isr@temp_add
  3458  047A  0835               	movf	??_ints_isr+1,w
  3459  047B  00CE               	movwf	ints_isr@temp_add+1
  3460                           
  3461                           ;panda17.c: 185: temp_add = temp_add << 8;
  3462  047C  084D               	movf	ints_isr@temp_add,w
  3463  047D  00B5               	movwf	??_ints_isr+1
  3464  047E  01B4               	clrf	??_ints_isr
  3465  047F  0834               	movf	??_ints_isr,w
  3466  0480  00CD               	movwf	ints_isr@temp_add
  3467  0481  0835               	movf	??_ints_isr+1,w
  3468  0482  00CE               	movwf	ints_isr@temp_add+1
  3469                           
  3470                           ;panda17.c: 186: temp_add += mem_read(0x000D);
  3471  0483  300D               	movlw	13
  3472  0484  00FA               	movwf	i1mem_read@add
  3473  0485  3000               	movlw	0
  3474  0486  00FB               	movwf	i1mem_read@add+1
  3475  0487  120A  158A  2515  120A  118A  	fcall	i1_mem_read
  3476  048C  1283               	bcf	3,5	;RP0=0, select bank0
  3477  048D  1303               	bcf	3,6	;RP1=0, select bank0
  3478  048E  00B4               	movwf	??_ints_isr
  3479  048F  01B5               	clrf	??_ints_isr+1
  3480  0490  0834               	movf	??_ints_isr,w
  3481  0491  07CD               	addwf	ints_isr@temp_add,f
  3482  0492  1803               	skipnc
  3483  0493  0ACE               	incf	ints_isr@temp_add+1,f
  3484  0494  0835               	movf	??_ints_isr+1,w
  3485  0495  07CE               	addwf	ints_isr@temp_add+1,f
  3486                           
  3487                           ;panda17.c: 187: up = temp_add + 1;
  3488  0496  084D               	movf	ints_isr@temp_add,w
  3489  0497  3E01               	addlw	1
  3490  0498  00C9               	movwf	ints_isr@up
  3491  0499  084E               	movf	ints_isr@temp_add+1,w
  3492  049A  1803               	skipnc
  3493  049B  3E01               	addlw	1
  3494  049C  3E00               	addlw	0
  3495  049D  00CA               	movwf	ints_isr@up+1
  3496                           
  3497                           ;panda17.c: 188: arg = up >> 8;
  3498  049E  084A               	movf	ints_isr@up+1,w
  3499  049F  00B4               	movwf	??_ints_isr
  3500  04A0  0834               	movf	??_ints_isr,w
  3501  04A1  00D4               	movwf	ints_isr@arg
  3502                           
  3503                           ;panda17.c: 189: mem_write(0x000C,arg);
  3504  04A2  300C               	movlw	12
  3505  04A3  00A3               	movwf	i1mem_write@add
  3506  04A4  3000               	movlw	0
  3507  04A5  00A4               	movwf	i1mem_write@add+1
  3508  04A6  0854               	movf	ints_isr@arg,w
  3509  04A7  00B4               	movwf	??_ints_isr
  3510  04A8  0834               	movf	??_ints_isr,w
  3511  04A9  00A5               	movwf	i1mem_write@data
  3512  04AA  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3513                           
  3514                           ;panda17.c: 190: arg = up & 0x00FF;
  3515  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  3516  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  3517  04B1  0849               	movf	ints_isr@up,w
  3518  04B2  00B4               	movwf	??_ints_isr
  3519  04B3  0834               	movf	??_ints_isr,w
  3520  04B4  00D4               	movwf	ints_isr@arg
  3521                           
  3522                           ;panda17.c: 191: mem_write(0x000D,arg);
  3523  04B5  300D               	movlw	13
  3524  04B6  00A3               	movwf	i1mem_write@add
  3525  04B7  3000               	movlw	0
  3526  04B8  00A4               	movwf	i1mem_write@add+1
  3527  04B9  0854               	movf	ints_isr@arg,w
  3528  04BA  00B4               	movwf	??_ints_isr
  3529  04BB  0834               	movf	??_ints_isr,w
  3530  04BC  00A5               	movwf	i1mem_write@data
  3531  04BD  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3532                           
  3533                           ;panda17.c: 192: temp_add = (temp_add * 2) + 1 + 0x7FF6;
  3534  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  3535  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  3536  04C4  084E               	movf	ints_isr@temp_add+1,w
  3537  04C5  00B5               	movwf	??_ints_isr+1
  3538  04C6  084D               	movf	ints_isr@temp_add,w
  3539  04C7  00B4               	movwf	??_ints_isr
  3540  04C8  1003               	clrc
  3541  04C9  0DB4               	rlf	??_ints_isr,f
  3542  04CA  0DB5               	rlf	??_ints_isr+1,f
  3543  04CB  0834               	movf	??_ints_isr,w
  3544  04CC  3EF7               	addlw	247
  3545  04CD  00CD               	movwf	ints_isr@temp_add
  3546  04CE  0835               	movf	??_ints_isr+1,w
  3547  04CF  1803               	skipnc
  3548  04D0  3E01               	addlw	1
  3549  04D1  3E7F               	addlw	127
  3550  04D2  00CE               	movwf	ints_isr@temp_add+1
  3551                           
  3552                           ;panda17.c: 194: arg = hum_val >> 8;
  3553  04D3  0841               	movf	ints_isr@hum_val+1,w
  3554  04D4  00B4               	movwf	??_ints_isr
  3555  04D5  0834               	movf	??_ints_isr,w
  3556  04D6  00D4               	movwf	ints_isr@arg
  3557                           
  3558                           ;panda17.c: 195: mem_write(hum_add,arg);
  3559  04D7  0850               	movf	ints_isr@hum_add+1,w
  3560  04D8  00A4               	movwf	i1mem_write@add+1
  3561  04D9  084F               	movf	ints_isr@hum_add,w
  3562  04DA  00A3               	movwf	i1mem_write@add
  3563  04DB  0854               	movf	ints_isr@arg,w
  3564  04DC  00B4               	movwf	??_ints_isr
  3565  04DD  0834               	movf	??_ints_isr,w
  3566  04DE  00A5               	movwf	i1mem_write@data
  3567  04DF  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3568                           
  3569                           ;panda17.c: 196: arg = hum_val & 0x00FF;
  3570  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3571  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  3572  04E6  0840               	movf	ints_isr@hum_val,w
  3573  04E7  00B4               	movwf	??_ints_isr
  3574  04E8  0834               	movf	??_ints_isr,w
  3575  04E9  00D4               	movwf	ints_isr@arg
  3576                           
  3577                           ;panda17.c: 197: mem_write(hum_add + 1,arg);
  3578  04EA  084F               	movf	ints_isr@hum_add,w
  3579  04EB  3E01               	addlw	1
  3580  04EC  00A3               	movwf	i1mem_write@add
  3581  04ED  0850               	movf	ints_isr@hum_add+1,w
  3582  04EE  1803               	skipnc
  3583  04EF  3E01               	addlw	1
  3584  04F0  3E00               	addlw	0
  3585  04F1  00A4               	movwf	i1mem_write@add+1
  3586  04F2  0854               	movf	ints_isr@arg,w
  3587  04F3  00B4               	movwf	??_ints_isr
  3588  04F4  0834               	movf	??_ints_isr,w
  3589  04F5  00A5               	movwf	i1mem_write@data
  3590  04F6  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3591                           
  3592                           ;panda17.c: 198: arg = (temp_val >> 8) & 0x00FF;
  3593  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  3594  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  3595  04FD  0843               	movf	ints_isr@temp_val+1,w
  3596  04FE  00B4               	movwf	??_ints_isr
  3597  04FF  0834               	movf	??_ints_isr,w
  3598  0500  00D4               	movwf	ints_isr@arg
  3599                           
  3600                           ;panda17.c: 199: mem_write(temp_add,arg);
  3601  0501  084E               	movf	ints_isr@temp_add+1,w
  3602  0502  00A4               	movwf	i1mem_write@add+1
  3603  0503  084D               	movf	ints_isr@temp_add,w
  3604  0504  00A3               	movwf	i1mem_write@add
  3605  0505  0854               	movf	ints_isr@arg,w
  3606  0506  00B4               	movwf	??_ints_isr
  3607  0507  0834               	movf	??_ints_isr,w
  3608  0508  00A5               	movwf	i1mem_write@data
  3609  0509  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3610                           
  3611                           ;panda17.c: 200: arg = temp_val & 0x00FF;
  3612  050E  1283               	bcf	3,5	;RP0=0, select bank0
  3613  050F  1303               	bcf	3,6	;RP1=0, select bank0
  3614  0510  0842               	movf	ints_isr@temp_val,w
  3615  0511  00B4               	movwf	??_ints_isr
  3616  0512  0834               	movf	??_ints_isr,w
  3617  0513  00D4               	movwf	ints_isr@arg
  3618                           
  3619                           ;panda17.c: 201: mem_write(temp_add + 1,arg);
  3620  0514  084D               	movf	ints_isr@temp_add,w
  3621  0515  3E01               	addlw	1
  3622  0516  00A3               	movwf	i1mem_write@add
  3623  0517  084E               	movf	ints_isr@temp_add+1,w
  3624  0518  1803               	skipnc
  3625  0519  3E01               	addlw	1
  3626  051A  3E00               	addlw	0
  3627  051B  00A4               	movwf	i1mem_write@add+1
  3628  051C  0854               	movf	ints_isr@arg,w
  3629  051D  00B4               	movwf	??_ints_isr
  3630  051E  0834               	movf	??_ints_isr,w
  3631  051F  00A5               	movwf	i1mem_write@data
  3632  0520  120A  158A  255B  120A  118A  	fcall	i1_mem_write
  3633  0525                     i1l2207:	
  3634                           
  3635                           ;panda17.c: 204: }
  3636                           ;panda17.c: 205: }
  3637                           ;panda17.c: 206: INTCONbits.GIE = 1;
  3638  0525  178B               	bsf	11,7	;volatile
  3639  0526                     i1l121:	
  3640  0526  1283               	bcf	3,5	;RP0=0, select bank0
  3641  0527  1303               	bcf	3,6	;RP1=0, select bank0
  3642  0528  083B               	movf	??_ints_isr+7,w
  3643  0529  00FF               	movwf	127
  3644  052A  083A               	movf	??_ints_isr+6,w
  3645  052B  008A               	movwf	10
  3646  052C  0839               	movf	??_ints_isr+5,w
  3647  052D  0084               	movwf	4
  3648  052E  0E38               	swapf	(??_ints_isr+4)^0,w
  3649  052F  0083               	movwf	3
  3650  0530  0EFE               	swapf	126,f
  3651  0531  0E7E               	swapf	126,w
  3652  0532  0009               	retfie
  3653  0533                     __end_of_ints_isr:	
  3654                           
  3655                           	psect	intentry
  3656  0004                     __pintentry:	
  3657                           ;incstack = 0
  3658                           ; Regs used in _ints_isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3659                           
  3660  0004                     interrupt_function:	
  3661  007E                     saved_w	set	btemp
  3662  0004  00FE               	movwf	btemp
  3663  0005  0E03               	swapf	3,w
  3664  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3665  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3666  0008  00B8               	movwf	??_ints_isr+4
  3667  0009  0804               	movf	4,w
  3668  000A  00B9               	movwf	??_ints_isr+5
  3669  000B  080A               	movf	10,w
  3670  000C  00BA               	movwf	??_ints_isr+6
  3671  000D  087F               	movf	btemp+1,w
  3672  000E  00BB               	movwf	??_ints_isr+7
  3673  000F  120A  118A  2828   	ljmp	_ints_isr
  3674                           
  3675                           	psect	text13
  3676  0EED                     __ptext13:	
  3677 ;; *************** function i1_mem_init *****************
  3678 ;; Defined at:
  3679 ;;		line 41 in file "panda17.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;  mem_init        1    9[BANK0 ] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0, pclath, cstack
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         0       0       0       0       0
  3694 ;;      Locals:         0       1       0       0       0
  3695 ;;      Temps:          0       1       0       0       0
  3696 ;;      Totals:         0       2       0       0       0
  3697 ;;Total ram usage:        2 bytes
  3698 ;; Hardware stack levels used:    1
  3699 ;; Hardware stack levels required when called:    2
  3700 ;; This function calls:
  3701 ;;		i1_mem_read
  3702 ;;		i1_mem_write
  3703 ;; This function is called by:
  3704 ;;		_ints_isr
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           
  3709                           ;psect for function i1_mem_init
  3710  0EED                     i1_mem_init:	
  3711                           
  3712                           ;panda17.c: 42: unsigned char aux;
  3713                           ;panda17.c: 43: aux = mem_read(0x0002);
  3714                           
  3715                           ;incstack = 0
  3716                           ; Regs used in i1_mem_init: [wreg+status,2+status,0+pclath+cstack]
  3717  0EED  3002               	movlw	2
  3718  0EEE  00FA               	movwf	i1mem_read@add
  3719  0EEF  3000               	movlw	0
  3720  0EF0  00FB               	movwf	i1mem_read@add+1
  3721  0EF1  120A  158A  2515  120A  158A  	fcall	i1_mem_read
  3722  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  3723  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  3724  0EF8  00A8               	movwf	??i1_mem_init
  3725  0EF9  0828               	movf	??i1_mem_init,w
  3726  0EFA  00A9               	movwf	i1mem_init@aux
  3727                           
  3728                           ;panda17.c: 44: if (aux != 0xAA){
  3729  0EFB  30AA               	movlw	170
  3730  0EFC  0629               	xorwf	i1mem_init@aux,w
  3731  0EFD  1903               	btfsc	3,2
  3732  0EFE  0008               	return
  3733                           
  3734                           ;panda17.c: 45: mem_write(0x0002,0xAA);
  3735  0EFF  3002               	movlw	2
  3736  0F00  00A3               	movwf	i1mem_write@add
  3737  0F01  3000               	movlw	0
  3738  0F02  00A4               	movwf	i1mem_write@add+1
  3739  0F03  30AA               	movlw	170
  3740  0F04  00A8               	movwf	??i1_mem_init
  3741  0F05  0828               	movf	??i1_mem_init,w
  3742  0F06  00A5               	movwf	i1mem_write@data
  3743  0F07  120A  158A  255B  120A  158A  	fcall	i1_mem_write
  3744                           
  3745                           ;panda17.c: 46: mem_write(0x0003,0x00);
  3746  0F0C  3003               	movlw	3
  3747  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0F0F  00A3               	movwf	i1mem_write@add
  3750  0F10  3000               	movlw	0
  3751  0F11  00A4               	movwf	i1mem_write@add+1
  3752  0F12  01A5               	clrf	i1mem_write@data
  3753  0F13  120A  158A  255B  120A  158A  	fcall	i1_mem_write
  3754                           
  3755                           ;panda17.c: 47: mem_write(0x000A,0x00);
  3756  0F18  300A               	movlw	10
  3757  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3758  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3759  0F1B  00A3               	movwf	i1mem_write@add
  3760  0F1C  3000               	movlw	0
  3761  0F1D  00A4               	movwf	i1mem_write@add+1
  3762  0F1E  01A5               	clrf	i1mem_write@data
  3763  0F1F  120A  158A  255B  120A  158A  	fcall	i1_mem_write
  3764                           
  3765                           ;panda17.c: 48: mem_write(0x000B,0x00);
  3766  0F24  300B               	movlw	11
  3767  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  3768  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  3769  0F27  00A3               	movwf	i1mem_write@add
  3770  0F28  3000               	movlw	0
  3771  0F29  00A4               	movwf	i1mem_write@add+1
  3772  0F2A  01A5               	clrf	i1mem_write@data
  3773  0F2B  120A  158A  255B  120A  158A  	fcall	i1_mem_write
  3774                           
  3775                           ;panda17.c: 49: mem_write(0x000C,0x00);
  3776  0F30  300C               	movlw	12
  3777  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  3778  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  3779  0F33  00A3               	movwf	i1mem_write@add
  3780  0F34  3000               	movlw	0
  3781  0F35  00A4               	movwf	i1mem_write@add+1
  3782  0F36  01A5               	clrf	i1mem_write@data
  3783  0F37  120A  158A  255B  120A  158A  	fcall	i1_mem_write
  3784                           
  3785                           ;panda17.c: 50: mem_write(0x000D,0x00);
  3786  0F3C  300D               	movlw	13
  3787  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  3788  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  3789  0F3F  00A3               	movwf	i1mem_write@add
  3790  0F40  3000               	movlw	0
  3791  0F41  00A4               	movwf	i1mem_write@add+1
  3792  0F42  01A5               	clrf	i1mem_write@data
  3793  0F43  120A  158A  255B   	fcall	i1_mem_write
  3794  0F46  0008               	return
  3795  0F47                     __end_ofi1_mem_init:	
  3796                           
  3797                           	psect	text14
  3798  0D5B                     __ptext14:	
  3799 ;; *************** function i1_mem_write *****************
  3800 ;; Defined at:
  3801 ;;		line 13 in file "24lc512.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  add             2    3[BANK0 ] unsigned int 
  3804 ;;  data            1    5[BANK0 ] unsigned char 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  mem_write       1    7[BANK0 ] unsigned char 
  3807 ;;  mem_write       1    6[BANK0 ] unsigned char 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0, pclath, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3817 ;;      Params:         0       3       0       0       0
  3818 ;;      Locals:         0       2       0       0       0
  3819 ;;      Temps:          1       0       0       0       0
  3820 ;;      Totals:         1       5       0       0       0
  3821 ;;Total ram usage:        6 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    1
  3824 ;; This function calls:
  3825 ;;		i1_i2c_start
  3826 ;;		i1_i2c_stop
  3827 ;;		i1_i2c_write
  3828 ;; This function is called by:
  3829 ;;		_ints_isr
  3830 ;;		i1_mem_init
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function i1_mem_write
  3836  0D5B                     i1_mem_write:	
  3837                           
  3838                           ;24lc512.c: 14: unsigned char add_h,add_l;
  3839                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  3840                           
  3841                           ;incstack = 0
  3842                           ; Regs used in i1_mem_write: [wreg+status,2+status,0+pclath+cstack]
  3843  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  3844  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  3845  0D5D  0824               	movf	i1mem_write@add+1,w
  3846  0D5E  00FD               	movwf	??i1_mem_write
  3847  0D5F  087D               	movf	??i1_mem_write,w
  3848  0D60  00A6               	movwf	i1mem_write@add_h
  3849                           
  3850                           ;24lc512.c: 16: add_l = add & 0x00FF;
  3851  0D61  0823               	movf	i1mem_write@add,w
  3852  0D62  00FD               	movwf	??i1_mem_write
  3853  0D63  087D               	movf	??i1_mem_write,w
  3854  0D64  00A7               	movwf	i1mem_write@add_l
  3855                           
  3856                           ;24lc512.c: 17: i2c_start();
  3857  0D65  120A  158A  232C  120A  158A  	fcall	i1_i2c_start
  3858                           
  3859                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  3860  0D6A  01F0               	clrf	i1i2c_write@ack
  3861  0D6B  30A0               	movlw	160
  3862  0D6C  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  3863                           
  3864                           ;24lc512.c: 19: i2c_write(add_h,0);
  3865  0D71  01F0               	clrf	i1i2c_write@ack
  3866  0D72  1283               	bcf	3,5	;RP0=0, select bank0
  3867  0D73  1303               	bcf	3,6	;RP1=0, select bank0
  3868  0D74  0826               	movf	i1mem_write@add_h,w
  3869  0D75  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  3870                           
  3871                           ;24lc512.c: 20: i2c_write(add_l,0);
  3872  0D7A  01F0               	clrf	i1i2c_write@ack
  3873  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  3874  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  3875  0D7D  0827               	movf	i1mem_write@add_l,w
  3876  0D7E  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  3877                           
  3878                           ;24lc512.c: 21: i2c_write(data,0);
  3879  0D83  01F0               	clrf	i1i2c_write@ack
  3880  0D84  1283               	bcf	3,5	;RP0=0, select bank0
  3881  0D85  1303               	bcf	3,6	;RP1=0, select bank0
  3882  0D86  0825               	movf	i1mem_write@data,w
  3883  0D87  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  3884                           
  3885                           ;24lc512.c: 22: i2c_stop();
  3886  0D8C  120A  158A  234F  120A  158A  	fcall	i1_i2c_stop
  3887  0D91                     L3:	
  3888                           
  3889                           ;24lc512.c: 24: i2c_start();
  3890  0D91  120A  158A  232C  120A  158A  	fcall	i1_i2c_start
  3891                           
  3892                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  3893  0D96  01F0               	clrf	i1i2c_write@ack
  3894  0D97  30A0               	movlw	160
  3895  0D98  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  3896                           
  3897                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  3898  0D9D  1683               	bsf	3,5	;RP0=1, select bank1
  3899  0D9E  1303               	bcf	3,6	;RP1=0, select bank1
  3900  0D9F  1B11               	btfsc	17,6	;volatile
  3901  0DA0  2D91               	goto	L3
  3902                           
  3903                           ;24lc512.c: 30: }
  3904                           ;24lc512.c: 31: i2c_stop();
  3905                           
  3906                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  3907                           
  3908                           ;24lc512.c: 28: i2c_start();
  3909  0DA1  120A  158A  234F   	fcall	i1_i2c_stop
  3910  0DA4  0008               	return
  3911  0DA5                     __end_ofi1_mem_write:	
  3912                           
  3913                           	psect	text15
  3914  0D15                     __ptext15:	
  3915 ;; *************** function i1_mem_read *****************
  3916 ;; Defined at:
  3917 ;;		line 34 in file "24lc512.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  add             2   10[COMMON] unsigned int 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  mem_read        1    2[BANK0 ] unsigned char 
  3922 ;;  mem_read        1    1[BANK0 ] unsigned char 
  3923 ;;  mem_read        1    0[BANK0 ] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      unsigned char 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0, pclath, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3933 ;;      Params:         2       0       0       0       0
  3934 ;;      Locals:         0       3       0       0       0
  3935 ;;      Temps:          1       0       0       0       0
  3936 ;;      Totals:         3       3       0       0       0
  3937 ;;Total ram usage:        6 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    1
  3940 ;; This function calls:
  3941 ;;		i1_i2c_read
  3942 ;;		i1_i2c_start
  3943 ;;		i1_i2c_stop
  3944 ;;		i1_i2c_write
  3945 ;; This function is called by:
  3946 ;;		_ints_isr
  3947 ;;		i1_mem_init
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           
  3952                           ;psect for function i1_mem_read
  3953  0D15                     i1_mem_read:	
  3954                           
  3955                           ;24lc512.c: 35: unsigned char rta;
  3956                           ;24lc512.c: 36: unsigned char add_h,add_l;
  3957                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  3958                           
  3959                           ;incstack = 0
  3960                           ; Regs used in i1_mem_read: [wreg+status,2+status,0+pclath+cstack]
  3961  0D15  087B               	movf	i1mem_read@add+1,w
  3962  0D16  00FC               	movwf	??i1_mem_read
  3963  0D17  087C               	movf	??i1_mem_read,w
  3964  0D18  1283               	bcf	3,5	;RP0=0, select bank0
  3965  0D19  1303               	bcf	3,6	;RP1=0, select bank0
  3966  0D1A  00A1               	movwf	i1mem_read@add_h
  3967                           
  3968                           ;24lc512.c: 38: add_l = add & 0x00FF;
  3969  0D1B  087A               	movf	i1mem_read@add,w
  3970  0D1C  00FC               	movwf	??i1_mem_read
  3971  0D1D  087C               	movf	??i1_mem_read,w
  3972  0D1E  00A2               	movwf	i1mem_read@add_l
  3973                           
  3974                           ;24lc512.c: 39: i2c_start();
  3975  0D1F  120A  158A  232C  120A  158A  	fcall	i1_i2c_start
  3976                           
  3977                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  3978  0D24  01F0               	clrf	i1i2c_write@ack
  3979  0D25  30A0               	movlw	160
  3980  0D26  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  3981                           
  3982                           ;24lc512.c: 41: i2c_write(add_h,0);
  3983  0D2B  01F0               	clrf	i1i2c_write@ack
  3984  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  3985  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  3986  0D2E  0821               	movf	i1mem_read@add_h,w
  3987  0D2F  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  3988                           
  3989                           ;24lc512.c: 42: i2c_write(add_l,0);
  3990  0D34  01F0               	clrf	i1i2c_write@ack
  3991  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  3992  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  3993  0D37  0822               	movf	i1mem_read@add_l,w
  3994  0D38  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  3995                           
  3996                           ;24lc512.c: 43: i2c_start();
  3997  0D3D  120A  158A  232C  120A  158A  	fcall	i1_i2c_start
  3998                           
  3999                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  4000  0D42  01F0               	clrf	i1i2c_write@ack
  4001  0D43  30A1               	movlw	161
  4002  0D44  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  4003                           
  4004                           ;24lc512.c: 45: rta = i2c_read(0);
  4005  0D49  3000               	movlw	0
  4006  0D4A  120A  158A  2693  120A  158A  	fcall	i1_i2c_read
  4007  0D4F  00FC               	movwf	??i1_mem_read
  4008  0D50  087C               	movf	??i1_mem_read,w
  4009  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  4010  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  4011  0D53  00A0               	movwf	i1mem_read@rta
  4012                           
  4013                           ;24lc512.c: 46: i2c_stop();
  4014  0D54  120A  158A  234F   	fcall	i1_i2c_stop
  4015                           
  4016                           ;24lc512.c: 47: return rta;
  4017  0D57  1283               	bcf	3,5	;RP0=0, select bank0
  4018  0D58  1303               	bcf	3,6	;RP1=0, select bank0
  4019  0D59  0820               	movf	i1mem_read@rta,w
  4020  0D5A  0008               	return
  4021  0D5B                     __end_ofi1_mem_read:	
  4022                           
  4023                           	psect	text16
  4024  0E3A                     __ptext16:	
  4025 ;; *************** function _si_read_t *****************
  4026 ;; Defined at:
  4027 ;;		line 37 in file "si7021.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;  rta             2    2[BANK0 ] unsigned int 
  4032 ;;  rta_l           1    1[BANK0 ] unsigned char 
  4033 ;;  rta_h           1    0[BANK0 ] unsigned char 
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  2   10[COMMON] int 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2, status,0, pclath, cstack
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4043 ;;      Params:         2       0       0       0       0
  4044 ;;      Locals:         0       4       0       0       0
  4045 ;;      Temps:          2       0       0       0       0
  4046 ;;      Totals:         4       4       0       0       0
  4047 ;;Total ram usage:        8 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:    1
  4050 ;; This function calls:
  4051 ;;		_i2c_rstart
  4052 ;;		i1_i2c_read
  4053 ;;		i1_i2c_start
  4054 ;;		i1_i2c_stop
  4055 ;;		i1_i2c_write
  4056 ;; This function is called by:
  4057 ;;		_ints_isr
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           
  4062                           ;psect for function _si_read_t
  4063  0E3A                     _si_read_t:	
  4064                           
  4065                           ;si7021.c: 38: unsigned int rta;
  4066                           ;si7021.c: 39: unsigned char rta_h,rta_l;
  4067                           ;si7021.c: 40: i2c_start();
  4068                           
  4069                           ;incstack = 0
  4070                           ; Regs used in _si_read_t: [wreg+status,2+status,0+pclath+cstack]
  4071  0E3A  120A  158A  232C  120A  158A  	fcall	i1_i2c_start
  4072                           
  4073                           ;si7021.c: 41: i2c_write(0x80,1);
  4074  0E3F  01F0               	clrf	i1i2c_write@ack
  4075  0E40  0AF0               	incf	i1i2c_write@ack,f
  4076  0E41  3080               	movlw	128
  4077  0E42  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  4078                           
  4079                           ;si7021.c: 42: i2c_write(0xE3,1);
  4080  0E47  01F0               	clrf	i1i2c_write@ack
  4081  0E48  0AF0               	incf	i1i2c_write@ack,f
  4082  0E49  30E3               	movlw	227
  4083  0E4A  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  4084                           
  4085                           ;si7021.c: 43: i2c_rstart();
  4086  0E4F  120A  158A  2309  120A  158A  	fcall	_i2c_rstart
  4087                           
  4088                           ;si7021.c: 44: i2c_write(0x81,1);
  4089  0E54  01F0               	clrf	i1i2c_write@ack
  4090  0E55  0AF0               	incf	i1i2c_write@ack,f
  4091  0E56  3081               	movlw	129
  4092  0E57  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  4093                           
  4094                           ;si7021.c: 45: rta_h = i2c_read(1);
  4095  0E5C  3001               	movlw	1
  4096  0E5D  120A  158A  2693  120A  158A  	fcall	i1_i2c_read
  4097  0E62  00FC               	movwf	??_si_read_t
  4098  0E63  087C               	movf	??_si_read_t,w
  4099  0E64  1283               	bcf	3,5	;RP0=0, select bank0
  4100  0E65  1303               	bcf	3,6	;RP1=0, select bank0
  4101  0E66  00A0               	movwf	si_read_t@rta_h
  4102                           
  4103                           ;si7021.c: 46: rta_l = i2c_read(3);
  4104  0E67  3003               	movlw	3
  4105  0E68  120A  158A  2693  120A  158A  	fcall	i1_i2c_read
  4106  0E6D  00FC               	movwf	??_si_read_t
  4107  0E6E  087C               	movf	??_si_read_t,w
  4108  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  4109  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  4110  0E71  00A1               	movwf	si_read_t@rta_l
  4111                           
  4112                           ;si7021.c: 47: i2c_stop();
  4113  0E72  120A  158A  234F   	fcall	i1_i2c_stop
  4114                           
  4115                           ;si7021.c: 48: rta = rta_h;
  4116  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  4117  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  4118  0E77  0820               	movf	si_read_t@rta_h,w
  4119  0E78  00FC               	movwf	??_si_read_t
  4120  0E79  01FD               	clrf	??_si_read_t+1
  4121  0E7A  087C               	movf	??_si_read_t,w
  4122  0E7B  00A2               	movwf	si_read_t@rta
  4123  0E7C  087D               	movf	??_si_read_t+1,w
  4124  0E7D  00A3               	movwf	si_read_t@rta+1
  4125                           
  4126                           ;si7021.c: 49: rta = rta << 8;
  4127  0E7E  0822               	movf	si_read_t@rta,w
  4128  0E7F  00FD               	movwf	??_si_read_t+1
  4129  0E80  01FC               	clrf	??_si_read_t
  4130  0E81  087C               	movf	??_si_read_t,w
  4131  0E82  00A2               	movwf	si_read_t@rta
  4132  0E83  087D               	movf	??_si_read_t+1,w
  4133  0E84  00A3               	movwf	si_read_t@rta+1
  4134                           
  4135                           ;si7021.c: 50: rta += rta_l;
  4136  0E85  0821               	movf	si_read_t@rta_l,w
  4137  0E86  00FC               	movwf	??_si_read_t
  4138  0E87  01FD               	clrf	??_si_read_t+1
  4139  0E88  087C               	movf	??_si_read_t,w
  4140  0E89  07A2               	addwf	si_read_t@rta,f
  4141  0E8A  1803               	skipnc
  4142  0E8B  0AA3               	incf	si_read_t@rta+1,f
  4143  0E8C  087D               	movf	??_si_read_t+1,w
  4144  0E8D  07A3               	addwf	si_read_t@rta+1,f
  4145                           
  4146                           ;si7021.c: 51: return rta;
  4147  0E8E  0823               	movf	si_read_t@rta+1,w
  4148  0E8F  00FB               	movwf	?_si_read_t+1
  4149  0E90  0822               	movf	si_read_t@rta,w
  4150  0E91  00FA               	movwf	?_si_read_t
  4151  0E92  0008               	return
  4152  0E93                     __end_of_si_read_t:	
  4153                           
  4154                           	psect	text17
  4155  0FA3                     __ptext17:	
  4156 ;; *************** function _si_read_h *****************
  4157 ;; Defined at:
  4158 ;;		line 20 in file "si7021.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  rta             2    2[BANK0 ] unsigned int 
  4163 ;;  rta_l           1    1[BANK0 ] unsigned char 
  4164 ;;  rta_h           1    0[BANK0 ] unsigned char 
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  2   10[COMMON] int 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2, status,0, pclath, cstack
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4174 ;;      Params:         2       0       0       0       0
  4175 ;;      Locals:         0       4       0       0       0
  4176 ;;      Temps:          2       0       0       0       0
  4177 ;;      Totals:         4       4       0       0       0
  4178 ;;Total ram usage:        8 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:    1
  4181 ;; This function calls:
  4182 ;;		_i2c_rstart
  4183 ;;		i1_i2c_read
  4184 ;;		i1_i2c_start
  4185 ;;		i1_i2c_stop
  4186 ;;		i1_i2c_write
  4187 ;; This function is called by:
  4188 ;;		_ints_isr
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           
  4193                           ;psect for function _si_read_h
  4194  0FA3                     _si_read_h:	
  4195                           
  4196                           ;si7021.c: 21: unsigned int rta = 0;
  4197                           
  4198                           ;incstack = 0
  4199                           ; Regs used in _si_read_h: [wreg+status,2+status,0+pclath+cstack]
  4200  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  4202  0FA5  01A2               	clrf	si_read_h@rta
  4203  0FA6  01A3               	clrf	si_read_h@rta+1
  4204                           
  4205                           ;si7021.c: 22: unsigned char rta_h,rta_l;
  4206                           ;si7021.c: 23: i2c_start();
  4207  0FA7  120A  158A  232C  120A  158A  	fcall	i1_i2c_start
  4208                           
  4209                           ;si7021.c: 24: i2c_write(0x80,1);
  4210  0FAC  01F0               	clrf	i1i2c_write@ack
  4211  0FAD  0AF0               	incf	i1i2c_write@ack,f
  4212  0FAE  3080               	movlw	128
  4213  0FAF  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  4214                           
  4215                           ;si7021.c: 25: i2c_write(0xE5,1);
  4216  0FB4  01F0               	clrf	i1i2c_write@ack
  4217  0FB5  0AF0               	incf	i1i2c_write@ack,f
  4218  0FB6  30E5               	movlw	229
  4219  0FB7  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  4220                           
  4221                           ;si7021.c: 26: i2c_rstart();
  4222  0FBC  120A  158A  2309  120A  158A  	fcall	_i2c_rstart
  4223                           
  4224                           ;si7021.c: 27: i2c_write(0x81,1);
  4225  0FC1  01F0               	clrf	i1i2c_write@ack
  4226  0FC2  0AF0               	incf	i1i2c_write@ack,f
  4227  0FC3  3081               	movlw	129
  4228  0FC4  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  4229                           
  4230                           ;si7021.c: 28: rta_h = i2c_read(1);
  4231  0FC9  3001               	movlw	1
  4232  0FCA  120A  158A  2693  120A  158A  	fcall	i1_i2c_read
  4233  0FCF  00FC               	movwf	??_si_read_h
  4234  0FD0  087C               	movf	??_si_read_h,w
  4235  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  4236  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  4237  0FD3  00A0               	movwf	si_read_h@rta_h
  4238                           
  4239                           ;si7021.c: 29: rta_l = i2c_read(3);
  4240  0FD4  3003               	movlw	3
  4241  0FD5  120A  158A  2693  120A  158A  	fcall	i1_i2c_read
  4242  0FDA  00FC               	movwf	??_si_read_h
  4243  0FDB  087C               	movf	??_si_read_h,w
  4244  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  4245  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  4246  0FDE  00A1               	movwf	si_read_h@rta_l
  4247                           
  4248                           ;si7021.c: 30: i2c_stop();
  4249  0FDF  120A  158A  234F   	fcall	i1_i2c_stop
  4250                           
  4251                           ;si7021.c: 31: rta = rta_h;
  4252  0FE2  1283               	bcf	3,5	;RP0=0, select bank0
  4253  0FE3  1303               	bcf	3,6	;RP1=0, select bank0
  4254  0FE4  0820               	movf	si_read_h@rta_h,w
  4255  0FE5  00FC               	movwf	??_si_read_h
  4256  0FE6  01FD               	clrf	??_si_read_h+1
  4257  0FE7  087C               	movf	??_si_read_h,w
  4258  0FE8  00A2               	movwf	si_read_h@rta
  4259  0FE9  087D               	movf	??_si_read_h+1,w
  4260  0FEA  00A3               	movwf	si_read_h@rta+1
  4261                           
  4262                           ;si7021.c: 32: rta = rta << 8;
  4263  0FEB  0822               	movf	si_read_h@rta,w
  4264  0FEC  00FD               	movwf	??_si_read_h+1
  4265  0FED  01FC               	clrf	??_si_read_h
  4266  0FEE  087C               	movf	??_si_read_h,w
  4267  0FEF  00A2               	movwf	si_read_h@rta
  4268  0FF0  087D               	movf	??_si_read_h+1,w
  4269  0FF1  00A3               	movwf	si_read_h@rta+1
  4270                           
  4271                           ;si7021.c: 33: rta += rta_l;
  4272  0FF2  0821               	movf	si_read_h@rta_l,w
  4273  0FF3  00FC               	movwf	??_si_read_h
  4274  0FF4  01FD               	clrf	??_si_read_h+1
  4275  0FF5  087C               	movf	??_si_read_h,w
  4276  0FF6  07A2               	addwf	si_read_h@rta,f
  4277  0FF7  1803               	skipnc
  4278  0FF8  0AA3               	incf	si_read_h@rta+1,f
  4279  0FF9  087D               	movf	??_si_read_h+1,w
  4280  0FFA  07A3               	addwf	si_read_h@rta+1,f
  4281                           
  4282                           ;si7021.c: 34: return rta;
  4283  0FFB  0823               	movf	si_read_h@rta+1,w
  4284  0FFC  00FB               	movwf	?_si_read_h+1
  4285  0FFD  0822               	movf	si_read_h@rta,w
  4286  0FFE  00FA               	movwf	?_si_read_h
  4287  0FFF  0008               	return
  4288  1000                     __end_of_si_read_h:	
  4289                           
  4290                           	psect	text18
  4291  0533                     __ptext18:	
  4292 ;; *************** function _printf *****************
  4293 ;; Defined at:
  4294 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  f               1    wreg     PTR const unsigned char 
  4297 ;;		 -> STR_11(2), STR_10(5), STR_9(7), STR_8(4), 
  4298 ;;		 -> STR_7(3), STR_6(2), STR_5(3), STR_4(4), 
  4299 ;;		 -> STR_3(7), STR_2(6), STR_1(8), 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  f               1   18[BANK0 ] PTR const unsigned char 
  4302 ;;		 -> STR_11(2), STR_10(5), STR_9(7), STR_8(4), 
  4303 ;;		 -> STR_7(3), STR_6(2), STR_5(3), STR_4(4), 
  4304 ;;		 -> STR_3(7), STR_2(6), STR_1(8), 
  4305 ;;  idx             1    9[BANK0 ] unsigned char 
  4306 ;;  tmpval          4    0        struct .
  4307 ;;  width           2   15[BANK0 ] int 
  4308 ;;  val             2   13[BANK0 ] unsigned int 
  4309 ;;  cp              2    0        PTR const unsigned char 
  4310 ;;  len             2    0        unsigned int 
  4311 ;;  c               1   19[BANK0 ] char 
  4312 ;;  flag            1   17[BANK0 ] unsigned char 
  4313 ;;  prec            1   12[BANK0 ] char 
  4314 ;;  ap              1   11[BANK0 ] PTR void [1]
  4315 ;;		 -> ?_printf(2), 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;                  2    4[BANK0 ] int 
  4318 ;; Registers used:
  4319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4325 ;;      Params:         0       2       0       0       0
  4326 ;;      Locals:         0      11       0       0       0
  4327 ;;      Temps:          0       3       0       0       0
  4328 ;;      Totals:         0      16       0       0       0
  4329 ;;Total ram usage:       16 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:    1
  4332 ;; This function calls:
  4333 ;;		___lwdiv
  4334 ;;		___lwmod
  4335 ;;		___wmul
  4336 ;;		_isdigit
  4337 ;;		_putch
  4338 ;; This function is called by:
  4339 ;;		_ints_isr
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           
  4344                           ;psect for function _printf
  4345  0533                     _printf:	
  4346                           
  4347                           ;incstack = 0
  4348                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4349                           ;printf@f stored from wreg
  4350  0533  1283               	bcf	3,5	;RP0=0, select bank0
  4351  0534  1303               	bcf	3,6	;RP1=0, select bank0
  4352  0535  00B2               	movwf	printf@f
  4353                           
  4354                           ;doprnt.c: 466: va_list ap;
  4355                           ;doprnt.c: 499: signed char c;
  4356                           ;doprnt.c: 501: int width;
  4357                           ;doprnt.c: 506: signed char prec;
  4358                           ;doprnt.c: 508: unsigned char flag;
  4359                           ;doprnt.c: 523: union {
  4360                           ;doprnt.c: 524: unsigned long vd;
  4361                           ;doprnt.c: 525: double integ;
  4362                           ;doprnt.c: 526: } tmpval;
  4363                           ;doprnt.c: 528: unsigned int val;
  4364                           ;doprnt.c: 529: unsigned len;
  4365                           ;doprnt.c: 530: const char * cp;
  4366                           ;doprnt.c: 533: *ap = __va_start();
  4367  0536  3024               	movlw	(low (?_printf| 0))& (0+255)
  4368  0537  00A6               	movwf	??_printf
  4369  0538  0826               	movf	??_printf,w
  4370  0539  00AB               	movwf	printf@ap
  4371  053A                     i1l1913:	
  4372                           ;doprnt.c: 536: while(c = *f++) {
  4373                           
  4374  053A  3001               	movlw	1
  4375  053B  1283               	bcf	3,5	;RP0=0, select bank0
  4376  053C  1303               	bcf	3,6	;RP1=0, select bank0
  4377  053D  07B2               	addwf	printf@f,f
  4378  053E  30FF               	movlw	-1
  4379  053F  0732               	addwf	printf@f,w
  4380  0540  0084               	movwf	4
  4381  0541  120A  158A  2000  120A  118A  	fcall	stringdir
  4382  0546  00A6               	movwf	??_printf
  4383  0547  0826               	movf	??_printf,w
  4384  0548  00B3               	movwf	printf@c
  4385  0549  0833               	movf	printf@c,w
  4386  054A  1903               	btfsc	3,2
  4387  054B  0008               	return
  4388                           
  4389                           ;doprnt.c: 538: if(c != '%')
  4390  054C  3025               	movlw	37
  4391  054D  0633               	xorwf	printf@c,w
  4392  054E  1903               	btfsc	3,2
  4393  054F  2D57               	goto	i1l1797
  4394                           
  4395                           ;doprnt.c: 540: {
  4396                           ;doprnt.c: 541: (putch(c) );
  4397  0550  0833               	movf	printf@c,w
  4398  0551  120A  158A  228E  120A  118A  	fcall	_putch
  4399                           
  4400                           ;doprnt.c: 542: continue;
  4401  0556  2D3A               	goto	i1l1913
  4402  0557                     i1l1797:	
  4403                           
  4404                           ;doprnt.c: 543: }
  4405                           ;doprnt.c: 546: width = 0;
  4406  0557  1283               	bcf	3,5	;RP0=0, select bank0
  4407  0558  1303               	bcf	3,6	;RP1=0, select bank0
  4408  0559  01AF               	clrf	printf@width
  4409  055A  01B0               	clrf	printf@width+1
  4410                           
  4411                           ;doprnt.c: 548: flag = 0;
  4412  055B  01B1               	clrf	printf@flag
  4413                           
  4414                           ;doprnt.c: 551: switch(*f) {
  4415                           
  4416                           ;doprnt.c: 550: for(;;) {
  4417  055C  2D62               	goto	i1l1803
  4418  055D                     i1l280:	
  4419                           ;doprnt.c: 579: case '0':
  4420                           
  4421                           
  4422                           ;doprnt.c: 580: flag |= 0x04;
  4423  055D  1531               	bsf	printf@flag,2
  4424                           
  4425                           ;doprnt.c: 581: f++;
  4426  055E  3001               	movlw	1
  4427  055F  00A6               	movwf	??_printf
  4428  0560  0826               	movf	??_printf,w
  4429  0561  07B2               	addwf	printf@f,f
  4430  0562                     i1l1803:	
  4431                           ;doprnt.c: 584: }
  4432                           
  4433                           ;doprnt.c: 582: continue;
  4434                           
  4435  0562  0832               	movf	printf@f,w
  4436  0563  0084               	movwf	4
  4437  0564  120A  158A  2000  120A  118A  	fcall	stringdir
  4438                           
  4439                           ; Switch size 1, requested type "space"
  4440                           ; Number of cases is 1, Range of values is 48 to 48
  4441                           ; switch strategies available:
  4442                           ; Name         Instructions Cycles
  4443                           ; simple_byte            4     3 (average)
  4444                           ; direct_byte           14    11 (fixed)
  4445                           ; jumptable            263     9 (fixed)
  4446                           ;	Chosen strategy is simple_byte
  4447  0569  3A30               	xorlw	48	; case 48
  4448  056A  1903               	skipnz
  4449  056B  2D5D               	goto	i1l280
  4450  056C  2D6D               	goto	i1l1805
  4451  056D                     i1l1805:	
  4452                           ;doprnt.c: 586: }
  4453                           
  4454                           ;doprnt.c: 585: break;
  4455                           
  4456                           
  4457                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4458  056D  0832               	movf	printf@f,w
  4459  056E  0084               	movwf	4
  4460  056F  120A  158A  2000  120A  118A  	fcall	stringdir
  4461  0574  120A  158A  2296  120A  118A  	fcall	_isdigit
  4462  0579  1C03               	btfss	3,0
  4463  057A  2DBD               	goto	i1l1819
  4464                           
  4465                           ;doprnt.c: 598: width = 0;
  4466  057B  1283               	bcf	3,5	;RP0=0, select bank0
  4467  057C  1303               	bcf	3,6	;RP1=0, select bank0
  4468  057D  01AF               	clrf	printf@width
  4469  057E  01B0               	clrf	printf@width+1
  4470  057F                     i1l1809:	
  4471                           ;doprnt.c: 599: do {
  4472                           
  4473                           
  4474                           ;doprnt.c: 600: width *= 10;
  4475  057F  300A               	movlw	10
  4476  0580  00F0               	movwf	___wmul@multiplier
  4477  0581  3000               	movlw	0
  4478  0582  00F1               	movwf	___wmul@multiplier+1
  4479  0583  1283               	bcf	3,5	;RP0=0, select bank0
  4480  0584  1303               	bcf	3,6	;RP1=0, select bank0
  4481  0585  0830               	movf	printf@width+1,w
  4482  0586  00F3               	movwf	___wmul@multiplicand+1
  4483  0587  082F               	movf	printf@width,w
  4484  0588  00F2               	movwf	___wmul@multiplicand
  4485  0589  120A  158A  22E8  120A  118A  	fcall	___wmul
  4486  058E  0871               	movf	?___wmul+1,w
  4487  058F  1283               	bcf	3,5	;RP0=0, select bank0
  4488  0590  1303               	bcf	3,6	;RP1=0, select bank0
  4489  0591  00B0               	movwf	printf@width+1
  4490  0592  0870               	movf	?___wmul,w
  4491  0593  00AF               	movwf	printf@width
  4492                           
  4493                           ;doprnt.c: 601: width += *f++ - '0';
  4494  0594  0832               	movf	printf@f,w
  4495  0595  0084               	movwf	4
  4496  0596  120A  158A  2000  120A  118A  	fcall	stringdir
  4497  059B  3ED0               	addlw	208
  4498  059C  00A6               	movwf	??_printf
  4499  059D  30FF               	movlw	255
  4500  059E  1803               	skipnc
  4501  059F  3000               	movlw	0
  4502  05A0  00A7               	movwf	??_printf+1
  4503  05A1  0826               	movf	??_printf,w
  4504  05A2  07AF               	addwf	printf@width,f
  4505  05A3  1803               	skipnc
  4506  05A4  0AB0               	incf	printf@width+1,f
  4507  05A5  0827               	movf	??_printf+1,w
  4508  05A6  07B0               	addwf	printf@width+1,f
  4509  05A7  3001               	movlw	1
  4510  05A8  00A6               	movwf	??_printf
  4511  05A9  0826               	movf	??_printf,w
  4512  05AA  07B2               	addwf	printf@f,f
  4513                           
  4514                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4515  05AB  0832               	movf	printf@f,w
  4516  05AC  0084               	movwf	4
  4517  05AD  120A  158A  2000  120A  118A  	fcall	stringdir
  4518  05B2  120A  158A  2296  120A  118A  	fcall	_isdigit
  4519  05B7  1C03               	btfss	3,0
  4520  05B8  2DBD               	goto	i1l1819
  4521  05B9  2D7F               	goto	i1l1809
  4522  05BA                     i1l293:	
  4523                           ;doprnt.c: 712: case 'X':
  4524                           
  4525                           ;doprnt.c: 698: case 'i':
  4526                           ;doprnt.c: 699: break;
  4527                           
  4528                           ;doprnt.c: 697: case 'd':
  4529                           
  4530                           ;doprnt.c: 638: goto alldone;
  4531                           
  4532                           ;doprnt.c: 637: case 0:
  4533                           
  4534                           ;doprnt.c: 608: }
  4535                           ;doprnt.c: 635: switch(c = *f++) {
  4536                           
  4537                           
  4538                           ;doprnt.c: 714: flag |= 0x20;
  4539  05BA  16B1               	bsf	printf@flag,5
  4540  05BB                     i1l294:	
  4541                           ;doprnt.c: 718: case 'x':
  4542                           
  4543                           
  4544                           ;doprnt.c: 721: flag |= 0x80;
  4545  05BB  17B1               	bsf	printf@flag,7
  4546                           
  4547                           ;doprnt.c: 723: break;
  4548  05BC  2DDA               	goto	i1l292
  4549  05BD                     i1l1819:	
  4550                           ;doprnt.c: 822: }
  4551                           
  4552                           ;doprnt.c: 813: continue;
  4553                           
  4554                           ;doprnt.c: 802: default:
  4555                           
  4556  05BD  3001               	movlw	1
  4557  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  4558  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  4559  05C0  07B2               	addwf	printf@f,f
  4560  05C1  30FF               	movlw	-1
  4561  05C2  0732               	addwf	printf@f,w
  4562  05C3  0084               	movwf	4
  4563  05C4  120A  158A  2000  120A  118A  	fcall	stringdir
  4564  05C9  00B3               	movwf	printf@c
  4565                           
  4566                           ; Switch size 1, requested type "space"
  4567                           ; Number of cases is 5, Range of values is 0 to 120
  4568                           ; switch strategies available:
  4569                           ; Name         Instructions Cycles
  4570                           ; simple_byte           16     9 (average)
  4571                           ; jumptable            260     6 (fixed)
  4572                           ;	Chosen strategy is simple_byte
  4573  05CA  3A00               	xorlw	0	; case 0
  4574  05CB  1903               	skipnz
  4575  05CC  2F48               	goto	i1l334
  4576  05CD  3A58               	xorlw	88	; case 88
  4577  05CE  1903               	skipnz
  4578  05CF  2DBA               	goto	i1l293
  4579  05D0  3A3C               	xorlw	60	; case 100
  4580  05D1  1903               	skipnz
  4581  05D2  2DDA               	goto	i1l292
  4582  05D3  3A0D               	xorlw	13	; case 105
  4583  05D4  1903               	skipnz
  4584  05D5  2DDA               	goto	i1l292
  4585  05D6  3A11               	xorlw	17	; case 120
  4586  05D7  1903               	skipnz
  4587  05D8  2DBB               	goto	i1l294
  4588  05D9  2D3A               	goto	i1l1913
  4589  05DA                     i1l292:	
  4590                           
  4591                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4592  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  4593  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  4594  05DC  1BB1               	btfsc	printf@flag,7
  4595  05DD  2DF6               	goto	i1l1831
  4596                           
  4597                           ;doprnt.c: 1253: {
  4598                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4599  05DE  082B               	movf	printf@ap,w
  4600  05DF  0084               	movwf	4
  4601  05E0  1383               	bcf	3,7	;select IRP bank0
  4602  05E1  0800               	movf	0,w
  4603  05E2  00AD               	movwf	printf@val
  4604  05E3  0A84               	incf	4,f
  4605  05E4  0800               	movf	0,w
  4606  05E5  00AE               	movwf	printf@val+1
  4607  05E6  3002               	movlw	2
  4608  05E7  00A6               	movwf	??_printf
  4609  05E8  0826               	movf	??_printf,w
  4610  05E9  07AB               	addwf	printf@ap,f
  4611                           
  4612                           ;doprnt.c: 1261: if((int)val < 0) {
  4613  05EA  1FAE               	btfss	printf@val+1,7
  4614  05EB  2E4B               	goto	i1l1857
  4615                           
  4616                           ;doprnt.c: 1262: flag |= 0x03;
  4617  05EC  3003               	movlw	3
  4618  05ED  00A6               	movwf	??_printf
  4619  05EE  0826               	movf	??_printf,w
  4620  05EF  04B1               	iorwf	printf@flag,f
  4621                           
  4622                           ;doprnt.c: 1263: val = -val;
  4623  05F0  09AD               	comf	printf@val,f
  4624  05F1  09AE               	comf	printf@val+1,f
  4625  05F2  0AAD               	incf	printf@val,f
  4626  05F3  1903               	skipnz
  4627  05F4  0AAE               	incf	printf@val+1,f
  4628                           
  4629                           ;doprnt.c: 1264: }
  4630                           ;doprnt.c: 1266: }
  4631  05F5  2E4B               	goto	i1l1857
  4632  05F6                     i1l1831:	
  4633                           
  4634                           ;doprnt.c: 1268: else
  4635                           ;doprnt.c: 1273: {
  4636                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4637  05F6  082B               	movf	printf@ap,w
  4638  05F7  0084               	movwf	4
  4639  05F8  1383               	bcf	3,7	;select IRP bank0
  4640  05F9  0800               	movf	0,w
  4641  05FA  00AD               	movwf	printf@val
  4642  05FB  0A84               	incf	4,f
  4643  05FC  0800               	movf	0,w
  4644  05FD  00AE               	movwf	printf@val+1
  4645  05FE  3002               	movlw	2
  4646  05FF  00A6               	movwf	??_printf
  4647  0600  0826               	movf	??_printf,w
  4648  0601  07AB               	addwf	printf@ap,f
  4649                           
  4650                           ;doprnt.c: 1287: }
  4651                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  4652  0602  2E4B               	goto	i1l1857
  4653  0603                     i1l300:	
  4654                           ;doprnt.c: 1299: case 0x00:
  4655                           
  4656                           
  4657                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4658  0603  01B3               	clrf	printf@c
  4659  0604  0AB3               	incf	printf@c,f
  4660  0605                     L7:	
  4661  0605  3005               	movlw	5
  4662  0606  0633               	xorwf	printf@c,w
  4663  0607  1903               	btfsc	3,2
  4664  0608  2E54               	goto	i1l1859
  4665                           
  4666                           ;doprnt.c: 1306: if(val < dpowers[c])
  4667  0609  0833               	movf	printf@c,w
  4668  060A  00A6               	movwf	??_printf
  4669  060B  0726               	addwf	??_printf,w
  4670  060C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4671  060D  0084               	movwf	4
  4672  060E  120A  158A  2000  120A  118A  	fcall	stringdir
  4673  0613  00A7               	movwf	??_printf+1
  4674  0614  120A  158A  2000  120A  118A  	fcall	stringdir
  4675  0619  00A8               	movwf	??_printf+2
  4676  061A  0828               	movf	??_printf+2,w
  4677  061B  022E               	subwf	printf@val+1,w
  4678  061C  1D03               	skipz
  4679  061D  2E20               	goto	u181_25
  4680  061E  0827               	movf	??_printf+1,w
  4681  061F  022D               	subwf	printf@val,w
  4682  0620                     u181_25:	
  4683  0620  1C03               	btfss	3,0
  4684  0621  2E54               	goto	i1l1859
  4685                           
  4686                           ;doprnt.c: 1307: break;
  4687  0622  3001               	movlw	1
  4688  0623  00A6               	movwf	??_printf
  4689  0624  0826               	movf	??_printf,w
  4690  0625  07B3               	addwf	printf@c,f
  4691  0626  2E05               	goto	L7
  4692  0627                     i1l305:	
  4693                           ;doprnt.c: 1314: case 0x80:
  4694                           
  4695                           ;doprnt.c: 1309: break;
  4696                           
  4697                           
  4698                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4699  0627  01B3               	clrf	printf@c
  4700  0628  0AB3               	incf	printf@c,f
  4701  0629                     L8:	
  4702  0629  3004               	movlw	4
  4703  062A  0633               	xorwf	printf@c,w
  4704  062B  1903               	btfsc	3,2
  4705  062C  2E54               	goto	i1l1859
  4706                           
  4707                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4708  062D  0833               	movf	printf@c,w
  4709  062E  00A6               	movwf	??_printf
  4710  062F  0726               	addwf	??_printf,w
  4711  0630  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  4712  0631  0084               	movwf	4
  4713  0632  120A  158A  2000  120A  118A  	fcall	stringdir
  4714  0637  00A7               	movwf	??_printf+1
  4715  0638  120A  158A  2000  120A  118A  	fcall	stringdir
  4716  063D  00A8               	movwf	??_printf+2
  4717  063E  0828               	movf	??_printf+2,w
  4718  063F  022E               	subwf	printf@val+1,w
  4719  0640  1D03               	skipz
  4720  0641  2E44               	goto	u184_25
  4721  0642  0827               	movf	??_printf+1,w
  4722  0643  022D               	subwf	printf@val,w
  4723  0644                     u184_25:	
  4724  0644  1C03               	btfss	3,0
  4725  0645  2E54               	goto	i1l1859
  4726                           
  4727                           ;doprnt.c: 1318: break;
  4728  0646  3001               	movlw	1
  4729  0647  00A6               	movwf	??_printf
  4730  0648  0826               	movf	??_printf,w
  4731  0649  07B3               	addwf	printf@c,f
  4732  064A  2E29               	goto	L8
  4733  064B                     i1l1857:	
  4734                           ;doprnt.c: 1336: }
  4735                           
  4736                           ;doprnt.c: 1320: break;
  4737                           
  4738  064B  0831               	movf	printf@flag,w
  4739  064C  3980               	andlw	128
  4740                           
  4741                           ; Switch size 1, requested type "space"
  4742                           ; Number of cases is 2, Range of values is 0 to 128
  4743                           ; switch strategies available:
  4744                           ; Name         Instructions Cycles
  4745                           ; simple_byte            7     4 (average)
  4746                           ; jumptable            260     6 (fixed)
  4747                           ;	Chosen strategy is simple_byte
  4748  064D  3A00               	xorlw	0	; case 0
  4749  064E  1903               	skipnz
  4750  064F  2E03               	goto	i1l300
  4751  0650  3A80               	xorlw	128	; case 128
  4752  0651  1903               	skipnz
  4753  0652  2E27               	goto	i1l305
  4754  0653  2E54               	goto	i1l1859
  4755  0654                     i1l1859:	
  4756                           
  4757                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4758  0654  082F               	movf	printf@width,w
  4759  0655  0430               	iorwf	printf@width+1,w
  4760  0656  1903               	btfsc	3,2
  4761  0657  2E62               	goto	i1l309
  4762  0658  0831               	movf	printf@flag,w
  4763  0659  3903               	andlw	3
  4764  065A  1903               	btfsc	3,2
  4765  065B  2E62               	goto	i1l309
  4766                           
  4767                           ;doprnt.c: 1346: width--;
  4768  065C  30FF               	movlw	255
  4769  065D  07AF               	addwf	printf@width,f
  4770  065E  1803               	skipnc
  4771  065F  0AB0               	incf	printf@width+1,f
  4772  0660  30FF               	movlw	255
  4773  0661  07B0               	addwf	printf@width+1,f
  4774  0662                     i1l309:	
  4775                           
  4776                           ;doprnt.c: 1381: if(width > c)
  4777  0662  0833               	movf	printf@c,w
  4778  0663  00A6               	movwf	??_printf
  4779  0664  01A7               	clrf	??_printf+1
  4780  0665  1BA6               	btfsc	??_printf,7
  4781  0666  03A7               	decf	??_printf+1,f
  4782  0667  0827               	movf	??_printf+1,w
  4783  0668  3A80               	xorlw	128
  4784  0669  00A8               	movwf	??_printf+2
  4785  066A  0830               	movf	printf@width+1,w
  4786  066B  3A80               	xorlw	128
  4787  066C  0228               	subwf	??_printf+2,w
  4788  066D  1D03               	skipz
  4789  066E  2E71               	goto	u188_25
  4790  066F  082F               	movf	printf@width,w
  4791  0670  0226               	subwf	??_printf,w
  4792  0671                     u188_25:	
  4793  0671  1803               	skipnc
  4794  0672  2E81               	goto	i1l1867
  4795                           
  4796                           ;doprnt.c: 1382: width -= c;
  4797  0673  1283               	bcf	3,5	;RP0=0, select bank0
  4798  0674  1303               	bcf	3,6	;RP1=0, select bank0
  4799  0675  0833               	movf	printf@c,w
  4800  0676  00A6               	movwf	??_printf
  4801  0677  01A7               	clrf	??_printf+1
  4802  0678  1BA6               	btfsc	??_printf,7
  4803  0679  03A7               	decf	??_printf+1,f
  4804  067A  0826               	movf	??_printf,w
  4805  067B  02AF               	subwf	printf@width,f
  4806  067C  0827               	movf	??_printf+1,w
  4807  067D  1C03               	skipc
  4808  067E  03B0               	decf	printf@width+1,f
  4809  067F  02B0               	subwf	printf@width+1,f
  4810  0680  2E85               	goto	i1l1869
  4811  0681                     i1l1867:	
  4812                           
  4813                           ;doprnt.c: 1383: else
  4814                           ;doprnt.c: 1384: width = 0;
  4815  0681  1283               	bcf	3,5	;RP0=0, select bank0
  4816  0682  1303               	bcf	3,6	;RP1=0, select bank0
  4817  0683  01AF               	clrf	printf@width
  4818  0684  01B0               	clrf	printf@width+1
  4819  0685                     i1l1869:	
  4820                           
  4821                           ;doprnt.c: 1387: if(flag & 0x04) {
  4822  0685  1D31               	btfss	printf@flag,2
  4823  0686  2EA6               	goto	i1l1881
  4824                           
  4825                           ;doprnt.c: 1392: if(flag & 0x03)
  4826  0687  0831               	movf	printf@flag,w
  4827  0688  3903               	andlw	3
  4828  0689  1903               	btfsc	3,2
  4829  068A  2E91               	goto	i1l1875
  4830                           
  4831                           ;doprnt.c: 1393: (putch('-') );
  4832  068B  302D               	movlw	45
  4833  068C  120A  158A  228E  120A  118A  	fcall	_putch
  4834  0691                     i1l1875:	
  4835                           
  4836                           ;doprnt.c: 1415: if(width)
  4837  0691  1283               	bcf	3,5	;RP0=0, select bank0
  4838  0692  1303               	bcf	3,6	;RP1=0, select bank0
  4839  0693                     L9:	
  4840  0693  082F               	movf	printf@width,w
  4841  0694  0430               	iorwf	printf@width+1,w
  4842  0695  1903               	btfsc	3,2
  4843  0696  2EC6               	goto	i1l1891
  4844                           
  4845                           ;doprnt.c: 1417: (putch('0') );
  4846                           
  4847                           ;doprnt.c: 1416: do
  4848  0697  3030               	movlw	48
  4849  0698  120A  158A  228E  120A  118A  	fcall	_putch
  4850                           
  4851                           ;doprnt.c: 1418: while(--width);
  4852  069D  30FF               	movlw	255
  4853  069E  1283               	bcf	3,5	;RP0=0, select bank0
  4854  069F  1303               	bcf	3,6	;RP1=0, select bank0
  4855  06A0  07AF               	addwf	printf@width,f
  4856  06A1  1803               	skipnc
  4857  06A2  0AB0               	incf	printf@width+1,f
  4858  06A3  30FF               	movlw	255
  4859  06A4  07B0               	addwf	printf@width+1,f
  4860  06A5  2E93               	goto	L9
  4861  06A6                     i1l1881:	
  4862                           ;doprnt.c: 1420: } else
  4863                           
  4864                           
  4865                           ;doprnt.c: 1422: {
  4866                           ;doprnt.c: 1424: if(width
  4867                           ;doprnt.c: 1428: )
  4868  06A6  082F               	movf	printf@width,w
  4869  06A7  0430               	iorwf	printf@width+1,w
  4870  06A8  1903               	btfsc	3,2
  4871  06A9  2EBC               	goto	i1l1887
  4872  06AA                     i1l1883:	
  4873                           ;doprnt.c: 1429: do
  4874                           
  4875                           
  4876                           ;doprnt.c: 1430: (putch(' ') );
  4877  06AA  3020               	movlw	32
  4878  06AB  120A  158A  228E  120A  118A  	fcall	_putch
  4879                           
  4880                           ;doprnt.c: 1431: while(--width);
  4881  06B0  30FF               	movlw	255
  4882  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  4883  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  4884  06B3  07AF               	addwf	printf@width,f
  4885  06B4  1803               	skipnc
  4886  06B5  0AB0               	incf	printf@width+1,f
  4887  06B6  30FF               	movlw	255
  4888  06B7  07B0               	addwf	printf@width+1,f
  4889  06B8  082F               	movf	printf@width,w
  4890  06B9  0430               	iorwf	printf@width+1,w
  4891  06BA  1D03               	btfss	3,2
  4892  06BB  2EAA               	goto	i1l1883
  4893  06BC                     i1l1887:	
  4894                           
  4895                           ;doprnt.c: 1438: if(flag & 0x03)
  4896  06BC  0831               	movf	printf@flag,w
  4897  06BD  3903               	andlw	3
  4898  06BE  1903               	btfsc	3,2
  4899  06BF  2EC6               	goto	i1l1891
  4900                           
  4901                           ;doprnt.c: 1439: (putch('-') );
  4902  06C0  302D               	movlw	45
  4903  06C1  120A  158A  228E  120A  118A  	fcall	_putch
  4904  06C6                     i1l1891:	
  4905                           
  4906                           ;doprnt.c: 1469: }
  4907                           ;doprnt.c: 1472: prec = c;
  4908  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  4909  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  4910  06C8  0833               	movf	printf@c,w
  4911  06C9  00A6               	movwf	??_printf
  4912  06CA  0826               	movf	??_printf,w
  4913  06CB  00AC               	movwf	printf@prec
  4914                           
  4915                           ;doprnt.c: 1474: while(prec--) {
  4916  06CC  2F35               	goto	i1l1911
  4917  06CD                     i1l1893:	
  4918                           ;doprnt.c: 1478: {
  4919                           ;doprnt.c: 1483: case 0x00:
  4920                           
  4921                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  4922                           
  4923                           
  4924                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4925  06CD  300A               	movlw	10
  4926  06CE  00F8               	movwf	___lwmod@divisor
  4927  06CF  3000               	movlw	0
  4928  06D0  00F9               	movwf	___lwmod@divisor+1
  4929  06D1  082C               	movf	printf@prec,w
  4930  06D2  00A6               	movwf	??_printf
  4931  06D3  0726               	addwf	??_printf,w
  4932  06D4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4933  06D5  0084               	movwf	4
  4934  06D6  120A  158A  2000  120A  118A  	fcall	stringdir
  4935  06DB  00F0               	movwf	___lwdiv@divisor
  4936  06DC  120A  158A  2000  120A  118A  	fcall	stringdir
  4937  06E1  00F1               	movwf	___lwdiv@divisor+1
  4938  06E2  082E               	movf	printf@val+1,w
  4939  06E3  00F3               	movwf	___lwdiv@dividend+1
  4940  06E4  082D               	movf	printf@val,w
  4941  06E5  00F2               	movwf	___lwdiv@dividend
  4942  06E6  120A  158A  24D9  120A  118A  	fcall	___lwdiv
  4943  06EB  0871               	movf	?___lwdiv+1,w
  4944  06EC  00FB               	movwf	___lwmod@dividend+1
  4945  06ED  0870               	movf	?___lwdiv,w
  4946  06EE  00FA               	movwf	___lwmod@dividend
  4947  06EF  120A  158A  240E  120A  118A  	fcall	___lwmod
  4948  06F4  0878               	movf	?___lwmod,w
  4949  06F5  3E30               	addlw	48
  4950  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  4951  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  4952  06F8  00A7               	movwf	??_printf+1
  4953  06F9  0827               	movf	??_printf+1,w
  4954  06FA  2F2E               	goto	L5
  4955  06FB                     i1l1895:	
  4956                           ;doprnt.c: 1497: case 0x80:
  4957                           
  4958                           ;doprnt.c: 1491: break;
  4959                           
  4960                           
  4961                           ;doprnt.c: 1499: {
  4962                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4963  06FB  082C               	movf	printf@prec,w
  4964  06FC  00A6               	movwf	??_printf
  4965  06FD  0726               	addwf	??_printf,w
  4966  06FE  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  4967  06FF  0084               	movwf	4
  4968  0700  120A  158A  2000  120A  118A  	fcall	stringdir
  4969  0705  00F0               	movwf	___lwdiv@divisor
  4970  0706  120A  158A  2000  120A  118A  	fcall	stringdir
  4971  070B  00F1               	movwf	___lwdiv@divisor+1
  4972  070C  082E               	movf	printf@val+1,w
  4973  070D  00F3               	movwf	___lwdiv@dividend+1
  4974  070E  082D               	movf	printf@val,w
  4975  070F  00F2               	movwf	___lwdiv@dividend
  4976  0710  120A  158A  24D9  120A  118A  	fcall	___lwdiv
  4977  0715  0870               	movf	?___lwdiv,w
  4978  0716  390F               	andlw	15
  4979  0717  1283               	bcf	3,5	;RP0=0, select bank0
  4980  0718  1303               	bcf	3,6	;RP1=0, select bank0
  4981  0719  00A7               	movwf	??_printf+1
  4982  071A  0827               	movf	??_printf+1,w
  4983  071B  00A9               	movwf	printf@idx
  4984                           
  4985                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  4986  071C  1AB1               	btfsc	printf@flag,5
  4987  071D  2F20               	goto	i1l1901
  4988  071E  3024               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  4989  071F  2F21               	goto	L6
  4990  0720                     i1l1901:	
  4991  0720  3013               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  4992  0721                     L6:	
  4993  0721  00A6               	movwf	??_printf
  4994  0722  0826               	movf	??_printf,w
  4995  0723  00AA               	movwf	_printf$738
  4996  0724  0829               	movf	printf@idx,w
  4997  0725  072A               	addwf	_printf$738,w
  4998  0726  0084               	movwf	4
  4999  0727  120A  158A  2000  120A  118A  	fcall	stringdir
  5000  072C  00A6               	movwf	??_printf
  5001  072D  0826               	movf	??_printf,w
  5002  072E                     L5:	
  5003  072E  00B3               	movwf	printf@c
  5004  072F                     i1l1909:	
  5005                           ;doprnt.c: 1523: }
  5006                           
  5007                           ;doprnt.c: 1508: }
  5008                           ;doprnt.c: 1510: break;
  5009                           
  5010                           
  5011                           ;doprnt.c: 1524: (putch(c) );
  5012  072F  0833               	movf	printf@c,w
  5013  0730  120A  158A  228E  120A  118A  	fcall	_putch
  5014  0735                     i1l1911:	
  5015  0735  30FF               	movlw	255
  5016  0736  1283               	bcf	3,5	;RP0=0, select bank0
  5017  0737  1303               	bcf	3,6	;RP1=0, select bank0
  5018  0738  00A6               	movwf	??_printf
  5019  0739  0826               	movf	??_printf,w
  5020  073A  07AC               	addwf	printf@prec,f
  5021  073B  0A2C               	incf	printf@prec,w
  5022  073C  1903               	btfsc	3,2
  5023  073D  2D3A               	goto	i1l1913
  5024  073E  0831               	movf	printf@flag,w
  5025  073F  3980               	andlw	128
  5026                           
  5027                           ; Switch size 1, requested type "space"
  5028                           ; Number of cases is 2, Range of values is 0 to 128
  5029                           ; switch strategies available:
  5030                           ; Name         Instructions Cycles
  5031                           ; simple_byte            7     4 (average)
  5032                           ; jumptable            260     6 (fixed)
  5033                           ;	Chosen strategy is simple_byte
  5034  0740  3A00               	xorlw	0	; case 0
  5035  0741  1903               	skipnz
  5036  0742  2ECD               	goto	i1l1893
  5037  0743  3A80               	xorlw	128	; case 128
  5038  0744  1903               	skipnz
  5039  0745  2EFB               	goto	i1l1895
  5040  0746  2F2F               	goto	i1l1909
  5041  0747  2F2F               	goto	i1l1909
  5042  0748                     i1l334:	
  5043                           ;doprnt.c: 1540: return 0;
  5044                           ;	Return value of _printf is never used
  5045                           
  5046                           ;doprnt.c: 1525: }
  5047                           ;doprnt.c: 1533: }
  5048                           ;doprnt.c: 1535: alldone:
  5049                           
  5050  0748  0008               	return
  5051  0749                     __end_of_printf:	
  5052                           
  5053                           	psect	text19
  5054  0A8E                     __ptext19:	
  5055 ;; *************** function _putch *****************
  5056 ;; Defined at:
  5057 ;;		line 35 in file "panda17.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  data            1    wreg     unsigned char 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  data            1    0[COMMON] unsigned char 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  1    wreg      void 
  5064 ;; Registers used:
  5065 ;;		wreg
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5071 ;;      Params:         0       0       0       0       0
  5072 ;;      Locals:         1       0       0       0       0
  5073 ;;      Temps:          0       0       0       0       0
  5074 ;;      Totals:         1       0       0       0       0
  5075 ;;Total ram usage:        1 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_printf
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           
  5085                           ;psect for function _putch
  5086  0A8E                     _putch:	
  5087                           
  5088                           ;incstack = 0
  5089                           ; Regs used in _putch: [wreg]
  5090                           ;putch@data stored from wreg
  5091  0A8E  00F0               	movwf	putch@data
  5092  0A8F                     i1l72:	
  5093                           ;panda17.c: 37: continue;
  5094                           
  5095                           ;panda17.c: 36: while(!PIR1bits.TXIF)
  5096                           
  5097  0A8F  1283               	bcf	3,5	;RP0=0, select bank0
  5098  0A90  1303               	bcf	3,6	;RP1=0, select bank0
  5099  0A91  1E0C               	btfss	12,4	;volatile
  5100  0A92  2A8F               	goto	i1l72
  5101                           
  5102                           ;panda17.c: 38: TXREG = data;
  5103  0A93  0870               	movf	putch@data,w
  5104  0A94  0099               	movwf	25	;volatile
  5105  0A95  0008               	return
  5106  0A96                     __end_of_putch:	
  5107                           
  5108                           	psect	text20
  5109  0A96                     __ptext20:	
  5110 ;; *************** function _isdigit *****************
  5111 ;; Defined at:
  5112 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;  c               1    wreg     unsigned char 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;  c               1    1[COMMON] unsigned char 
  5117 ;; Return value:  Size  Location     Type
  5118 ;;		None               void
  5119 ;; Registers used:
  5120 ;;		wreg, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5126 ;;      Params:         0       0       0       0       0
  5127 ;;      Locals:         2       0       0       0       0
  5128 ;;      Temps:          0       0       0       0       0
  5129 ;;      Totals:         2       0       0       0       0
  5130 ;;Total ram usage:        2 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_printf
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139                           
  5140                           ;psect for function _isdigit
  5141  0A96                     _isdigit:	
  5142                           
  5143                           ;incstack = 0
  5144                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5145                           ;isdigit@c stored from wreg
  5146  0A96  00F1               	movwf	isdigit@c
  5147  0A97  01F0               	clrf	_isdigit$924
  5148  0A98  303A               	movlw	58
  5149  0A99  0271               	subwf	isdigit@c,w
  5150  0A9A  1803               	skipnc
  5151  0A9B  2AA2               	goto	i1l1655
  5152  0A9C  3030               	movlw	48
  5153  0A9D  0271               	subwf	isdigit@c,w
  5154  0A9E  1C03               	skipc
  5155  0A9F  2AA2               	goto	i1l1655
  5156  0AA0  01F0               	clrf	_isdigit$924
  5157  0AA1  0AF0               	incf	_isdigit$924,f
  5158  0AA2                     i1l1655:	
  5159  0AA2  0C70               	rrf	_isdigit$924,w
  5160  0AA3  0008               	return
  5161  0AA4                     __end_of_isdigit:	
  5162                           
  5163                           	psect	text21
  5164  0AE8                     __ptext21:	
  5165 ;; *************** function ___wmul *****************
  5166 ;; Defined at:
  5167 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  multiplier      2    0[COMMON] unsigned int 
  5170 ;;  multiplicand    2    2[COMMON] unsigned int 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  product         2    4[COMMON] unsigned int 
  5173 ;; Return value:  Size  Location     Type
  5174 ;;                  2    0[COMMON] unsigned int 
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, status,0
  5177 ;; Tracked objects:
  5178 ;;		On entry : 0/0
  5179 ;;		On exit  : 0/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5182 ;;      Params:         4       0       0       0       0
  5183 ;;      Locals:         2       0       0       0       0
  5184 ;;      Temps:          0       0       0       0       0
  5185 ;;      Totals:         6       0       0       0       0
  5186 ;;Total ram usage:        6 bytes
  5187 ;; Hardware stack levels used:    1
  5188 ;; This function calls:
  5189 ;;		Nothing
  5190 ;; This function is called by:
  5191 ;;		_ints_isr
  5192 ;;		_printf
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           
  5197                           ;psect for function ___wmul
  5198  0AE8                     ___wmul:	
  5199                           
  5200                           ;incstack = 0
  5201                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5202  0AE8  01F4               	clrf	___wmul@product
  5203  0AE9  01F5               	clrf	___wmul@product+1
  5204  0AEA                     i1l1661:	
  5205  0AEA  1C70               	btfss	___wmul@multiplier,0
  5206  0AEB  2AF2               	goto	i1l418
  5207  0AEC  0872               	movf	___wmul@multiplicand,w
  5208  0AED  07F4               	addwf	___wmul@product,f
  5209  0AEE  1803               	skipnc
  5210  0AEF  0AF5               	incf	___wmul@product+1,f
  5211  0AF0  0873               	movf	___wmul@multiplicand+1,w
  5212  0AF1  07F5               	addwf	___wmul@product+1,f
  5213  0AF2                     i1l418:	
  5214  0AF2  3001               	movlw	1
  5215  0AF3                     u157_25:	
  5216  0AF3  1003               	clrc
  5217  0AF4  0DF2               	rlf	___wmul@multiplicand,f
  5218  0AF5  0DF3               	rlf	___wmul@multiplicand+1,f
  5219  0AF6  3EFF               	addlw	-1
  5220  0AF7  1D03               	skipz
  5221  0AF8  2AF3               	goto	u157_25
  5222  0AF9  3001               	movlw	1
  5223  0AFA                     u158_25:	
  5224  0AFA  1003               	clrc
  5225  0AFB  0CF1               	rrf	___wmul@multiplier+1,f
  5226  0AFC  0CF0               	rrf	___wmul@multiplier,f
  5227  0AFD  3EFF               	addlw	-1
  5228  0AFE  1D03               	skipz
  5229  0AFF  2AFA               	goto	u158_25
  5230  0B00  0870               	movf	___wmul@multiplier,w
  5231  0B01  0471               	iorwf	___wmul@multiplier+1,w
  5232  0B02  1D03               	btfss	3,2
  5233  0B03  2AEA               	goto	i1l1661
  5234  0B04  0875               	movf	___wmul@product+1,w
  5235  0B05  00F1               	movwf	?___wmul+1
  5236  0B06  0874               	movf	___wmul@product,w
  5237  0B07  00F0               	movwf	?___wmul
  5238  0B08  0008               	return
  5239  0B09                     __end_of___wmul:	
  5240                           
  5241                           	psect	text22
  5242  0C0E                     __ptext22:	
  5243 ;; *************** function ___lwmod *****************
  5244 ;; Defined at:
  5245 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;  divisor         2    8[COMMON] unsigned int 
  5248 ;;  dividend        2   10[COMMON] unsigned int 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  counter         1   13[COMMON] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  2    8[COMMON] unsigned int 
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5260 ;;      Params:         4       0       0       0       0
  5261 ;;      Locals:         1       0       0       0       0
  5262 ;;      Temps:          1       0       0       0       0
  5263 ;;      Totals:         6       0       0       0       0
  5264 ;;Total ram usage:        6 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; This function calls:
  5267 ;;		Nothing
  5268 ;; This function is called by:
  5269 ;;		_printf
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           
  5274                           ;psect for function ___lwmod
  5275  0C0E                     ___lwmod:	
  5276                           
  5277                           ;incstack = 0
  5278                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5279  0C0E  0878               	movf	___lwmod@divisor,w
  5280  0C0F  0479               	iorwf	___lwmod@divisor+1,w
  5281  0C10  1903               	btfsc	3,2
  5282  0C11  2C3B               	goto	i1l1717
  5283  0C12  01FD               	clrf	___lwmod@counter
  5284  0C13  0AFD               	incf	___lwmod@counter,f
  5285  0C14                     i1l1707:	
  5286  0C14  1BF9               	btfsc	___lwmod@divisor+1,7
  5287  0C15  2C22               	goto	i1l1709
  5288  0C16  3001               	movlw	1
  5289  0C17                     u168_25:	
  5290  0C17  1003               	clrc
  5291  0C18  0DF8               	rlf	___lwmod@divisor,f
  5292  0C19  0DF9               	rlf	___lwmod@divisor+1,f
  5293  0C1A  3EFF               	addlw	-1
  5294  0C1B  1D03               	skipz
  5295  0C1C  2C17               	goto	u168_25
  5296  0C1D  3001               	movlw	1
  5297  0C1E  00FC               	movwf	??___lwmod
  5298  0C1F  087C               	movf	??___lwmod,w
  5299  0C20  07FD               	addwf	___lwmod@counter,f
  5300  0C21  2C14               	goto	i1l1707
  5301  0C22                     i1l1709:	
  5302  0C22  0879               	movf	___lwmod@divisor+1,w
  5303  0C23  027B               	subwf	___lwmod@dividend+1,w
  5304  0C24  1D03               	skipz
  5305  0C25  2C28               	goto	u170_25
  5306  0C26  0878               	movf	___lwmod@divisor,w
  5307  0C27  027A               	subwf	___lwmod@dividend,w
  5308  0C28                     u170_25:	
  5309  0C28  1C03               	skipc
  5310  0C29  2C30               	goto	i1l1713
  5311  0C2A  0878               	movf	___lwmod@divisor,w
  5312  0C2B  02FA               	subwf	___lwmod@dividend,f
  5313  0C2C  0879               	movf	___lwmod@divisor+1,w
  5314  0C2D  1C03               	skipc
  5315  0C2E  03FB               	decf	___lwmod@dividend+1,f
  5316  0C2F  02FB               	subwf	___lwmod@dividend+1,f
  5317  0C30                     i1l1713:	
  5318  0C30  3001               	movlw	1
  5319  0C31                     u171_25:	
  5320  0C31  1003               	clrc
  5321  0C32  0CF9               	rrf	___lwmod@divisor+1,f
  5322  0C33  0CF8               	rrf	___lwmod@divisor,f
  5323  0C34  3EFF               	addlw	-1
  5324  0C35  1D03               	skipz
  5325  0C36  2C31               	goto	u171_25
  5326  0C37  3001               	movlw	1
  5327  0C38  02FD               	subwf	___lwmod@counter,f
  5328  0C39  1D03               	btfss	3,2
  5329  0C3A  2C22               	goto	i1l1709
  5330  0C3B                     i1l1717:	
  5331  0C3B  087B               	movf	___lwmod@dividend+1,w
  5332  0C3C  00F9               	movwf	?___lwmod+1
  5333  0C3D  087A               	movf	___lwmod@dividend,w
  5334  0C3E  00F8               	movwf	?___lwmod
  5335  0C3F  0008               	return
  5336  0C40                     __end_of___lwmod:	
  5337                           
  5338                           	psect	text23
  5339  0CD9                     __ptext23:	
  5340 ;; *************** function ___lwdiv *****************
  5341 ;; Defined at:
  5342 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  divisor         2    0[COMMON] unsigned int 
  5345 ;;  dividend        2    2[COMMON] unsigned int 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  quotient        2    5[COMMON] unsigned int 
  5348 ;;  counter         1    7[COMMON] unsigned char 
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  2    0[COMMON] unsigned int 
  5351 ;; Registers used:
  5352 ;;		wreg, status,2, status,0
  5353 ;; Tracked objects:
  5354 ;;		On entry : 0/0
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5358 ;;      Params:         4       0       0       0       0
  5359 ;;      Locals:         3       0       0       0       0
  5360 ;;      Temps:          1       0       0       0       0
  5361 ;;      Totals:         8       0       0       0       0
  5362 ;;Total ram usage:        8 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; This function calls:
  5365 ;;		Nothing
  5366 ;; This function is called by:
  5367 ;;		_printf
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           
  5372                           ;psect for function ___lwdiv
  5373  0CD9                     ___lwdiv:	
  5374                           
  5375                           ;incstack = 0
  5376                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5377  0CD9  01F5               	clrf	___lwdiv@quotient
  5378  0CDA  01F6               	clrf	___lwdiv@quotient+1
  5379  0CDB  0870               	movf	___lwdiv@divisor,w
  5380  0CDC  0471               	iorwf	___lwdiv@divisor+1,w
  5381  0CDD  1903               	btfsc	3,2
  5382  0CDE  2D10               	goto	i1l1695
  5383  0CDF  01F7               	clrf	___lwdiv@counter
  5384  0CE0  0AF7               	incf	___lwdiv@counter,f
  5385  0CE1                     i1l1683:	
  5386  0CE1  1BF1               	btfsc	___lwdiv@divisor+1,7
  5387  0CE2  2CEF               	goto	i1l1685
  5388  0CE3  3001               	movlw	1
  5389  0CE4                     u161_25:	
  5390  0CE4  1003               	clrc
  5391  0CE5  0DF0               	rlf	___lwdiv@divisor,f
  5392  0CE6  0DF1               	rlf	___lwdiv@divisor+1,f
  5393  0CE7  3EFF               	addlw	-1
  5394  0CE8  1D03               	skipz
  5395  0CE9  2CE4               	goto	u161_25
  5396  0CEA  3001               	movlw	1
  5397  0CEB  00F4               	movwf	??___lwdiv
  5398  0CEC  0874               	movf	??___lwdiv,w
  5399  0CED  07F7               	addwf	___lwdiv@counter,f
  5400  0CEE  2CE1               	goto	i1l1683
  5401  0CEF                     i1l1685:	
  5402  0CEF  3001               	movlw	1
  5403  0CF0                     u163_25:	
  5404  0CF0  1003               	clrc
  5405  0CF1  0DF5               	rlf	___lwdiv@quotient,f
  5406  0CF2  0DF6               	rlf	___lwdiv@quotient+1,f
  5407  0CF3  3EFF               	addlw	-1
  5408  0CF4  1D03               	skipz
  5409  0CF5  2CF0               	goto	u163_25
  5410  0CF6  0871               	movf	___lwdiv@divisor+1,w
  5411  0CF7  0273               	subwf	___lwdiv@dividend+1,w
  5412  0CF8  1D03               	skipz
  5413  0CF9  2CFC               	goto	u164_25
  5414  0CFA  0870               	movf	___lwdiv@divisor,w
  5415  0CFB  0272               	subwf	___lwdiv@dividend,w
  5416  0CFC                     u164_25:	
  5417  0CFC  1C03               	skipc
  5418  0CFD  2D05               	goto	i1l1691
  5419  0CFE  0870               	movf	___lwdiv@divisor,w
  5420  0CFF  02F2               	subwf	___lwdiv@dividend,f
  5421  0D00  0871               	movf	___lwdiv@divisor+1,w
  5422  0D01  1C03               	skipc
  5423  0D02  03F3               	decf	___lwdiv@dividend+1,f
  5424  0D03  02F3               	subwf	___lwdiv@dividend+1,f
  5425  0D04  1475               	bsf	___lwdiv@quotient,0
  5426  0D05                     i1l1691:	
  5427  0D05  3001               	movlw	1
  5428  0D06                     u165_25:	
  5429  0D06  1003               	clrc
  5430  0D07  0CF1               	rrf	___lwdiv@divisor+1,f
  5431  0D08  0CF0               	rrf	___lwdiv@divisor,f
  5432  0D09  3EFF               	addlw	-1
  5433  0D0A  1D03               	skipz
  5434  0D0B  2D06               	goto	u165_25
  5435  0D0C  3001               	movlw	1
  5436  0D0D  02F7               	subwf	___lwdiv@counter,f
  5437  0D0E  1D03               	btfss	3,2
  5438  0D0F  2CEF               	goto	i1l1685
  5439  0D10                     i1l1695:	
  5440  0D10  0876               	movf	___lwdiv@quotient+1,w
  5441  0D11  00F1               	movwf	?___lwdiv+1
  5442  0D12  0875               	movf	___lwdiv@quotient,w
  5443  0D13  00F0               	movwf	?___lwdiv
  5444  0D14  0008               	return
  5445  0D15                     __end_of___lwdiv:	
  5446                           
  5447                           	psect	text24
  5448  0C73                     __ptext24:	
  5449 ;; *************** function _ds_set *****************
  5450 ;; Defined at:
  5451 ;;		line 13 in file "ds1307.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  data            1    wreg     PTR unsigned char 
  5454 ;;		 -> time(7), 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  data            1   11[COMMON] PTR unsigned char 
  5457 ;;		 -> time(7), 
  5458 ;;  j               1   12[COMMON] unsigned char 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      void 
  5461 ;; Registers used:
  5462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5468 ;;      Params:         0       0       0       0       0
  5469 ;;      Locals:         2       0       0       0       0
  5470 ;;      Temps:          1       0       0       0       0
  5471 ;;      Totals:         3       0       0       0       0
  5472 ;;Total ram usage:        3 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    1
  5475 ;; This function calls:
  5476 ;;		i1_i2c_start
  5477 ;;		i1_i2c_stop
  5478 ;;		i1_i2c_write
  5479 ;; This function is called by:
  5480 ;;		_ints_isr
  5481 ;; This function uses a non-reentrant model
  5482 ;;
  5483                           
  5484                           
  5485                           ;psect for function _ds_set
  5486  0C73                     _ds_set:	
  5487                           
  5488                           ;incstack = 0
  5489                           ; Regs used in _ds_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5490                           ;ds_set@data stored from wreg
  5491  0C73  00FB               	movwf	ds_set@data
  5492                           
  5493                           ;ds1307.c: 14: unsigned char j;
  5494                           ;ds1307.c: 15: for (j=0;j<7;j++){
  5495  0C74  01FC               	clrf	ds_set@j
  5496  0C75                     L10:	
  5497  0C75  3007               	movlw	7
  5498  0C76  027C               	subwf	ds_set@j,w
  5499  0C77  1803               	btfsc	3,0
  5500  0C78  0008               	return
  5501                           
  5502                           ;ds1307.c: 16: i2c_start();
  5503  0C79  120A  158A  232C  120A  158A  	fcall	i1_i2c_start
  5504                           
  5505                           ;ds1307.c: 17: i2c_write(0b11010000,1);
  5506  0C7E  01F0               	clrf	i1i2c_write@ack
  5507  0C7F  0AF0               	incf	i1i2c_write@ack,f
  5508  0C80  30D0               	movlw	208
  5509  0C81  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  5510                           
  5511                           ;ds1307.c: 18: i2c_write(j,1);
  5512  0C86  01F0               	clrf	i1i2c_write@ack
  5513  0C87  0AF0               	incf	i1i2c_write@ack,f
  5514  0C88  087C               	movf	ds_set@j,w
  5515  0C89  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  5516                           
  5517                           ;ds1307.c: 19: i2c_write(*(data+j),1);
  5518  0C8E  01F0               	clrf	i1i2c_write@ack
  5519  0C8F  0AF0               	incf	i1i2c_write@ack,f
  5520  0C90  087C               	movf	ds_set@j,w
  5521  0C91  077B               	addwf	ds_set@data,w
  5522  0C92  00FA               	movwf	??_ds_set
  5523  0C93  087A               	movf	??_ds_set,w
  5524  0C94  0084               	movwf	4
  5525  0C95  1383               	bcf	3,7	;select IRP bank0
  5526  0C96  0800               	movf	0,w
  5527  0C97  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  5528                           
  5529                           ;ds1307.c: 20: i2c_stop();
  5530  0C9C  120A  158A  234F  120A  158A  	fcall	i1_i2c_stop
  5531  0CA1  3001               	movlw	1
  5532  0CA2  00FA               	movwf	??_ds_set
  5533  0CA3  087A               	movf	??_ds_set,w
  5534  0CA4  07FC               	addwf	ds_set@j,f
  5535  0CA5  2C75               	goto	L10
  5536  0CA6                     __end_of_ds_set:	
  5537                           
  5538                           	psect	text25
  5539  0BDD                     __ptext25:	
  5540 ;; *************** function _ds_get *****************
  5541 ;; Defined at:
  5542 ;;		line 25 in file "ds1307.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  data            1    wreg     unsigned char 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  data            1   11[COMMON] unsigned char 
  5547 ;;  resp            1   12[COMMON] unsigned char 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  1    wreg      unsigned char 
  5550 ;; Registers used:
  5551 ;;		wreg, status,2, status,0, pclath, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5557 ;;      Params:         0       0       0       0       0
  5558 ;;      Locals:         2       0       0       0       0
  5559 ;;      Temps:          1       0       0       0       0
  5560 ;;      Totals:         3       0       0       0       0
  5561 ;;Total ram usage:        3 bytes
  5562 ;; Hardware stack levels used:    1
  5563 ;; Hardware stack levels required when called:    1
  5564 ;; This function calls:
  5565 ;;		_i2c_rstart
  5566 ;;		i1_i2c_read
  5567 ;;		i1_i2c_start
  5568 ;;		i1_i2c_stop
  5569 ;;		i1_i2c_write
  5570 ;; This function is called by:
  5571 ;;		_ints_isr
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           
  5576                           ;psect for function _ds_get
  5577  0BDD                     _ds_get:	
  5578                           
  5579                           ;incstack = 0
  5580                           ; Regs used in _ds_get: [wreg+status,2+status,0+pclath+cstack]
  5581                           ;ds_get@data stored from wreg
  5582  0BDD  00FB               	movwf	ds_get@data
  5583                           
  5584                           ;ds1307.c: 26: unsigned char resp;
  5585                           ;ds1307.c: 27: i2c_start();
  5586  0BDE  120A  158A  232C  120A  158A  	fcall	i1_i2c_start
  5587                           
  5588                           ;ds1307.c: 28: i2c_write(0b11010000,1);
  5589  0BE3  01F0               	clrf	i1i2c_write@ack
  5590  0BE4  0AF0               	incf	i1i2c_write@ack,f
  5591  0BE5  30D0               	movlw	208
  5592  0BE6  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  5593                           
  5594                           ;ds1307.c: 29: i2c_write(data,1);
  5595  0BEB  01F0               	clrf	i1i2c_write@ack
  5596  0BEC  0AF0               	incf	i1i2c_write@ack,f
  5597  0BED  087B               	movf	ds_get@data,w
  5598  0BEE  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  5599                           
  5600                           ;ds1307.c: 30: i2c_rstart();
  5601  0BF3  120A  158A  2309  120A  158A  	fcall	_i2c_rstart
  5602                           
  5603                           ;ds1307.c: 31: i2c_write(0b11010001,1);
  5604  0BF8  01F0               	clrf	i1i2c_write@ack
  5605  0BF9  0AF0               	incf	i1i2c_write@ack,f
  5606  0BFA  30D1               	movlw	209
  5607  0BFB  120A  158A  2440  120A  158A  	fcall	i1_i2c_write
  5608                           
  5609                           ;ds1307.c: 32: resp = i2c_read(0);
  5610  0C00  3000               	movlw	0
  5611  0C01  120A  158A  2693  120A  158A  	fcall	i1_i2c_read
  5612  0C06  00FA               	movwf	??_ds_get
  5613  0C07  087A               	movf	??_ds_get,w
  5614  0C08  00FC               	movwf	ds_get@resp
  5615                           
  5616                           ;ds1307.c: 33: i2c_stop();
  5617  0C09  120A  158A  234F   	fcall	i1_i2c_stop
  5618                           
  5619                           ;ds1307.c: 34: return resp;
  5620  0C0C  087C               	movf	ds_get@resp,w
  5621  0C0D  0008               	return
  5622  0C0E                     __end_of_ds_get:	
  5623                           
  5624                           	psect	text26
  5625  0C40                     __ptext26:	
  5626 ;; *************** function i1_i2c_write *****************
  5627 ;; Defined at:
  5628 ;;		line 39 in file "i2clib.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  datum           1    wreg     unsigned char 
  5631 ;;  ack             1    0[COMMON] unsigned char 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  datum           1    9[COMMON] unsigned char 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      unsigned char 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5643 ;;      Params:         1       0       0       0       0
  5644 ;;      Locals:         1       0       0       0       0
  5645 ;;      Temps:          8       0       0       0       0
  5646 ;;      Totals:        10       0       0       0       0
  5647 ;;Total ram usage:       10 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; This function calls:
  5650 ;;		Nothing
  5651 ;; This function is called by:
  5652 ;;		_si_read_h
  5653 ;;		_si_read_t
  5654 ;;		_ds_set
  5655 ;;		_ds_get
  5656 ;;		i1_mem_write
  5657 ;;		i1_mem_read
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function i1_i2c_write
  5663  0C40                     i1_i2c_write:	
  5664                           
  5665                           ;incstack = 0
  5666                           ; Regs used in i1_i2c_write: [wreg+status,2+status,0]
  5667                           ;i1i2c_write@datum stored from wreg
  5668  0C40  00F9               	movwf	i1i2c_write@datum
  5669  0C41                     i1l1563:	
  5670                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5671                           
  5672  0C41  1683               	bsf	3,5	;RP0=1, select bank1
  5673  0C42  1303               	bcf	3,6	;RP1=0, select bank1
  5674  0C43  0811               	movf	17,w	;volatile
  5675  0C44  3901               	andlw	1
  5676  0C45  00F1               	movwf	??i1_i2c_write
  5677  0C46  0C11               	rrf	17,w	;volatile
  5678  0C47  3901               	andlw	1
  5679  0C48  00F2               	movwf	??i1_i2c_write+1
  5680  0C49  0C11               	rrf	17,w	;volatile
  5681  0C4A  00F3               	movwf	??i1_i2c_write+2
  5682  0C4B  0CF3               	rrf	??i1_i2c_write+2,f
  5683  0C4C  0C73               	rrf	??i1_i2c_write+2,w
  5684  0C4D  3901               	andlw	1
  5685  0C4E  00F4               	movwf	??i1_i2c_write+3
  5686  0C4F  0E11               	swapf	17,w	;volatile
  5687  0C50  3901               	andlw	1
  5688  0C51  00F5               	movwf	??i1_i2c_write+4
  5689  0C52  0C11               	rrf	17,w	;volatile
  5690  0C53  00F6               	movwf	??i1_i2c_write+5
  5691  0C54  0C76               	rrf	??i1_i2c_write+5,w
  5692  0C55  3901               	andlw	1
  5693  0C56  00F7               	movwf	??i1_i2c_write+6
  5694  0C57  0C14               	rrf	20,w	;volatile
  5695  0C58  00F8               	movwf	??i1_i2c_write+7
  5696  0C59  0C78               	rrf	??i1_i2c_write+7,w
  5697  0C5A  3901               	andlw	1
  5698  0C5B  0477               	iorwf	??i1_i2c_write+6,w
  5699  0C5C  0475               	iorwf	??i1_i2c_write+4,w
  5700  0C5D  0474               	iorwf	??i1_i2c_write+3,w
  5701  0C5E  0472               	iorwf	??i1_i2c_write+1,w
  5702  0C5F  0471               	iorwf	??i1_i2c_write,w
  5703  0C60  1D03               	btfss	3,2
  5704  0C61  2C41               	goto	i1l1563
  5705                           
  5706                           ;i2clib.c: 42: SSPBUF = datum;
  5707  0C62  0879               	movf	i1i2c_write@datum,w
  5708  0C63  1283               	bcf	3,5	;RP0=0, select bank0
  5709  0C64  1303               	bcf	3,6	;RP1=0, select bank0
  5710  0C65  0093               	movwf	19	;volatile
  5711  0C66                     i1l173:	
  5712                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  5713                           
  5714  0C66  1683               	bsf	3,5	;RP0=1, select bank1
  5715  0C67  1303               	bcf	3,6	;RP1=0, select bank1
  5716  0C68  1814               	btfsc	20,0	;volatile
  5717  0C69  2C66               	goto	i1l173
  5718                           
  5719                           ;i2clib.c: 44: if(ack){
  5720  0C6A  0870               	movf	i1i2c_write@ack,w
  5721  0C6B  1903               	btfsc	3,2
  5722  0C6C  2C6F               	goto	i1l180
  5723  0C6D                     i1l177:	
  5724                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  5725                           
  5726  0C6D  1B11               	btfsc	17,6	;volatile
  5727  0C6E  2C6D               	goto	i1l177
  5728  0C6F                     i1l180:	
  5729                           ;i2clib.c: 46: }
  5730                           ;i2clib.c: 47: }
  5731                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  5732                           
  5733  0C6F  1283               	bcf	3,5	;RP0=0, select bank0
  5734  0C70  198C               	btfsc	12,3	;volatile
  5735  0C71  0008               	return
  5736  0C72  2C6F               	goto	i1l180
  5737  0C73                     __end_ofi1_i2c_write:	
  5738                           
  5739                           	psect	text27
  5740  0B4F                     __ptext27:	
  5741 ;; *************** function i1_i2c_stop *****************
  5742 ;; Defined at:
  5743 ;;		line 34 in file "i2clib.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;		None
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;		None
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, status,2, status,0
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5757 ;;      Params:         0       0       0       0       0
  5758 ;;      Locals:         0       0       0       0       0
  5759 ;;      Temps:          8       0       0       0       0
  5760 ;;      Totals:         8       0       0       0       0
  5761 ;;Total ram usage:        8 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; This function calls:
  5764 ;;		Nothing
  5765 ;; This function is called by:
  5766 ;;		_si_read_h
  5767 ;;		_si_read_t
  5768 ;;		_ds_set
  5769 ;;		_ds_get
  5770 ;;		i1_mem_write
  5771 ;;		i1_mem_read
  5772 ;; This function uses a non-reentrant model
  5773 ;;
  5774                           
  5775                           
  5776                           ;psect for function i1_i2c_stop
  5777  0B4F                     i1_i2c_stop:	
  5778  0B4F                     i1l1559:	
  5779                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5780                           
  5781                           ;incstack = 0
  5782                           ; Regs used in i1_i2c_stop: [wreg+status,2+status,0]
  5783                           
  5784  0B4F  1683               	bsf	3,5	;RP0=1, select bank1
  5785  0B50  1303               	bcf	3,6	;RP1=0, select bank1
  5786  0B51  0811               	movf	17,w	;volatile
  5787  0B52  3901               	andlw	1
  5788  0B53  00F0               	movwf	??i1_i2c_stop
  5789  0B54  0C11               	rrf	17,w	;volatile
  5790  0B55  3901               	andlw	1
  5791  0B56  00F1               	movwf	??i1_i2c_stop+1
  5792  0B57  0C11               	rrf	17,w	;volatile
  5793  0B58  00F2               	movwf	??i1_i2c_stop+2
  5794  0B59  0CF2               	rrf	??i1_i2c_stop+2,f
  5795  0B5A  0C72               	rrf	??i1_i2c_stop+2,w
  5796  0B5B  3901               	andlw	1
  5797  0B5C  00F3               	movwf	??i1_i2c_stop+3
  5798  0B5D  0E11               	swapf	17,w	;volatile
  5799  0B5E  3901               	andlw	1
  5800  0B5F  00F4               	movwf	??i1_i2c_stop+4
  5801  0B60  0C11               	rrf	17,w	;volatile
  5802  0B61  00F5               	movwf	??i1_i2c_stop+5
  5803  0B62  0C75               	rrf	??i1_i2c_stop+5,w
  5804  0B63  3901               	andlw	1
  5805  0B64  00F6               	movwf	??i1_i2c_stop+6
  5806  0B65  0C14               	rrf	20,w	;volatile
  5807  0B66  00F7               	movwf	??i1_i2c_stop+7
  5808  0B67  0C77               	rrf	??i1_i2c_stop+7,w
  5809  0B68  3901               	andlw	1
  5810  0B69  0476               	iorwf	??i1_i2c_stop+6,w
  5811  0B6A  0474               	iorwf	??i1_i2c_stop+4,w
  5812  0B6B  0473               	iorwf	??i1_i2c_stop+3,w
  5813  0B6C  0471               	iorwf	??i1_i2c_stop+1,w
  5814  0B6D  0470               	iorwf	??i1_i2c_stop,w
  5815  0B6E  1D03               	btfss	3,2
  5816  0B6F  2B4F               	goto	i1l1559
  5817                           
  5818                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  5819  0B70  1511               	bsf	17,2	;volatile
  5820  0B71  0008               	return
  5821  0B72                     __end_ofi1_i2c_stop:	
  5822                           
  5823                           	psect	text28
  5824  0B2C                     __ptext28:	
  5825 ;; *************** function i1_i2c_start *****************
  5826 ;; Defined at:
  5827 ;;		line 24 in file "i2clib.c"
  5828 ;; Parameters:    Size  Location     Type
  5829 ;;		None
  5830 ;; Auto vars:     Size  Location     Type
  5831 ;;		None
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      void 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5841 ;;      Params:         0       0       0       0       0
  5842 ;;      Locals:         0       0       0       0       0
  5843 ;;      Temps:          8       0       0       0       0
  5844 ;;      Totals:         8       0       0       0       0
  5845 ;;Total ram usage:        8 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; This function calls:
  5848 ;;		Nothing
  5849 ;; This function is called by:
  5850 ;;		_si_read_h
  5851 ;;		_si_read_t
  5852 ;;		_ds_set
  5853 ;;		_ds_get
  5854 ;;		i1_mem_write
  5855 ;;		i1_mem_read
  5856 ;; This function uses a non-reentrant model
  5857 ;;
  5858                           
  5859                           
  5860                           ;psect for function i1_i2c_start
  5861  0B2C                     i1_i2c_start:	
  5862  0B2C                     i1l1555:	
  5863                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5864                           
  5865                           ;incstack = 0
  5866                           ; Regs used in i1_i2c_start: [wreg+status,2+status,0]
  5867                           
  5868  0B2C  1683               	bsf	3,5	;RP0=1, select bank1
  5869  0B2D  1303               	bcf	3,6	;RP1=0, select bank1
  5870  0B2E  0811               	movf	17,w	;volatile
  5871  0B2F  3901               	andlw	1
  5872  0B30  00F0               	movwf	??i1_i2c_start
  5873  0B31  0C11               	rrf	17,w	;volatile
  5874  0B32  3901               	andlw	1
  5875  0B33  00F1               	movwf	??i1_i2c_start+1
  5876  0B34  0C11               	rrf	17,w	;volatile
  5877  0B35  00F2               	movwf	??i1_i2c_start+2
  5878  0B36  0CF2               	rrf	??i1_i2c_start+2,f
  5879  0B37  0C72               	rrf	??i1_i2c_start+2,w
  5880  0B38  3901               	andlw	1
  5881  0B39  00F3               	movwf	??i1_i2c_start+3
  5882  0B3A  0E11               	swapf	17,w	;volatile
  5883  0B3B  3901               	andlw	1
  5884  0B3C  00F4               	movwf	??i1_i2c_start+4
  5885  0B3D  0C11               	rrf	17,w	;volatile
  5886  0B3E  00F5               	movwf	??i1_i2c_start+5
  5887  0B3F  0C75               	rrf	??i1_i2c_start+5,w
  5888  0B40  3901               	andlw	1
  5889  0B41  00F6               	movwf	??i1_i2c_start+6
  5890  0B42  0C14               	rrf	20,w	;volatile
  5891  0B43  00F7               	movwf	??i1_i2c_start+7
  5892  0B44  0C77               	rrf	??i1_i2c_start+7,w
  5893  0B45  3901               	andlw	1
  5894  0B46  0476               	iorwf	??i1_i2c_start+6,w
  5895  0B47  0474               	iorwf	??i1_i2c_start+4,w
  5896  0B48  0473               	iorwf	??i1_i2c_start+3,w
  5897  0B49  0471               	iorwf	??i1_i2c_start+1,w
  5898  0B4A  0470               	iorwf	??i1_i2c_start,w
  5899  0B4B  1D03               	btfss	3,2
  5900  0B4C  2B2C               	goto	i1l1555
  5901                           
  5902                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  5903  0B4D  1411               	bsf	17,0	;volatile
  5904  0B4E  0008               	return
  5905  0B4F                     __end_ofi1_i2c_start:	
  5906                           
  5907                           	psect	text29
  5908  0E93                     __ptext29:	
  5909 ;; *************** function i1_i2c_read *****************
  5910 ;; Defined at:
  5911 ;;		line 51 in file "i2clib.c"
  5912 ;; Parameters:    Size  Location     Type
  5913 ;;  ack             1    wreg     unsigned char 
  5914 ;; Auto vars:     Size  Location     Type
  5915 ;;  ack             1    9[COMMON] unsigned char 
  5916 ;;  i2c_read        1    8[COMMON] unsigned char 
  5917 ;; Return value:  Size  Location     Type
  5918 ;;                  1    wreg      unsigned char 
  5919 ;; Registers used:
  5920 ;;		wreg, status,2, status,0
  5921 ;; Tracked objects:
  5922 ;;		On entry : 0/0
  5923 ;;		On exit  : 0/0
  5924 ;;		Unchanged: 0/0
  5925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5926 ;;      Params:         0       0       0       0       0
  5927 ;;      Locals:         2       0       0       0       0
  5928 ;;      Temps:          8       0       0       0       0
  5929 ;;      Totals:        10       0       0       0       0
  5930 ;;Total ram usage:       10 bytes
  5931 ;; Hardware stack levels used:    1
  5932 ;; This function calls:
  5933 ;;		Nothing
  5934 ;; This function is called by:
  5935 ;;		_si_read_h
  5936 ;;		_si_read_t
  5937 ;;		_ds_get
  5938 ;;		i1_mem_read
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           
  5943                           ;psect for function i1_i2c_read
  5944  0E93                     i1_i2c_read:	
  5945                           
  5946                           ;incstack = 0
  5947                           ; Regs used in i1_i2c_read: [wreg+status,2+status,0]
  5948                           ;i1i2c_read@ack stored from wreg
  5949  0E93  00F9               	movwf	i1i2c_read@ack
  5950                           
  5951                           ;i2clib.c: 52: unsigned char resp;
  5952                           ;i2clib.c: 53: static bit flag, not_flag;
  5953                           ;i2clib.c: 54: flag = ack & 0x01;
  5954  0E94  1283               	bcf	3,5	;RP0=0, select bank0
  5955  0E95  1303               	bcf	3,6	;RP1=0, select bank0
  5956  0E96  10DF               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  5957  0E97  1879               	btfsc	i1i2c_read@ack,0
  5958  0E98  14DF               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  5959                           
  5960                           ;i2clib.c: 55: if (ack == 1){
  5961  0E99  0379               	decf	i1i2c_read@ack,w
  5962  0E9A  1D03               	btfss	3,2
  5963  0E9B  2E9F               	goto	i1l1577
  5964                           
  5965                           ;i2clib.c: 56: not_flag = 0;
  5966  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  5967  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  5968  0E9E  105F               	bcf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  5969  0E9F                     i1l1577:	
  5970                           
  5971                           ;i2clib.c: 57: }
  5972                           ;i2clib.c: 58: if (ack == 3){
  5973  0E9F  3003               	movlw	3
  5974  0EA0  0679               	xorwf	i1i2c_read@ack,w
  5975  0EA1  1D03               	btfss	3,2
  5976  0EA2  2EA6               	goto	i1l1581
  5977                           
  5978                           ;i2clib.c: 59: not_flag = 1;
  5979  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  5980  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  5981  0EA5  145F               	bsf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  5982  0EA6                     i1l1581:	
  5983                           ;i2clib.c: 60: }
  5984                           ;i2clib.c: 61: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5985                           
  5986  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  5987  0EA7  1303               	bcf	3,6	;RP1=0, select bank1
  5988  0EA8  0811               	movf	17,w	;volatile
  5989  0EA9  3901               	andlw	1
  5990  0EAA  00F0               	movwf	??i1_i2c_read
  5991  0EAB  0C11               	rrf	17,w	;volatile
  5992  0EAC  3901               	andlw	1
  5993  0EAD  00F1               	movwf	??i1_i2c_read+1
  5994  0EAE  0C11               	rrf	17,w	;volatile
  5995  0EAF  00F2               	movwf	??i1_i2c_read+2
  5996  0EB0  0CF2               	rrf	??i1_i2c_read+2,f
  5997  0EB1  0C72               	rrf	??i1_i2c_read+2,w
  5998  0EB2  3901               	andlw	1
  5999  0EB3  00F3               	movwf	??i1_i2c_read+3
  6000  0EB4  0E11               	swapf	17,w	;volatile
  6001  0EB5  3901               	andlw	1
  6002  0EB6  00F4               	movwf	??i1_i2c_read+4
  6003  0EB7  0C11               	rrf	17,w	;volatile
  6004  0EB8  00F5               	movwf	??i1_i2c_read+5
  6005  0EB9  0C75               	rrf	??i1_i2c_read+5,w
  6006  0EBA  3901               	andlw	1
  6007  0EBB  00F6               	movwf	??i1_i2c_read+6
  6008  0EBC  0C14               	rrf	20,w	;volatile
  6009  0EBD  00F7               	movwf	??i1_i2c_read+7
  6010  0EBE  0C77               	rrf	??i1_i2c_read+7,w
  6011  0EBF  3901               	andlw	1
  6012  0EC0  0476               	iorwf	??i1_i2c_read+6,w
  6013  0EC1  0474               	iorwf	??i1_i2c_read+4,w
  6014  0EC2  0473               	iorwf	??i1_i2c_read+3,w
  6015  0EC3  0471               	iorwf	??i1_i2c_read+1,w
  6016  0EC4  0470               	iorwf	??i1_i2c_read,w
  6017  0EC5  1D03               	btfss	3,2
  6018  0EC6  2EA6               	goto	i1l1581
  6019                           
  6020                           ;i2clib.c: 62: SSPCON2bits.RCEN = 1;
  6021  0EC7  1591               	bsf	17,3	;volatile
  6022  0EC8                     i1l195:	
  6023                           ;i2clib.c: 63: while(!SSPSTATbits.BF);
  6024                           
  6025  0EC8  1C14               	btfss	20,0	;volatile
  6026  0EC9  2EC8               	goto	i1l195
  6027  0ECA                     i1l198:	
  6028                           ;i2clib.c: 64: while(!PIR1bits.SSPIF);
  6029                           
  6030  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  6031  0ECB  1D8C               	btfss	12,3	;volatile
  6032  0ECC  2ECA               	goto	i1l198
  6033                           
  6034                           ;i2clib.c: 65: SSPCON2bits.ACKDT = not_flag;
  6035  0ECD  1C5F               	btfss	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  6036  0ECE  2ED3               	goto	u146_20
  6037  0ECF  1683               	bsf	3,5	;RP0=1, select bank1
  6038  0ED0  1303               	bcf	3,6	;RP1=0, select bank1
  6039  0ED1  1691               	bsf	17,5	;volatile
  6040  0ED2  2ED6               	goto	u147_24
  6041  0ED3                     u146_20:	
  6042  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  6043  0ED4  1303               	bcf	3,6	;RP1=0, select bank1
  6044  0ED5  1291               	bcf	17,5	;volatile
  6045  0ED6                     u147_24:	
  6046                           
  6047                           ;i2clib.c: 66: SSPCON2bits.ACKEN = flag;
  6048  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  6049  0ED7  1303               	bcf	3,6	;RP1=0, select bank0
  6050  0ED8  1CDF               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  6051  0ED9  2EDE               	goto	u148_20
  6052  0EDA  1683               	bsf	3,5	;RP0=1, select bank1
  6053  0EDB  1303               	bcf	3,6	;RP1=0, select bank1
  6054  0EDC  1611               	bsf	17,4	;volatile
  6055  0EDD  2EE1               	goto	i1l1583
  6056  0EDE                     u148_20:	
  6057  0EDE  1683               	bsf	3,5	;RP0=1, select bank1
  6058  0EDF  1303               	bcf	3,6	;RP1=0, select bank1
  6059  0EE0  1211               	bcf	17,4	;volatile
  6060  0EE1                     i1l1583:	
  6061                           
  6062                           ;i2clib.c: 67: resp = SSPBUF;
  6063  0EE1  1283               	bcf	3,5	;RP0=0, select bank0
  6064  0EE2  1303               	bcf	3,6	;RP1=0, select bank0
  6065  0EE3  0813               	movf	19,w	;volatile
  6066  0EE4  00F0               	movwf	??i1_i2c_read
  6067  0EE5  0870               	movf	??i1_i2c_read,w
  6068  0EE6  00F8               	movwf	i1i2c_read@resp
  6069  0EE7                     i1l201:	
  6070                           ;i2clib.c: 68: while(SSPSTATbits.BF);
  6071                           
  6072  0EE7  1683               	bsf	3,5	;RP0=1, select bank1
  6073  0EE8  1303               	bcf	3,6	;RP1=0, select bank1
  6074  0EE9  1814               	btfsc	20,0	;volatile
  6075  0EEA  2EE7               	goto	i1l201
  6076                           
  6077                           ;i2clib.c: 69: return resp;
  6078  0EEB  0878               	movf	i1i2c_read@resp,w
  6079  0EEC  0008               	return
  6080  0EED                     __end_ofi1_i2c_read:	
  6081                           
  6082                           	psect	text30
  6083  0B09                     __ptext30:	
  6084 ;; *************** function _i2c_rstart *****************
  6085 ;; Defined at:
  6086 ;;		line 29 in file "i2clib.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;		None
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;		None
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1    wreg      void 
  6093 ;; Registers used:
  6094 ;;		wreg, status,2, status,0
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6100 ;;      Params:         0       0       0       0       0
  6101 ;;      Locals:         0       0       0       0       0
  6102 ;;      Temps:          8       0       0       0       0
  6103 ;;      Totals:         8       0       0       0       0
  6104 ;;Total ram usage:        8 bytes
  6105 ;; Hardware stack levels used:    1
  6106 ;; This function calls:
  6107 ;;		Nothing
  6108 ;; This function is called by:
  6109 ;;		_si_read_h
  6110 ;;		_si_read_t
  6111 ;;		_ds_get
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           
  6116                           ;psect for function _i2c_rstart
  6117  0B09                     _i2c_rstart:	
  6118  0B09                     i1l1645:	
  6119                           ;i2clib.c: 30: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  6120                           
  6121                           ;incstack = 0
  6122                           ; Regs used in _i2c_rstart: [wreg+status,2+status,0]
  6123                           
  6124  0B09  1683               	bsf	3,5	;RP0=1, select bank1
  6125  0B0A  1303               	bcf	3,6	;RP1=0, select bank1
  6126  0B0B  0811               	movf	17,w	;volatile
  6127  0B0C  3901               	andlw	1
  6128  0B0D  00F0               	movwf	??_i2c_rstart
  6129  0B0E  0C11               	rrf	17,w	;volatile
  6130  0B0F  3901               	andlw	1
  6131  0B10  00F1               	movwf	??_i2c_rstart+1
  6132  0B11  0C11               	rrf	17,w	;volatile
  6133  0B12  00F2               	movwf	??_i2c_rstart+2
  6134  0B13  0CF2               	rrf	??_i2c_rstart+2,f
  6135  0B14  0C72               	rrf	??_i2c_rstart+2,w
  6136  0B15  3901               	andlw	1
  6137  0B16  00F3               	movwf	??_i2c_rstart+3
  6138  0B17  0E11               	swapf	17,w	;volatile
  6139  0B18  3901               	andlw	1
  6140  0B19  00F4               	movwf	??_i2c_rstart+4
  6141  0B1A  0C11               	rrf	17,w	;volatile
  6142  0B1B  00F5               	movwf	??_i2c_rstart+5
  6143  0B1C  0C75               	rrf	??_i2c_rstart+5,w
  6144  0B1D  3901               	andlw	1
  6145  0B1E  00F6               	movwf	??_i2c_rstart+6
  6146  0B1F  0C14               	rrf	20,w	;volatile
  6147  0B20  00F7               	movwf	??_i2c_rstart+7
  6148  0B21  0C77               	rrf	??_i2c_rstart+7,w
  6149  0B22  3901               	andlw	1
  6150  0B23  0476               	iorwf	??_i2c_rstart+6,w
  6151  0B24  0474               	iorwf	??_i2c_rstart+4,w
  6152  0B25  0473               	iorwf	??_i2c_rstart+3,w
  6153  0B26  0471               	iorwf	??_i2c_rstart+1,w
  6154  0B27  0470               	iorwf	??_i2c_rstart,w
  6155  0B28  1D03               	btfss	3,2
  6156  0B29  2B09               	goto	i1l1645
  6157                           
  6158                           ;i2clib.c: 31: SSPCON2bits.RSEN = 1;
  6159  0B2A  1491               	bsf	17,1	;volatile
  6160  0B2B  0008               	return
  6161  0B2C                     __end_of_i2c_rstart:	
  6162  007E                     btemp	set	126	;btemp
  6163  007E                     wtemp0	set	126


Data Sizes:
    Strings     74
    Constant    18
    Data        1
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      65
    BANK1            80     20      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf$738	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_13(CODE[17]), STR_12(CODE[17]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_11(CODE[2]), STR_10(CODE[5]), STR_9(CODE[7]), STR_8(CODE[4]), 
		 -> STR_7(CODE[3]), STR_6(CODE[2]), STR_5(CODE[3]), STR_4(CODE[4]), 
		 -> STR_3(CODE[7]), STR_2(CODE[6]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    ds_set@data	PTR unsigned char  size(1) Largest target is 7
		 -> time(BANK0[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ints_isr in COMMON

    _ints_isr->_si_read_h
    _ints_isr->_si_read_t
    _ints_isr->i1_mem_write
    i1_mem_init->i1_mem_write
    i1_mem_write->_ds_get
    i1_mem_write->i1_mem_read
    i1_mem_read->i1_i2c_read
    i1_mem_read->i1_i2c_write
    _si_read_t->i1_i2c_read
    _si_read_t->i1_i2c_write
    _si_read_h->i1_i2c_read
    _si_read_h->i1_i2c_write
    _printf->___lwmod
    _printf->_si_read_h
    _printf->_si_read_t
    ___lwmod->___lwdiv
    _ds_set->i1_i2c_write
    _ds_get->i1_i2c_read
    _ds_get->i1_i2c_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _ints_isr in BANK0

    _ints_isr->_printf
    i1_mem_init->i1_mem_write
    i1_mem_write->i1_mem_read
    _printf->_si_read_h
    _printf->_si_read_t

Critical Paths under _main in BANK1

    _main->_mem_init
    _si_reset->_i2c_write
    _mem_init->_mem_read
    _mem_init->_mem_write
    _mem_write->_i2c_write
    _mem_read->_i2c_read
    _mem_read->_i2c_write

Critical Paths under _ints_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ints_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ints_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7169
                                             18 BANK1      2     2      0
                           _i2c_init
                        _init_timer2
                           _mem_init
                           _si_reset
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _si_reset                                             0     0      0    1268
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _mem_init                                             2     2      0    5681
                                             16 BANK1      2     2      0
                           _mem_read
                          _mem_write
 ---------------------------------------------------------------------------------
 (2) _mem_write                                            6     3      3    3440
                                             10 BANK1      6     3      3
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _mem_read                                             6     4      2    2218
                                             10 BANK1      6     4      2
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                           10     9      1    1268
                                              0 BANK1     10     9      1
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             8     8      0       0
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            8     8      0       0
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                            10    10      0      89
                                              0 BANK1     10    10      0
 ---------------------------------------------------------------------------------
 (1) _init_timer2                                          6     4      2     220
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ints_isr                                            33    33      0   15622
                                             20 BANK0     33    33      0
                             ___wmul
                             _ds_get
                             _ds_set
                             _printf
                          _si_read_h
                          _si_read_t
                         i1_mem_init
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_init                                           2     2      0    3259
                                              8 BANK0      2     2      0
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_write                                          6     3      3    1924
                                             13 COMMON     1     1      0
                                              3 BANK0      5     2      3
                             ___wmul (ARG)
                             _ds_get (ARG)
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
                         i1_mem_read (ARG)
 ---------------------------------------------------------------------------------
 (5) i1_mem_read                                           6     4      2    1312
                                             10 COMMON     3     1      2
                                              0 BANK0      3     3      0
                             ___wmul (ARG)
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _si_read_t                                            8     6      2     798
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _si_read_h                                            8     6      2     799
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _printf                                              24    22      2    3413
                                              4 BANK0     16    14      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
                             _ds_get (ARG)
                            _isdigit
                              _putch
                          _si_read_h (ARG)
                          _si_read_t (ARG)
                         i1_mem_read (ARG)
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     418
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _ds_set                                               3     3      0     758
                                             10 COMMON     3     3      0
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _ds_get                                               3     3      0     750
                                             10 COMMON     3     3      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) i1_i2c_write                                         10     9      1     616
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (6) i1_i2c_stop                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (6) i1_i2c_start                                          8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (6) i1_i2c_read                                          10    10      0      89
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (6) _i2c_rstart                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _init_timer2
   _mem_init
     _mem_read
       _i2c_read
       _i2c_start
       _i2c_stop
       _i2c_write
     _mem_write
       _i2c_start
       _i2c_stop
       _i2c_write
   _si_reset
     _i2c_start
     _i2c_stop
     _i2c_write
   _uart_init

 _ints_isr (ROOT)
   ___wmul
   _ds_get
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _ds_set
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _ds_get (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     _isdigit (ARG)
     _putch (ARG)
     _si_read_h (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     _si_read_t (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     i1_mem_read (ARG)
       ___wmul (ARG)
       i1_i2c_read (ARG)
       i1_i2c_start (ARG)
       i1_i2c_stop (ARG)
       i1_i2c_write (ARG)
   _si_read_h
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _si_read_t
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   i1_mem_init
     i1_mem_read
       ___wmul (ARG)
       i1_i2c_read (ARG)
       i1_i2c_start (ARG)
       i1_i2c_stop (ARG)
       i1_i2c_write (ARG)
     i1_mem_write
       ___wmul (ARG)
       _ds_get (ARG)
         _i2c_rstart
         i1_i2c_read
         i1_i2c_start
         i1_i2c_stop
         i1_i2c_write
       i1_i2c_start (ARG)
       i1_i2c_stop (ARG)
       i1_i2c_write (ARG)
       i1_mem_read (ARG)
         ___wmul (ARG)
         i1_i2c_read (ARG)
         i1_i2c_start (ARG)
         i1_i2c_stop (ARG)
         i1_i2c_write (ARG)
   i1_mem_read
     ___wmul (ARG)
     i1_i2c_read (ARG)
     i1_i2c_start (ARG)
     i1_i2c_stop (ARG)
     i1_i2c_write (ARG)
   i1_mem_write
     ___wmul (ARG)
     _ds_get (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     i1_i2c_start (ARG)
     i1_i2c_stop (ARG)
     i1_i2c_write (ARG)
     i1_mem_read (ARG)
       ___wmul (ARG)
       i1_i2c_read (ARG)
       i1_i2c_start (ARG)
       i1_i2c_stop (ARG)
       i1_i2c_write (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     14      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     35      41       5       81.3%
BITBANK0            50      0       1       4        1.3%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      63      12        0.0%
ABS                  0      0      63       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Sep 06 19:12:36 2017

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      fsr 0004       ___wmul@multiplicand 0072            si_read_h@rta_h 0020  
          si_read_h@rta_l 0021                       l201 07AA                       l129 0E39  
                     l180 0CD5                       l173 0CCC                       l177 0CD3  
                     l195 0789                       l198 078B                       _PR2 0092  
            __CFG_CPD$OFF 0000                       _led 0060                       fsr0 0004  
          si_read_t@rta_h 0020                       indf 0000            si_read_t@rta_l 0021  
            __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000                i1_mem_init 0EED  
                    l1523 0B95                i1_mem_read 0D15                      l1541 075E  
                    l1519 0B72                      l1527 0CA9                      l1545 0767  
                    l1537 0756                      l1547 07A2                      STR_1 083A  
                    STR_2 084A                      STR_3 0842                      STR_4 0859  
                    STR_5 085A                      STR_6 0860                      STR_7 085D  
                    STR_8 0855                      STR_9 0849                      u1300 079F  
                    u2015 0BC1                      u1280 0794                      u2307 0E25  
                    u1294 0797                      u2297 0E10                      i1l72 0A8F  
                    i1l91 003E                      i1l84 0264                      i1l95 0149  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 0DEF  
                    _secs 0055                      _time 0058                      btemp 007E  
                    start 0012             __CFG_MCLRE$ON 0000                     ?_main 0070  
                   STR_10 0850                     STR_11 0860                     STR_12 0818  
                   STR_13 0829             __CFG_WDTE$OFF 0000               i2c_read@ack 00A9  
                   _T2CON 0012               i1_mem_write 0D5B           __end_of___lwdiv 0D15  
                   i1l100 0263                     i1l104 01AD                     i1l201 0EE7  
                   i1l121 0526                     i1l300 0603                     i1l108 01D3  
                   i1l118 03E3                     i1l305 0627                     i1l180 0C6F  
                   i1l173 0C66                     i1l309 0662                     i1l334 0748  
                   i1l280 055D                     i1l177 0C6D           __end_of___lwmod 0C40  
                   i1l418 0AF2                     i1l195 0EC8                     i1l292 05DA  
                   i1l293 05BA                     i1l198 0ECA                     i1l294 05BB  
                   _RCREG 001A                     _SPBRG 0099                     _TRISA 0085  
                   _TRISB 0086                     _TXREG 0019              ?_init_timer2 00A0  
         __end_of_dpowers 0810                     _milis 0057           __end_of_isdigit 0AA4  
             ?i1_i2c_read 0070               ?i1_i2c_stop 0070                     _putch 0A8E  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 0015              __end_of_main 0E3A  
              _i2c_rstart 0B09          __end_of_i2c_init 0AB3          __end_of_i2c_read 07AE  
        __end_of_i2c_stop 0BB8                    ??_main 00B2               mem_init@aux 00B1  
             mem_read@add 00AA               mem_read@rta 00AD               ?i1_mem_init 0070  
             ?i1_mem_read 007A                    ?_putch 0070              i2c_read@flag 02F9  
                  i1l2105 0205                    i1l2121 0250                    i1l2131 0273  
                  i1l2117 0227                    i1l2207 0525                    i1l2055 0079  
                  i1l2081 01A8                    i1l2057 0122                    i1l2147 03DD  
                  i1l2091 01C4                    i1l2075 0197                    i1l2067 0158  
                  i1l2149 03E4                    i1l2077 019E                    i1l2095 01CC  
                  i1l1713 0C30                    i1l1555 0B2C                    i1l1563 0C41  
                  i1l1707 0C14                    i1l1803 0562                    i1l1645 0B09  
                  i1l1581 0EA6                    i1l1709 0C22                    i1l1717 0C3B  
                  i1l1661 0AEA                    i1l1901 0720                    i1l1805 056D  
            i2c_read@resp 00A8                    i1l1583 0EE1                    i1l1559 0B4F  
                  i1l1655 0AA2                    i1l1911 0735                    i1l1831 05F6  
                  i1l1577 0E9F                    i1l1809 057F                    i1l1913 053A  
                  i1l1691 0D05                    i1l1683 0CE1                    i1l1819 05BD  
                  i1l1685 0CEF                    i1l1909 072F                    i1l1695 0D10  
                  i1l1881 06A6                    i1l1857 064B                    i1l1883 06AA  
                  i1l1891 06C6                    i1l1875 0691                    i1l1867 0681  
                  i1l1859 0654                    i1l1893 06CD                    i1l1869 0685  
                  i1l1797 0557                    u211_25 0152                    i1l1895 06FB  
                  i1l1887 06BC                    u208_25 007F                    _INTCON 000B  
                  u161_25 0CE4                    u146_20 0ED3                    u170_25 0C28  
                  u147_24 0ED6                    u163_25 0CF0                    u171_25 0C31  
                  u148_20 0EDE                    u164_25 0CFC                    u165_25 0D06  
                  u157_25 0AF3                    u181_25 0620                    u158_25 0AFA  
                  u168_25 0C17                    u184_25 0644                    u188_25 0671  
                  _OSCCON 008F                    _SPBRGH 009A                    _SSPADD 0093  
                  _SSPBUF 0013        __size_of_i2c_start 0023        __size_of_i2c_write 0033  
          __CFG_PWRTE$OFF 0000                    ___wmul 0AE8                 ??___lwdiv 0074  
               ??___lwmod 007C                    _ds_get 0BDD          __end_of_mem_init 0FA3  
        __end_of_mem_read 0DEF                    _ds_set 0C73       __size_ofi1_i2c_read 005A  
     __size_ofi1_i2c_stop 0023                    _printf 0533              ?i1_i2c_start 0070  
        __end_of_ints_isr 0533              ?i1_i2c_write 0070          __end_of_si_reset 0AE8  
               ??_isdigit 0070                    saved_w 007E              i2c_write@ack 00A0  
 __end_of__initialization 0024            i1i2c_read@resp 0078            __pcstackCOMMON 0070  
             ?_i2c_rstart 0070              __pidataBANK0 07FC             __end_of_putch 0A96  
     __size_ofi1_mem_init 005A       __size_ofi1_mem_read 0046          i1i2c_write@datum 0079  
       __end_of_i2c_start 0B95         __end_of_i2c_write 0CD9      __size_of_init_timer2 0025  
                 ??_putch 0070               ints_isr@add 0045               ints_isr@arg 0054  
             ints_isr@aux 004B               ints_isr@rcv 003E                __pbssBANK0 0055  
               ?_i2c_init 0070                 ?_i2c_read 0070                 ?_i2c_stop 0070  
          i1i2c_write@ack 0070        __size_of_mem_write 004E                __pmaintext 0DEF  
                 ?___wmul 0070                __pintentry 0004                   ?_ds_get 0070  
                 ?_ds_set 0070        __size_of_si_read_h 005D        __size_of_si_read_t 0059  
                 ?_printf 0024              ?i1_mem_write 0023        __size_of_uart_init 0018  
            ??i1_i2c_read 0070              ??i1_i2c_stop 0070       __size_of_i2c_rstart 0023  
              __stringtab 0800                ??_i2c_init 00A0                ??_i2c_read 00A0  
               ?_mem_init 0070                 ?_mem_read 00AA                ??_i2c_stop 00A0  
               ?_ints_isr 0070                 ?_si_reset 0070           __size_of___wmul 0021  
                 ___lwdiv 0CD9                   ___lwmod 0C0E           __size_of_ds_get 0031  
         __size_of_ds_set 0033              mem_write@add 00AA        __end_ofi1_i2c_read 0EED  
      __end_ofi1_i2c_stop 0B72                   __ptext1 0AB3                   __ptext2 0ACB  
                 __ptext3 0F47                   __ptext4 07AE                   __ptext5 0DA5  
                 __ptext6 0CA6                   __ptext7 0B95                   __ptext8 0B72  
                 __ptext9 0749           __size_of_printf 0216         __end_of_hexpowers 0818  
                 _dpowers 0806         __end_of_mem_write 07FC                   _isdigit 0A96  
    __size_ofi1_i2c_start 0023      __size_ofi1_i2c_write 0033                   ds_set@j 007C  
            ??i1_mem_init 0028              ??i1_mem_read 007C      end_of_initialization 0024  
       __end_of_si_read_h 1000         __end_of_si_read_t 0E93                ??_mem_init 00B0  
              ??_mem_read 00AC                ??_ints_isr 0034         __end_of_uart_init 0ACB  
              ??_si_reset 00AA             _ints_isr$1143 003C                 _RCSTAbits 0018  
                 printf@c 0033                   printf@f 0032                _printf$738 002A  
      __end_ofi1_mem_init 0F47        __end_ofi1_mem_read 0D5B                 _PORTBbits 0006  
          i1mem_write@add 0023                ds_get@data 007B                 _TRISBbits 0086  
               _TRISCbits 0087                ds_get@resp 007C               printf@width 002F  
               _TXSTAbits 0098                ds_set@data 007B              ??_i2c_rstart 0070  
          __end_of___wmul 0B09               _BAUDCTLbits 0187            __end_of_ds_get 0C0E  
          __end_of_ds_set 0CA6             __pbitbssBANK0 02F8            __end_of_printf 0749  
     start_initialization 0015      __size_ofi1_mem_write 004A                 _i2c_start 0B72  
               _i2c_write 0CA6        __end_of_i2c_rstart 0B2C  __CFG_FOSC$INTRC_NOCLKOUT 0000  
       __size_of_i2c_init 000F         __size_of_i2c_read 0065         __size_of_i2c_stop 0023  
                ??___wmul 0074                  ??_ds_get 007A                  ??_ds_set 007A  
             __pdataBANK0 0060                  ??_printf 0026              ints_isr@ferr 02FB  
            ints_isr@oerr 02FA             i1i2c_read@ack 0079             ??_init_timer2 00A2  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
              ?_i2c_start 0070                ?_i2c_write 00A0                ints_isr@dt 003F  
              ints_isr@up 0049            mem_write@add_h 00AE            mem_write@add_l 00AF  
       __size_of_mem_init 005C         __size_of_mem_read 004A          ___lwdiv@dividend 0072  
       __size_of_ints_isr 050B         __size_of_si_reset 001D                  ?___lwdiv 0070  
                ?___lwmod 0078           init_timer2@post 00A0                 __pstrings 0800  
           mem_read@add_h 00AE             mem_read@add_l 00AF                  ?_isdigit 0070  
               _hexpowers 0810          ___lwdiv@quotient 0075                 _mem_write 07AE  
           i1mem_init@aux 0029             i1mem_read@add 007A             i1mem_read@rta 0020  
          __size_of_putch 0008       __end_of_init_timer2 0BDD         interrupt_function 0004  
          ___wmul@product 0074                  _PIE1bits 008C                 _si_read_h 0FA3  
               _si_read_t 0E3A                  _PIR1bits 000C                 _uart_init 0AB3  
           ??i1_i2c_start 0070             ??i1_i2c_write 0071               __stringbase 0805  
            si_read_h@rta 0022         ___wmul@multiplier 0070              si_read_t@rta 0022  
              printf@flag 0031                printf@prec 002C               ??_i2c_start 00A0  
             ??_i2c_write 00A1                ?_mem_write 00AA                  _i2c_init 0AA4  
                _i2c_read 0749                  _i2c_stop 0B95                ?_si_read_h 007A  
              ?_si_read_t 007A                ?_uart_init 0070          __size_of___lwdiv 003C  
        __size_of___lwmod 0032        __end_of__stringtab 0806               _isdigit$924 0070  
              _ANSELHbits 0189                 ints_isr@k 0048                 ints_isr@n 0051  
               ints_isr@o 0053                 ints_isr@u 0044                 ints_isr@z 0047  
           mem_write@data 00AC               _init_timer2 0BB8          __size_of_isdigit 000E  
         ___lwdiv@divisor 0070           i1mem_read@add_h 0021           i1mem_read@add_l 0022  
     __end_ofi1_i2c_start 0B4F           ___lwdiv@counter 0077       __end_ofi1_i2c_write 0C73  
                __ptext10 0BB8                  __ptext11 0AA4                  __ptext20 0A96  
                __ptext12 0028                  __ptext21 0AE8                  __ptext13 0EED  
                __ptext30 0B09                  __ptext22 0C0E                  __ptext14 0D5B  
                __ptext23 0CD9                  __ptext15 0D15                  __ptext24 0C73  
                __ptext16 0E3A                  __ptext25 0BDD                  __ptext17 0FA3  
                __ptext26 0C40                  __ptext18 0533                  __ptext27 0B4F  
                __ptext19 0A8E                  __ptext28 0B2C                  __ptext29 0E93  
       __CFG_BOR4V$BOR21V 0000            init_timer2@eoc 00A1            init_timer2@pre 00A4  
          init_timer2@sfr 00A5                  _mem_init 0F47                  _mem_read 0DA5  
           __size_of_main 004B                  _ints_isr 0028                  _si_reset 0ACB  
        i2c_read@not_flag 02F8                 printf@idx 0029                 printf@val 002D  
           ??i1_mem_write 007D                 putch@data 0070                _INTCONbits 000B  
                isdigit@c 0071               ??_mem_write 00AD                  intlevel1 0000  
        ___lwmod@dividend 007A               ??_si_read_h 007C               ??_si_read_t 007C  
               stringcode 0800               ??_uart_init 00A0                  printf@ap 002B  
             i1_i2c_start 0B2C          i1mem_write@add_h 0026          i1mem_write@add_l 0027  
             i1_i2c_write 0C40           ___lwmod@divisor 0078           ___lwmod@counter 007D  
        ints_isr@temp_add 004D                  stringdir 0800                  stringtab 0800  
        ints_isr@temp_val 0042               _SSPCON2bits 0091       __end_ofi1_mem_write 0DA5  
              i1_i2c_read 0E93           ints_isr@hum_add 004F                i1_i2c_stop 0B4F  
         ints_isr@hum_val 0040           i1mem_write@data 0025                _SSPCONbits 0014  
          i2c_write@datum 00A9  
