

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sat Sep 09 02:15:05 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 1.43
    49                           ; Generated 25/07/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F886 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310                           
   311                           	psect	idataBANK0
   312  07FF                     __pidataBANK0:	
   313                           
   314                           ;initializer for _led
   315  07FF  3405               	retlw	5
   316                           
   317                           	psect	strings
   318  0715                     __pstrings:	
   319  0715                     stringtab:	
   320  0715                     __stringtab:	
   321  0715                     stringcode:	
   322                           ;	String table - string pointers are 1 byte each
   323                           
   324  0715                     stringdir:	
   325  0715  3007               	movlw	high stringdir
   326  0716  008A               	movwf	10
   327  0717  0804               	movf	4,w
   328  0718  0A84               	incf	4,f
   329  0719  0782               	addwf	2,f
   330  071A                     __stringbase:	
   331  071A  3400               	retlw	0
   332  071B                     __end_of__stringtab:	
   333  071B                     _dpowers:	
   334  071B  3401               	retlw	1
   335  071C  3400               	retlw	0
   336  071D  340A               	retlw	10
   337  071E  3400               	retlw	0
   338  071F  3464               	retlw	100
   339  0720  3400               	retlw	0
   340  0721  34E8               	retlw	232
   341  0722  3403               	retlw	3
   342  0723  3410               	retlw	16
   343  0724  3427               	retlw	39
   344  0725                     __end_of_dpowers:	
   345  0725                     _hexpowers:	
   346  0725  3401               	retlw	1
   347  0726  3400               	retlw	0
   348  0727  3410               	retlw	16
   349  0728  3400               	retlw	0
   350  0729  3400               	retlw	0
   351  072A  3401               	retlw	1
   352  072B  3400               	retlw	0
   353  072C  3410               	retlw	16
   354  072D                     __end_of_hexpowers:	
   355  0013                     _SSPBUF	set	19
   356  0014                     _SSPCONbits	set	20
   357  000B                     _INTCON	set	11
   358  0012                     _T2CON	set	18
   359  0006                     _PORTBbits	set	6
   360  001A                     _RCREG	set	26
   361  000B                     _INTCONbits	set	11
   362  0019                     _TXREG	set	25
   363  000C                     _PIR1bits	set	12
   364  0018                     _RCSTAbits	set	24
   365  0091                     _SSPCON2bits	set	145
   366  0087                     _TRISCbits	set	135
   367  0094                     _SSPSTATbits	set	148
   368  0093                     _SSPADD	set	147
   369  0086                     _TRISBbits	set	134
   370  0086                     _TRISB	set	134
   371  0085                     _TRISA	set	133
   372  008F                     _OSCCON	set	143
   373  0092                     _PR2	set	146
   374  0099                     _SPBRG	set	153
   375  009A                     _SPBRGH	set	154
   376  0098                     _TXSTAbits	set	152
   377  008C                     _PIE1bits	set	140
   378  0189                     _ANSELHbits	set	393
   379  0187                     _BAUDCTLbits	set	391
   380  072D                     STR_19:	
   381  072D  3430               	retlw	48	;'0'
   382  072E  3431               	retlw	49	;'1'
   383  072F  3432               	retlw	50	;'2'
   384  0730  3433               	retlw	51	;'3'
   385  0731  3434               	retlw	52	;'4'
   386  0732  3435               	retlw	53	;'5'
   387  0733  3436               	retlw	54	;'6'
   388  0734  3437               	retlw	55	;'7'
   389  0735  3438               	retlw	56	;'8'
   390  0736  3439               	retlw	57	;'9'
   391  0737  3441               	retlw	65	;'A'
   392  0738  3442               	retlw	66	;'B'
   393  0739  3443               	retlw	67	;'C'
   394  073A  3444               	retlw	68	;'D'
   395  073B  3445               	retlw	69	;'E'
   396  073C  3446               	retlw	70	;'F'
   397  073D  3400               	retlw	0
   398  073E                     STR_20:	
   399  073E  3430               	retlw	48	;'0'
   400  073F  3431               	retlw	49	;'1'
   401  0740  3432               	retlw	50	;'2'
   402  0741  3433               	retlw	51	;'3'
   403  0742  3434               	retlw	52	;'4'
   404  0743  3435               	retlw	53	;'5'
   405  0744  3436               	retlw	54	;'6'
   406  0745  3437               	retlw	55	;'7'
   407  0746  3438               	retlw	56	;'8'
   408  0747  3439               	retlw	57	;'9'
   409  0748  3461               	retlw	97	;'a'
   410  0749  3462               	retlw	98	;'b'
   411  074A  3463               	retlw	99	;'c'
   412  074B  3464               	retlw	100	;'d'
   413  074C  3465               	retlw	101	;'e'
   414  074D  3466               	retlw	102	;'f'
   415  074E  3400               	retlw	0
   416  074F                     STR_1:	
   417  074F  3449               	retlw	73	;'I'
   418  0750  3425               	retlw	37	;'%'
   419  0751  3430               	retlw	48	;'0'
   420  0752  3435               	retlw	53	;'5'
   421  0753  3464               	retlw	100	;'d'
   422  0754  340D               	retlw	13
   423  0755  340A               	retlw	10
   424  0756  3400               	retlw	0
   425  0757                     STR_16:	
   426  0757  3449               	retlw	73	;'I'
   427  0758  3425               	retlw	37	;'%'
   428  0759  3430               	retlw	48	;'0'
   429  075A  3434               	retlw	52	;'4'
   430  075B  3478               	retlw	120	;'x'
   431  075C  343B               	retlw	59	;';'
   432  075D  3400               	retlw	0
   433  075E                     STR_9:	
   434  075E  3425               	retlw	37	;'%'
   435  075F  3430               	retlw	48	;'0'
   436  0760  3432               	retlw	50	;'2'
   437  0761  3478               	retlw	120	;'x'
   438  0762  3409               	retlw	9
   439  0763  3400               	retlw	0
   440  0764                     STR_6:	
   441  0764  3425               	retlw	37	;'%'
   442  0765  3430               	retlw	48	;'0'
   443  0766  3432               	retlw	50	;'2'
   444  0767  3478               	retlw	120	;'x'
   445  0768  3420               	retlw	32	;' '
   446  0769  3400               	retlw	0
   447  076A                     STR_7:	
   448  076A  3425               	retlw	37	;'%'
   449  076B  3430               	retlw	48	;'0'
   450  076C  3432               	retlw	50	;'2'
   451  076D  3478               	retlw	120	;'x'
   452  076E  342F               	retlw	47	;'/'
   453  076F  3400               	retlw	0
   454  0770                     STR_5:	
   455  0770  3425               	retlw	37	;'%'
   456  0771  3430               	retlw	48	;'0'
   457  0772  3432               	retlw	50	;'2'
   458  0773  3478               	retlw	120	;'x'
   459  0774  343A               	retlw	58	;':'
   460  0775  3400               	retlw	0
   461  0776                     STR_10:	
   462  0776  3425               	retlw	37	;'%'
   463  0777  3430               	retlw	48	;'0'
   464  0778  3432               	retlw	50	;'2'
   465  0779  3478               	retlw	120	;'x'
   466  077A  3400               	retlw	0
   467  077B                     STR_2:	
   468  077B  3425               	retlw	37	;'%'
   469  077C  3430               	retlw	48	;'0'
   470  077D  3434               	retlw	52	;'4'
   471  077E  3478               	retlw	120	;'x'
   472  077F  3400               	retlw	0
   473  0780                     STR_15:	
   474  0780  3425               	retlw	37	;'%'
   475  0781  3458               	retlw	88	;'X'
   476  0782  3420               	retlw	32	;' '
   477  0783  3400               	retlw	0
   478  0784                     STR_14:	
   479  0784  344F               	retlw	79	;'O'
   480  0785  344B               	retlw	75	;'K'
   481  0786  3400               	retlw	0
   482  0787                     STR_13:	
   483  0787  3458               	retlw	88	;'X'
   484  0788  3400               	retlw	0
   485  0789                     STR_4:	
   486  0789  345A               	retlw	90	;'Z'
   487  078A  3400               	retlw	0
   488  0754                     
   489                           ; #config settings
   490  0000                     
   491                           	psect	cinit
   492  0015                     start_initialization:	
   493  0015                     __initialization:	
   494                           
   495                           ; Initialize objects allocated to BANK0
   496  0015  120A  118A  27FF   	fcall	__pidataBANK0	;fetch initializer
   497  0018  00E0               	movwf	__pdataBANK0& (0+127)
   498                           
   499                           ; Clear objects allocated to BANK0
   500  0019  01D4               	clrf	__pbssBANK0& (0+127)
   501  001A  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   502  001B  01D6               	clrf	(__pbssBANK0+2)& (0+127)
   503  001C  01D7               	clrf	(__pbssBANK0+3)& (0+127)
   504  001D  01D8               	clrf	(__pbssBANK0+4)& (0+127)
   505  001E  01D9               	clrf	(__pbssBANK0+5)& (0+127)
   506  001F  01DA               	clrf	(__pbssBANK0+6)& (0+127)
   507  0020  01DB               	clrf	(__pbssBANK0+7)& (0+127)
   508  0021  01DC               	clrf	(__pbssBANK0+8)& (0+127)
   509  0022  01DD               	clrf	(__pbssBANK0+9)& (0+127)
   510  0023  01DE               	clrf	(__pbssBANK0+10)& (0+127)
   511                           
   512                           ; Clear objects allocated to BITBANK0
   513  0024  01DF               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   514  0025                     end_of_initialization:	
   515                           ;End of C runtime variable initialization code
   516                           
   517  0025                     __end_of__initialization:	
   518  0025  0183               	clrf	3
   519  0026  120A  158A  2DF6   	ljmp	_main	;jump to C main() function
   520                           
   521                           	psect	bitbssBANK0
   522  02F8                     __pbitbssBANK0:	
   523  02F8                     i2c_read@not_flag:	
   524  02F8                     	ds	1
   525  02F9                     i2c_read@flag:	
   526  02F9                     	ds	1
   527  02FA                     ints_isr@oerr:	
   528  02FA                     	ds	1
   529  02FB                     ints_isr@ferr:	
   530  02FB                     	ds	1
   531  02FC                     _fyh:	
   532  02FC                     	ds	1
   533                           
   534                           	psect	bssBANK0
   535  0054                     __pbssBANK0:	
   536  0054                     _secs:	
   537  0054                     	ds	2
   538  0056                     _condition:	
   539  0056                     	ds	1
   540  0057                     _milis:	
   541  0057                     	ds	1
   542  0058                     _time:	
   543  0058                     	ds	7
   544                           
   545                           	psect	dataBANK0
   546  0060                     __pdataBANK0:	
   547  0060                     _led:	
   548  0060                     	ds	1
   549                           
   550                           	psect	cstackBANK1
   551  00A0                     __pcstackBANK1:	
   552  00A0                     ??_i2c_init:	
   553  00A0                     ??_uart_init:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  00A0                     ?_init_timer2:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  00A0                     ??_i2c_start:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  00A0                     ??_i2c_stop:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  00A0                     ?_i2c_write:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  00A0                     ??_i2c_read:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  00A0                     init_timer2@post:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  00A0                     i2c_write@ack:	
   575                           ; 1 bytes @ 0x0
   576                           
   577                           
   578                           ; 1 bytes @ 0x0
   579  00A0                     	ds	1
   580  00A1                     ??_i2c_write:	
   581  00A1                     init_timer2@eoc:	
   582                           ; 1 bytes @ 0x1
   583                           
   584                           
   585                           ; 1 bytes @ 0x1
   586  00A1                     	ds	1
   587  00A2                     ??_init_timer2:	
   588                           
   589                           ; 1 bytes @ 0x2
   590  00A2                     	ds	2
   591  00A4                     init_timer2@pre:	
   592                           
   593                           ; 1 bytes @ 0x4
   594  00A4                     	ds	1
   595  00A5                     init_timer2@sfr:	
   596                           
   597                           ; 1 bytes @ 0x5
   598  00A5                     	ds	3
   599  00A8                     i2c_read@resp:	
   600                           
   601                           ; 1 bytes @ 0x8
   602  00A8                     	ds	1
   603  00A9                     i2c_write@datum:	
   604  00A9                     i2c_read@ack:	
   605                           ; 1 bytes @ 0x9
   606                           
   607                           
   608                           ; 1 bytes @ 0x9
   609  00A9                     	ds	1
   610  00AA                     ?_mem_read:	
   611  00AA                     ?_mem_write:	
   612                           ; 1 bytes @ 0xA
   613                           
   614  00AA                     ??_si_reset:	
   615                           ; 1 bytes @ 0xA
   616                           
   617  00AA                     mem_write@add:	
   618                           ; 1 bytes @ 0xA
   619                           
   620  00AA                     mem_read@add:	
   621                           ; 2 bytes @ 0xA
   622                           
   623                           
   624                           ; 2 bytes @ 0xA
   625  00AA                     	ds	2
   626  00AC                     ??_mem_read:	
   627  00AC                     mem_write@data:	
   628                           ; 1 bytes @ 0xC
   629                           
   630                           
   631                           ; 1 bytes @ 0xC
   632  00AC                     	ds	1
   633  00AD                     ??_mem_write:	
   634  00AD                     mem_read@rta:	
   635                           ; 1 bytes @ 0xD
   636                           
   637                           
   638                           ; 1 bytes @ 0xD
   639  00AD                     	ds	1
   640  00AE                     mem_write@add_h:	
   641  00AE                     mem_read@add_h:	
   642                           ; 1 bytes @ 0xE
   643                           
   644                           
   645                           ; 1 bytes @ 0xE
   646  00AE                     	ds	1
   647  00AF                     mem_write@add_l:	
   648  00AF                     mem_read@add_l:	
   649                           ; 1 bytes @ 0xF
   650                           
   651                           
   652                           ; 1 bytes @ 0xF
   653  00AF                     	ds	1
   654  00B0                     ??_mem_init:	
   655                           
   656                           ; 1 bytes @ 0x10
   657  00B0                     	ds	1
   658  00B1                     mem_init@aux:	
   659                           
   660                           ; 1 bytes @ 0x11
   661  00B1                     	ds	1
   662  00B2                     ??_main:	
   663                           
   664                           ; 1 bytes @ 0x12
   665  00B2                     	ds	2
   666                           
   667                           	psect	cstackCOMMON
   668  0070                     __pcstackCOMMON:	
   669  0070                     ?_isdigit:	
   670  0070                     ?_ds_get:	
   671                           ; 1 bit 
   672                           
   673  0070                     ?_ds_set:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_i2c_init:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_si_reset:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ??_isdigit:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_uart_init:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_putch:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_putch:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_mem_init:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_save_the_date:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_ints_isr:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_i2c_start:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ?_i2c_rstart:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ??_i2c_rstart:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_i2c_stop:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_i2c_read:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ?i1_mem_init:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?i1_i2c_start:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ??i1_i2c_start:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?i1_i2c_stop:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0070                     ??i1_i2c_stop:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     ?i1_i2c_write:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0070                     ?i1_i2c_read:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0070                     ??i1_i2c_read:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0070                     ?_main:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?___wmul:	
   746                           ; 2 bytes @ 0x0
   747                           
   748  0070                     ?___lwdiv:	
   749                           ; 2 bytes @ 0x0
   750                           
   751  0070                     putch@data:	
   752                           ; 2 bytes @ 0x0
   753                           
   754  0070                     _isdigit$935:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     i1i2c_write@ack:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ___wmul@multiplier:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ___lwdiv@divisor:	
   764                           ; 2 bytes @ 0x0
   765                           
   766                           
   767                           ; 2 bytes @ 0x0
   768  0070                     	ds	1
   769  0071                     ??i1_i2c_write:	
   770  0071                     isdigit@c:	
   771                           ; 1 bytes @ 0x1
   772                           
   773                           
   774                           ; 1 bytes @ 0x1
   775  0071                     	ds	1
   776  0072                     ___wmul@multiplicand:	
   777  0072                     ___lwdiv@dividend:	
   778                           ; 2 bytes @ 0x2
   779                           
   780                           
   781                           ; 2 bytes @ 0x2
   782  0072                     	ds	2
   783  0074                     ??___wmul:	
   784  0074                     ??___lwdiv:	
   785                           ; 1 bytes @ 0x4
   786                           
   787  0074                     ___wmul@product:	
   788                           ; 1 bytes @ 0x4
   789                           
   790                           
   791                           ; 2 bytes @ 0x4
   792  0074                     	ds	1
   793  0075                     ___lwdiv@quotient:	
   794                           
   795                           ; 2 bytes @ 0x5
   796  0075                     	ds	2
   797  0077                     ___lwdiv@counter:	
   798                           
   799                           ; 1 bytes @ 0x7
   800  0077                     	ds	1
   801  0078                     ?___lwmod:	
   802  0078                     i1i2c_read@resp:	
   803                           ; 2 bytes @ 0x8
   804                           
   805  0078                     ___lwmod@divisor:	
   806                           ; 1 bytes @ 0x8
   807                           
   808                           
   809                           ; 2 bytes @ 0x8
   810  0078                     	ds	1
   811  0079                     i1i2c_write@datum:	
   812  0079                     i1i2c_read@ack:	
   813                           ; 1 bytes @ 0x9
   814                           
   815                           
   816                           ; 1 bytes @ 0x9
   817  0079                     	ds	1
   818  007A                     ??_ds_get:	
   819  007A                     ??_ds_set:	
   820                           ; 1 bytes @ 0xA
   821                           
   822  007A                     ?i1_mem_write:	
   823                           ; 1 bytes @ 0xA
   824                           
   825  007A                     ?i1_mem_read:	
   826                           ; 1 bytes @ 0xA
   827                           
   828  007A                     ?_si_read_h:	
   829                           ; 1 bytes @ 0xA
   830                           
   831  007A                     ?_si_read_t:	
   832                           ; 2 bytes @ 0xA
   833                           
   834  007A                     ___lwmod@dividend:	
   835                           ; 2 bytes @ 0xA
   836                           
   837  007A                     i1mem_write@add:	
   838                           ; 2 bytes @ 0xA
   839                           
   840  007A                     i1mem_read@add:	
   841                           ; 2 bytes @ 0xA
   842                           
   843                           
   844                           ; 2 bytes @ 0xA
   845  007A                     	ds	1
   846  007B                     ds_set@data:	
   847  007B                     ds_get@data:	
   848                           ; 1 bytes @ 0xB
   849                           
   850                           
   851                           ; 1 bytes @ 0xB
   852  007B                     	ds	1
   853  007C                     ??_si_read_h:	
   854  007C                     ??_si_read_t:	
   855                           ; 1 bytes @ 0xC
   856                           
   857  007C                     ??___lwmod:	
   858                           ; 1 bytes @ 0xC
   859                           
   860  007C                     ??i1_mem_read:	
   861                           ; 1 bytes @ 0xC
   862                           
   863  007C                     ds_set@j:	
   864                           ; 1 bytes @ 0xC
   865                           
   866  007C                     ds_get@resp:	
   867                           ; 1 bytes @ 0xC
   868                           
   869  007C                     i1mem_write@data:	
   870                           ; 1 bytes @ 0xC
   871                           
   872                           
   873                           ; 1 bytes @ 0xC
   874  007C                     	ds	1
   875  007D                     ??i1_mem_write:	
   876  007D                     ___lwmod@counter:	
   877                           ; 1 bytes @ 0xD
   878                           
   879                           
   880                           ; 1 bytes @ 0xD
   881  007D                     	ds	1
   882                           
   883                           	psect	cstackBANK0
   884  0020                     __pcstackBANK0:	
   885  0020                     si_read_h@rta_h:	
   886  0020                     si_read_t@rta_h:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0020                     i1mem_write@add_h:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0020                     i1mem_read@rta:	
   893                           ; 1 bytes @ 0x0
   894                           
   895                           
   896                           ; 1 bytes @ 0x0
   897  0020                     	ds	1
   898  0021                     si_read_h@rta_l:	
   899  0021                     si_read_t@rta_l:	
   900                           ; 1 bytes @ 0x1
   901                           
   902  0021                     i1mem_write@add_l:	
   903                           ; 1 bytes @ 0x1
   904                           
   905  0021                     i1mem_read@add_h:	
   906                           ; 1 bytes @ 0x1
   907                           
   908                           
   909                           ; 1 bytes @ 0x1
   910  0021                     	ds	1
   911  0022                     i1mem_read@add_l:	
   912  0022                     si_read_h@rta:	
   913                           ; 1 bytes @ 0x2
   914                           
   915  0022                     si_read_t@rta:	
   916                           ; 2 bytes @ 0x2
   917                           
   918                           
   919                           ; 2 bytes @ 0x2
   920  0022                     	ds	1
   921  0023                     ??_save_the_date:	
   922  0023                     ??i1_mem_init:	
   923                           ; 1 bytes @ 0x3
   924                           
   925                           
   926                           ; 1 bytes @ 0x3
   927  0023                     	ds	1
   928  0024                     ?_printf:	
   929  0024                     save_the_date@ax:	
   930                           ; 2 bytes @ 0x4
   931                           
   932  0024                     i1mem_init@aux:	
   933                           ; 1 bytes @ 0x4
   934                           
   935                           
   936                           ; 1 bytes @ 0x4
   937  0024                     	ds	2
   938  0026                     ??_printf:	
   939                           
   940                           ; 1 bytes @ 0x6
   941  0026                     	ds	3
   942  0029                     printf@idx:	
   943                           
   944                           ; 1 bytes @ 0x9
   945  0029                     	ds	1
   946  002A                     _printf$749:	
   947                           
   948                           ; 1 bytes @ 0xA
   949  002A                     	ds	1
   950  002B                     printf@ap:	
   951                           
   952                           ; 1 bytes @ 0xB
   953  002B                     	ds	1
   954  002C                     printf@prec:	
   955                           
   956                           ; 1 bytes @ 0xC
   957  002C                     	ds	1
   958  002D                     printf@val:	
   959                           
   960                           ; 2 bytes @ 0xD
   961  002D                     	ds	2
   962  002F                     printf@width:	
   963                           
   964                           ; 2 bytes @ 0xF
   965  002F                     	ds	2
   966  0031                     printf@flag:	
   967                           
   968                           ; 1 bytes @ 0x11
   969  0031                     	ds	1
   970  0032                     printf@f:	
   971                           
   972                           ; 1 bytes @ 0x12
   973  0032                     	ds	1
   974  0033                     printf@c:	
   975                           
   976                           ; 1 bytes @ 0x13
   977  0033                     	ds	1
   978  0034                     ??_ints_isr:	
   979                           
   980                           ; 1 bytes @ 0x14
   981  0034                     	ds	8
   982  003C                     ints_isr@dt:	
   983                           
   984                           ; 2 bytes @ 0x1C
   985  003C                     	ds	2
   986  003E                     ints_isr@rcv:	
   987                           
   988                           ; 1 bytes @ 0x1E
   989  003E                     	ds	1
   990  003F                     ints_isr@hum_val:	
   991                           
   992                           ; 2 bytes @ 0x1F
   993  003F                     	ds	2
   994  0041                     ints_isr@temp_val:	
   995                           
   996                           ; 2 bytes @ 0x21
   997  0041                     	ds	2
   998  0043                     ints_isr@add:	
   999                           
  1000                           ; 2 bytes @ 0x23
  1001  0043                     	ds	2
  1002  0045                     ints_isr@z:	
  1003                           
  1004                           ; 1 bytes @ 0x25
  1005  0045                     	ds	1
  1006  0046                     ints_isr@k:	
  1007                           
  1008                           ; 1 bytes @ 0x26
  1009  0046                     	ds	1
  1010  0047                     ints_isr@up:	
  1011                           
  1012                           ; 2 bytes @ 0x27
  1013  0047                     	ds	2
  1014  0049                     ints_isr@n:	
  1015                           
  1016                           ; 2 bytes @ 0x29
  1017  0049                     	ds	2
  1018  004B                     ints_isr@aux:	
  1019                           
  1020                           ; 2 bytes @ 0x2B
  1021  004B                     	ds	2
  1022  004D                     ints_isr@temp_add:	
  1023                           
  1024                           ; 2 bytes @ 0x2D
  1025  004D                     	ds	2
  1026  004F                     ints_isr@hum_add:	
  1027                           
  1028                           ; 2 bytes @ 0x2F
  1029  004F                     	ds	2
  1030  0051                     ints_isr@aux2:	
  1031                           
  1032                           ; 2 bytes @ 0x31
  1033  0051                     	ds	2
  1034  0053                     ints_isr@arg:	
  1035                           
  1036                           ; 1 bytes @ 0x33
  1037  0053                     	ds	1
  1038                           
  1039                           	psect	maintext
  1040  0DF6                     __pmaintext:	
  1041 ;;
  1042 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1043 ;;
  1044 ;; *************** function _main *****************
  1045 ;; Defined at:
  1046 ;;		line 246 in file "panda17.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  2  132[None  ] int 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2, status,0, pclath, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : B00/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0
  1062 ;;      Temps:          0       0       2       0       0
  1063 ;;      Totals:         0       0       2       0       0
  1064 ;;Total ram usage:        2 bytes
  1065 ;; Hardware stack levels required when called:    7
  1066 ;; This function calls:
  1067 ;;		_i2c_init
  1068 ;;		_init_timer2
  1069 ;;		_mem_init
  1070 ;;		_si_reset
  1071 ;;		_uart_init
  1072 ;; This function is called by:
  1073 ;;		Startup code after reset
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function _main
  1079  0DF6                     _main:	
  1080                           
  1081                           ;panda17.c: 247: OSCCON = 0b01010001;
  1082                           
  1083                           ;incstack = 0
  1084                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1085  0DF6  3051               	movlw	81
  1086  0DF7  1683               	bsf	3,5	;RP0=1, select bank1
  1087  0DF8  1303               	bcf	3,6	;RP1=0, select bank1
  1088  0DF9  008F               	movwf	15	;volatile
  1089                           
  1090                           ;panda17.c: 248: INTCON = 0xC0;
  1091  0DFA  30C0               	movlw	192
  1092  0DFB  008B               	movwf	11	;volatile
  1093                           
  1094                           ;panda17.c: 250: TRISA = 0x00;
  1095  0DFC  0185               	clrf	5	;volatile
  1096                           
  1097                           ;panda17.c: 251: TRISB = 0x00;
  1098  0DFD  0186               	clrf	6	;volatile
  1099                           
  1100                           ;panda17.c: 252: ANSELHbits.ANS8 = 0;
  1101  0DFE  1683               	bsf	3,5	;RP0=1, select bank3
  1102  0DFF  1703               	bsf	3,6	;RP1=1, select bank3
  1103  0E00  1009               	bcf	9,0	;volatile
  1104                           
  1105                           ;panda17.c: 253: TRISBbits.TRISB2 = 1;
  1106  0E01  1683               	bsf	3,5	;RP0=1, select bank1
  1107  0E02  1303               	bcf	3,6	;RP1=0, select bank1
  1108  0E03  1506               	bsf	6,2	;volatile
  1109                           
  1110                           ;panda17.c: 254: PORTBbits.RB4 = 0;
  1111  0E04  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0E05  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0E06  1206               	bcf	6,4	;volatile
  1114                           
  1115                           ;panda17.c: 255: uart_init();
  1116  0E07  120A  158A  226E  120A  158A  	fcall	_uart_init
  1117                           
  1118                           ;panda17.c: 256: i2c_init();
  1119  0E0C  120A  118A  27F0  120A  158A  	fcall	_i2c_init
  1120                           
  1121                           ;panda17.c: 257: _delay((unsigned long)((10)*(2000000/4000.0)));
  1122  0E11  3007               	movlw	7
  1123  0E12  1683               	bsf	3,5	;RP0=1, select bank1
  1124  0E13  1303               	bcf	3,6	;RP1=0, select bank1
  1125  0E14  00B3               	movwf	(??_main^(0+128)+1)
  1126  0E15  307C               	movlw	124
  1127  0E16  00B2               	movwf	??_main^(0+128)
  1128  0E17                     u2277:	
  1129  0E17  0BB2               	decfsz	??_main^(0+128),f
  1130  0E18  2E17               	goto	u2277
  1131  0E19  0BB3               	decfsz	(??_main^(0+128)+1),f
  1132  0E1A  2E17               	goto	u2277
  1133  0E1B  0000               	nop
  1134                           
  1135                           ;panda17.c: 258: mem_init();
  1136  0E1C  120A  158A  2747  120A  158A  	fcall	_mem_init
  1137                           
  1138                           ;panda17.c: 259: si_reset();
  1139  0E21  120A  158A  2286  120A  158A  	fcall	_si_reset
  1140                           
  1141                           ;panda17.c: 260: fyh = 1;
  1142  0E26  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0E27  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0E28  165F               	bsf	_fyh/(0+8),_fyh& (0+7)
  1145                           
  1146                           ;panda17.c: 263: _delay((unsigned long)((200)*(2000000/4000.0)));
  1147  0E29  3082               	movlw	130
  1148  0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  1149  0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  1150  0E2C  00B3               	movwf	(??_main^(0+128)+1)
  1151  0E2D  30DD               	movlw	221
  1152  0E2E  00B2               	movwf	??_main^(0+128)
  1153  0E2F                     u2287:	
  1154  0E2F  0BB2               	decfsz	??_main^(0+128),f
  1155  0E30  2E2F               	goto	u2287
  1156  0E31  0BB3               	decfsz	(??_main^(0+128)+1),f
  1157  0E32  2E2F               	goto	u2287
  1158                           
  1159                           ;panda17.c: 264: init_timer2(2,5,250);
  1160  0E33  3005               	movlw	5
  1161  0E34  1683               	bsf	3,5	;RP0=1, select bank1
  1162  0E35  1303               	bcf	3,6	;RP1=0, select bank1
  1163  0E36  00B2               	movwf	??_main^(0+128)
  1164  0E37  0832               	movf	??_main^(0+128),w
  1165  0E38  00A0               	movwf	init_timer2@post^(0+128)
  1166  0E39  30FA               	movlw	250
  1167  0E3A  00B3               	movwf	(??_main+1)^(0+128)
  1168  0E3B  0833               	movf	(??_main+1)^(0+128),w
  1169  0E3C  00A1               	movwf	init_timer2@eoc^(0+128)
  1170  0E3D  3002               	movlw	2
  1171  0E3E  120A  158A  2373  120A  158A  	fcall	_init_timer2
  1172  0E43                     l133:	
  1173                           ;panda17.c: 265: while(1){
  1174                           
  1175  0E43  2E43               	goto	l133
  1176  0E44                     __end_of_main:	
  1177                           
  1178                           	psect	text1
  1179  0A6E                     __ptext1:	
  1180 ;; *************** function _uart_init *****************
  1181 ;; Defined at:
  1182 ;;		line 22 in file "panda17.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, status,2
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1196 ;;      Params:         0       0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0
  1198 ;;      Temps:          0       0       0       0       0
  1199 ;;      Totals:         0       0       0       0       0
  1200 ;;Total ram usage:        0 bytes
  1201 ;; Hardware stack levels used:    1
  1202 ;; Hardware stack levels required when called:    4
  1203 ;; This function calls:
  1204 ;;		Nothing
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;; This function uses a non-reentrant model
  1208 ;;
  1209                           
  1210                           
  1211                           ;psect for function _uart_init
  1212  0A6E                     _uart_init:	
  1213                           
  1214                           ;panda17.c: 23: PIE1bits.RCIE = 1;
  1215                           
  1216                           ;incstack = 0
  1217                           ; Regs used in _uart_init: [wreg+status,2]
  1218  0A6E  1683               	bsf	3,5	;RP0=1, select bank1
  1219  0A6F  1303               	bcf	3,6	;RP1=0, select bank1
  1220  0A70  168C               	bsf	12,5	;volatile
  1221                           
  1222                           ;panda17.c: 24: PIE1bits.TXIE = 0;
  1223  0A71  120C               	bcf	12,4	;volatile
  1224                           
  1225                           ;panda17.c: 25: TXSTAbits.BRGH = 1;
  1226  0A72  1518               	bsf	24,2	;volatile
  1227                           
  1228                           ;panda17.c: 26: BAUDCTLbits.BRG16 = 0;
  1229  0A73  1683               	bsf	3,5	;RP0=1, select bank3
  1230  0A74  1703               	bsf	3,6	;RP1=1, select bank3
  1231  0A75  1187               	bcf	7,3	;volatile
  1232                           
  1233                           ;panda17.c: 27: SPBRGH = 0x00;
  1234  0A76  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0A77  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0A78  019A               	clrf	26	;volatile
  1237                           
  1238                           ;panda17.c: 29: SPBRG = 0x0C;
  1239  0A79  300C               	movlw	12
  1240  0A7A  0099               	movwf	25	;volatile
  1241                           
  1242                           ;panda17.c: 30: TXSTAbits.SYNC = 0;
  1243  0A7B  1218               	bcf	24,4	;volatile
  1244                           
  1245                           ;panda17.c: 31: RCSTAbits.SPEN = 1;
  1246  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0A7E  1798               	bsf	24,7	;volatile
  1249                           
  1250                           ;panda17.c: 32: TXSTAbits.TXEN = 1;
  1251  0A7F  1683               	bsf	3,5	;RP0=1, select bank1
  1252  0A80  1303               	bcf	3,6	;RP1=0, select bank1
  1253  0A81  1698               	bsf	24,5	;volatile
  1254                           
  1255                           ;panda17.c: 33: RCSTAbits.CREN = 1;
  1256  0A82  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0A83  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0A84  1618               	bsf	24,4	;volatile
  1259  0A85  0008               	return
  1260  0A86                     __end_of_uart_init:	
  1261                           
  1262                           	psect	text2
  1263  0A86                     __ptext2:	
  1264 ;; *************** function _si_reset *****************
  1265 ;; Defined at:
  1266 ;;		line 13 in file "si7021.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0, pclath, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1280 ;;      Params:         0       0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0
  1283 ;;      Totals:         0       0       0       0       0
  1284 ;;Total ram usage:        0 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    5
  1287 ;; This function calls:
  1288 ;;		_i2c_start
  1289 ;;		_i2c_stop
  1290 ;;		_i2c_write
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _si_reset
  1298  0A86                     _si_reset:	
  1299                           
  1300                           ;si7021.c: 14: i2c_start();
  1301                           
  1302                           ;incstack = 0
  1303                           ; Regs used in _si_reset: [wreg+status,2+status,0+pclath+cstack]
  1304  0A86  120A  158A  232D  120A  158A  	fcall	_i2c_start
  1305                           
  1306                           ;si7021.c: 15: i2c_write(0x80,1);
  1307  0A8B  1683               	bsf	3,5	;RP0=1, select bank1
  1308  0A8C  1303               	bcf	3,6	;RP1=0, select bank1
  1309  0A8D  01A0               	clrf	i2c_write@ack^(0+128)
  1310  0A8E  0AA0               	incf	i2c_write@ack^(0+128),f
  1311  0A8F  3080               	movlw	128
  1312  0A90  120A  158A  2461  120A  158A  	fcall	_i2c_write
  1313                           
  1314                           ;si7021.c: 16: i2c_write(0xFE,1);
  1315  0A95  1683               	bsf	3,5	;RP0=1, select bank1
  1316  0A96  1303               	bcf	3,6	;RP1=0, select bank1
  1317  0A97  01A0               	clrf	i2c_write@ack^(0+128)
  1318  0A98  0AA0               	incf	i2c_write@ack^(0+128),f
  1319  0A99  30FE               	movlw	254
  1320  0A9A  120A  158A  2461  120A  158A  	fcall	_i2c_write
  1321                           
  1322                           ;si7021.c: 17: i2c_stop();
  1323  0A9F  120A  158A  2350   	fcall	_i2c_stop
  1324  0AA2  0008               	return
  1325  0AA3                     __end_of_si_reset:	
  1326                           
  1327                           	psect	text3
  1328  0F47                     __ptext3:	
  1329 ;; *************** function _mem_init *****************
  1330 ;; Defined at:
  1331 ;;		line 42 in file "panda17.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  aux             1   17[BANK1 ] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       0       0       0       0
  1346 ;;      Locals:         0       0       1       0       0
  1347 ;;      Temps:          0       0       1       0       0
  1348 ;;      Totals:         0       0       2       0       0
  1349 ;;Total ram usage:        2 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    6
  1352 ;; This function calls:
  1353 ;;		_mem_read
  1354 ;;		_mem_write
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           
  1361                           ;psect for function _mem_init
  1362  0F47                     _mem_init:	
  1363                           
  1364                           ;panda17.c: 43: unsigned char aux;
  1365                           ;panda17.c: 44: aux = mem_read(0x0002);
  1366                           
  1367                           ;incstack = 0
  1368                           ; Regs used in _mem_init: [wreg+status,2+status,0+pclath+cstack]
  1369  0F47  3002               	movlw	2
  1370  0F48  1683               	bsf	3,5	;RP0=1, select bank1
  1371  0F49  1303               	bcf	3,6	;RP1=0, select bank1
  1372  0F4A  00AA               	movwf	mem_read@add^(0+128)
  1373  0F4B  3000               	movlw	0
  1374  0F4C  00AB               	movwf	(mem_read@add^(0+128)+1)
  1375  0F4D  120A  158A  255E  120A  158A  	fcall	_mem_read
  1376  0F52  1683               	bsf	3,5	;RP0=1, select bank1
  1377  0F53  1303               	bcf	3,6	;RP1=0, select bank1
  1378  0F54  00B0               	movwf	??_mem_init^(0+128)
  1379  0F55  0830               	movf	??_mem_init^(0+128),w
  1380  0F56  00B1               	movwf	mem_init@aux^(0+128)
  1381                           
  1382                           ;panda17.c: 45: if (aux != 0xAA){
  1383  0F57  30AA               	movlw	170
  1384  0F58  0631               	xorwf	mem_init@aux^(0+128),w
  1385  0F59  1903               	btfsc	3,2
  1386  0F5A  0008               	return
  1387                           
  1388                           ;panda17.c: 46: mem_write(0x0002,0xAA);
  1389  0F5B  3002               	movlw	2
  1390  0F5C  00AA               	movwf	mem_write@add^(0+128)
  1391  0F5D  3000               	movlw	0
  1392  0F5E  00AB               	movwf	(mem_write@add^(0+128)+1)
  1393  0F5F  30AA               	movlw	170
  1394  0F60  00B0               	movwf	??_mem_init^(0+128)
  1395  0F61  0830               	movf	??_mem_init^(0+128),w
  1396  0F62  00AC               	movwf	mem_write@data^(0+128)
  1397  0F63  120A  158A  25A8  120A  158A  	fcall	_mem_write
  1398                           
  1399                           ;panda17.c: 47: mem_write(0x0003,0x00);
  1400  0F68  3003               	movlw	3
  1401  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  1402  0F6A  1303               	bcf	3,6	;RP1=0, select bank1
  1403  0F6B  00AA               	movwf	mem_write@add^(0+128)
  1404  0F6C  3000               	movlw	0
  1405  0F6D  00AB               	movwf	(mem_write@add^(0+128)+1)
  1406  0F6E  01AC               	clrf	mem_write@data^(0+128)
  1407  0F6F  120A  158A  25A8  120A  158A  	fcall	_mem_write
  1408                           
  1409                           ;panda17.c: 48: mem_write(0x000A,0x00);
  1410  0F74  300A               	movlw	10
  1411  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  1412  0F76  1303               	bcf	3,6	;RP1=0, select bank1
  1413  0F77  00AA               	movwf	mem_write@add^(0+128)
  1414  0F78  3000               	movlw	0
  1415  0F79  00AB               	movwf	(mem_write@add^(0+128)+1)
  1416  0F7A  01AC               	clrf	mem_write@data^(0+128)
  1417  0F7B  120A  158A  25A8  120A  158A  	fcall	_mem_write
  1418                           
  1419                           ;panda17.c: 49: mem_write(0x000B,0x00);
  1420  0F80  300B               	movlw	11
  1421  0F81  1683               	bsf	3,5	;RP0=1, select bank1
  1422  0F82  1303               	bcf	3,6	;RP1=0, select bank1
  1423  0F83  00AA               	movwf	mem_write@add^(0+128)
  1424  0F84  3000               	movlw	0
  1425  0F85  00AB               	movwf	(mem_write@add^(0+128)+1)
  1426  0F86  01AC               	clrf	mem_write@data^(0+128)
  1427  0F87  120A  158A  25A8  120A  158A  	fcall	_mem_write
  1428                           
  1429                           ;panda17.c: 50: mem_write(0x000C,0x00);
  1430  0F8C  300C               	movlw	12
  1431  0F8D  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0F8E  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0F8F  00AA               	movwf	mem_write@add^(0+128)
  1434  0F90  3000               	movlw	0
  1435  0F91  00AB               	movwf	(mem_write@add^(0+128)+1)
  1436  0F92  01AC               	clrf	mem_write@data^(0+128)
  1437  0F93  120A  158A  25A8  120A  158A  	fcall	_mem_write
  1438                           
  1439                           ;panda17.c: 51: mem_write(0x000D,0x00);
  1440  0F98  300D               	movlw	13
  1441  0F99  1683               	bsf	3,5	;RP0=1, select bank1
  1442  0F9A  1303               	bcf	3,6	;RP1=0, select bank1
  1443  0F9B  00AA               	movwf	mem_write@add^(0+128)
  1444  0F9C  3000               	movlw	0
  1445  0F9D  00AB               	movwf	(mem_write@add^(0+128)+1)
  1446  0F9E  01AC               	clrf	mem_write@data^(0+128)
  1447  0F9F  120A  158A  25A8   	fcall	_mem_write
  1448  0FA2  0008               	return
  1449  0FA3                     __end_of_mem_init:	
  1450                           
  1451                           	psect	text4
  1452  0DA8                     __ptext4:	
  1453 ;; *************** function _mem_write *****************
  1454 ;; Defined at:
  1455 ;;		line 13 in file "24lc512.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  add             2   10[BANK1 ] unsigned int 
  1458 ;;  data            1   12[BANK1 ] unsigned char 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  add_l           1   15[BANK1 ] unsigned char 
  1461 ;;  add_h           1   14[BANK1 ] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2, status,0, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1471 ;;      Params:         0       0       3       0       0
  1472 ;;      Locals:         0       0       2       0       0
  1473 ;;      Temps:          0       0       1       0       0
  1474 ;;      Totals:         0       0       6       0       0
  1475 ;;Total ram usage:        6 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    5
  1478 ;; This function calls:
  1479 ;;		_i2c_start
  1480 ;;		_i2c_stop
  1481 ;;		_i2c_write
  1482 ;; This function is called by:
  1483 ;;		_mem_init
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           
  1488                           ;psect for function _mem_write
  1489  0DA8                     _mem_write:	
  1490                           
  1491                           ;24lc512.c: 14: unsigned char add_h,add_l;
  1492                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  1493                           
  1494                           ;incstack = 0
  1495                           ; Regs used in _mem_write: [wreg+status,2+status,0+pclath+cstack]
  1496  0DA8  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0DA9  1303               	bcf	3,6	;RP1=0, select bank1
  1498  0DAA  082B               	movf	(mem_write@add+1)^(0+128),w
  1499  0DAB  00AD               	movwf	??_mem_write^(0+128)
  1500  0DAC  082D               	movf	??_mem_write^(0+128),w
  1501  0DAD  00AE               	movwf	mem_write@add_h^(0+128)
  1502                           
  1503                           ;24lc512.c: 16: add_l = add & 0x00FF;
  1504  0DAE  082A               	movf	mem_write@add^(0+128),w
  1505  0DAF  00AD               	movwf	??_mem_write^(0+128)
  1506  0DB0  082D               	movf	??_mem_write^(0+128),w
  1507  0DB1  00AF               	movwf	mem_write@add_l^(0+128)
  1508                           
  1509                           ;24lc512.c: 17: i2c_start();
  1510  0DB2  120A  158A  232D  120A  158A  	fcall	_i2c_start
  1511                           
  1512                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  1513  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  1514  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  1515  0DB9  01A0               	clrf	i2c_write@ack^(0+128)
  1516  0DBA  30A0               	movlw	160
  1517  0DBB  120A  158A  2461  120A  158A  	fcall	_i2c_write
  1518                           
  1519                           ;24lc512.c: 19: i2c_write(add_h,0);
  1520  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  1521  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  1522  0DC2  01A0               	clrf	i2c_write@ack^(0+128)
  1523  0DC3  082E               	movf	mem_write@add_h^(0+128),w
  1524  0DC4  120A  158A  2461  120A  158A  	fcall	_i2c_write
  1525                           
  1526                           ;24lc512.c: 20: i2c_write(add_l,0);
  1527  0DC9  1683               	bsf	3,5	;RP0=1, select bank1
  1528  0DCA  1303               	bcf	3,6	;RP1=0, select bank1
  1529  0DCB  01A0               	clrf	i2c_write@ack^(0+128)
  1530  0DCC  082F               	movf	mem_write@add_l^(0+128),w
  1531  0DCD  120A  158A  2461  120A  158A  	fcall	_i2c_write
  1532                           
  1533                           ;24lc512.c: 21: i2c_write(data,0);
  1534  0DD2  1683               	bsf	3,5	;RP0=1, select bank1
  1535  0DD3  1303               	bcf	3,6	;RP1=0, select bank1
  1536  0DD4  01A0               	clrf	i2c_write@ack^(0+128)
  1537  0DD5  082C               	movf	mem_write@data^(0+128),w
  1538  0DD6  120A  158A  2461  120A  158A  	fcall	_i2c_write
  1539                           
  1540                           ;24lc512.c: 22: i2c_stop();
  1541  0DDB  120A  158A  2350  120A  158A  	fcall	_i2c_stop
  1542  0DE0                     L1:	
  1543                           
  1544                           ;24lc512.c: 24: i2c_start();
  1545  0DE0  120A  158A  232D  120A  158A  	fcall	_i2c_start
  1546                           
  1547                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  1548  0DE5  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0DE6  1303               	bcf	3,6	;RP1=0, select bank1
  1550  0DE7  01A0               	clrf	i2c_write@ack^(0+128)
  1551  0DE8  30A0               	movlw	160
  1552  0DE9  120A  158A  2461  120A  158A  	fcall	_i2c_write
  1553                           
  1554                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  1555  0DEE  1683               	bsf	3,5	;RP0=1, select bank1
  1556  0DEF  1303               	bcf	3,6	;RP1=0, select bank1
  1557  0DF0  1B11               	btfsc	17,6	;volatile
  1558  0DF1  2DE0               	goto	L1
  1559                           
  1560                           ;24lc512.c: 30: }
  1561                           ;24lc512.c: 31: i2c_stop();
  1562                           
  1563                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  1564                           
  1565                           ;24lc512.c: 28: i2c_start();
  1566  0DF2  120A  158A  2350   	fcall	_i2c_stop
  1567  0DF5  0008               	return
  1568  0DF6                     __end_of_mem_write:	
  1569                           
  1570                           	psect	text5
  1571  0D5E                     __ptext5:	
  1572 ;; *************** function _mem_read *****************
  1573 ;; Defined at:
  1574 ;;		line 34 in file "24lc512.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  add             2   10[BANK1 ] unsigned int 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  add_l           1   15[BANK1 ] unsigned char 
  1579 ;;  add_h           1   14[BANK1 ] unsigned char 
  1580 ;;  rta             1   13[BANK1 ] unsigned char 
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      unsigned char 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1590 ;;      Params:         0       0       2       0       0
  1591 ;;      Locals:         0       0       3       0       0
  1592 ;;      Temps:          0       0       1       0       0
  1593 ;;      Totals:         0       0       6       0       0
  1594 ;;Total ram usage:        6 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    5
  1597 ;; This function calls:
  1598 ;;		_i2c_read
  1599 ;;		_i2c_start
  1600 ;;		_i2c_stop
  1601 ;;		_i2c_write
  1602 ;; This function is called by:
  1603 ;;		_mem_init
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           
  1608                           ;psect for function _mem_read
  1609  0D5E                     _mem_read:	
  1610                           
  1611                           ;24lc512.c: 35: unsigned char rta;
  1612                           ;24lc512.c: 36: unsigned char add_h,add_l;
  1613                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  1614                           
  1615                           ;incstack = 0
  1616                           ; Regs used in _mem_read: [wreg+status,2+status,0+pclath+cstack]
  1617  0D5E  1683               	bsf	3,5	;RP0=1, select bank1
  1618  0D5F  1303               	bcf	3,6	;RP1=0, select bank1
  1619  0D60  082B               	movf	(mem_read@add+1)^(0+128),w
  1620  0D61  00AC               	movwf	??_mem_read^(0+128)
  1621  0D62  082C               	movf	??_mem_read^(0+128),w
  1622  0D63  00AE               	movwf	mem_read@add_h^(0+128)
  1623                           
  1624                           ;24lc512.c: 38: add_l = add & 0x00FF;
  1625  0D64  082A               	movf	mem_read@add^(0+128),w
  1626  0D65  00AC               	movwf	??_mem_read^(0+128)
  1627  0D66  082C               	movf	??_mem_read^(0+128),w
  1628  0D67  00AF               	movwf	mem_read@add_l^(0+128)
  1629                           
  1630                           ;24lc512.c: 39: i2c_start();
  1631  0D68  120A  158A  232D  120A  158A  	fcall	_i2c_start
  1632                           
  1633                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  1634  0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  1635  0D6E  1303               	bcf	3,6	;RP1=0, select bank1
  1636  0D6F  01A0               	clrf	i2c_write@ack^(0+128)
  1637  0D70  30A0               	movlw	160
  1638  0D71  120A  158A  2461  120A  158A  	fcall	_i2c_write
  1639                           
  1640                           ;24lc512.c: 41: i2c_write(add_h,0);
  1641  0D76  1683               	bsf	3,5	;RP0=1, select bank1
  1642  0D77  1303               	bcf	3,6	;RP1=0, select bank1
  1643  0D78  01A0               	clrf	i2c_write@ack^(0+128)
  1644  0D79  082E               	movf	mem_read@add_h^(0+128),w
  1645  0D7A  120A  158A  2461  120A  158A  	fcall	_i2c_write
  1646                           
  1647                           ;24lc512.c: 42: i2c_write(add_l,0);
  1648  0D7F  1683               	bsf	3,5	;RP0=1, select bank1
  1649  0D80  1303               	bcf	3,6	;RP1=0, select bank1
  1650  0D81  01A0               	clrf	i2c_write@ack^(0+128)
  1651  0D82  082F               	movf	mem_read@add_l^(0+128),w
  1652  0D83  120A  158A  2461  120A  158A  	fcall	_i2c_write
  1653                           
  1654                           ;24lc512.c: 43: i2c_start();
  1655  0D88  120A  158A  232D  120A  158A  	fcall	_i2c_start
  1656                           
  1657                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  1658  0D8D  1683               	bsf	3,5	;RP0=1, select bank1
  1659  0D8E  1303               	bcf	3,6	;RP1=0, select bank1
  1660  0D8F  01A0               	clrf	i2c_write@ack^(0+128)
  1661  0D90  30A1               	movlw	161
  1662  0D91  120A  158A  2461  120A  158A  	fcall	_i2c_write
  1663                           
  1664                           ;24lc512.c: 45: rta = i2c_read(0);
  1665  0D96  3000               	movlw	0
  1666  0D97  120A  118A  278B  120A  158A  	fcall	_i2c_read
  1667  0D9C  1683               	bsf	3,5	;RP0=1, select bank1
  1668  0D9D  1303               	bcf	3,6	;RP1=0, select bank1
  1669  0D9E  00AC               	movwf	??_mem_read^(0+128)
  1670  0D9F  082C               	movf	??_mem_read^(0+128),w
  1671  0DA0  00AD               	movwf	mem_read@rta^(0+128)
  1672                           
  1673                           ;24lc512.c: 46: i2c_stop();
  1674  0DA1  120A  158A  2350   	fcall	_i2c_stop
  1675                           
  1676                           ;24lc512.c: 47: return rta;
  1677  0DA4  1683               	bsf	3,5	;RP0=1, select bank1
  1678  0DA5  1303               	bcf	3,6	;RP1=0, select bank1
  1679  0DA6  082D               	movf	mem_read@rta^(0+128),w
  1680  0DA7  0008               	return
  1681  0DA8                     __end_of_mem_read:	
  1682                           
  1683                           	psect	text6
  1684  0C61                     __ptext6:	
  1685 ;; *************** function _i2c_write *****************
  1686 ;; Defined at:
  1687 ;;		line 39 in file "i2clib.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;  datum           1    wreg     unsigned char 
  1690 ;;  ack             1    0[BANK1 ] unsigned char 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;  datum           1    9[BANK1 ] unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2, status,0
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       0       1       0       0
  1703 ;;      Locals:         0       0       1       0       0
  1704 ;;      Temps:          0       0       8       0       0
  1705 ;;      Totals:         0       0      10       0       0
  1706 ;;Total ram usage:       10 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    4
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_mem_write
  1713 ;;		_mem_read
  1714 ;;		_si_reset
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           
  1719                           ;psect for function _i2c_write
  1720  0C61                     _i2c_write:	
  1721                           
  1722                           ;incstack = 0
  1723                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
  1724                           ;i2c_write@datum stored from wreg
  1725  0C61  1683               	bsf	3,5	;RP0=1, select bank1
  1726  0C62  1303               	bcf	3,6	;RP1=0, select bank1
  1727  0C63  00A9               	movwf	i2c_write@datum^(0+128)
  1728  0C64                     l1547:	
  1729                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1730                           
  1731  0C64  0811               	movf	17,w	;volatile
  1732  0C65  3901               	andlw	1
  1733  0C66  00A1               	movwf	??_i2c_write^(0+128)
  1734  0C67  0C11               	rrf	17,w	;volatile
  1735  0C68  3901               	andlw	1
  1736  0C69  00A2               	movwf	(??_i2c_write+1)^(0+128)
  1737  0C6A  0C11               	rrf	17,w	;volatile
  1738  0C6B  00A3               	movwf	(??_i2c_write+2)^(0+128)
  1739  0C6C  0CA3               	rrf	(??_i2c_write+2)^(0+128),f
  1740  0C6D  0C23               	rrf	(??_i2c_write+2)^(0+128),w
  1741  0C6E  3901               	andlw	1
  1742  0C6F  00A4               	movwf	(??_i2c_write+3)^(0+128)
  1743  0C70  0E11               	swapf	17,w	;volatile
  1744  0C71  3901               	andlw	1
  1745  0C72  00A5               	movwf	(??_i2c_write+4)^(0+128)
  1746  0C73  0C11               	rrf	17,w	;volatile
  1747  0C74  00A6               	movwf	(??_i2c_write+5)^(0+128)
  1748  0C75  0C26               	rrf	(??_i2c_write+5)^(0+128),w
  1749  0C76  3901               	andlw	1
  1750  0C77  00A7               	movwf	(??_i2c_write+6)^(0+128)
  1751  0C78  0C14               	rrf	20,w	;volatile
  1752  0C79  00A8               	movwf	(??_i2c_write+7)^(0+128)
  1753  0C7A  0C28               	rrf	(??_i2c_write+7)^(0+128),w
  1754  0C7B  3901               	andlw	1
  1755  0C7C  0427               	iorwf	(??_i2c_write+6)^(0+128),w
  1756  0C7D  0425               	iorwf	(??_i2c_write+4)^(0+128),w
  1757  0C7E  0424               	iorwf	(??_i2c_write+3)^(0+128),w
  1758  0C7F  0422               	iorwf	(??_i2c_write+1)^(0+128),w
  1759  0C80  0421               	iorwf	??_i2c_write^(0+128),w
  1760  0C81  1D03               	btfss	3,2
  1761  0C82  2C64               	goto	l1547
  1762                           
  1763                           ;i2clib.c: 42: SSPBUF = datum;
  1764  0C83  0829               	movf	i2c_write@datum^(0+128),w
  1765  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  1766  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  1767  0C86  0093               	movwf	19	;volatile
  1768  0C87                     l177:	
  1769                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  1770                           
  1771  0C87  1683               	bsf	3,5	;RP0=1, select bank1
  1772  0C88  1303               	bcf	3,6	;RP1=0, select bank1
  1773  0C89  1814               	btfsc	20,0	;volatile
  1774  0C8A  2C87               	goto	l177
  1775                           
  1776                           ;i2clib.c: 44: if(ack){
  1777  0C8B  0820               	movf	i2c_write@ack^(0+128),w
  1778  0C8C  1903               	btfsc	3,2
  1779  0C8D  2C90               	goto	l184
  1780  0C8E                     l181:	
  1781                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  1782                           
  1783  0C8E  1B11               	btfsc	17,6	;volatile
  1784  0C8F  2C8E               	goto	l181
  1785  0C90                     l184:	
  1786                           ;i2clib.c: 46: }
  1787                           ;i2clib.c: 47: }
  1788                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  1789                           
  1790  0C90  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0C91  198C               	btfsc	12,3	;volatile
  1792  0C92  0008               	return
  1793  0C93  2C90               	goto	l184
  1794  0C94                     __end_of_i2c_write:	
  1795                           
  1796                           	psect	text7
  1797  0B50                     __ptext7:	
  1798 ;; *************** function _i2c_stop *****************
  1799 ;; Defined at:
  1800 ;;		line 34 in file "i2clib.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;		None
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;		None
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, status,2, status,0
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       0       0       0       0
  1815 ;;      Locals:         0       0       0       0       0
  1816 ;;      Temps:          0       0       8       0       0
  1817 ;;      Totals:         0       0       8       0       0
  1818 ;;Total ram usage:        8 bytes
  1819 ;; Hardware stack levels used:    1
  1820 ;; Hardware stack levels required when called:    4
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_mem_write
  1825 ;;		_mem_read
  1826 ;;		_si_reset
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           
  1831                           ;psect for function _i2c_stop
  1832  0B50                     _i2c_stop:	
  1833  0B50                     l1543:	
  1834                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1835                           
  1836                           ;incstack = 0
  1837                           ; Regs used in _i2c_stop: [wreg+status,2+status,0]
  1838                           
  1839  0B50  1683               	bsf	3,5	;RP0=1, select bank1
  1840  0B51  1303               	bcf	3,6	;RP1=0, select bank1
  1841  0B52  0811               	movf	17,w	;volatile
  1842  0B53  3901               	andlw	1
  1843  0B54  00A0               	movwf	??_i2c_stop^(0+128)
  1844  0B55  0C11               	rrf	17,w	;volatile
  1845  0B56  3901               	andlw	1
  1846  0B57  00A1               	movwf	(??_i2c_stop+1)^(0+128)
  1847  0B58  0C11               	rrf	17,w	;volatile
  1848  0B59  00A2               	movwf	(??_i2c_stop+2)^(0+128)
  1849  0B5A  0CA2               	rrf	(??_i2c_stop+2)^(0+128),f
  1850  0B5B  0C22               	rrf	(??_i2c_stop+2)^(0+128),w
  1851  0B5C  3901               	andlw	1
  1852  0B5D  00A3               	movwf	(??_i2c_stop+3)^(0+128)
  1853  0B5E  0E11               	swapf	17,w	;volatile
  1854  0B5F  3901               	andlw	1
  1855  0B60  00A4               	movwf	(??_i2c_stop+4)^(0+128)
  1856  0B61  0C11               	rrf	17,w	;volatile
  1857  0B62  00A5               	movwf	(??_i2c_stop+5)^(0+128)
  1858  0B63  0C25               	rrf	(??_i2c_stop+5)^(0+128),w
  1859  0B64  3901               	andlw	1
  1860  0B65  00A6               	movwf	(??_i2c_stop+6)^(0+128)
  1861  0B66  0C14               	rrf	20,w	;volatile
  1862  0B67  00A7               	movwf	(??_i2c_stop+7)^(0+128)
  1863  0B68  0C27               	rrf	(??_i2c_stop+7)^(0+128),w
  1864  0B69  3901               	andlw	1
  1865  0B6A  0426               	iorwf	(??_i2c_stop+6)^(0+128),w
  1866  0B6B  0424               	iorwf	(??_i2c_stop+4)^(0+128),w
  1867  0B6C  0423               	iorwf	(??_i2c_stop+3)^(0+128),w
  1868  0B6D  0421               	iorwf	(??_i2c_stop+1)^(0+128),w
  1869  0B6E  0420               	iorwf	??_i2c_stop^(0+128),w
  1870  0B6F  1D03               	btfss	3,2
  1871  0B70  2B50               	goto	l1543
  1872                           
  1873                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  1874  0B71  1511               	bsf	17,2	;volatile
  1875  0B72  0008               	return
  1876  0B73                     __end_of_i2c_stop:	
  1877                           
  1878                           	psect	text8
  1879  0B2D                     __ptext8:	
  1880 ;; *************** function _i2c_start *****************
  1881 ;; Defined at:
  1882 ;;		line 24 in file "i2clib.c"
  1883 ;; Parameters:    Size  Location     Type
  1884 ;;		None
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1896 ;;      Params:         0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0
  1898 ;;      Temps:          0       0       8       0       0
  1899 ;;      Totals:         0       0       8       0       0
  1900 ;;Total ram usage:        8 bytes
  1901 ;; Hardware stack levels used:    1
  1902 ;; Hardware stack levels required when called:    4
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_mem_write
  1907 ;;		_mem_read
  1908 ;;		_si_reset
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912                           
  1913                           ;psect for function _i2c_start
  1914  0B2D                     _i2c_start:	
  1915  0B2D                     l1535:	
  1916                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1917                           
  1918                           ;incstack = 0
  1919                           ; Regs used in _i2c_start: [wreg+status,2+status,0]
  1920                           
  1921  0B2D  1683               	bsf	3,5	;RP0=1, select bank1
  1922  0B2E  1303               	bcf	3,6	;RP1=0, select bank1
  1923  0B2F  0811               	movf	17,w	;volatile
  1924  0B30  3901               	andlw	1
  1925  0B31  00A0               	movwf	??_i2c_start^(0+128)
  1926  0B32  0C11               	rrf	17,w	;volatile
  1927  0B33  3901               	andlw	1
  1928  0B34  00A1               	movwf	(??_i2c_start+1)^(0+128)
  1929  0B35  0C11               	rrf	17,w	;volatile
  1930  0B36  00A2               	movwf	(??_i2c_start+2)^(0+128)
  1931  0B37  0CA2               	rrf	(??_i2c_start+2)^(0+128),f
  1932  0B38  0C22               	rrf	(??_i2c_start+2)^(0+128),w
  1933  0B39  3901               	andlw	1
  1934  0B3A  00A3               	movwf	(??_i2c_start+3)^(0+128)
  1935  0B3B  0E11               	swapf	17,w	;volatile
  1936  0B3C  3901               	andlw	1
  1937  0B3D  00A4               	movwf	(??_i2c_start+4)^(0+128)
  1938  0B3E  0C11               	rrf	17,w	;volatile
  1939  0B3F  00A5               	movwf	(??_i2c_start+5)^(0+128)
  1940  0B40  0C25               	rrf	(??_i2c_start+5)^(0+128),w
  1941  0B41  3901               	andlw	1
  1942  0B42  00A6               	movwf	(??_i2c_start+6)^(0+128)
  1943  0B43  0C14               	rrf	20,w	;volatile
  1944  0B44  00A7               	movwf	(??_i2c_start+7)^(0+128)
  1945  0B45  0C27               	rrf	(??_i2c_start+7)^(0+128),w
  1946  0B46  3901               	andlw	1
  1947  0B47  0426               	iorwf	(??_i2c_start+6)^(0+128),w
  1948  0B48  0424               	iorwf	(??_i2c_start+4)^(0+128),w
  1949  0B49  0423               	iorwf	(??_i2c_start+3)^(0+128),w
  1950  0B4A  0421               	iorwf	(??_i2c_start+1)^(0+128),w
  1951  0B4B  0420               	iorwf	??_i2c_start^(0+128),w
  1952  0B4C  1D03               	btfss	3,2
  1953  0B4D  2B2D               	goto	l1535
  1954                           
  1955                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  1956  0B4E  1411               	bsf	17,0	;volatile
  1957  0B4F  0008               	return
  1958  0B50                     __end_of_i2c_start:	
  1959                           
  1960                           	psect	text9
  1961  078B                     __ptext9:	
  1962 ;; *************** function _i2c_read *****************
  1963 ;; Defined at:
  1964 ;;		line 51 in file "i2clib.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  ack             1    wreg     unsigned char 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  ack             1    9[BANK1 ] unsigned char 
  1969 ;;  resp            1    8[BANK1 ] unsigned char 
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      unsigned char 
  1972 ;; Registers used:
  1973 ;;		wreg, status,2, status,0
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1979 ;;      Params:         0       0       0       0       0
  1980 ;;      Locals:         0       0       2       0       0
  1981 ;;      Temps:          0       0       8       0       0
  1982 ;;      Totals:         0       0      10       0       0
  1983 ;;Total ram usage:       10 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    4
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_mem_read
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _i2c_read
  1995  078B                     _i2c_read:	
  1996                           
  1997                           ;incstack = 0
  1998                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  1999                           ;i2c_read@ack stored from wreg
  2000  078B  1683               	bsf	3,5	;RP0=1, select bank1
  2001  078C  1303               	bcf	3,6	;RP1=0, select bank1
  2002  078D  00A9               	movwf	i2c_read@ack^(0+128)
  2003                           
  2004                           ;i2clib.c: 52: unsigned char resp;
  2005                           ;i2clib.c: 53: static bit flag, not_flag;
  2006                           ;i2clib.c: 54: flag = ack & 0x01;
  2007  078E  1283               	bcf	3,5	;RP0=0, select bank0
  2008  078F  1303               	bcf	3,6	;RP1=0, select bank0
  2009  0790  10DF               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2010  0791  1683               	bsf	3,5	;RP0=1, select bank1
  2011  0792  1303               	bcf	3,6	;RP1=0, select bank1
  2012  0793  1C29               	btfss	i2c_read@ack^(0+128),0
  2013  0794  2F98               	goto	l1557
  2014  0795  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0796  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0797  14DF               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2017  0798                     l1557:	
  2018                           
  2019                           ;i2clib.c: 55: if (ack == 1){
  2020  0798  1683               	bsf	3,5	;RP0=1, select bank1
  2021  0799  1303               	bcf	3,6	;RP1=0, select bank1
  2022  079A  0329               	decf	i2c_read@ack^(0+128),w
  2023  079B  1D03               	btfss	3,2
  2024  079C  2FA0               	goto	l1561
  2025                           
  2026                           ;i2clib.c: 56: not_flag = 0;
  2027  079D  1283               	bcf	3,5	;RP0=0, select bank0
  2028  079E  1303               	bcf	3,6	;RP1=0, select bank0
  2029  079F  105F               	bcf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2030  07A0                     l1561:	
  2031                           
  2032                           ;i2clib.c: 57: }
  2033                           ;i2clib.c: 58: if (ack == 3){
  2034  07A0  3003               	movlw	3
  2035  07A1  1683               	bsf	3,5	;RP0=1, select bank1
  2036  07A2  1303               	bcf	3,6	;RP1=0, select bank1
  2037  07A3  0629               	xorwf	i2c_read@ack^(0+128),w
  2038  07A4  1D03               	btfss	3,2
  2039  07A5  2FA9               	goto	l1565
  2040                           
  2041                           ;i2clib.c: 59: not_flag = 1;
  2042  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  2043  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  2044  07A8  145F               	bsf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2045  07A9                     l1565:	
  2046                           ;i2clib.c: 60: }
  2047                           ;i2clib.c: 61: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  2048                           
  2049  07A9  1683               	bsf	3,5	;RP0=1, select bank1
  2050  07AA  1303               	bcf	3,6	;RP1=0, select bank1
  2051  07AB  0811               	movf	17,w	;volatile
  2052  07AC  3901               	andlw	1
  2053  07AD  00A0               	movwf	??_i2c_read^(0+128)
  2054  07AE  0C11               	rrf	17,w	;volatile
  2055  07AF  3901               	andlw	1
  2056  07B0  00A1               	movwf	(??_i2c_read+1)^(0+128)
  2057  07B1  0C11               	rrf	17,w	;volatile
  2058  07B2  00A2               	movwf	(??_i2c_read+2)^(0+128)
  2059  07B3  0CA2               	rrf	(??_i2c_read+2)^(0+128),f
  2060  07B4  0C22               	rrf	(??_i2c_read+2)^(0+128),w
  2061  07B5  3901               	andlw	1
  2062  07B6  00A3               	movwf	(??_i2c_read+3)^(0+128)
  2063  07B7  0E11               	swapf	17,w	;volatile
  2064  07B8  3901               	andlw	1
  2065  07B9  00A4               	movwf	(??_i2c_read+4)^(0+128)
  2066  07BA  0C11               	rrf	17,w	;volatile
  2067  07BB  00A5               	movwf	(??_i2c_read+5)^(0+128)
  2068  07BC  0C25               	rrf	(??_i2c_read+5)^(0+128),w
  2069  07BD  3901               	andlw	1
  2070  07BE  00A6               	movwf	(??_i2c_read+6)^(0+128)
  2071  07BF  0C14               	rrf	20,w	;volatile
  2072  07C0  00A7               	movwf	(??_i2c_read+7)^(0+128)
  2073  07C1  0C27               	rrf	(??_i2c_read+7)^(0+128),w
  2074  07C2  3901               	andlw	1
  2075  07C3  0426               	iorwf	(??_i2c_read+6)^(0+128),w
  2076  07C4  0424               	iorwf	(??_i2c_read+4)^(0+128),w
  2077  07C5  0423               	iorwf	(??_i2c_read+3)^(0+128),w
  2078  07C6  0421               	iorwf	(??_i2c_read+1)^(0+128),w
  2079  07C7  0420               	iorwf	??_i2c_read^(0+128),w
  2080  07C8  1D03               	btfss	3,2
  2081  07C9  2FA9               	goto	l1565
  2082                           
  2083                           ;i2clib.c: 62: SSPCON2bits.RCEN = 1;
  2084  07CA  1591               	bsf	17,3	;volatile
  2085  07CB                     l199:	
  2086                           ;i2clib.c: 63: while(!SSPSTATbits.BF);
  2087                           
  2088  07CB  1C14               	btfss	20,0	;volatile
  2089  07CC  2FCB               	goto	l199
  2090  07CD                     l202:	
  2091                           ;i2clib.c: 64: while(!PIR1bits.SSPIF);
  2092                           
  2093  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  2094  07CE  1D8C               	btfss	12,3	;volatile
  2095  07CF  2FCD               	goto	l202
  2096                           
  2097                           ;i2clib.c: 65: SSPCON2bits.ACKDT = not_flag;
  2098  07D0  1C5F               	btfss	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2099  07D1  2FD6               	goto	u1280
  2100  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  2101  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  2102  07D4  1691               	bsf	17,5	;volatile
  2103  07D5  2FD9               	goto	u1294
  2104  07D6                     u1280:	
  2105  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  2106  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  2107  07D8  1291               	bcf	17,5	;volatile
  2108  07D9                     u1294:	
  2109                           
  2110                           ;i2clib.c: 66: SSPCON2bits.ACKEN = flag;
  2111  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  2112  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  2113  07DB  1CDF               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2114  07DC  2FE1               	goto	u1300
  2115  07DD  1683               	bsf	3,5	;RP0=1, select bank1
  2116  07DE  1303               	bcf	3,6	;RP1=0, select bank1
  2117  07DF  1611               	bsf	17,4	;volatile
  2118  07E0  2FE4               	goto	l1567
  2119  07E1                     u1300:	
  2120  07E1  1683               	bsf	3,5	;RP0=1, select bank1
  2121  07E2  1303               	bcf	3,6	;RP1=0, select bank1
  2122  07E3  1211               	bcf	17,4	;volatile
  2123  07E4                     l1567:	
  2124                           
  2125                           ;i2clib.c: 67: resp = SSPBUF;
  2126  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  2127  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  2128  07E6  0813               	movf	19,w	;volatile
  2129  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  2130  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  2131  07E9  00A0               	movwf	??_i2c_read^(0+128)
  2132  07EA  0820               	movf	??_i2c_read^(0+128),w
  2133  07EB  00A8               	movwf	i2c_read@resp^(0+128)
  2134  07EC                     l205:	
  2135                           ;i2clib.c: 68: while(SSPSTATbits.BF);
  2136                           
  2137  07EC  1814               	btfsc	20,0	;volatile
  2138  07ED  2FEC               	goto	l205
  2139                           
  2140                           ;i2clib.c: 69: return resp;
  2141  07EE  0828               	movf	i2c_read@resp^(0+128),w
  2142  07EF  0008               	return
  2143  07F0                     __end_of_i2c_read:	
  2144                           
  2145                           	psect	text10
  2146  0B73                     __ptext10:	
  2147 ;; *************** function _init_timer2 *****************
  2148 ;; Defined at:
  2149 ;;		line 234 in file "panda17.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  pre             1    wreg     unsigned char 
  2152 ;;  post            1    0[BANK1 ] unsigned char 
  2153 ;;  eoc             1    1[BANK1 ] unsigned char 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  pre             1    4[BANK1 ] unsigned char 
  2156 ;;  sfr             1    5[BANK1 ] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         0       0       2       0       0
  2167 ;;      Locals:         0       0       2       0       0
  2168 ;;      Temps:          0       0       2       0       0
  2169 ;;      Totals:         0       0       6       0       0
  2170 ;;Total ram usage:        6 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    4
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           
  2181                           ;psect for function _init_timer2
  2182  0B73                     _init_timer2:	
  2183                           
  2184                           ;incstack = 0
  2185                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
  2186                           ;init_timer2@pre stored from wreg
  2187  0B73  1683               	bsf	3,5	;RP0=1, select bank1
  2188  0B74  1303               	bcf	3,6	;RP1=0, select bank1
  2189  0B75  00A4               	movwf	init_timer2@pre^(0+128)
  2190                           
  2191                           ;panda17.c: 235: unsigned char sfr = 0x00;
  2192  0B76  01A5               	clrf	init_timer2@sfr^(0+128)
  2193                           
  2194                           ;panda17.c: 236: PR2 = eoc;
  2195  0B77  0821               	movf	init_timer2@eoc^(0+128),w
  2196  0B78  0092               	movwf	18	;volatile
  2197                           
  2198                           ;panda17.c: 237: sfr = ((post-1) << 3) & 0x78;
  2199  0B79  0820               	movf	init_timer2@post^(0+128),w
  2200  0B7A  00A2               	movwf	??_init_timer2^(0+128)
  2201  0B7B  3002               	movlw	2
  2202  0B7C                     u2005:	
  2203  0B7C  1003               	clrc
  2204  0B7D  0DA2               	rlf	??_init_timer2^(0+128),f
  2205  0B7E  3EFF               	addlw	-1
  2206  0B7F  1D03               	skipz
  2207  0B80  2B7C               	goto	u2005
  2208  0B81  1003               	clrc
  2209  0B82  0D22               	rlf	??_init_timer2^(0+128),w
  2210  0B83  3EF8               	addlw	248
  2211  0B84  3978               	andlw	120
  2212  0B85  00A3               	movwf	(??_init_timer2+1)^(0+128)
  2213  0B86  0823               	movf	(??_init_timer2+1)^(0+128),w
  2214  0B87  00A5               	movwf	init_timer2@sfr^(0+128)
  2215                           
  2216                           ;panda17.c: 238: sfr += 4;
  2217  0B88  3004               	movlw	4
  2218  0B89  00A2               	movwf	??_init_timer2^(0+128)
  2219  0B8A  0822               	movf	??_init_timer2^(0+128),w
  2220  0B8B  07A5               	addwf	init_timer2@sfr^(0+128),f
  2221                           
  2222                           ;panda17.c: 239: sfr += pre;
  2223  0B8C  0824               	movf	init_timer2@pre^(0+128),w
  2224  0B8D  00A2               	movwf	??_init_timer2^(0+128)
  2225  0B8E  0822               	movf	??_init_timer2^(0+128),w
  2226  0B8F  07A5               	addwf	init_timer2@sfr^(0+128),f
  2227                           
  2228                           ;panda17.c: 240: T2CON = sfr;
  2229  0B90  0825               	movf	init_timer2@sfr^(0+128),w
  2230  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0B93  0092               	movwf	18	;volatile
  2233                           
  2234                           ;panda17.c: 241: PIE1bits.TMR2IE = 1;
  2235  0B94  1683               	bsf	3,5	;RP0=1, select bank1
  2236  0B95  1303               	bcf	3,6	;RP1=0, select bank1
  2237  0B96  148C               	bsf	12,1	;volatile
  2238  0B97  0008               	return
  2239  0B98                     __end_of_init_timer2:	
  2240                           
  2241                           	psect	text11
  2242  07F0                     __ptext11:	
  2243 ;; *************** function _i2c_init *****************
  2244 ;; Defined at:
  2245 ;;		line 13 in file "i2clib.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, status,2, status,0
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         0       0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0
  2262 ;;      Totals:         0       0       0       0       0
  2263 ;;Total ram usage:        0 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    4
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           
  2274                           ;psect for function _i2c_init
  2275  07F0                     _i2c_init:	
  2276                           
  2277                           ;i2clib.c: 15: SSPCONbits.SSPM = 0b1000;
  2278                           
  2279                           ;incstack = 0
  2280                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  2281  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  2282  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  2283  07F2  0814               	movf	20,w	;volatile
  2284  07F3  39F0               	andlw	-16
  2285  07F4  3808               	iorlw	8
  2286  07F5  0094               	movwf	20	;volatile
  2287                           
  2288                           ;i2clib.c: 16: SSPCONbits.SSPEN = 1;
  2289  07F6  1694               	bsf	20,5	;volatile
  2290                           
  2291                           ;i2clib.c: 18: SSPADD = 0x04;
  2292  07F7  3004               	movlw	4
  2293  07F8  1683               	bsf	3,5	;RP0=1, select bank1
  2294  07F9  1303               	bcf	3,6	;RP1=0, select bank1
  2295  07FA  0093               	movwf	19	;volatile
  2296                           
  2297                           ;i2clib.c: 19: SSPSTATbits.SMP = 1;
  2298  07FB  1794               	bsf	20,7	;volatile
  2299                           
  2300                           ;i2clib.c: 20: TRISCbits.TRISC3 = 1;
  2301  07FC  1587               	bsf	7,3	;volatile
  2302                           
  2303                           ;i2clib.c: 21: TRISCbits.TRISC4 = 1;
  2304  07FD  1607               	bsf	7,4	;volatile
  2305  07FE  0008               	return
  2306  07FF                     __end_of_i2c_init:	
  2307                           
  2308                           	psect	text12
  2309  0029                     __ptext12:	
  2310 ;; *************** function _ints_isr *****************
  2311 ;; Defined at:
  2312 ;;		line 74 in file "panda17.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  hum_add         2   47[BANK0 ] unsigned int 
  2317 ;;  temp_add        2   45[BANK0 ] unsigned int 
  2318 ;;  up              2   39[BANK0 ] unsigned int 
  2319 ;;  temp_val        2   33[BANK0 ] unsigned int 
  2320 ;;  hum_val         2   31[BANK0 ] unsigned int 
  2321 ;;  arg             1   51[BANK0 ] unsigned char 
  2322 ;;  k               1   38[BANK0 ] unsigned char 
  2323 ;;  z               1   37[BANK0 ] unsigned char 
  2324 ;;  aux2            2   49[BANK0 ] unsigned int 
  2325 ;;  aux             2   43[BANK0 ] unsigned int 
  2326 ;;  n               2   41[BANK0 ] unsigned int 
  2327 ;;  add             2   35[BANK0 ] unsigned int 
  2328 ;;  dt              2   28[BANK0 ] unsigned int 
  2329 ;;  rcv             1   30[BANK0 ] unsigned char 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         0       0       0       0       0
  2340 ;;      Locals:         0      24       0       0       0
  2341 ;;      Temps:          0       8       0       0       0
  2342 ;;      Totals:         0      32       0       0       0
  2343 ;;Total ram usage:       32 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    3
  2346 ;; This function calls:
  2347 ;;		_ds_get
  2348 ;;		_ds_set
  2349 ;;		_printf
  2350 ;;		_save_the_date
  2351 ;;		_si_read_h
  2352 ;;		_si_read_t
  2353 ;;		i1_mem_init
  2354 ;;		i1_mem_read
  2355 ;;		i1_mem_write
  2356 ;; This function is called by:
  2357 ;;		Interrupt level 1
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function _ints_isr
  2363  0029                     _ints_isr:	
  2364                           
  2365                           ;panda17.c: 76: if (PIR1bits.RCIF){
  2366  0029  1E8C               	btfss	12,5	;volatile
  2367  002A  2AB3               	goto	i1l91
  2368                           
  2369                           ;panda17.c: 77: INTCONbits.GIE = 0;
  2370  002B  138B               	bcf	11,7	;volatile
  2371                           
  2372                           ;panda17.c: 78: static bit ferr = 0, oerr = 0;
  2373                           ;panda17.c: 79: unsigned char rcv = 0;
  2374  002C  01BE               	clrf	ints_isr@rcv
  2375                           
  2376                           ;panda17.c: 80: ferr = RCSTAbits.FERR;
  2377  002D  11DF               	bcf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2378  002E  1918               	btfsc	24,2	;volatile
  2379  002F  15DF               	bsf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2380                           
  2381                           ;panda17.c: 81: oerr = RCSTAbits.OERR;
  2382  0030  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0031  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0032  115F               	bcf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2385  0033  1898               	btfsc	24,1	;volatile
  2386  0034  155F               	bsf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2387                           
  2388                           ;panda17.c: 82: if (!ferr & !oerr){
  2389  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0036  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0037  1DDF               	btfss	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2392  0038  195F               	btfsc	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2393  0039  2A9F               	goto	i1l2143
  2394                           
  2395                           ;panda17.c: 83: rcv = RCREG;
  2396  003A  081A               	movf	26,w	;volatile
  2397  003B  00B4               	movwf	??_ints_isr
  2398  003C  0834               	movf	??_ints_isr,w
  2399  003D  00BE               	movwf	ints_isr@rcv
  2400                           
  2401                           ;panda17.c: 84: }
  2402                           ;panda17.c: 85: switch (rcv){
  2403  003E  2A9F               	goto	i1l2143
  2404  003F                     i1l98:	
  2405                           ;panda17.c: 86: case 'a':
  2406                           
  2407                           
  2408                           ;panda17.c: 87: PORTBbits.RB4 = 1;
  2409  003F  1606               	bsf	6,4	;volatile
  2410                           
  2411                           ;panda17.c: 88: unsigned int dt = 0,add,n,aux;
  2412  0040  01BC               	clrf	ints_isr@dt
  2413  0041  01BD               	clrf	ints_isr@dt+1
  2414                           
  2415                           ;panda17.c: 89: unsigned int aux2;
  2416                           ;panda17.c: 90: add = mem_read(0x0A);
  2417  0042  300A               	movlw	10
  2418  0043  00FA               	movwf	i1mem_read@add
  2419  0044  3000               	movlw	0
  2420  0045  00FB               	movwf	i1mem_read@add+1
  2421  0046  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2422  004B  1283               	bcf	3,5	;RP0=0, select bank0
  2423  004C  1303               	bcf	3,6	;RP1=0, select bank0
  2424  004D  00B4               	movwf	??_ints_isr
  2425  004E  01B5               	clrf	??_ints_isr+1
  2426  004F  0834               	movf	??_ints_isr,w
  2427  0050  00C3               	movwf	ints_isr@add
  2428  0051  0835               	movf	??_ints_isr+1,w
  2429  0052  00C4               	movwf	ints_isr@add+1
  2430                           
  2431                           ;panda17.c: 91: add = add << 8;
  2432  0053  0843               	movf	ints_isr@add,w
  2433  0054  00B5               	movwf	??_ints_isr+1
  2434  0055  01B4               	clrf	??_ints_isr
  2435  0056  0834               	movf	??_ints_isr,w
  2436  0057  00C3               	movwf	ints_isr@add
  2437  0058  0835               	movf	??_ints_isr+1,w
  2438  0059  00C4               	movwf	ints_isr@add+1
  2439                           
  2440                           ;panda17.c: 92: add += mem_read(0x0B);
  2441  005A  300B               	movlw	11
  2442  005B  00FA               	movwf	i1mem_read@add
  2443  005C  3000               	movlw	0
  2444  005D  00FB               	movwf	i1mem_read@add+1
  2445  005E  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2446  0063  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0064  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0065  00B4               	movwf	??_ints_isr
  2449  0066  01B5               	clrf	??_ints_isr+1
  2450  0067  0834               	movf	??_ints_isr,w
  2451  0068  07C3               	addwf	ints_isr@add,f
  2452  0069  1803               	skipnc
  2453  006A  0AC4               	incf	ints_isr@add+1,f
  2454  006B  0835               	movf	??_ints_isr+1,w
  2455  006C  07C4               	addwf	ints_isr@add+1,f
  2456                           
  2457                           ;panda17.c: 94: printf("I%05d\r\n",add);
  2458  006D  0844               	movf	ints_isr@add+1,w
  2459  006E  00A5               	movwf	?_printf+1
  2460  006F  0843               	movf	ints_isr@add,w
  2461  0070  00A4               	movwf	?_printf
  2462  0071  3035               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2463  0072  120A  118A  2443  120A  118A  	fcall	_printf
  2464                           
  2465                           ;panda17.c: 95: for (n=0;n<add;n++){
  2466  0077  1283               	bcf	3,5	;RP0=0, select bank0
  2467  0078  1303               	bcf	3,6	;RP1=0, select bank0
  2468  0079  01C9               	clrf	ints_isr@n
  2469  007A  01CA               	clrf	ints_isr@n+1
  2470  007B                     i1l2073:	
  2471  007B  0844               	movf	ints_isr@add+1,w
  2472  007C  024A               	subwf	ints_isr@n+1,w
  2473  007D  1D03               	skipz
  2474  007E  2881               	goto	u207_25
  2475  007F  0843               	movf	ints_isr@add,w
  2476  0080  0249               	subwf	ints_isr@n,w
  2477  0081                     u207_25:	
  2478  0081  1803               	btfsc	3,0
  2479  0082  2924               	goto	i1l2075
  2480                           
  2481                           ;panda17.c: 96: aux = mem_read(2*n+0x0010);
  2482  0083  084A               	movf	ints_isr@n+1,w
  2483  0084  00B5               	movwf	??_ints_isr+1
  2484  0085  0849               	movf	ints_isr@n,w
  2485  0086  00B4               	movwf	??_ints_isr
  2486  0087  1003               	clrc
  2487  0088  0DB4               	rlf	??_ints_isr,f
  2488  0089  0DB5               	rlf	??_ints_isr+1,f
  2489  008A  0834               	movf	??_ints_isr,w
  2490  008B  3E10               	addlw	16
  2491  008C  00FA               	movwf	i1mem_read@add
  2492  008D  0835               	movf	??_ints_isr+1,w
  2493  008E  1803               	skipnc
  2494  008F  3E01               	addlw	1
  2495  0090  3E00               	addlw	0
  2496  0091  00FB               	movwf	i1mem_read@add+1
  2497  0092  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2498  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0099  00B6               	movwf	??_ints_isr+2
  2501  009A  01B7               	clrf	??_ints_isr+3
  2502  009B  0836               	movf	??_ints_isr+2,w
  2503  009C  00CB               	movwf	ints_isr@aux
  2504  009D  0837               	movf	??_ints_isr+3,w
  2505  009E  00CC               	movwf	ints_isr@aux+1
  2506                           
  2507                           ;panda17.c: 97: aux = aux << 8;
  2508  009F  084B               	movf	ints_isr@aux,w
  2509  00A0  00B5               	movwf	??_ints_isr+1
  2510  00A1  01B4               	clrf	??_ints_isr
  2511  00A2  0834               	movf	??_ints_isr,w
  2512  00A3  00CB               	movwf	ints_isr@aux
  2513  00A4  0835               	movf	??_ints_isr+1,w
  2514  00A5  00CC               	movwf	ints_isr@aux+1
  2515                           
  2516                           ;panda17.c: 98: aux += mem_read(2*n+0x0011);
  2517  00A6  084A               	movf	ints_isr@n+1,w
  2518  00A7  00B5               	movwf	??_ints_isr+1
  2519  00A8  0849               	movf	ints_isr@n,w
  2520  00A9  00B4               	movwf	??_ints_isr
  2521  00AA  1003               	clrc
  2522  00AB  0DB4               	rlf	??_ints_isr,f
  2523  00AC  0DB5               	rlf	??_ints_isr+1,f
  2524  00AD  0834               	movf	??_ints_isr,w
  2525  00AE  3E11               	addlw	17
  2526  00AF  00FA               	movwf	i1mem_read@add
  2527  00B0  0835               	movf	??_ints_isr+1,w
  2528  00B1  1803               	skipnc
  2529  00B2  3E01               	addlw	1
  2530  00B3  3E00               	addlw	0
  2531  00B4  00FB               	movwf	i1mem_read@add+1
  2532  00B5  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2533  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  2534  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  2535  00BC  00B6               	movwf	??_ints_isr+2
  2536  00BD  01B7               	clrf	??_ints_isr+3
  2537  00BE  0836               	movf	??_ints_isr+2,w
  2538  00BF  07CB               	addwf	ints_isr@aux,f
  2539  00C0  1803               	skipnc
  2540  00C1  0ACC               	incf	ints_isr@aux+1,f
  2541  00C2  0837               	movf	??_ints_isr+3,w
  2542  00C3  07CC               	addwf	ints_isr@aux+1,f
  2543                           
  2544                           ;panda17.c: 99: printf("%04x",aux);
  2545  00C4  084C               	movf	ints_isr@aux+1,w
  2546  00C5  00A5               	movwf	?_printf+1
  2547  00C6  084B               	movf	ints_isr@aux,w
  2548  00C7  00A4               	movwf	?_printf
  2549  00C8  3061               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2550  00C9  120A  118A  2443  120A  118A  	fcall	_printf
  2551                           
  2552                           ;panda17.c: 100: aux = mem_read(2*n+0x7FF7);
  2553  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2554  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2555  00D0  084A               	movf	ints_isr@n+1,w
  2556  00D1  00B5               	movwf	??_ints_isr+1
  2557  00D2  0849               	movf	ints_isr@n,w
  2558  00D3  00B4               	movwf	??_ints_isr
  2559  00D4  1003               	clrc
  2560  00D5  0DB4               	rlf	??_ints_isr,f
  2561  00D6  0DB5               	rlf	??_ints_isr+1,f
  2562  00D7  0834               	movf	??_ints_isr,w
  2563  00D8  3EF7               	addlw	247
  2564  00D9  00FA               	movwf	i1mem_read@add
  2565  00DA  0835               	movf	??_ints_isr+1,w
  2566  00DB  1803               	skipnc
  2567  00DC  3E01               	addlw	1
  2568  00DD  3E7F               	addlw	127
  2569  00DE  00FB               	movwf	i1mem_read@add+1
  2570  00DF  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2571  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2572  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2573  00E6  00B6               	movwf	??_ints_isr+2
  2574  00E7  01B7               	clrf	??_ints_isr+3
  2575  00E8  0836               	movf	??_ints_isr+2,w
  2576  00E9  00CB               	movwf	ints_isr@aux
  2577  00EA  0837               	movf	??_ints_isr+3,w
  2578  00EB  00CC               	movwf	ints_isr@aux+1
  2579                           
  2580                           ;panda17.c: 101: aux = aux << 8;
  2581  00EC  084B               	movf	ints_isr@aux,w
  2582  00ED  00B5               	movwf	??_ints_isr+1
  2583  00EE  01B4               	clrf	??_ints_isr
  2584  00EF  0834               	movf	??_ints_isr,w
  2585  00F0  00CB               	movwf	ints_isr@aux
  2586  00F1  0835               	movf	??_ints_isr+1,w
  2587  00F2  00CC               	movwf	ints_isr@aux+1
  2588                           
  2589                           ;panda17.c: 102: aux += mem_read(2*n+0x7FF8);
  2590  00F3  084A               	movf	ints_isr@n+1,w
  2591  00F4  00B5               	movwf	??_ints_isr+1
  2592  00F5  0849               	movf	ints_isr@n,w
  2593  00F6  00B4               	movwf	??_ints_isr
  2594  00F7  1003               	clrc
  2595  00F8  0DB4               	rlf	??_ints_isr,f
  2596  00F9  0DB5               	rlf	??_ints_isr+1,f
  2597  00FA  0834               	movf	??_ints_isr,w
  2598  00FB  3EF8               	addlw	248
  2599  00FC  00FA               	movwf	i1mem_read@add
  2600  00FD  0835               	movf	??_ints_isr+1,w
  2601  00FE  1803               	skipnc
  2602  00FF  3E01               	addlw	1
  2603  0100  3E7F               	addlw	127
  2604  0101  00FB               	movwf	i1mem_read@add+1
  2605  0102  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2606  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2608  0109  00B6               	movwf	??_ints_isr+2
  2609  010A  01B7               	clrf	??_ints_isr+3
  2610  010B  0836               	movf	??_ints_isr+2,w
  2611  010C  07CB               	addwf	ints_isr@aux,f
  2612  010D  1803               	skipnc
  2613  010E  0ACC               	incf	ints_isr@aux+1,f
  2614  010F  0837               	movf	??_ints_isr+3,w
  2615  0110  07CC               	addwf	ints_isr@aux+1,f
  2616                           
  2617                           ;panda17.c: 103: printf("%04x",aux);
  2618  0111  084C               	movf	ints_isr@aux+1,w
  2619  0112  00A5               	movwf	?_printf+1
  2620  0113  084B               	movf	ints_isr@aux,w
  2621  0114  00A4               	movwf	?_printf
  2622  0115  3061               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2623  0116  120A  118A  2443  120A  118A  	fcall	_printf
  2624  011B  3001               	movlw	1
  2625  011C  1283               	bcf	3,5	;RP0=0, select bank0
  2626  011D  1303               	bcf	3,6	;RP1=0, select bank0
  2627  011E  07C9               	addwf	ints_isr@n,f
  2628  011F  1803               	skipnc
  2629  0120  0ACA               	incf	ints_isr@n+1,f
  2630  0121  3000               	movlw	0
  2631  0122  07CA               	addwf	ints_isr@n+1,f
  2632  0123  287B               	goto	i1l2073
  2633  0124                     i1l2075:	
  2634                           
  2635                           ;panda17.c: 104: }
  2636                           ;panda17.c: 105: printf("Z");
  2637  0124  306F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2638  0125  120A  118A  2443  120A  118A  	fcall	_printf
  2639                           
  2640                           ;panda17.c: 106: aux2 = mem_read(0xFFF9);
  2641  012A  30F9               	movlw	249
  2642  012B  00FA               	movwf	i1mem_read@add
  2643  012C  30FF               	movlw	255
  2644  012D  00FB               	movwf	i1mem_read@add+1
  2645  012E  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2646  0133  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0134  1303               	bcf	3,6	;RP1=0, select bank0
  2648  0135  00B4               	movwf	??_ints_isr
  2649  0136  01B5               	clrf	??_ints_isr+1
  2650  0137  0834               	movf	??_ints_isr,w
  2651  0138  00D1               	movwf	ints_isr@aux2
  2652  0139  0835               	movf	??_ints_isr+1,w
  2653  013A  00D2               	movwf	ints_isr@aux2+1
  2654                           
  2655                           ;panda17.c: 107: printf("%02x:",aux2);
  2656  013B  0852               	movf	ints_isr@aux2+1,w
  2657  013C  00A5               	movwf	?_printf+1
  2658  013D  0851               	movf	ints_isr@aux2,w
  2659  013E  00A4               	movwf	?_printf
  2660  013F  3056               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2661  0140  120A  118A  2443  120A  118A  	fcall	_printf
  2662                           
  2663                           ;panda17.c: 108: aux2 = mem_read(0xFFFA);
  2664  0145  30FA               	movlw	250
  2665  0146  00FA               	movwf	i1mem_read@add
  2666  0147  30FF               	movlw	255
  2667  0148  00FB               	movwf	i1mem_read@add+1
  2668  0149  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2669  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2670  014F  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0150  00B4               	movwf	??_ints_isr
  2672  0151  01B5               	clrf	??_ints_isr+1
  2673  0152  0834               	movf	??_ints_isr,w
  2674  0153  00D1               	movwf	ints_isr@aux2
  2675  0154  0835               	movf	??_ints_isr+1,w
  2676  0155  00D2               	movwf	ints_isr@aux2+1
  2677                           
  2678                           ;panda17.c: 109: printf("%02x ",aux2);
  2679  0156  0852               	movf	ints_isr@aux2+1,w
  2680  0157  00A5               	movwf	?_printf+1
  2681  0158  0851               	movf	ints_isr@aux2,w
  2682  0159  00A4               	movwf	?_printf
  2683  015A  304A               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2684  015B  120A  118A  2443  120A  118A  	fcall	_printf
  2685                           
  2686                           ;panda17.c: 110: aux2 = mem_read(0xFFFB);
  2687  0160  30FB               	movlw	251
  2688  0161  00FA               	movwf	i1mem_read@add
  2689  0162  30FF               	movlw	255
  2690  0163  00FB               	movwf	i1mem_read@add+1
  2691  0164  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2692  0169  1283               	bcf	3,5	;RP0=0, select bank0
  2693  016A  1303               	bcf	3,6	;RP1=0, select bank0
  2694  016B  00B4               	movwf	??_ints_isr
  2695  016C  01B5               	clrf	??_ints_isr+1
  2696  016D  0834               	movf	??_ints_isr,w
  2697  016E  00D1               	movwf	ints_isr@aux2
  2698  016F  0835               	movf	??_ints_isr+1,w
  2699  0170  00D2               	movwf	ints_isr@aux2+1
  2700                           
  2701                           ;panda17.c: 111: printf("%02x/",aux2);
  2702  0171  0852               	movf	ints_isr@aux2+1,w
  2703  0172  00A5               	movwf	?_printf+1
  2704  0173  0851               	movf	ints_isr@aux2,w
  2705  0174  00A4               	movwf	?_printf
  2706  0175  3050               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2707  0176  120A  118A  2443  120A  118A  	fcall	_printf
  2708                           
  2709                           ;panda17.c: 112: aux2 = mem_read(0xFFFC);
  2710  017B  30FC               	movlw	252
  2711  017C  00FA               	movwf	i1mem_read@add
  2712  017D  30FF               	movlw	255
  2713  017E  00FB               	movwf	i1mem_read@add+1
  2714  017F  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2715  0184  1283               	bcf	3,5	;RP0=0, select bank0
  2716  0185  1303               	bcf	3,6	;RP1=0, select bank0
  2717  0186  00B4               	movwf	??_ints_isr
  2718  0187  01B5               	clrf	??_ints_isr+1
  2719  0188  0834               	movf	??_ints_isr,w
  2720  0189  00D1               	movwf	ints_isr@aux2
  2721  018A  0835               	movf	??_ints_isr+1,w
  2722  018B  00D2               	movwf	ints_isr@aux2+1
  2723                           
  2724                           ;panda17.c: 113: printf("%02x/",aux2);
  2725  018C  0852               	movf	ints_isr@aux2+1,w
  2726  018D  00A5               	movwf	?_printf+1
  2727  018E  0851               	movf	ints_isr@aux2,w
  2728  018F  00A4               	movwf	?_printf
  2729  0190  3050               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2730  0191  120A  118A  2443  120A  118A  	fcall	_printf
  2731                           
  2732                           ;panda17.c: 114: aux2 = mem_read(0xFFFD);
  2733  0196  30FD               	movlw	253
  2734  0197  00FA               	movwf	i1mem_read@add
  2735  0198  30FF               	movlw	255
  2736  0199  00FB               	movwf	i1mem_read@add+1
  2737  019A  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2738  019F  1283               	bcf	3,5	;RP0=0, select bank0
  2739  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  2740  01A1  00B4               	movwf	??_ints_isr
  2741  01A2  01B5               	clrf	??_ints_isr+1
  2742  01A3  0834               	movf	??_ints_isr,w
  2743  01A4  00D1               	movwf	ints_isr@aux2
  2744  01A5  0835               	movf	??_ints_isr+1,w
  2745  01A6  00D2               	movwf	ints_isr@aux2+1
  2746                           
  2747                           ;panda17.c: 115: printf("%02x\t",aux2);
  2748  01A7  0852               	movf	ints_isr@aux2+1,w
  2749  01A8  00A5               	movwf	?_printf+1
  2750  01A9  0851               	movf	ints_isr@aux2,w
  2751  01AA  00A4               	movwf	?_printf
  2752  01AB  3044               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2753  01AC  120A  118A  2443  120A  118A  	fcall	_printf
  2754                           
  2755                           ;panda17.c: 116: aux2 = mem_read(0xFFFE);
  2756  01B1  30FE               	movlw	254
  2757  01B2  00FA               	movwf	i1mem_read@add
  2758  01B3  30FF               	movlw	255
  2759  01B4  00FB               	movwf	i1mem_read@add+1
  2760  01B5  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2761  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2762  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2763  01BC  00B4               	movwf	??_ints_isr
  2764  01BD  01B5               	clrf	??_ints_isr+1
  2765  01BE  0834               	movf	??_ints_isr,w
  2766  01BF  00D1               	movwf	ints_isr@aux2
  2767  01C0  0835               	movf	??_ints_isr+1,w
  2768  01C1  00D2               	movwf	ints_isr@aux2+1
  2769                           
  2770                           ;panda17.c: 117: printf("%02x",aux2);
  2771  01C2  0852               	movf	ints_isr@aux2+1,w
  2772  01C3  00A5               	movwf	?_printf+1
  2773  01C4  0851               	movf	ints_isr@aux2,w
  2774  01C5  00A4               	movwf	?_printf
  2775  01C6  305C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2776  01C7  120A  118A  2443  120A  118A  	fcall	_printf
  2777                           
  2778                           ;panda17.c: 118: aux2 = mem_read(0xFFFF);
  2779  01CC  30FF               	movlw	255
  2780  01CD  00FA               	movwf	i1mem_read@add
  2781  01CE  30FF               	movlw	255
  2782  01CF  00FB               	movwf	i1mem_read@add+1
  2783  01D0  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2784  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2785  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2786  01D7  00B4               	movwf	??_ints_isr
  2787  01D8  01B5               	clrf	??_ints_isr+1
  2788  01D9  0834               	movf	??_ints_isr,w
  2789  01DA  00D1               	movwf	ints_isr@aux2
  2790  01DB  0835               	movf	??_ints_isr+1,w
  2791  01DC  00D2               	movwf	ints_isr@aux2+1
  2792                           
  2793                           ;panda17.c: 119: printf("%02x",aux2);
  2794  01DD  0852               	movf	ints_isr@aux2+1,w
  2795  01DE  00A5               	movwf	?_printf+1
  2796  01DF  0851               	movf	ints_isr@aux2,w
  2797  01E0  00A4               	movwf	?_printf
  2798  01E1  305C               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2799  01E2  120A  118A  2443  120A  118A  	fcall	_printf
  2800                           
  2801                           ;panda17.c: 120: printf("\r\n");
  2802  01E7  303A               	movlw	(low (((STR_1+5)-__stringbase)| (0+32768)))& (0+255)
  2803  01E8  120A  118A  2443  120A  118A  	fcall	_printf
  2804                           
  2805                           ;panda17.c: 121: printf("X");
  2806  01ED  306D               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2807  01EE  120A  118A  2443  120A  118A  	fcall	_printf
  2808                           
  2809                           ;panda17.c: 122: PORTBbits.RB4 = 0;
  2810  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  2811  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  2812  01F5  1206               	bcf	6,4	;volatile
  2813                           
  2814                           ;panda17.c: 123: break;
  2815  01F6  2AB2               	goto	i1l102
  2816  01F7                     i1l2103:	
  2817                           ;panda17.c: 124: case 'b':
  2818                           
  2819                           
  2820                           ;panda17.c: 125: for (unsigned char z = 0;z<7;z++){
  2821  01F7  01C5               	clrf	ints_isr@z
  2822  01F8  3007               	movlw	7
  2823  01F9  0245               	subwf	ints_isr@z,w
  2824  01FA  1803               	btfsc	3,0
  2825  01FB  2A1B               	goto	i1l2117
  2826  01FC                     i1l106:	
  2827                           ;panda17.c: 126: while(!PIR1bits.RCIF);
  2828                           
  2829  01FC  1E8C               	btfss	12,5	;volatile
  2830  01FD  29FC               	goto	i1l106
  2831                           
  2832                           ;panda17.c: 127: ferr = RCSTAbits.FERR;
  2833  01FE  11DF               	bcf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2834  01FF  1918               	btfsc	24,2	;volatile
  2835  0200  15DF               	bsf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2836                           
  2837                           ;panda17.c: 128: oerr = RCSTAbits.OERR;
  2838  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2839  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2840  0203  115F               	bcf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2841  0204  1898               	btfsc	24,1	;volatile
  2842  0205  155F               	bsf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2843                           
  2844                           ;panda17.c: 129: if (!ferr & !oerr){
  2845  0206  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0207  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0208  1DDF               	btfss	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2848  0209  195F               	btfsc	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2849  020A  2A13               	goto	i1l2113
  2850                           
  2851                           ;panda17.c: 130: time[z] = RCREG;
  2852  020B  081A               	movf	26,w	;volatile
  2853  020C  00B4               	movwf	??_ints_isr
  2854  020D  0845               	movf	ints_isr@z,w
  2855  020E  3E58               	addlw	(low (_time| 0))& (0+255)
  2856  020F  0084               	movwf	4
  2857  0210  0834               	movf	??_ints_isr,w
  2858  0211  1383               	bcf	3,7	;select IRP bank0
  2859  0212  0080               	movwf	0
  2860  0213                     i1l2113:	
  2861  0213  3001               	movlw	1
  2862  0214  00B4               	movwf	??_ints_isr
  2863  0215  0834               	movf	??_ints_isr,w
  2864  0216  07C5               	addwf	ints_isr@z,f
  2865  0217  3007               	movlw	7
  2866  0218  0245               	subwf	ints_isr@z,w
  2867  0219  1C03               	skipc
  2868  021A  29FC               	goto	i1l106
  2869  021B                     i1l2117:	
  2870                           
  2871                           ;panda17.c: 131: }
  2872                           ;panda17.c: 132: }
  2873                           ;panda17.c: 133: ds_set(time);
  2874  021B  3058               	movlw	(low (_time| 0))& (0+255)
  2875  021C  120A  158A  242E  120A  118A  	fcall	_ds_set
  2876                           
  2877                           ;panda17.c: 134: break;
  2878  0221  2AB2               	goto	i1l102
  2879  0222                     i1l110:	
  2880                           ;panda17.c: 135: case 'c':
  2881                           
  2882                           
  2883                           ;panda17.c: 136: PORTBbits.RB4 = 1;
  2884  0222  1606               	bsf	6,4	;volatile
  2885                           
  2886                           ;panda17.c: 137: mem_write(0x0002,0x00);
  2887  0223  3002               	movlw	2
  2888  0224  00FA               	movwf	i1mem_write@add
  2889  0225  3000               	movlw	0
  2890  0226  00FB               	movwf	i1mem_write@add+1
  2891  0227  01FC               	clrf	i1mem_write@data
  2892  0228  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  2893                           
  2894                           ;panda17.c: 138: mem_init();
  2895  022D  120A  158A  2644  120A  118A  	fcall	i1_mem_init
  2896                           
  2897                           ;panda17.c: 139: PORTBbits.RB4 = 0;
  2898  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2899  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2900  0234  1206               	bcf	6,4	;volatile
  2901                           
  2902                           ;panda17.c: 140: if ((mem_read(0x0002) == 0xAA) && (mem_read(0x000D) == 0x00)){
  2903  0235  3002               	movlw	2
  2904  0236  00FA               	movwf	i1mem_read@add
  2905  0237  3000               	movlw	0
  2906  0238  00FB               	movwf	i1mem_read@add+1
  2907  0239  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2908  023E  3AAA               	xorlw	170
  2909  023F  1D03               	skipz
  2910  0240  2AB2               	goto	i1l102
  2911  0241  300D               	movlw	13
  2912  0242  00FA               	movwf	i1mem_read@add
  2913  0243  3000               	movlw	0
  2914  0244  00FB               	movwf	i1mem_read@add+1
  2915  0245  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  2916  024A  3A00               	xorlw	0
  2917  024B  1D03               	skipz
  2918  024C  2AB2               	goto	i1l102
  2919                           
  2920                           ;panda17.c: 141: printf("OK");
  2921  024D  306A               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2922  024E  120A  118A  2443  120A  118A  	fcall	_printf
  2923                           
  2924                           ;panda17.c: 142: }
  2925                           ;panda17.c: 143: break;
  2926  0253  2AB2               	goto	i1l102
  2927  0254                     i1l2127:	
  2928                           ;panda17.c: 144: case 'd':
  2929                           
  2930                           
  2931                           ;panda17.c: 145: for (unsigned char k=0;k<7;k++){
  2932  0254  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0255  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0256  01C6               	clrf	ints_isr@k
  2935  0257                     L2:	
  2936  0257  3007               	movlw	7
  2937  0258  0246               	subwf	ints_isr@k,w
  2938  0259  1803               	btfsc	3,0
  2939  025A  2AB2               	goto	i1l102
  2940                           
  2941                           ;panda17.c: 146: printf("%X ",ds_get(k));
  2942  025B  0846               	movf	ints_isr@k,w
  2943  025C  120A  158A  2398  120A  118A  	fcall	_ds_get
  2944  0261  1283               	bcf	3,5	;RP0=0, select bank0
  2945  0262  1303               	bcf	3,6	;RP1=0, select bank0
  2946  0263  00B4               	movwf	??_ints_isr
  2947  0264  01B5               	clrf	??_ints_isr+1
  2948  0265  0834               	movf	??_ints_isr,w
  2949  0266  00A4               	movwf	?_printf
  2950  0267  0835               	movf	??_ints_isr+1,w
  2951  0268  00A5               	movwf	?_printf+1
  2952  0269  3066               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2953  026A  120A  118A  2443  120A  118A  	fcall	_printf
  2954  026F  3001               	movlw	1
  2955  0270  1283               	bcf	3,5	;RP0=0, select bank0
  2956  0271  1303               	bcf	3,6	;RP1=0, select bank0
  2957  0272  00B4               	movwf	??_ints_isr
  2958  0273  0834               	movf	??_ints_isr,w
  2959  0274  07C6               	addwf	ints_isr@k,f
  2960  0275  2A57               	goto	L2
  2961  0276                     i1l2139:	
  2962                           ;panda17.c: 149: case 'm':
  2963                           
  2964                           ;panda17.c: 147: }
  2965                           ;panda17.c: 148: break;
  2966                           
  2967                           
  2968                           ;panda17.c: 150: printf("I%04x;",si_read_h());
  2969  0276  120A  158A  27A3  120A  118A  	fcall	_si_read_h
  2970  027B  087B               	movf	?_si_read_h+1,w
  2971  027C  1283               	bcf	3,5	;RP0=0, select bank0
  2972  027D  1303               	bcf	3,6	;RP1=0, select bank0
  2973  027E  00A5               	movwf	?_printf+1
  2974  027F  087A               	movf	?_si_read_h,w
  2975  0280  00A4               	movwf	?_printf
  2976  0281  303D               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2977  0282  120A  118A  2443  120A  118A  	fcall	_printf
  2978                           
  2979                           ;panda17.c: 151: printf("%04x",si_read_t());
  2980  0287  120A  158A  2694  120A  118A  	fcall	_si_read_t
  2981  028C  087B               	movf	?_si_read_t+1,w
  2982  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2983  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2984  028F  00A5               	movwf	?_printf+1
  2985  0290  087A               	movf	?_si_read_t,w
  2986  0291  00A4               	movwf	?_printf
  2987  0292  3061               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2988  0293  120A  118A  2443  120A  118A  	fcall	_printf
  2989                           
  2990                           ;panda17.c: 152: printf("X");
  2991  0298  306D               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2992  0299  120A  118A  2443  120A  118A  	fcall	_printf
  2993                           
  2994                           ;panda17.c: 155: }
  2995                           
  2996                           ;panda17.c: 153: break;
  2997  029E  2AB2               	goto	i1l102
  2998  029F                     i1l2143:	
  2999  029F  1283               	bcf	3,5	;RP0=0, select bank0
  3000  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  3001  02A1  083E               	movf	ints_isr@rcv,w
  3002                           
  3003                           ; Switch size 1, requested type "space"
  3004                           ; Number of cases is 5, Range of values is 97 to 109
  3005                           ; switch strategies available:
  3006                           ; Name         Instructions Cycles
  3007                           ; simple_byte           16     9 (average)
  3008                           ; direct_byte           50    11 (fixed)
  3009                           ; jumptable            263     9 (fixed)
  3010                           ;	Chosen strategy is simple_byte
  3011  02A2  3A61               	xorlw	97	; case 97
  3012  02A3  1903               	skipnz
  3013  02A4  283F               	goto	i1l98
  3014  02A5  3A03               	xorlw	3	; case 98
  3015  02A6  1903               	skipnz
  3016  02A7  29F7               	goto	i1l2103
  3017  02A8  3A01               	xorlw	1	; case 99
  3018  02A9  1903               	skipnz
  3019  02AA  2A22               	goto	i1l110
  3020  02AB  3A07               	xorlw	7	; case 100
  3021  02AC  1903               	skipnz
  3022  02AD  2A54               	goto	i1l2127
  3023  02AE  3A09               	xorlw	9	; case 109
  3024  02AF  1903               	skipnz
  3025  02B0  2A76               	goto	i1l2139
  3026  02B1  2AB2               	goto	i1l102
  3027  02B2                     i1l102:	
  3028                           
  3029                           ;panda17.c: 156: INTCONbits.GIE = 1;
  3030  02B2  178B               	bsf	11,7	;volatile
  3031  02B3                     i1l91:	
  3032                           
  3033                           ;panda17.c: 157: }
  3034                           ;panda17.c: 161: if (PIR1bits.TMR2IF){
  3035  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  3036  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  3037  02B5  1C8C               	btfss	12,1	;volatile
  3038  02B6  2C36               	goto	i1l125
  3039                           
  3040                           ;panda17.c: 162: PIR1bits.TMR2IF = 0;
  3041  02B7  108C               	bcf	12,1	;volatile
  3042                           
  3043                           ;panda17.c: 163: INTCONbits.GIE = 0;
  3044  02B8  138B               	bcf	11,7	;volatile
  3045                           
  3046                           ;panda17.c: 164: if (!PORTBbits.RB2){
  3047  02B9  1906               	btfsc	6,2	;volatile
  3048  02BA  2AC2               	goto	i1l2153
  3049                           
  3050                           ;panda17.c: 165: led = 5;
  3051  02BB  3005               	movlw	5
  3052  02BC  00B4               	movwf	??_ints_isr
  3053  02BD  0834               	movf	??_ints_isr,w
  3054  02BE  00E0               	movwf	_led
  3055                           
  3056                           ;panda17.c: 166: milis = 0;
  3057  02BF  01D7               	clrf	_milis
  3058                           
  3059                           ;panda17.c: 167: secs = 0;
  3060  02C0  01D4               	clrf	_secs
  3061  02C1  01D5               	clrf	_secs+1
  3062  02C2                     i1l2153:	
  3063                           
  3064                           ;panda17.c: 168: }
  3065                           ;panda17.c: 169: if (PORTBbits.RB2){
  3066  02C2  1D06               	btfss	6,2	;volatile
  3067  02C3  2C35               	goto	i1l2233
  3068                           
  3069                           ;panda17.c: 170: if (mem_read(0x0003) != 0xAA){
  3070  02C4  3003               	movlw	3
  3071  02C5  00FA               	movwf	i1mem_read@add
  3072  02C6  3000               	movlw	0
  3073  02C7  00FB               	movwf	i1mem_read@add+1
  3074  02C8  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  3075  02CD  3AAA               	xorlw	170
  3076  02CE  1903               	skipnz
  3077  02CF  2AD5               	goto	i1l2159
  3078                           
  3079                           ;panda17.c: 171: save_the_date();
  3080  02D0  120A  118A  2659  120A  118A  	fcall	_save_the_date
  3081  02D5                     i1l2159:	
  3082                           
  3083                           ;panda17.c: 172: }
  3084                           ;panda17.c: 173: milis++;
  3085  02D5  3001               	movlw	1
  3086  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  3087  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  3088  02D8  00B4               	movwf	??_ints_isr
  3089  02D9  0834               	movf	??_ints_isr,w
  3090  02DA  07D7               	addwf	_milis,f
  3091                           
  3092                           ;panda17.c: 174: if(milis > 6){
  3093  02DB  3007               	movlw	7
  3094  02DC  0257               	subwf	_milis,w
  3095  02DD  1C03               	skipc
  3096  02DE  2AF6               	goto	i1l2177
  3097                           
  3098                           ;panda17.c: 175: if (led > 0){
  3099  02DF  0860               	movf	_led,w
  3100  02E0  1903               	btfsc	3,2
  3101  02E1  2AE6               	goto	i1l121
  3102                           
  3103                           ;panda17.c: 176: PORTBbits.RB4 = 1;
  3104  02E2  1606               	bsf	6,4	;volatile
  3105                           
  3106                           ;panda17.c: 177: led--;
  3107  02E3  3001               	movlw	1
  3108  02E4  02E0               	subwf	_led,f
  3109                           
  3110                           ;panda17.c: 178: }
  3111  02E5  2AE7               	goto	i1l2169
  3112  02E6                     i1l121:	
  3113                           
  3114                           ;panda17.c: 179: else {
  3115                           ;panda17.c: 180: PORTBbits.RB4 = 0;
  3116  02E6  1206               	bcf	6,4	;volatile
  3117  02E7                     i1l2169:	
  3118                           
  3119                           ;panda17.c: 181: }
  3120                           ;panda17.c: 182: secs++;
  3121  02E7  3001               	movlw	1
  3122  02E8  07D4               	addwf	_secs,f
  3123  02E9  1803               	skipnc
  3124  02EA  0AD5               	incf	_secs+1,f
  3125  02EB  3000               	movlw	0
  3126  02EC  07D5               	addwf	_secs+1,f
  3127                           
  3128                           ;panda17.c: 183: milis = 0;
  3129  02ED  01D7               	clrf	_milis
  3130                           
  3131                           ;panda17.c: 184: if (secs == 1){
  3132  02EE  0354               	decf	_secs,w
  3133  02EF  0455               	iorwf	_secs+1,w
  3134  02F0  1D03               	btfss	3,2
  3135  02F1  2AF6               	goto	i1l2177
  3136                           
  3137                           ;panda17.c: 185: condition = 2;
  3138  02F2  3002               	movlw	2
  3139  02F3  00B4               	movwf	??_ints_isr
  3140  02F4  0834               	movf	??_ints_isr,w
  3141  02F5  00D6               	movwf	_condition
  3142  02F6                     i1l2177:	
  3143                           
  3144                           ;panda17.c: 186: }
  3145                           ;panda17.c: 187: }
  3146                           ;panda17.c: 188: if (condition == 2){
  3147  02F6  3002               	movlw	2
  3148  02F7  0656               	xorwf	_condition,w
  3149  02F8  1D03               	btfss	3,2
  3150  02F9  2C35               	goto	i1l2233
  3151                           
  3152                           ;panda17.c: 189: condition = 0;
  3153  02FA  01D6               	clrf	_condition
  3154                           
  3155                           ;panda17.c: 190: secs = 0;
  3156  02FB  01D4               	clrf	_secs
  3157  02FC  01D5               	clrf	_secs+1
  3158                           
  3159                           ;panda17.c: 192: unsigned char arg;
  3160                           ;panda17.c: 193: unsigned int temp_add,hum_add,up;
  3161                           ;panda17.c: 194: unsigned int hum_val,temp_val;
  3162                           ;panda17.c: 196: hum_val = si_read_h();
  3163  02FD  120A  158A  27A3  120A  118A  	fcall	_si_read_h
  3164  0302  087B               	movf	?_si_read_h+1,w
  3165  0303  1283               	bcf	3,5	;RP0=0, select bank0
  3166  0304  1303               	bcf	3,6	;RP1=0, select bank0
  3167  0305  00C0               	movwf	ints_isr@hum_val+1
  3168  0306  087A               	movf	?_si_read_h,w
  3169  0307  00BF               	movwf	ints_isr@hum_val
  3170                           
  3171                           ;panda17.c: 197: temp_val = si_read_t();
  3172  0308  120A  158A  2694  120A  118A  	fcall	_si_read_t
  3173  030D  087B               	movf	?_si_read_t+1,w
  3174  030E  1283               	bcf	3,5	;RP0=0, select bank0
  3175  030F  1303               	bcf	3,6	;RP1=0, select bank0
  3176  0310  00C2               	movwf	ints_isr@temp_val+1
  3177  0311  087A               	movf	?_si_read_t,w
  3178  0312  00C1               	movwf	ints_isr@temp_val
  3179                           
  3180                           ;panda17.c: 199: hum_add = mem_read(0x000A);
  3181  0313  300A               	movlw	10
  3182  0314  00FA               	movwf	i1mem_read@add
  3183  0315  3000               	movlw	0
  3184  0316  00FB               	movwf	i1mem_read@add+1
  3185  0317  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  3186  031C  1283               	bcf	3,5	;RP0=0, select bank0
  3187  031D  1303               	bcf	3,6	;RP1=0, select bank0
  3188  031E  00B4               	movwf	??_ints_isr
  3189  031F  01B5               	clrf	??_ints_isr+1
  3190  0320  0834               	movf	??_ints_isr,w
  3191  0321  00CF               	movwf	ints_isr@hum_add
  3192  0322  0835               	movf	??_ints_isr+1,w
  3193  0323  00D0               	movwf	ints_isr@hum_add+1
  3194                           
  3195                           ;panda17.c: 200: hum_add = hum_add << 8;
  3196  0324  084F               	movf	ints_isr@hum_add,w
  3197  0325  00B5               	movwf	??_ints_isr+1
  3198  0326  01B4               	clrf	??_ints_isr
  3199  0327  0834               	movf	??_ints_isr,w
  3200  0328  00CF               	movwf	ints_isr@hum_add
  3201  0329  0835               	movf	??_ints_isr+1,w
  3202  032A  00D0               	movwf	ints_isr@hum_add+1
  3203                           
  3204                           ;panda17.c: 201: hum_add += mem_read(0x000B);
  3205  032B  300B               	movlw	11
  3206  032C  00FA               	movwf	i1mem_read@add
  3207  032D  3000               	movlw	0
  3208  032E  00FB               	movwf	i1mem_read@add+1
  3209  032F  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  3210  0334  1283               	bcf	3,5	;RP0=0, select bank0
  3211  0335  1303               	bcf	3,6	;RP1=0, select bank0
  3212  0336  00B4               	movwf	??_ints_isr
  3213  0337  01B5               	clrf	??_ints_isr+1
  3214  0338  0834               	movf	??_ints_isr,w
  3215  0339  07CF               	addwf	ints_isr@hum_add,f
  3216  033A  1803               	skipnc
  3217  033B  0AD0               	incf	ints_isr@hum_add+1,f
  3218  033C  0835               	movf	??_ints_isr+1,w
  3219  033D  07D0               	addwf	ints_isr@hum_add+1,f
  3220                           
  3221                           ;panda17.c: 202: up = hum_add + 1;
  3222  033E  084F               	movf	ints_isr@hum_add,w
  3223  033F  3E01               	addlw	1
  3224  0340  00C7               	movwf	ints_isr@up
  3225  0341  0850               	movf	ints_isr@hum_add+1,w
  3226  0342  1803               	skipnc
  3227  0343  3E01               	addlw	1
  3228  0344  3E00               	addlw	0
  3229  0345  00C8               	movwf	ints_isr@up+1
  3230                           
  3231                           ;panda17.c: 203: arg = up >> 8;
  3232  0346  0848               	movf	ints_isr@up+1,w
  3233  0347  00B4               	movwf	??_ints_isr
  3234  0348  0834               	movf	??_ints_isr,w
  3235  0349  00D3               	movwf	ints_isr@arg
  3236                           
  3237                           ;panda17.c: 204: mem_write(0x000A,arg);
  3238  034A  300A               	movlw	10
  3239  034B  00FA               	movwf	i1mem_write@add
  3240  034C  3000               	movlw	0
  3241  034D  00FB               	movwf	i1mem_write@add+1
  3242  034E  0853               	movf	ints_isr@arg,w
  3243  034F  00B4               	movwf	??_ints_isr
  3244  0350  0834               	movf	??_ints_isr,w
  3245  0351  00FC               	movwf	i1mem_write@data
  3246  0352  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  3247                           
  3248                           ;panda17.c: 205: arg = up & 0x00FF;
  3249  0357  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0358  1303               	bcf	3,6	;RP1=0, select bank0
  3251  0359  0847               	movf	ints_isr@up,w
  3252  035A  00B4               	movwf	??_ints_isr
  3253  035B  0834               	movf	??_ints_isr,w
  3254  035C  00D3               	movwf	ints_isr@arg
  3255                           
  3256                           ;panda17.c: 206: mem_write(0x000B,arg);
  3257  035D  300B               	movlw	11
  3258  035E  00FA               	movwf	i1mem_write@add
  3259  035F  3000               	movlw	0
  3260  0360  00FB               	movwf	i1mem_write@add+1
  3261  0361  0853               	movf	ints_isr@arg,w
  3262  0362  00B4               	movwf	??_ints_isr
  3263  0363  0834               	movf	??_ints_isr,w
  3264  0364  00FC               	movwf	i1mem_write@data
  3265  0365  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  3266                           
  3267                           ;panda17.c: 207: hum_add = (hum_add * 2) + 1 + 0x000F;
  3268  036A  1283               	bcf	3,5	;RP0=0, select bank0
  3269  036B  1303               	bcf	3,6	;RP1=0, select bank0
  3270  036C  0850               	movf	ints_isr@hum_add+1,w
  3271  036D  00B5               	movwf	??_ints_isr+1
  3272  036E  084F               	movf	ints_isr@hum_add,w
  3273  036F  00B4               	movwf	??_ints_isr
  3274  0370  1003               	clrc
  3275  0371  0DB4               	rlf	??_ints_isr,f
  3276  0372  0DB5               	rlf	??_ints_isr+1,f
  3277  0373  0834               	movf	??_ints_isr,w
  3278  0374  3E10               	addlw	16
  3279  0375  00CF               	movwf	ints_isr@hum_add
  3280  0376  0835               	movf	??_ints_isr+1,w
  3281  0377  1803               	skipnc
  3282  0378  3E01               	addlw	1
  3283  0379  3E00               	addlw	0
  3284  037A  00D0               	movwf	ints_isr@hum_add+1
  3285                           
  3286                           ;panda17.c: 208: temp_add = mem_read(0x000C);
  3287  037B  300C               	movlw	12
  3288  037C  00FA               	movwf	i1mem_read@add
  3289  037D  3000               	movlw	0
  3290  037E  00FB               	movwf	i1mem_read@add+1
  3291  037F  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  3292  0384  1283               	bcf	3,5	;RP0=0, select bank0
  3293  0385  1303               	bcf	3,6	;RP1=0, select bank0
  3294  0386  00B4               	movwf	??_ints_isr
  3295  0387  01B5               	clrf	??_ints_isr+1
  3296  0388  0834               	movf	??_ints_isr,w
  3297  0389  00CD               	movwf	ints_isr@temp_add
  3298  038A  0835               	movf	??_ints_isr+1,w
  3299  038B  00CE               	movwf	ints_isr@temp_add+1
  3300                           
  3301                           ;panda17.c: 209: temp_add = temp_add << 8;
  3302  038C  084D               	movf	ints_isr@temp_add,w
  3303  038D  00B5               	movwf	??_ints_isr+1
  3304  038E  01B4               	clrf	??_ints_isr
  3305  038F  0834               	movf	??_ints_isr,w
  3306  0390  00CD               	movwf	ints_isr@temp_add
  3307  0391  0835               	movf	??_ints_isr+1,w
  3308  0392  00CE               	movwf	ints_isr@temp_add+1
  3309                           
  3310                           ;panda17.c: 210: temp_add += mem_read(0x000D);
  3311  0393  300D               	movlw	13
  3312  0394  00FA               	movwf	i1mem_read@add
  3313  0395  3000               	movlw	0
  3314  0396  00FB               	movwf	i1mem_read@add+1
  3315  0397  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  3316  039C  1283               	bcf	3,5	;RP0=0, select bank0
  3317  039D  1303               	bcf	3,6	;RP1=0, select bank0
  3318  039E  00B4               	movwf	??_ints_isr
  3319  039F  01B5               	clrf	??_ints_isr+1
  3320  03A0  0834               	movf	??_ints_isr,w
  3321  03A1  07CD               	addwf	ints_isr@temp_add,f
  3322  03A2  1803               	skipnc
  3323  03A3  0ACE               	incf	ints_isr@temp_add+1,f
  3324  03A4  0835               	movf	??_ints_isr+1,w
  3325  03A5  07CE               	addwf	ints_isr@temp_add+1,f
  3326                           
  3327                           ;panda17.c: 211: up = temp_add + 1;
  3328  03A6  084D               	movf	ints_isr@temp_add,w
  3329  03A7  3E01               	addlw	1
  3330  03A8  00C7               	movwf	ints_isr@up
  3331  03A9  084E               	movf	ints_isr@temp_add+1,w
  3332  03AA  1803               	skipnc
  3333  03AB  3E01               	addlw	1
  3334  03AC  3E00               	addlw	0
  3335  03AD  00C8               	movwf	ints_isr@up+1
  3336                           
  3337                           ;panda17.c: 212: arg = up >> 8;
  3338  03AE  0848               	movf	ints_isr@up+1,w
  3339  03AF  00B4               	movwf	??_ints_isr
  3340  03B0  0834               	movf	??_ints_isr,w
  3341  03B1  00D3               	movwf	ints_isr@arg
  3342                           
  3343                           ;panda17.c: 213: mem_write(0x000C,arg);
  3344  03B2  300C               	movlw	12
  3345  03B3  00FA               	movwf	i1mem_write@add
  3346  03B4  3000               	movlw	0
  3347  03B5  00FB               	movwf	i1mem_write@add+1
  3348  03B6  0853               	movf	ints_isr@arg,w
  3349  03B7  00B4               	movwf	??_ints_isr
  3350  03B8  0834               	movf	??_ints_isr,w
  3351  03B9  00FC               	movwf	i1mem_write@data
  3352  03BA  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  3353                           
  3354                           ;panda17.c: 214: arg = up & 0x00FF;
  3355  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  3356  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  3357  03C1  0847               	movf	ints_isr@up,w
  3358  03C2  00B4               	movwf	??_ints_isr
  3359  03C3  0834               	movf	??_ints_isr,w
  3360  03C4  00D3               	movwf	ints_isr@arg
  3361                           
  3362                           ;panda17.c: 215: mem_write(0x000D,arg);
  3363  03C5  300D               	movlw	13
  3364  03C6  00FA               	movwf	i1mem_write@add
  3365  03C7  3000               	movlw	0
  3366  03C8  00FB               	movwf	i1mem_write@add+1
  3367  03C9  0853               	movf	ints_isr@arg,w
  3368  03CA  00B4               	movwf	??_ints_isr
  3369  03CB  0834               	movf	??_ints_isr,w
  3370  03CC  00FC               	movwf	i1mem_write@data
  3371  03CD  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  3372                           
  3373                           ;panda17.c: 216: temp_add = (temp_add * 2) + 1 + 0x7FF6;
  3374  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  3375  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  3376  03D4  084E               	movf	ints_isr@temp_add+1,w
  3377  03D5  00B5               	movwf	??_ints_isr+1
  3378  03D6  084D               	movf	ints_isr@temp_add,w
  3379  03D7  00B4               	movwf	??_ints_isr
  3380  03D8  1003               	clrc
  3381  03D9  0DB4               	rlf	??_ints_isr,f
  3382  03DA  0DB5               	rlf	??_ints_isr+1,f
  3383  03DB  0834               	movf	??_ints_isr,w
  3384  03DC  3EF7               	addlw	247
  3385  03DD  00CD               	movwf	ints_isr@temp_add
  3386  03DE  0835               	movf	??_ints_isr+1,w
  3387  03DF  1803               	skipnc
  3388  03E0  3E01               	addlw	1
  3389  03E1  3E7F               	addlw	127
  3390  03E2  00CE               	movwf	ints_isr@temp_add+1
  3391                           
  3392                           ;panda17.c: 218: arg = hum_val >> 8;
  3393  03E3  0840               	movf	ints_isr@hum_val+1,w
  3394  03E4  00B4               	movwf	??_ints_isr
  3395  03E5  0834               	movf	??_ints_isr,w
  3396  03E6  00D3               	movwf	ints_isr@arg
  3397                           
  3398                           ;panda17.c: 219: mem_write(hum_add,arg);
  3399  03E7  0850               	movf	ints_isr@hum_add+1,w
  3400  03E8  00FB               	movwf	i1mem_write@add+1
  3401  03E9  084F               	movf	ints_isr@hum_add,w
  3402  03EA  00FA               	movwf	i1mem_write@add
  3403  03EB  0853               	movf	ints_isr@arg,w
  3404  03EC  00B4               	movwf	??_ints_isr
  3405  03ED  0834               	movf	??_ints_isr,w
  3406  03EE  00FC               	movwf	i1mem_write@data
  3407  03EF  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  3408                           
  3409                           ;panda17.c: 220: arg = hum_val & 0x00FF;
  3410  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  3411  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  3412  03F6  083F               	movf	ints_isr@hum_val,w
  3413  03F7  00B4               	movwf	??_ints_isr
  3414  03F8  0834               	movf	??_ints_isr,w
  3415  03F9  00D3               	movwf	ints_isr@arg
  3416                           
  3417                           ;panda17.c: 221: mem_write(hum_add + 1,arg);
  3418  03FA  084F               	movf	ints_isr@hum_add,w
  3419  03FB  3E01               	addlw	1
  3420  03FC  00FA               	movwf	i1mem_write@add
  3421  03FD  0850               	movf	ints_isr@hum_add+1,w
  3422  03FE  1803               	skipnc
  3423  03FF  3E01               	addlw	1
  3424  0400  3E00               	addlw	0
  3425  0401  00FB               	movwf	i1mem_write@add+1
  3426  0402  0853               	movf	ints_isr@arg,w
  3427  0403  00B4               	movwf	??_ints_isr
  3428  0404  0834               	movf	??_ints_isr,w
  3429  0405  00FC               	movwf	i1mem_write@data
  3430  0406  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  3431                           
  3432                           ;panda17.c: 222: arg = (temp_val >> 8) & 0x00FF;
  3433  040B  1283               	bcf	3,5	;RP0=0, select bank0
  3434  040C  1303               	bcf	3,6	;RP1=0, select bank0
  3435  040D  0842               	movf	ints_isr@temp_val+1,w
  3436  040E  00B4               	movwf	??_ints_isr
  3437  040F  0834               	movf	??_ints_isr,w
  3438  0410  00D3               	movwf	ints_isr@arg
  3439                           
  3440                           ;panda17.c: 223: mem_write(temp_add,arg);
  3441  0411  084E               	movf	ints_isr@temp_add+1,w
  3442  0412  00FB               	movwf	i1mem_write@add+1
  3443  0413  084D               	movf	ints_isr@temp_add,w
  3444  0414  00FA               	movwf	i1mem_write@add
  3445  0415  0853               	movf	ints_isr@arg,w
  3446  0416  00B4               	movwf	??_ints_isr
  3447  0417  0834               	movf	??_ints_isr,w
  3448  0418  00FC               	movwf	i1mem_write@data
  3449  0419  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  3450                           
  3451                           ;panda17.c: 224: arg = temp_val & 0x00FF;
  3452  041E  1283               	bcf	3,5	;RP0=0, select bank0
  3453  041F  1303               	bcf	3,6	;RP1=0, select bank0
  3454  0420  0841               	movf	ints_isr@temp_val,w
  3455  0421  00B4               	movwf	??_ints_isr
  3456  0422  0834               	movf	??_ints_isr,w
  3457  0423  00D3               	movwf	ints_isr@arg
  3458                           
  3459                           ;panda17.c: 225: mem_write(temp_add + 1,arg);
  3460  0424  084D               	movf	ints_isr@temp_add,w
  3461  0425  3E01               	addlw	1
  3462  0426  00FA               	movwf	i1mem_write@add
  3463  0427  084E               	movf	ints_isr@temp_add+1,w
  3464  0428  1803               	skipnc
  3465  0429  3E01               	addlw	1
  3466  042A  3E00               	addlw	0
  3467  042B  00FB               	movwf	i1mem_write@add+1
  3468  042C  0853               	movf	ints_isr@arg,w
  3469  042D  00B4               	movwf	??_ints_isr
  3470  042E  0834               	movf	??_ints_isr,w
  3471  042F  00FC               	movwf	i1mem_write@data
  3472  0430  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  3473  0435                     i1l2233:	
  3474                           
  3475                           ;panda17.c: 227: }
  3476                           ;panda17.c: 228: }
  3477                           ;panda17.c: 229: INTCONbits.GIE = 1;
  3478  0435  178B               	bsf	11,7	;volatile
  3479  0436                     i1l125:	
  3480  0436  1283               	bcf	3,5	;RP0=0, select bank0
  3481  0437  1303               	bcf	3,6	;RP1=0, select bank0
  3482  0438  083B               	movf	??_ints_isr+7,w
  3483  0439  00FF               	movwf	127
  3484  043A  083A               	movf	??_ints_isr+6,w
  3485  043B  008A               	movwf	10
  3486  043C  0839               	movf	??_ints_isr+5,w
  3487  043D  0084               	movwf	4
  3488  043E  0E38               	swapf	(??_ints_isr+4)^0,w
  3489  043F  0083               	movwf	3
  3490  0440  0EFE               	swapf	126,f
  3491  0441  0E7E               	swapf	126,w
  3492  0442  0009               	retfie
  3493  0443                     __end_of_ints_isr:	
  3494                           
  3495                           	psect	intentry
  3496  0004                     __pintentry:	
  3497                           ;incstack = 0
  3498                           ; Regs used in _ints_isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3499                           
  3500  0004                     interrupt_function:	
  3501  007E                     saved_w	set	btemp
  3502  0004  00FE               	movwf	btemp
  3503  0005  0E03               	swapf	3,w
  3504  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3505  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3506  0008  00B8               	movwf	??_ints_isr+4
  3507  0009  0804               	movf	4,w
  3508  000A  00B9               	movwf	??_ints_isr+5
  3509  000B  080A               	movf	10,w
  3510  000C  00BA               	movwf	??_ints_isr+6
  3511  000D  087F               	movf	btemp+1,w
  3512  000E  00BB               	movwf	??_ints_isr+7
  3513  000F  120A  118A  2829   	ljmp	_ints_isr
  3514                           
  3515                           	psect	text13
  3516  0E44                     __ptext13:	
  3517 ;; *************** function i1_mem_init *****************
  3518 ;; Defined at:
  3519 ;;		line 42 in file "panda17.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  mem_init        1    4[BANK0 ] unsigned char 
  3524 ;; Return value:  Size  Location     Type
  3525 ;;                  1    wreg      void 
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, status,0, pclath, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3533 ;;      Params:         0       0       0       0       0
  3534 ;;      Locals:         0       1       0       0       0
  3535 ;;      Temps:          0       1       0       0       0
  3536 ;;      Totals:         0       2       0       0       0
  3537 ;;Total ram usage:        2 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    2
  3540 ;; This function calls:
  3541 ;;		i1_mem_read
  3542 ;;		i1_mem_write
  3543 ;; This function is called by:
  3544 ;;		_ints_isr
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           
  3549                           ;psect for function i1_mem_init
  3550  0E44                     i1_mem_init:	
  3551                           
  3552                           ;panda17.c: 43: unsigned char aux;
  3553                           ;panda17.c: 44: aux = mem_read(0x0002);
  3554                           
  3555                           ;incstack = 0
  3556                           ; Regs used in i1_mem_init: [wreg+status,2+status,0+pclath+cstack]
  3557  0E44  3002               	movlw	2
  3558  0E45  00FA               	movwf	i1mem_read@add
  3559  0E46  3000               	movlw	0
  3560  0E47  00FB               	movwf	i1mem_read@add+1
  3561  0E48  120A  158A  24D0  120A  158A  	fcall	i1_mem_read
  3562  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  3563  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  3564  0E4F  00A3               	movwf	??i1_mem_init
  3565  0E50  0823               	movf	??i1_mem_init,w
  3566  0E51  00A4               	movwf	i1mem_init@aux
  3567                           
  3568                           ;panda17.c: 45: if (aux != 0xAA){
  3569  0E52  30AA               	movlw	170
  3570  0E53  0624               	xorwf	i1mem_init@aux,w
  3571  0E54  1903               	btfsc	3,2
  3572  0E55  0008               	return
  3573                           
  3574                           ;panda17.c: 46: mem_write(0x0002,0xAA);
  3575  0E56  3002               	movlw	2
  3576  0E57  00FA               	movwf	i1mem_write@add
  3577  0E58  3000               	movlw	0
  3578  0E59  00FB               	movwf	i1mem_write@add+1
  3579  0E5A  30AA               	movlw	170
  3580  0E5B  00A3               	movwf	??i1_mem_init
  3581  0E5C  0823               	movf	??i1_mem_init,w
  3582  0E5D  00FC               	movwf	i1mem_write@data
  3583  0E5E  120A  158A  2516  120A  158A  	fcall	i1_mem_write
  3584                           
  3585                           ;panda17.c: 47: mem_write(0x0003,0x00);
  3586  0E63  3003               	movlw	3
  3587  0E64  00FA               	movwf	i1mem_write@add
  3588  0E65  3000               	movlw	0
  3589  0E66  00FB               	movwf	i1mem_write@add+1
  3590  0E67  01FC               	clrf	i1mem_write@data
  3591  0E68  120A  158A  2516  120A  158A  	fcall	i1_mem_write
  3592                           
  3593                           ;panda17.c: 48: mem_write(0x000A,0x00);
  3594  0E6D  300A               	movlw	10
  3595  0E6E  00FA               	movwf	i1mem_write@add
  3596  0E6F  3000               	movlw	0
  3597  0E70  00FB               	movwf	i1mem_write@add+1
  3598  0E71  01FC               	clrf	i1mem_write@data
  3599  0E72  120A  158A  2516  120A  158A  	fcall	i1_mem_write
  3600                           
  3601                           ;panda17.c: 49: mem_write(0x000B,0x00);
  3602  0E77  300B               	movlw	11
  3603  0E78  00FA               	movwf	i1mem_write@add
  3604  0E79  3000               	movlw	0
  3605  0E7A  00FB               	movwf	i1mem_write@add+1
  3606  0E7B  01FC               	clrf	i1mem_write@data
  3607  0E7C  120A  158A  2516  120A  158A  	fcall	i1_mem_write
  3608                           
  3609                           ;panda17.c: 50: mem_write(0x000C,0x00);
  3610  0E81  300C               	movlw	12
  3611  0E82  00FA               	movwf	i1mem_write@add
  3612  0E83  3000               	movlw	0
  3613  0E84  00FB               	movwf	i1mem_write@add+1
  3614  0E85  01FC               	clrf	i1mem_write@data
  3615  0E86  120A  158A  2516  120A  158A  	fcall	i1_mem_write
  3616                           
  3617                           ;panda17.c: 51: mem_write(0x000D,0x00);
  3618  0E8B  300D               	movlw	13
  3619  0E8C  00FA               	movwf	i1mem_write@add
  3620  0E8D  3000               	movlw	0
  3621  0E8E  00FB               	movwf	i1mem_write@add+1
  3622  0E8F  01FC               	clrf	i1mem_write@data
  3623  0E90  120A  158A  2516   	fcall	i1_mem_write
  3624  0E93  0008               	return
  3625  0E94                     __end_ofi1_mem_init:	
  3626                           
  3627                           	psect	text14
  3628  0E94                     __ptext14:	
  3629 ;; *************** function _si_read_t *****************
  3630 ;; Defined at:
  3631 ;;		line 37 in file "si7021.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  rta             2    2[BANK0 ] unsigned int 
  3636 ;;  rta_l           1    1[BANK0 ] unsigned char 
  3637 ;;  rta_h           1    0[BANK0 ] unsigned char 
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  2   10[COMMON] unsigned int 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0, pclath, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3647 ;;      Params:         2       0       0       0       0
  3648 ;;      Locals:         0       4       0       0       0
  3649 ;;      Temps:          2       0       0       0       0
  3650 ;;      Totals:         4       4       0       0       0
  3651 ;;Total ram usage:        8 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    1
  3654 ;; This function calls:
  3655 ;;		_i2c_rstart
  3656 ;;		i1_i2c_read
  3657 ;;		i1_i2c_start
  3658 ;;		i1_i2c_stop
  3659 ;;		i1_i2c_write
  3660 ;; This function is called by:
  3661 ;;		_ints_isr
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           
  3666                           ;psect for function _si_read_t
  3667  0E94                     _si_read_t:	
  3668                           
  3669                           ;si7021.c: 38: unsigned int rta;
  3670                           ;si7021.c: 39: unsigned char rta_h,rta_l;
  3671                           ;si7021.c: 40: i2c_start();
  3672                           
  3673                           ;incstack = 0
  3674                           ; Regs used in _si_read_t: [wreg+status,2+status,0+pclath+cstack]
  3675  0E94  120A  158A  22C4  120A  158A  	fcall	i1_i2c_start
  3676                           
  3677                           ;si7021.c: 41: i2c_write(0x80,1);
  3678  0E99  01F0               	clrf	i1i2c_write@ack
  3679  0E9A  0AF0               	incf	i1i2c_write@ack,f
  3680  0E9B  3080               	movlw	128
  3681  0E9C  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  3682                           
  3683                           ;si7021.c: 42: i2c_write(0xE3,1);
  3684  0EA1  01F0               	clrf	i1i2c_write@ack
  3685  0EA2  0AF0               	incf	i1i2c_write@ack,f
  3686  0EA3  30E3               	movlw	227
  3687  0EA4  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  3688                           
  3689                           ;si7021.c: 43: i2c_rstart();
  3690  0EA9  120A  158A  230A  120A  158A  	fcall	_i2c_rstart
  3691                           
  3692                           ;si7021.c: 44: i2c_write(0x81,1);
  3693  0EAE  01F0               	clrf	i1i2c_write@ack
  3694  0EAF  0AF0               	incf	i1i2c_write@ack,f
  3695  0EB0  3081               	movlw	129
  3696  0EB1  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  3697                           
  3698                           ;si7021.c: 45: rta_h = i2c_read(1);
  3699  0EB6  3001               	movlw	1
  3700  0EB7  120A  158A  26ED  120A  158A  	fcall	i1_i2c_read
  3701  0EBC  00FC               	movwf	??_si_read_t
  3702  0EBD  087C               	movf	??_si_read_t,w
  3703  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  3704  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  3705  0EC0  00A0               	movwf	si_read_t@rta_h
  3706                           
  3707                           ;si7021.c: 46: rta_l = i2c_read(3);
  3708  0EC1  3003               	movlw	3
  3709  0EC2  120A  158A  26ED  120A  158A  	fcall	i1_i2c_read
  3710  0EC7  00FC               	movwf	??_si_read_t
  3711  0EC8  087C               	movf	??_si_read_t,w
  3712  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  3713  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  3714  0ECB  00A1               	movwf	si_read_t@rta_l
  3715                           
  3716                           ;si7021.c: 47: i2c_stop();
  3717  0ECC  120A  158A  22E7   	fcall	i1_i2c_stop
  3718                           
  3719                           ;si7021.c: 48: rta = rta_h;
  3720  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3721  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  3722  0ED1  0820               	movf	si_read_t@rta_h,w
  3723  0ED2  00FC               	movwf	??_si_read_t
  3724  0ED3  01FD               	clrf	??_si_read_t+1
  3725  0ED4  087C               	movf	??_si_read_t,w
  3726  0ED5  00A2               	movwf	si_read_t@rta
  3727  0ED6  087D               	movf	??_si_read_t+1,w
  3728  0ED7  00A3               	movwf	si_read_t@rta+1
  3729                           
  3730                           ;si7021.c: 49: rta = rta << 8;
  3731  0ED8  0822               	movf	si_read_t@rta,w
  3732  0ED9  00FD               	movwf	??_si_read_t+1
  3733  0EDA  01FC               	clrf	??_si_read_t
  3734  0EDB  087C               	movf	??_si_read_t,w
  3735  0EDC  00A2               	movwf	si_read_t@rta
  3736  0EDD  087D               	movf	??_si_read_t+1,w
  3737  0EDE  00A3               	movwf	si_read_t@rta+1
  3738                           
  3739                           ;si7021.c: 50: rta += rta_l;
  3740  0EDF  0821               	movf	si_read_t@rta_l,w
  3741  0EE0  00FC               	movwf	??_si_read_t
  3742  0EE1  01FD               	clrf	??_si_read_t+1
  3743  0EE2  087C               	movf	??_si_read_t,w
  3744  0EE3  07A2               	addwf	si_read_t@rta,f
  3745  0EE4  1803               	skipnc
  3746  0EE5  0AA3               	incf	si_read_t@rta+1,f
  3747  0EE6  087D               	movf	??_si_read_t+1,w
  3748  0EE7  07A3               	addwf	si_read_t@rta+1,f
  3749                           
  3750                           ;si7021.c: 51: return rta;
  3751  0EE8  0823               	movf	si_read_t@rta+1,w
  3752  0EE9  00FB               	movwf	?_si_read_t+1
  3753  0EEA  0822               	movf	si_read_t@rta,w
  3754  0EEB  00FA               	movwf	?_si_read_t
  3755  0EEC  0008               	return
  3756  0EED                     __end_of_si_read_t:	
  3757                           
  3758                           	psect	text15
  3759  0FA3                     __ptext15:	
  3760 ;; *************** function _si_read_h *****************
  3761 ;; Defined at:
  3762 ;;		line 20 in file "si7021.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;		None
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;  rta             2    2[BANK0 ] unsigned int 
  3767 ;;  rta_l           1    1[BANK0 ] unsigned char 
  3768 ;;  rta_h           1    0[BANK0 ] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  2   10[COMMON] unsigned int 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0, pclath, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3778 ;;      Params:         2       0       0       0       0
  3779 ;;      Locals:         0       4       0       0       0
  3780 ;;      Temps:          2       0       0       0       0
  3781 ;;      Totals:         4       4       0       0       0
  3782 ;;Total ram usage:        8 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    1
  3785 ;; This function calls:
  3786 ;;		_i2c_rstart
  3787 ;;		i1_i2c_read
  3788 ;;		i1_i2c_start
  3789 ;;		i1_i2c_stop
  3790 ;;		i1_i2c_write
  3791 ;; This function is called by:
  3792 ;;		_ints_isr
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           
  3797                           ;psect for function _si_read_h
  3798  0FA3                     _si_read_h:	
  3799                           
  3800                           ;si7021.c: 21: unsigned int rta = 0;
  3801                           
  3802                           ;incstack = 0
  3803                           ; Regs used in _si_read_h: [wreg+status,2+status,0+pclath+cstack]
  3804  0FA3  1283               	bcf	3,5	;RP0=0, select bank0
  3805  0FA4  1303               	bcf	3,6	;RP1=0, select bank0
  3806  0FA5  01A2               	clrf	si_read_h@rta
  3807  0FA6  01A3               	clrf	si_read_h@rta+1
  3808                           
  3809                           ;si7021.c: 22: unsigned char rta_h,rta_l;
  3810                           ;si7021.c: 23: i2c_start();
  3811  0FA7  120A  158A  22C4  120A  158A  	fcall	i1_i2c_start
  3812                           
  3813                           ;si7021.c: 24: i2c_write(0x80,1);
  3814  0FAC  01F0               	clrf	i1i2c_write@ack
  3815  0FAD  0AF0               	incf	i1i2c_write@ack,f
  3816  0FAE  3080               	movlw	128
  3817  0FAF  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  3818                           
  3819                           ;si7021.c: 25: i2c_write(0xE5,1);
  3820  0FB4  01F0               	clrf	i1i2c_write@ack
  3821  0FB5  0AF0               	incf	i1i2c_write@ack,f
  3822  0FB6  30E5               	movlw	229
  3823  0FB7  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  3824                           
  3825                           ;si7021.c: 26: i2c_rstart();
  3826  0FBC  120A  158A  230A  120A  158A  	fcall	_i2c_rstart
  3827                           
  3828                           ;si7021.c: 27: i2c_write(0x81,1);
  3829  0FC1  01F0               	clrf	i1i2c_write@ack
  3830  0FC2  0AF0               	incf	i1i2c_write@ack,f
  3831  0FC3  3081               	movlw	129
  3832  0FC4  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  3833                           
  3834                           ;si7021.c: 28: rta_h = i2c_read(1);
  3835  0FC9  3001               	movlw	1
  3836  0FCA  120A  158A  26ED  120A  158A  	fcall	i1_i2c_read
  3837  0FCF  00FC               	movwf	??_si_read_h
  3838  0FD0  087C               	movf	??_si_read_h,w
  3839  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  3840  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  3841  0FD3  00A0               	movwf	si_read_h@rta_h
  3842                           
  3843                           ;si7021.c: 29: rta_l = i2c_read(3);
  3844  0FD4  3003               	movlw	3
  3845  0FD5  120A  158A  26ED  120A  158A  	fcall	i1_i2c_read
  3846  0FDA  00FC               	movwf	??_si_read_h
  3847  0FDB  087C               	movf	??_si_read_h,w
  3848  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  3849  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  3850  0FDE  00A1               	movwf	si_read_h@rta_l
  3851                           
  3852                           ;si7021.c: 30: i2c_stop();
  3853  0FDF  120A  158A  22E7   	fcall	i1_i2c_stop
  3854                           
  3855                           ;si7021.c: 31: rta = rta_h;
  3856  0FE2  1283               	bcf	3,5	;RP0=0, select bank0
  3857  0FE3  1303               	bcf	3,6	;RP1=0, select bank0
  3858  0FE4  0820               	movf	si_read_h@rta_h,w
  3859  0FE5  00FC               	movwf	??_si_read_h
  3860  0FE6  01FD               	clrf	??_si_read_h+1
  3861  0FE7  087C               	movf	??_si_read_h,w
  3862  0FE8  00A2               	movwf	si_read_h@rta
  3863  0FE9  087D               	movf	??_si_read_h+1,w
  3864  0FEA  00A3               	movwf	si_read_h@rta+1
  3865                           
  3866                           ;si7021.c: 32: rta = rta << 8;
  3867  0FEB  0822               	movf	si_read_h@rta,w
  3868  0FEC  00FD               	movwf	??_si_read_h+1
  3869  0FED  01FC               	clrf	??_si_read_h
  3870  0FEE  087C               	movf	??_si_read_h,w
  3871  0FEF  00A2               	movwf	si_read_h@rta
  3872  0FF0  087D               	movf	??_si_read_h+1,w
  3873  0FF1  00A3               	movwf	si_read_h@rta+1
  3874                           
  3875                           ;si7021.c: 33: rta += rta_l;
  3876  0FF2  0821               	movf	si_read_h@rta_l,w
  3877  0FF3  00FC               	movwf	??_si_read_h
  3878  0FF4  01FD               	clrf	??_si_read_h+1
  3879  0FF5  087C               	movf	??_si_read_h,w
  3880  0FF6  07A2               	addwf	si_read_h@rta,f
  3881  0FF7  1803               	skipnc
  3882  0FF8  0AA3               	incf	si_read_h@rta+1,f
  3883  0FF9  087D               	movf	??_si_read_h+1,w
  3884  0FFA  07A3               	addwf	si_read_h@rta+1,f
  3885                           
  3886                           ;si7021.c: 34: return rta;
  3887  0FFB  0823               	movf	si_read_h@rta+1,w
  3888  0FFC  00FB               	movwf	?_si_read_h+1
  3889  0FFD  0822               	movf	si_read_h@rta,w
  3890  0FFE  00FA               	movwf	?_si_read_h
  3891  0FFF  0008               	return
  3892  1000                     __end_of_si_read_h:	
  3893                           
  3894                           	psect	text16
  3895  0659                     __ptext16:	
  3896 ;; *************** function _save_the_date *****************
  3897 ;; Defined at:
  3898 ;;		line 55 in file "panda17.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;		None
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  ax              1    4[BANK0 ] unsigned char 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, pclath, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3912 ;;      Params:         0       0       0       0       0
  3913 ;;      Locals:         0       1       0       0       0
  3914 ;;      Temps:          0       1       0       0       0
  3915 ;;      Totals:         0       2       0       0       0
  3916 ;;Total ram usage:        2 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    2
  3919 ;; This function calls:
  3920 ;;		_ds_get
  3921 ;;		i1_mem_read
  3922 ;;		i1_mem_write
  3923 ;; This function is called by:
  3924 ;;		_ints_isr
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           
  3929                           ;psect for function _save_the_date
  3930  0659                     _save_the_date:	
  3931                           
  3932                           ;panda17.c: 56: unsigned char ax;
  3933                           ;panda17.c: 57: ax = ds_get(0x01);
  3934                           
  3935                           ;incstack = 0
  3936                           ; Regs used in _save_the_date: [wreg+status,2+status,0+pclath+cstack]
  3937  0659  3001               	movlw	1
  3938  065A  120A  158A  2398  120A  118A  	fcall	_ds_get
  3939  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3940  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3941  0661  00A3               	movwf	??_save_the_date
  3942  0662  0823               	movf	??_save_the_date,w
  3943  0663  00A4               	movwf	save_the_date@ax
  3944                           
  3945                           ;panda17.c: 58: mem_write(0xFFFA,ax);
  3946  0664  30FA               	movlw	250
  3947  0665  00FA               	movwf	i1mem_write@add
  3948  0666  30FF               	movlw	255
  3949  0667  00FB               	movwf	i1mem_write@add+1
  3950  0668  0824               	movf	save_the_date@ax,w
  3951  0669  00A3               	movwf	??_save_the_date
  3952  066A  0823               	movf	??_save_the_date,w
  3953  066B  00FC               	movwf	i1mem_write@data
  3954  066C  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  3955                           
  3956                           ;panda17.c: 59: ax = ds_get(0x02);
  3957  0671  3002               	movlw	2
  3958  0672  120A  158A  2398  120A  118A  	fcall	_ds_get
  3959  0677  1283               	bcf	3,5	;RP0=0, select bank0
  3960  0678  1303               	bcf	3,6	;RP1=0, select bank0
  3961  0679  00A3               	movwf	??_save_the_date
  3962  067A  0823               	movf	??_save_the_date,w
  3963  067B  00A4               	movwf	save_the_date@ax
  3964                           
  3965                           ;panda17.c: 60: mem_write(0xFFF9,ax);
  3966  067C  30F9               	movlw	249
  3967  067D  00FA               	movwf	i1mem_write@add
  3968  067E  30FF               	movlw	255
  3969  067F  00FB               	movwf	i1mem_write@add+1
  3970  0680  0824               	movf	save_the_date@ax,w
  3971  0681  00A3               	movwf	??_save_the_date
  3972  0682  0823               	movf	??_save_the_date,w
  3973  0683  00FC               	movwf	i1mem_write@data
  3974  0684  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  3975                           
  3976                           ;panda17.c: 61: ax = ds_get(0x04);
  3977  0689  3004               	movlw	4
  3978  068A  120A  158A  2398  120A  118A  	fcall	_ds_get
  3979  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3980  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3981  0691  00A3               	movwf	??_save_the_date
  3982  0692  0823               	movf	??_save_the_date,w
  3983  0693  00A4               	movwf	save_the_date@ax
  3984                           
  3985                           ;panda17.c: 62: mem_write(0xFFFB,ax);
  3986  0694  30FB               	movlw	251
  3987  0695  00FA               	movwf	i1mem_write@add
  3988  0696  30FF               	movlw	255
  3989  0697  00FB               	movwf	i1mem_write@add+1
  3990  0698  0824               	movf	save_the_date@ax,w
  3991  0699  00A3               	movwf	??_save_the_date
  3992  069A  0823               	movf	??_save_the_date,w
  3993  069B  00FC               	movwf	i1mem_write@data
  3994  069C  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  3995                           
  3996                           ;panda17.c: 63: ax = ds_get(0x05);
  3997  06A1  3005               	movlw	5
  3998  06A2  120A  158A  2398  120A  118A  	fcall	_ds_get
  3999  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  4000  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  4001  06A9  00A3               	movwf	??_save_the_date
  4002  06AA  0823               	movf	??_save_the_date,w
  4003  06AB  00A4               	movwf	save_the_date@ax
  4004                           
  4005                           ;panda17.c: 64: mem_write(0xFFFC,ax);
  4006  06AC  30FC               	movlw	252
  4007  06AD  00FA               	movwf	i1mem_write@add
  4008  06AE  30FF               	movlw	255
  4009  06AF  00FB               	movwf	i1mem_write@add+1
  4010  06B0  0824               	movf	save_the_date@ax,w
  4011  06B1  00A3               	movwf	??_save_the_date
  4012  06B2  0823               	movf	??_save_the_date,w
  4013  06B3  00FC               	movwf	i1mem_write@data
  4014  06B4  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  4015                           
  4016                           ;panda17.c: 65: ax = ds_get(0x06);
  4017  06B9  3006               	movlw	6
  4018  06BA  120A  158A  2398  120A  118A  	fcall	_ds_get
  4019  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  4020  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  4021  06C1  00A3               	movwf	??_save_the_date
  4022  06C2  0823               	movf	??_save_the_date,w
  4023  06C3  00A4               	movwf	save_the_date@ax
  4024                           
  4025                           ;panda17.c: 66: mem_write(0xFFFD,ax);
  4026  06C4  30FD               	movlw	253
  4027  06C5  00FA               	movwf	i1mem_write@add
  4028  06C6  30FF               	movlw	255
  4029  06C7  00FB               	movwf	i1mem_write@add+1
  4030  06C8  0824               	movf	save_the_date@ax,w
  4031  06C9  00A3               	movwf	??_save_the_date
  4032  06CA  0823               	movf	??_save_the_date,w
  4033  06CB  00FC               	movwf	i1mem_write@data
  4034  06CC  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  4035                           
  4036                           ;panda17.c: 67: ax = mem_read(0x000A);
  4037  06D1  300A               	movlw	10
  4038  06D2  00FA               	movwf	i1mem_read@add
  4039  06D3  3000               	movlw	0
  4040  06D4  00FB               	movwf	i1mem_read@add+1
  4041  06D5  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  4042  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  4043  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  4044  06DC  00A3               	movwf	??_save_the_date
  4045  06DD  0823               	movf	??_save_the_date,w
  4046  06DE  00A4               	movwf	save_the_date@ax
  4047                           
  4048                           ;panda17.c: 68: mem_write(0xFFFE,ax);
  4049  06DF  30FE               	movlw	254
  4050  06E0  00FA               	movwf	i1mem_write@add
  4051  06E1  30FF               	movlw	255
  4052  06E2  00FB               	movwf	i1mem_write@add+1
  4053  06E3  0824               	movf	save_the_date@ax,w
  4054  06E4  00A3               	movwf	??_save_the_date
  4055  06E5  0823               	movf	??_save_the_date,w
  4056  06E6  00FC               	movwf	i1mem_write@data
  4057  06E7  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  4058                           
  4059                           ;panda17.c: 69: ax = mem_read(0x000B);
  4060  06EC  300B               	movlw	11
  4061  06ED  00FA               	movwf	i1mem_read@add
  4062  06EE  3000               	movlw	0
  4063  06EF  00FB               	movwf	i1mem_read@add+1
  4064  06F0  120A  158A  24D0  120A  118A  	fcall	i1_mem_read
  4065  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  4066  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  4067  06F7  00A3               	movwf	??_save_the_date
  4068  06F8  0823               	movf	??_save_the_date,w
  4069  06F9  00A4               	movwf	save_the_date@ax
  4070                           
  4071                           ;panda17.c: 70: mem_write(0xFFFF,ax);
  4072  06FA  30FF               	movlw	255
  4073  06FB  00FA               	movwf	i1mem_write@add
  4074  06FC  30FF               	movlw	255
  4075  06FD  00FB               	movwf	i1mem_write@add+1
  4076  06FE  0824               	movf	save_the_date@ax,w
  4077  06FF  00A3               	movwf	??_save_the_date
  4078  0700  0823               	movf	??_save_the_date,w
  4079  0701  00FC               	movwf	i1mem_write@data
  4080  0702  120A  158A  2516  120A  118A  	fcall	i1_mem_write
  4081                           
  4082                           ;panda17.c: 71: mem_write(0x0003,0xAA);
  4083  0707  3003               	movlw	3
  4084  0708  00FA               	movwf	i1mem_write@add
  4085  0709  3000               	movlw	0
  4086  070A  00FB               	movwf	i1mem_write@add+1
  4087  070B  30AA               	movlw	170
  4088  070C  1283               	bcf	3,5	;RP0=0, select bank0
  4089  070D  1303               	bcf	3,6	;RP1=0, select bank0
  4090  070E  00A3               	movwf	??_save_the_date
  4091  070F  0823               	movf	??_save_the_date,w
  4092  0710  00FC               	movwf	i1mem_write@data
  4093  0711  120A  158A  2516   	fcall	i1_mem_write
  4094  0714  0008               	return
  4095  0715                     __end_of_save_the_date:	
  4096                           
  4097                           	psect	text17
  4098  0D16                     __ptext17:	
  4099 ;; *************** function i1_mem_write *****************
  4100 ;; Defined at:
  4101 ;;		line 13 in file "24lc512.c"
  4102 ;; Parameters:    Size  Location     Type
  4103 ;;  add             2   10[COMMON] unsigned int 
  4104 ;;  data            1   12[COMMON] unsigned char 
  4105 ;; Auto vars:     Size  Location     Type
  4106 ;;  mem_write       1    1[BANK0 ] unsigned char 
  4107 ;;  mem_write       1    0[BANK0 ] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0, pclath, cstack
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         3       0       0       0       0
  4118 ;;      Locals:         0       2       0       0       0
  4119 ;;      Temps:          1       0       0       0       0
  4120 ;;      Totals:         4       2       0       0       0
  4121 ;;Total ram usage:        6 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; Hardware stack levels required when called:    1
  4124 ;; This function calls:
  4125 ;;		i1_i2c_start
  4126 ;;		i1_i2c_stop
  4127 ;;		i1_i2c_write
  4128 ;; This function is called by:
  4129 ;;		_save_the_date
  4130 ;;		_ints_isr
  4131 ;;		i1_mem_init
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           
  4136                           ;psect for function i1_mem_write
  4137  0D16                     i1_mem_write:	
  4138                           
  4139                           ;24lc512.c: 14: unsigned char add_h,add_l;
  4140                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  4141                           
  4142                           ;incstack = 0
  4143                           ; Regs used in i1_mem_write: [wreg+status,2+status,0+pclath+cstack]
  4144  0D16  087B               	movf	i1mem_write@add+1,w
  4145  0D17  00FD               	movwf	??i1_mem_write
  4146  0D18  087D               	movf	??i1_mem_write,w
  4147  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  4148  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  4149  0D1B  00A0               	movwf	i1mem_write@add_h
  4150                           
  4151                           ;24lc512.c: 16: add_l = add & 0x00FF;
  4152  0D1C  087A               	movf	i1mem_write@add,w
  4153  0D1D  00FD               	movwf	??i1_mem_write
  4154  0D1E  087D               	movf	??i1_mem_write,w
  4155  0D1F  00A1               	movwf	i1mem_write@add_l
  4156                           
  4157                           ;24lc512.c: 17: i2c_start();
  4158  0D20  120A  158A  22C4  120A  158A  	fcall	i1_i2c_start
  4159                           
  4160                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  4161  0D25  01F0               	clrf	i1i2c_write@ack
  4162  0D26  30A0               	movlw	160
  4163  0D27  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  4164                           
  4165                           ;24lc512.c: 19: i2c_write(add_h,0);
  4166  0D2C  01F0               	clrf	i1i2c_write@ack
  4167  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  4168  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  4169  0D2F  0820               	movf	i1mem_write@add_h,w
  4170  0D30  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  4171                           
  4172                           ;24lc512.c: 20: i2c_write(add_l,0);
  4173  0D35  01F0               	clrf	i1i2c_write@ack
  4174  0D36  1283               	bcf	3,5	;RP0=0, select bank0
  4175  0D37  1303               	bcf	3,6	;RP1=0, select bank0
  4176  0D38  0821               	movf	i1mem_write@add_l,w
  4177  0D39  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  4178                           
  4179                           ;24lc512.c: 21: i2c_write(data,0);
  4180  0D3E  01F0               	clrf	i1i2c_write@ack
  4181  0D3F  087C               	movf	i1mem_write@data,w
  4182  0D40  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  4183                           
  4184                           ;24lc512.c: 22: i2c_stop();
  4185  0D45  120A  158A  22E7  120A  158A  	fcall	i1_i2c_stop
  4186  0D4A                     L3:	
  4187                           
  4188                           ;24lc512.c: 24: i2c_start();
  4189  0D4A  120A  158A  22C4  120A  158A  	fcall	i1_i2c_start
  4190                           
  4191                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  4192  0D4F  01F0               	clrf	i1i2c_write@ack
  4193  0D50  30A0               	movlw	160
  4194  0D51  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  4195                           
  4196                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  4197  0D56  1683               	bsf	3,5	;RP0=1, select bank1
  4198  0D57  1303               	bcf	3,6	;RP1=0, select bank1
  4199  0D58  1B11               	btfsc	17,6	;volatile
  4200  0D59  2D4A               	goto	L3
  4201                           
  4202                           ;24lc512.c: 30: }
  4203                           ;24lc512.c: 31: i2c_stop();
  4204                           
  4205                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  4206                           
  4207                           ;24lc512.c: 28: i2c_start();
  4208  0D5A  120A  158A  22E7   	fcall	i1_i2c_stop
  4209  0D5D  0008               	return
  4210  0D5E                     __end_ofi1_mem_write:	
  4211                           
  4212                           	psect	text18
  4213  0CD0                     __ptext18:	
  4214 ;; *************** function i1_mem_read *****************
  4215 ;; Defined at:
  4216 ;;		line 34 in file "24lc512.c"
  4217 ;; Parameters:    Size  Location     Type
  4218 ;;  add             2   10[COMMON] unsigned int 
  4219 ;; Auto vars:     Size  Location     Type
  4220 ;;  mem_read        1    2[BANK0 ] unsigned char 
  4221 ;;  mem_read        1    1[BANK0 ] unsigned char 
  4222 ;;  mem_read        1    0[BANK0 ] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      unsigned char 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0, pclath, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4232 ;;      Params:         2       0       0       0       0
  4233 ;;      Locals:         0       3       0       0       0
  4234 ;;      Temps:          1       0       0       0       0
  4235 ;;      Totals:         3       3       0       0       0
  4236 ;;Total ram usage:        6 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    1
  4239 ;; This function calls:
  4240 ;;		i1_i2c_read
  4241 ;;		i1_i2c_start
  4242 ;;		i1_i2c_stop
  4243 ;;		i1_i2c_write
  4244 ;; This function is called by:
  4245 ;;		_save_the_date
  4246 ;;		_ints_isr
  4247 ;;		i1_mem_init
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           
  4252                           ;psect for function i1_mem_read
  4253  0CD0                     i1_mem_read:	
  4254                           
  4255                           ;24lc512.c: 35: unsigned char rta;
  4256                           ;24lc512.c: 36: unsigned char add_h,add_l;
  4257                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  4258                           
  4259                           ;incstack = 0
  4260                           ; Regs used in i1_mem_read: [wreg+status,2+status,0+pclath+cstack]
  4261  0CD0  087B               	movf	i1mem_read@add+1,w
  4262  0CD1  00FC               	movwf	??i1_mem_read
  4263  0CD2  087C               	movf	??i1_mem_read,w
  4264  0CD3  1283               	bcf	3,5	;RP0=0, select bank0
  4265  0CD4  1303               	bcf	3,6	;RP1=0, select bank0
  4266  0CD5  00A1               	movwf	i1mem_read@add_h
  4267                           
  4268                           ;24lc512.c: 38: add_l = add & 0x00FF;
  4269  0CD6  087A               	movf	i1mem_read@add,w
  4270  0CD7  00FC               	movwf	??i1_mem_read
  4271  0CD8  087C               	movf	??i1_mem_read,w
  4272  0CD9  00A2               	movwf	i1mem_read@add_l
  4273                           
  4274                           ;24lc512.c: 39: i2c_start();
  4275  0CDA  120A  158A  22C4  120A  158A  	fcall	i1_i2c_start
  4276                           
  4277                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  4278  0CDF  01F0               	clrf	i1i2c_write@ack
  4279  0CE0  30A0               	movlw	160
  4280  0CE1  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  4281                           
  4282                           ;24lc512.c: 41: i2c_write(add_h,0);
  4283  0CE6  01F0               	clrf	i1i2c_write@ack
  4284  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  4285  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  4286  0CE9  0821               	movf	i1mem_read@add_h,w
  4287  0CEA  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  4288                           
  4289                           ;24lc512.c: 42: i2c_write(add_l,0);
  4290  0CEF  01F0               	clrf	i1i2c_write@ack
  4291  0CF0  1283               	bcf	3,5	;RP0=0, select bank0
  4292  0CF1  1303               	bcf	3,6	;RP1=0, select bank0
  4293  0CF2  0822               	movf	i1mem_read@add_l,w
  4294  0CF3  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  4295                           
  4296                           ;24lc512.c: 43: i2c_start();
  4297  0CF8  120A  158A  22C4  120A  158A  	fcall	i1_i2c_start
  4298                           
  4299                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  4300  0CFD  01F0               	clrf	i1i2c_write@ack
  4301  0CFE  30A1               	movlw	161
  4302  0CFF  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  4303                           
  4304                           ;24lc512.c: 45: rta = i2c_read(0);
  4305  0D04  3000               	movlw	0
  4306  0D05  120A  158A  26ED  120A  158A  	fcall	i1_i2c_read
  4307  0D0A  00FC               	movwf	??i1_mem_read
  4308  0D0B  087C               	movf	??i1_mem_read,w
  4309  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  4310  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  4311  0D0E  00A0               	movwf	i1mem_read@rta
  4312                           
  4313                           ;24lc512.c: 46: i2c_stop();
  4314  0D0F  120A  158A  22E7   	fcall	i1_i2c_stop
  4315                           
  4316                           ;24lc512.c: 47: return rta;
  4317  0D12  1283               	bcf	3,5	;RP0=0, select bank0
  4318  0D13  1303               	bcf	3,6	;RP1=0, select bank0
  4319  0D14  0820               	movf	i1mem_read@rta,w
  4320  0D15  0008               	return
  4321  0D16                     __end_ofi1_mem_read:	
  4322                           
  4323                           	psect	text19
  4324  0B98                     __ptext19:	
  4325 ;; *************** function _ds_get *****************
  4326 ;; Defined at:
  4327 ;;		line 25 in file "ds1307.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;  data            1    wreg     unsigned char 
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  data            1   11[COMMON] unsigned char 
  4332 ;;  resp            1   12[COMMON] unsigned char 
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      unsigned char 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0, pclath, cstack
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4342 ;;      Params:         0       0       0       0       0
  4343 ;;      Locals:         2       0       0       0       0
  4344 ;;      Temps:          1       0       0       0       0
  4345 ;;      Totals:         3       0       0       0       0
  4346 ;;Total ram usage:        3 bytes
  4347 ;; Hardware stack levels used:    1
  4348 ;; Hardware stack levels required when called:    1
  4349 ;; This function calls:
  4350 ;;		_i2c_rstart
  4351 ;;		i1_i2c_read
  4352 ;;		i1_i2c_start
  4353 ;;		i1_i2c_stop
  4354 ;;		i1_i2c_write
  4355 ;; This function is called by:
  4356 ;;		_save_the_date
  4357 ;;		_ints_isr
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           
  4362                           ;psect for function _ds_get
  4363  0B98                     _ds_get:	
  4364                           
  4365                           ;incstack = 0
  4366                           ; Regs used in _ds_get: [wreg+status,2+status,0+pclath+cstack]
  4367                           ;ds_get@data stored from wreg
  4368  0B98  00FB               	movwf	ds_get@data
  4369                           
  4370                           ;ds1307.c: 26: unsigned char resp;
  4371                           ;ds1307.c: 27: i2c_start();
  4372  0B99  120A  158A  22C4  120A  158A  	fcall	i1_i2c_start
  4373                           
  4374                           ;ds1307.c: 28: i2c_write(0b11010000,1);
  4375  0B9E  01F0               	clrf	i1i2c_write@ack
  4376  0B9F  0AF0               	incf	i1i2c_write@ack,f
  4377  0BA0  30D0               	movlw	208
  4378  0BA1  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  4379                           
  4380                           ;ds1307.c: 29: i2c_write(data,1);
  4381  0BA6  01F0               	clrf	i1i2c_write@ack
  4382  0BA7  0AF0               	incf	i1i2c_write@ack,f
  4383  0BA8  087B               	movf	ds_get@data,w
  4384  0BA9  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  4385                           
  4386                           ;ds1307.c: 30: i2c_rstart();
  4387  0BAE  120A  158A  230A  120A  158A  	fcall	_i2c_rstart
  4388                           
  4389                           ;ds1307.c: 31: i2c_write(0b11010001,1);
  4390  0BB3  01F0               	clrf	i1i2c_write@ack
  4391  0BB4  0AF0               	incf	i1i2c_write@ack,f
  4392  0BB5  30D1               	movlw	209
  4393  0BB6  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  4394                           
  4395                           ;ds1307.c: 32: resp = i2c_read(0);
  4396  0BBB  3000               	movlw	0
  4397  0BBC  120A  158A  26ED  120A  158A  	fcall	i1_i2c_read
  4398  0BC1  00FA               	movwf	??_ds_get
  4399  0BC2  087A               	movf	??_ds_get,w
  4400  0BC3  00FC               	movwf	ds_get@resp
  4401                           
  4402                           ;ds1307.c: 33: i2c_stop();
  4403  0BC4  120A  158A  22E7   	fcall	i1_i2c_stop
  4404                           
  4405                           ;ds1307.c: 34: return resp;
  4406  0BC7  087C               	movf	ds_get@resp,w
  4407  0BC8  0008               	return
  4408  0BC9                     __end_of_ds_get:	
  4409                           
  4410                           	psect	text20
  4411  0EED                     __ptext20:	
  4412 ;; *************** function i1_i2c_read *****************
  4413 ;; Defined at:
  4414 ;;		line 51 in file "i2clib.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  ack             1    wreg     unsigned char 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  ack             1    9[COMMON] unsigned char 
  4419 ;;  i2c_read        1    8[COMMON] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      unsigned char 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4429 ;;      Params:         0       0       0       0       0
  4430 ;;      Locals:         2       0       0       0       0
  4431 ;;      Temps:          8       0       0       0       0
  4432 ;;      Totals:        10       0       0       0       0
  4433 ;;Total ram usage:       10 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_si_read_h
  4439 ;;		_si_read_t
  4440 ;;		_ds_get
  4441 ;;		i1_mem_read
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function i1_i2c_read
  4447  0EED                     i1_i2c_read:	
  4448                           
  4449                           ;incstack = 0
  4450                           ; Regs used in i1_i2c_read: [wreg+status,2+status,0]
  4451                           ;i1i2c_read@ack stored from wreg
  4452  0EED  00F9               	movwf	i1i2c_read@ack
  4453                           
  4454                           ;i2clib.c: 52: unsigned char resp;
  4455                           ;i2clib.c: 53: static bit flag, not_flag;
  4456                           ;i2clib.c: 54: flag = ack & 0x01;
  4457  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  4458  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  4459  0EF0  10DF               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  4460  0EF1  1879               	btfsc	i1i2c_read@ack,0
  4461  0EF2  14DF               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  4462                           
  4463                           ;i2clib.c: 55: if (ack == 1){
  4464  0EF3  0379               	decf	i1i2c_read@ack,w
  4465  0EF4  1D03               	btfss	3,2
  4466  0EF5  2EF9               	goto	i1l1597
  4467                           
  4468                           ;i2clib.c: 56: not_flag = 0;
  4469  0EF6  1283               	bcf	3,5	;RP0=0, select bank0
  4470  0EF7  1303               	bcf	3,6	;RP1=0, select bank0
  4471  0EF8  105F               	bcf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  4472  0EF9                     i1l1597:	
  4473                           
  4474                           ;i2clib.c: 57: }
  4475                           ;i2clib.c: 58: if (ack == 3){
  4476  0EF9  3003               	movlw	3
  4477  0EFA  0679               	xorwf	i1i2c_read@ack,w
  4478  0EFB  1D03               	btfss	3,2
  4479  0EFC  2F00               	goto	i1l1601
  4480                           
  4481                           ;i2clib.c: 59: not_flag = 1;
  4482  0EFD  1283               	bcf	3,5	;RP0=0, select bank0
  4483  0EFE  1303               	bcf	3,6	;RP1=0, select bank0
  4484  0EFF  145F               	bsf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  4485  0F00                     i1l1601:	
  4486                           ;i2clib.c: 60: }
  4487                           ;i2clib.c: 61: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  4488                           
  4489  0F00  1683               	bsf	3,5	;RP0=1, select bank1
  4490  0F01  1303               	bcf	3,6	;RP1=0, select bank1
  4491  0F02  0811               	movf	17,w	;volatile
  4492  0F03  3901               	andlw	1
  4493  0F04  00F0               	movwf	??i1_i2c_read
  4494  0F05  0C11               	rrf	17,w	;volatile
  4495  0F06  3901               	andlw	1
  4496  0F07  00F1               	movwf	??i1_i2c_read+1
  4497  0F08  0C11               	rrf	17,w	;volatile
  4498  0F09  00F2               	movwf	??i1_i2c_read+2
  4499  0F0A  0CF2               	rrf	??i1_i2c_read+2,f
  4500  0F0B  0C72               	rrf	??i1_i2c_read+2,w
  4501  0F0C  3901               	andlw	1
  4502  0F0D  00F3               	movwf	??i1_i2c_read+3
  4503  0F0E  0E11               	swapf	17,w	;volatile
  4504  0F0F  3901               	andlw	1
  4505  0F10  00F4               	movwf	??i1_i2c_read+4
  4506  0F11  0C11               	rrf	17,w	;volatile
  4507  0F12  00F5               	movwf	??i1_i2c_read+5
  4508  0F13  0C75               	rrf	??i1_i2c_read+5,w
  4509  0F14  3901               	andlw	1
  4510  0F15  00F6               	movwf	??i1_i2c_read+6
  4511  0F16  0C14               	rrf	20,w	;volatile
  4512  0F17  00F7               	movwf	??i1_i2c_read+7
  4513  0F18  0C77               	rrf	??i1_i2c_read+7,w
  4514  0F19  3901               	andlw	1
  4515  0F1A  0476               	iorwf	??i1_i2c_read+6,w
  4516  0F1B  0474               	iorwf	??i1_i2c_read+4,w
  4517  0F1C  0473               	iorwf	??i1_i2c_read+3,w
  4518  0F1D  0471               	iorwf	??i1_i2c_read+1,w
  4519  0F1E  0470               	iorwf	??i1_i2c_read,w
  4520  0F1F  1D03               	btfss	3,2
  4521  0F20  2F00               	goto	i1l1601
  4522                           
  4523                           ;i2clib.c: 62: SSPCON2bits.RCEN = 1;
  4524  0F21  1591               	bsf	17,3	;volatile
  4525  0F22                     i1l199:	
  4526                           ;i2clib.c: 63: while(!SSPSTATbits.BF);
  4527                           
  4528  0F22  1C14               	btfss	20,0	;volatile
  4529  0F23  2F22               	goto	i1l199
  4530  0F24                     i1l202:	
  4531                           ;i2clib.c: 64: while(!PIR1bits.SSPIF);
  4532                           
  4533  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  4534  0F25  1D8C               	btfss	12,3	;volatile
  4535  0F26  2F24               	goto	i1l202
  4536                           
  4537                           ;i2clib.c: 65: SSPCON2bits.ACKDT = not_flag;
  4538  0F27  1C5F               	btfss	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  4539  0F28  2F2D               	goto	u146_20
  4540  0F29  1683               	bsf	3,5	;RP0=1, select bank1
  4541  0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  4542  0F2B  1691               	bsf	17,5	;volatile
  4543  0F2C  2F30               	goto	u147_24
  4544  0F2D                     u146_20:	
  4545  0F2D  1683               	bsf	3,5	;RP0=1, select bank1
  4546  0F2E  1303               	bcf	3,6	;RP1=0, select bank1
  4547  0F2F  1291               	bcf	17,5	;volatile
  4548  0F30                     u147_24:	
  4549                           
  4550                           ;i2clib.c: 66: SSPCON2bits.ACKEN = flag;
  4551  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  4552  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  4553  0F32  1CDF               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  4554  0F33  2F38               	goto	u148_20
  4555  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  4556  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  4557  0F36  1611               	bsf	17,4	;volatile
  4558  0F37  2F3B               	goto	i1l1603
  4559  0F38                     u148_20:	
  4560  0F38  1683               	bsf	3,5	;RP0=1, select bank1
  4561  0F39  1303               	bcf	3,6	;RP1=0, select bank1
  4562  0F3A  1211               	bcf	17,4	;volatile
  4563  0F3B                     i1l1603:	
  4564                           
  4565                           ;i2clib.c: 67: resp = SSPBUF;
  4566  0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  4567  0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  4568  0F3D  0813               	movf	19,w	;volatile
  4569  0F3E  00F0               	movwf	??i1_i2c_read
  4570  0F3F  0870               	movf	??i1_i2c_read,w
  4571  0F40  00F8               	movwf	i1i2c_read@resp
  4572  0F41                     i1l205:	
  4573                           ;i2clib.c: 68: while(SSPSTATbits.BF);
  4574                           
  4575  0F41  1683               	bsf	3,5	;RP0=1, select bank1
  4576  0F42  1303               	bcf	3,6	;RP1=0, select bank1
  4577  0F43  1814               	btfsc	20,0	;volatile
  4578  0F44  2F41               	goto	i1l205
  4579                           
  4580                           ;i2clib.c: 69: return resp;
  4581  0F45  0878               	movf	i1i2c_read@resp,w
  4582  0F46  0008               	return
  4583  0F47                     __end_ofi1_i2c_read:	
  4584                           
  4585                           	psect	text21
  4586  0B0A                     __ptext21:	
  4587 ;; *************** function _i2c_rstart *****************
  4588 ;; Defined at:
  4589 ;;		line 29 in file "i2clib.c"
  4590 ;; Parameters:    Size  Location     Type
  4591 ;;		None
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4603 ;;      Params:         0       0       0       0       0
  4604 ;;      Locals:         0       0       0       0       0
  4605 ;;      Temps:          8       0       0       0       0
  4606 ;;      Totals:         8       0       0       0       0
  4607 ;;Total ram usage:        8 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_si_read_h
  4613 ;;		_si_read_t
  4614 ;;		_ds_get
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           
  4619                           ;psect for function _i2c_rstart
  4620  0B0A                     _i2c_rstart:	
  4621  0B0A                     i1l1539:	
  4622                           ;i2clib.c: 30: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  4623                           
  4624                           ;incstack = 0
  4625                           ; Regs used in _i2c_rstart: [wreg+status,2+status,0]
  4626                           
  4627  0B0A  1683               	bsf	3,5	;RP0=1, select bank1
  4628  0B0B  1303               	bcf	3,6	;RP1=0, select bank1
  4629  0B0C  0811               	movf	17,w	;volatile
  4630  0B0D  3901               	andlw	1
  4631  0B0E  00F0               	movwf	??_i2c_rstart
  4632  0B0F  0C11               	rrf	17,w	;volatile
  4633  0B10  3901               	andlw	1
  4634  0B11  00F1               	movwf	??_i2c_rstart+1
  4635  0B12  0C11               	rrf	17,w	;volatile
  4636  0B13  00F2               	movwf	??_i2c_rstart+2
  4637  0B14  0CF2               	rrf	??_i2c_rstart+2,f
  4638  0B15  0C72               	rrf	??_i2c_rstart+2,w
  4639  0B16  3901               	andlw	1
  4640  0B17  00F3               	movwf	??_i2c_rstart+3
  4641  0B18  0E11               	swapf	17,w	;volatile
  4642  0B19  3901               	andlw	1
  4643  0B1A  00F4               	movwf	??_i2c_rstart+4
  4644  0B1B  0C11               	rrf	17,w	;volatile
  4645  0B1C  00F5               	movwf	??_i2c_rstart+5
  4646  0B1D  0C75               	rrf	??_i2c_rstart+5,w
  4647  0B1E  3901               	andlw	1
  4648  0B1F  00F6               	movwf	??_i2c_rstart+6
  4649  0B20  0C14               	rrf	20,w	;volatile
  4650  0B21  00F7               	movwf	??_i2c_rstart+7
  4651  0B22  0C77               	rrf	??_i2c_rstart+7,w
  4652  0B23  3901               	andlw	1
  4653  0B24  0476               	iorwf	??_i2c_rstart+6,w
  4654  0B25  0474               	iorwf	??_i2c_rstart+4,w
  4655  0B26  0473               	iorwf	??_i2c_rstart+3,w
  4656  0B27  0471               	iorwf	??_i2c_rstart+1,w
  4657  0B28  0470               	iorwf	??_i2c_rstart,w
  4658  0B29  1D03               	btfss	3,2
  4659  0B2A  2B0A               	goto	i1l1539
  4660                           
  4661                           ;i2clib.c: 31: SSPCON2bits.RSEN = 1;
  4662  0B2B  1491               	bsf	17,1	;volatile
  4663  0B2C  0008               	return
  4664  0B2D                     __end_of_i2c_rstart:	
  4665                           
  4666                           	psect	text22
  4667  0443                     __ptext22:	
  4668 ;; *************** function _printf *****************
  4669 ;; Defined at:
  4670 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  f               1    wreg     PTR const unsigned char 
  4673 ;;		 -> STR_18(2), STR_17(5), STR_16(7), STR_15(4), 
  4674 ;;		 -> STR_14(3), STR_13(2), STR_12(3), STR_11(5), 
  4675 ;;		 -> STR_10(5), STR_9(6), STR_8(6), STR_7(6), 
  4676 ;;		 -> STR_6(6), STR_5(6), STR_4(2), STR_3(5), 
  4677 ;;		 -> STR_2(5), STR_1(8), 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  f               1   18[BANK0 ] PTR const unsigned char 
  4680 ;;		 -> STR_18(2), STR_17(5), STR_16(7), STR_15(4), 
  4681 ;;		 -> STR_14(3), STR_13(2), STR_12(3), STR_11(5), 
  4682 ;;		 -> STR_10(5), STR_9(6), STR_8(6), STR_7(6), 
  4683 ;;		 -> STR_6(6), STR_5(6), STR_4(2), STR_3(5), 
  4684 ;;		 -> STR_2(5), STR_1(8), 
  4685 ;;  idx             1    9[BANK0 ] unsigned char 
  4686 ;;  tmpval          4    0        struct .
  4687 ;;  width           2   15[BANK0 ] int 
  4688 ;;  val             2   13[BANK0 ] unsigned int 
  4689 ;;  cp              2    0        PTR const unsigned char 
  4690 ;;  len             2    0        unsigned int 
  4691 ;;  c               1   19[BANK0 ] char 
  4692 ;;  flag            1   17[BANK0 ] unsigned char 
  4693 ;;  prec            1   12[BANK0 ] char 
  4694 ;;  ap              1   11[BANK0 ] PTR void [1]
  4695 ;;		 -> ?_printf(2), 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  2    4[BANK0 ] int 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4705 ;;      Params:         0       2       0       0       0
  4706 ;;      Locals:         0      11       0       0       0
  4707 ;;      Temps:          0       3       0       0       0
  4708 ;;      Totals:         0      16       0       0       0
  4709 ;;Total ram usage:       16 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    1
  4712 ;; This function calls:
  4713 ;;		___lwdiv
  4714 ;;		___lwmod
  4715 ;;		___wmul
  4716 ;;		_isdigit
  4717 ;;		_putch
  4718 ;; This function is called by:
  4719 ;;		_ints_isr
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           
  4724                           ;psect for function _printf
  4725  0443                     _printf:	
  4726                           
  4727                           ;incstack = 0
  4728                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4729                           ;printf@f stored from wreg
  4730  0443  1283               	bcf	3,5	;RP0=0, select bank0
  4731  0444  1303               	bcf	3,6	;RP1=0, select bank0
  4732  0445  00B2               	movwf	printf@f
  4733                           
  4734                           ;doprnt.c: 466: va_list ap;
  4735                           ;doprnt.c: 499: signed char c;
  4736                           ;doprnt.c: 501: int width;
  4737                           ;doprnt.c: 506: signed char prec;
  4738                           ;doprnt.c: 508: unsigned char flag;
  4739                           ;doprnt.c: 523: union {
  4740                           ;doprnt.c: 524: unsigned long vd;
  4741                           ;doprnt.c: 525: double integ;
  4742                           ;doprnt.c: 526: } tmpval;
  4743                           ;doprnt.c: 528: unsigned int val;
  4744                           ;doprnt.c: 529: unsigned len;
  4745                           ;doprnt.c: 530: const char * cp;
  4746                           ;doprnt.c: 533: *ap = __va_start();
  4747  0446  3024               	movlw	(low (?_printf| 0))& (0+255)
  4748  0447  00A6               	movwf	??_printf
  4749  0448  0826               	movf	??_printf,w
  4750  0449  00AB               	movwf	printf@ap
  4751  044A                     i1l1937:	
  4752                           ;doprnt.c: 536: while(c = *f++) {
  4753                           
  4754  044A  3001               	movlw	1
  4755  044B  1283               	bcf	3,5	;RP0=0, select bank0
  4756  044C  1303               	bcf	3,6	;RP1=0, select bank0
  4757  044D  07B2               	addwf	printf@f,f
  4758  044E  30FF               	movlw	-1
  4759  044F  0732               	addwf	printf@f,w
  4760  0450  0084               	movwf	4
  4761  0451  120A  118A  2715  120A  118A  	fcall	stringdir
  4762  0456  00A6               	movwf	??_printf
  4763  0457  0826               	movf	??_printf,w
  4764  0458  00B3               	movwf	printf@c
  4765  0459  0833               	movf	printf@c,w
  4766  045A  1903               	btfsc	3,2
  4767  045B  0008               	return
  4768                           
  4769                           ;doprnt.c: 538: if(c != '%')
  4770  045C  3025               	movlw	37
  4771  045D  0633               	xorwf	printf@c,w
  4772  045E  1903               	btfsc	3,2
  4773  045F  2C67               	goto	i1l1821
  4774                           
  4775                           ;doprnt.c: 540: {
  4776                           ;doprnt.c: 541: (putch(c) );
  4777  0460  0833               	movf	printf@c,w
  4778  0461  120A  158A  2258  120A  118A  	fcall	_putch
  4779                           
  4780                           ;doprnt.c: 542: continue;
  4781  0466  2C4A               	goto	i1l1937
  4782  0467                     i1l1821:	
  4783                           
  4784                           ;doprnt.c: 543: }
  4785                           ;doprnt.c: 546: width = 0;
  4786  0467  1283               	bcf	3,5	;RP0=0, select bank0
  4787  0468  1303               	bcf	3,6	;RP1=0, select bank0
  4788  0469  01AF               	clrf	printf@width
  4789  046A  01B0               	clrf	printf@width+1
  4790                           
  4791                           ;doprnt.c: 548: flag = 0;
  4792  046B  01B1               	clrf	printf@flag
  4793                           
  4794                           ;doprnt.c: 551: switch(*f) {
  4795                           
  4796                           ;doprnt.c: 550: for(;;) {
  4797  046C  2C72               	goto	i1l1827
  4798  046D                     i1l284:	
  4799                           ;doprnt.c: 579: case '0':
  4800                           
  4801                           
  4802                           ;doprnt.c: 580: flag |= 0x04;
  4803  046D  1531               	bsf	printf@flag,2
  4804                           
  4805                           ;doprnt.c: 581: f++;
  4806  046E  3001               	movlw	1
  4807  046F  00A6               	movwf	??_printf
  4808  0470  0826               	movf	??_printf,w
  4809  0471  07B2               	addwf	printf@f,f
  4810  0472                     i1l1827:	
  4811                           ;doprnt.c: 584: }
  4812                           
  4813                           ;doprnt.c: 582: continue;
  4814                           
  4815  0472  0832               	movf	printf@f,w
  4816  0473  0084               	movwf	4
  4817  0474  120A  118A  2715  120A  118A  	fcall	stringdir
  4818                           
  4819                           ; Switch size 1, requested type "space"
  4820                           ; Number of cases is 1, Range of values is 48 to 48
  4821                           ; switch strategies available:
  4822                           ; Name         Instructions Cycles
  4823                           ; simple_byte            4     3 (average)
  4824                           ; direct_byte           14    11 (fixed)
  4825                           ; jumptable            263     9 (fixed)
  4826                           ;	Chosen strategy is simple_byte
  4827  0479  3A30               	xorlw	48	; case 48
  4828  047A  1903               	skipnz
  4829  047B  2C6D               	goto	i1l284
  4830  047C  2C7D               	goto	i1l1829
  4831  047D                     i1l1829:	
  4832                           ;doprnt.c: 586: }
  4833                           
  4834                           ;doprnt.c: 585: break;
  4835                           
  4836                           
  4837                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4838  047D  0832               	movf	printf@f,w
  4839  047E  0084               	movwf	4
  4840  047F  120A  118A  2715  120A  118A  	fcall	stringdir
  4841  0484  120A  158A  2260  120A  118A  	fcall	_isdigit
  4842  0489  1C03               	btfss	3,0
  4843  048A  2CCD               	goto	i1l1843
  4844                           
  4845                           ;doprnt.c: 598: width = 0;
  4846  048B  1283               	bcf	3,5	;RP0=0, select bank0
  4847  048C  1303               	bcf	3,6	;RP1=0, select bank0
  4848  048D  01AF               	clrf	printf@width
  4849  048E  01B0               	clrf	printf@width+1
  4850  048F                     i1l1833:	
  4851                           ;doprnt.c: 599: do {
  4852                           
  4853                           
  4854                           ;doprnt.c: 600: width *= 10;
  4855  048F  300A               	movlw	10
  4856  0490  00F0               	movwf	___wmul@multiplier
  4857  0491  3000               	movlw	0
  4858  0492  00F1               	movwf	___wmul@multiplier+1
  4859  0493  1283               	bcf	3,5	;RP0=0, select bank0
  4860  0494  1303               	bcf	3,6	;RP1=0, select bank0
  4861  0495  0830               	movf	printf@width+1,w
  4862  0496  00F3               	movwf	___wmul@multiplicand+1
  4863  0497  082F               	movf	printf@width,w
  4864  0498  00F2               	movwf	___wmul@multiplicand
  4865  0499  120A  158A  22A3  120A  118A  	fcall	___wmul
  4866  049E  0871               	movf	?___wmul+1,w
  4867  049F  1283               	bcf	3,5	;RP0=0, select bank0
  4868  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  4869  04A1  00B0               	movwf	printf@width+1
  4870  04A2  0870               	movf	?___wmul,w
  4871  04A3  00AF               	movwf	printf@width
  4872                           
  4873                           ;doprnt.c: 601: width += *f++ - '0';
  4874  04A4  0832               	movf	printf@f,w
  4875  04A5  0084               	movwf	4
  4876  04A6  120A  118A  2715  120A  118A  	fcall	stringdir
  4877  04AB  3ED0               	addlw	208
  4878  04AC  00A6               	movwf	??_printf
  4879  04AD  30FF               	movlw	255
  4880  04AE  1803               	skipnc
  4881  04AF  3000               	movlw	0
  4882  04B0  00A7               	movwf	??_printf+1
  4883  04B1  0826               	movf	??_printf,w
  4884  04B2  07AF               	addwf	printf@width,f
  4885  04B3  1803               	skipnc
  4886  04B4  0AB0               	incf	printf@width+1,f
  4887  04B5  0827               	movf	??_printf+1,w
  4888  04B6  07B0               	addwf	printf@width+1,f
  4889  04B7  3001               	movlw	1
  4890  04B8  00A6               	movwf	??_printf
  4891  04B9  0826               	movf	??_printf,w
  4892  04BA  07B2               	addwf	printf@f,f
  4893                           
  4894                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4895  04BB  0832               	movf	printf@f,w
  4896  04BC  0084               	movwf	4
  4897  04BD  120A  118A  2715  120A  118A  	fcall	stringdir
  4898  04C2  120A  158A  2260  120A  118A  	fcall	_isdigit
  4899  04C7  1C03               	btfss	3,0
  4900  04C8  2CCD               	goto	i1l1843
  4901  04C9  2C8F               	goto	i1l1833
  4902  04CA                     i1l297:	
  4903                           ;doprnt.c: 712: case 'X':
  4904                           
  4905                           ;doprnt.c: 698: case 'i':
  4906                           ;doprnt.c: 699: break;
  4907                           
  4908                           ;doprnt.c: 697: case 'd':
  4909                           
  4910                           ;doprnt.c: 638: goto alldone;
  4911                           
  4912                           ;doprnt.c: 637: case 0:
  4913                           
  4914                           ;doprnt.c: 608: }
  4915                           ;doprnt.c: 635: switch(c = *f++) {
  4916                           
  4917                           
  4918                           ;doprnt.c: 714: flag |= 0x20;
  4919  04CA  16B1               	bsf	printf@flag,5
  4920  04CB                     i1l298:	
  4921                           ;doprnt.c: 718: case 'x':
  4922                           
  4923                           
  4924                           ;doprnt.c: 721: flag |= 0x80;
  4925  04CB  17B1               	bsf	printf@flag,7
  4926                           
  4927                           ;doprnt.c: 723: break;
  4928  04CC  2CEA               	goto	i1l296
  4929  04CD                     i1l1843:	
  4930                           ;doprnt.c: 822: }
  4931                           
  4932                           ;doprnt.c: 813: continue;
  4933                           
  4934                           ;doprnt.c: 802: default:
  4935                           
  4936  04CD  3001               	movlw	1
  4937  04CE  1283               	bcf	3,5	;RP0=0, select bank0
  4938  04CF  1303               	bcf	3,6	;RP1=0, select bank0
  4939  04D0  07B2               	addwf	printf@f,f
  4940  04D1  30FF               	movlw	-1
  4941  04D2  0732               	addwf	printf@f,w
  4942  04D3  0084               	movwf	4
  4943  04D4  120A  118A  2715  120A  118A  	fcall	stringdir
  4944  04D9  00B3               	movwf	printf@c
  4945                           
  4946                           ; Switch size 1, requested type "space"
  4947                           ; Number of cases is 5, Range of values is 0 to 120
  4948                           ; switch strategies available:
  4949                           ; Name         Instructions Cycles
  4950                           ; simple_byte           16     9 (average)
  4951                           ; jumptable            260     6 (fixed)
  4952                           ;	Chosen strategy is simple_byte
  4953  04DA  3A00               	xorlw	0	; case 0
  4954  04DB  1903               	skipnz
  4955  04DC  2E58               	goto	i1l338
  4956  04DD  3A58               	xorlw	88	; case 88
  4957  04DE  1903               	skipnz
  4958  04DF  2CCA               	goto	i1l297
  4959  04E0  3A3C               	xorlw	60	; case 100
  4960  04E1  1903               	skipnz
  4961  04E2  2CEA               	goto	i1l296
  4962  04E3  3A0D               	xorlw	13	; case 105
  4963  04E4  1903               	skipnz
  4964  04E5  2CEA               	goto	i1l296
  4965  04E6  3A11               	xorlw	17	; case 120
  4966  04E7  1903               	skipnz
  4967  04E8  2CCB               	goto	i1l298
  4968  04E9  2C4A               	goto	i1l1937
  4969  04EA                     i1l296:	
  4970                           
  4971                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4972  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  4973  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  4974  04EC  1BB1               	btfsc	printf@flag,7
  4975  04ED  2D06               	goto	i1l1855
  4976                           
  4977                           ;doprnt.c: 1253: {
  4978                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4979  04EE  082B               	movf	printf@ap,w
  4980  04EF  0084               	movwf	4
  4981  04F0  1383               	bcf	3,7	;select IRP bank0
  4982  04F1  0800               	movf	0,w
  4983  04F2  00AD               	movwf	printf@val
  4984  04F3  0A84               	incf	4,f
  4985  04F4  0800               	movf	0,w
  4986  04F5  00AE               	movwf	printf@val+1
  4987  04F6  3002               	movlw	2
  4988  04F7  00A6               	movwf	??_printf
  4989  04F8  0826               	movf	??_printf,w
  4990  04F9  07AB               	addwf	printf@ap,f
  4991                           
  4992                           ;doprnt.c: 1261: if((int)val < 0) {
  4993  04FA  1FAE               	btfss	printf@val+1,7
  4994  04FB  2D5B               	goto	i1l1881
  4995                           
  4996                           ;doprnt.c: 1262: flag |= 0x03;
  4997  04FC  3003               	movlw	3
  4998  04FD  00A6               	movwf	??_printf
  4999  04FE  0826               	movf	??_printf,w
  5000  04FF  04B1               	iorwf	printf@flag,f
  5001                           
  5002                           ;doprnt.c: 1263: val = -val;
  5003  0500  09AD               	comf	printf@val,f
  5004  0501  09AE               	comf	printf@val+1,f
  5005  0502  0AAD               	incf	printf@val,f
  5006  0503  1903               	skipnz
  5007  0504  0AAE               	incf	printf@val+1,f
  5008                           
  5009                           ;doprnt.c: 1264: }
  5010                           ;doprnt.c: 1266: }
  5011  0505  2D5B               	goto	i1l1881
  5012  0506                     i1l1855:	
  5013                           
  5014                           ;doprnt.c: 1268: else
  5015                           ;doprnt.c: 1273: {
  5016                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5017  0506  082B               	movf	printf@ap,w
  5018  0507  0084               	movwf	4
  5019  0508  1383               	bcf	3,7	;select IRP bank0
  5020  0509  0800               	movf	0,w
  5021  050A  00AD               	movwf	printf@val
  5022  050B  0A84               	incf	4,f
  5023  050C  0800               	movf	0,w
  5024  050D  00AE               	movwf	printf@val+1
  5025  050E  3002               	movlw	2
  5026  050F  00A6               	movwf	??_printf
  5027  0510  0826               	movf	??_printf,w
  5028  0511  07AB               	addwf	printf@ap,f
  5029                           
  5030                           ;doprnt.c: 1287: }
  5031                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  5032  0512  2D5B               	goto	i1l1881
  5033  0513                     i1l304:	
  5034                           ;doprnt.c: 1299: case 0x00:
  5035                           
  5036                           
  5037                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5038  0513  01B3               	clrf	printf@c
  5039  0514  0AB3               	incf	printf@c,f
  5040  0515                     L7:	
  5041  0515  3005               	movlw	5
  5042  0516  0633               	xorwf	printf@c,w
  5043  0517  1903               	btfsc	3,2
  5044  0518  2D64               	goto	i1l1883
  5045                           
  5046                           ;doprnt.c: 1306: if(val < dpowers[c])
  5047  0519  0833               	movf	printf@c,w
  5048  051A  00A6               	movwf	??_printf
  5049  051B  0726               	addwf	??_printf,w
  5050  051C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5051  051D  0084               	movwf	4
  5052  051E  120A  118A  2715  120A  118A  	fcall	stringdir
  5053  0523  00A7               	movwf	??_printf+1
  5054  0524  120A  118A  2715  120A  118A  	fcall	stringdir
  5055  0529  00A8               	movwf	??_printf+2
  5056  052A  0828               	movf	??_printf+2,w
  5057  052B  022E               	subwf	printf@val+1,w
  5058  052C  1D03               	skipz
  5059  052D  2D30               	goto	u180_25
  5060  052E  0827               	movf	??_printf+1,w
  5061  052F  022D               	subwf	printf@val,w
  5062  0530                     u180_25:	
  5063  0530  1C03               	btfss	3,0
  5064  0531  2D64               	goto	i1l1883
  5065                           
  5066                           ;doprnt.c: 1307: break;
  5067  0532  3001               	movlw	1
  5068  0533  00A6               	movwf	??_printf
  5069  0534  0826               	movf	??_printf,w
  5070  0535  07B3               	addwf	printf@c,f
  5071  0536  2D15               	goto	L7
  5072  0537                     i1l309:	
  5073                           ;doprnt.c: 1314: case 0x80:
  5074                           
  5075                           ;doprnt.c: 1309: break;
  5076                           
  5077                           
  5078                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5079  0537  01B3               	clrf	printf@c
  5080  0538  0AB3               	incf	printf@c,f
  5081  0539                     L8:	
  5082  0539  3004               	movlw	4
  5083  053A  0633               	xorwf	printf@c,w
  5084  053B  1903               	btfsc	3,2
  5085  053C  2D64               	goto	i1l1883
  5086                           
  5087                           ;doprnt.c: 1317: if(val < hexpowers[c])
  5088  053D  0833               	movf	printf@c,w
  5089  053E  00A6               	movwf	??_printf
  5090  053F  0726               	addwf	??_printf,w
  5091  0540  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  5092  0541  0084               	movwf	4
  5093  0542  120A  118A  2715  120A  118A  	fcall	stringdir
  5094  0547  00A7               	movwf	??_printf+1
  5095  0548  120A  118A  2715  120A  118A  	fcall	stringdir
  5096  054D  00A8               	movwf	??_printf+2
  5097  054E  0828               	movf	??_printf+2,w
  5098  054F  022E               	subwf	printf@val+1,w
  5099  0550  1D03               	skipz
  5100  0551  2D54               	goto	u183_25
  5101  0552  0827               	movf	??_printf+1,w
  5102  0553  022D               	subwf	printf@val,w
  5103  0554                     u183_25:	
  5104  0554  1C03               	btfss	3,0
  5105  0555  2D64               	goto	i1l1883
  5106                           
  5107                           ;doprnt.c: 1318: break;
  5108  0556  3001               	movlw	1
  5109  0557  00A6               	movwf	??_printf
  5110  0558  0826               	movf	??_printf,w
  5111  0559  07B3               	addwf	printf@c,f
  5112  055A  2D39               	goto	L8
  5113  055B                     i1l1881:	
  5114                           ;doprnt.c: 1336: }
  5115                           
  5116                           ;doprnt.c: 1320: break;
  5117                           
  5118  055B  0831               	movf	printf@flag,w
  5119  055C  3980               	andlw	128
  5120                           
  5121                           ; Switch size 1, requested type "space"
  5122                           ; Number of cases is 2, Range of values is 0 to 128
  5123                           ; switch strategies available:
  5124                           ; Name         Instructions Cycles
  5125                           ; simple_byte            7     4 (average)
  5126                           ; jumptable            260     6 (fixed)
  5127                           ;	Chosen strategy is simple_byte
  5128  055D  3A00               	xorlw	0	; case 0
  5129  055E  1903               	skipnz
  5130  055F  2D13               	goto	i1l304
  5131  0560  3A80               	xorlw	128	; case 128
  5132  0561  1903               	skipnz
  5133  0562  2D37               	goto	i1l309
  5134  0563  2D64               	goto	i1l1883
  5135  0564                     i1l1883:	
  5136                           
  5137                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5138  0564  082F               	movf	printf@width,w
  5139  0565  0430               	iorwf	printf@width+1,w
  5140  0566  1903               	btfsc	3,2
  5141  0567  2D72               	goto	i1l313
  5142  0568  0831               	movf	printf@flag,w
  5143  0569  3903               	andlw	3
  5144  056A  1903               	btfsc	3,2
  5145  056B  2D72               	goto	i1l313
  5146                           
  5147                           ;doprnt.c: 1346: width--;
  5148  056C  30FF               	movlw	255
  5149  056D  07AF               	addwf	printf@width,f
  5150  056E  1803               	skipnc
  5151  056F  0AB0               	incf	printf@width+1,f
  5152  0570  30FF               	movlw	255
  5153  0571  07B0               	addwf	printf@width+1,f
  5154  0572                     i1l313:	
  5155                           
  5156                           ;doprnt.c: 1381: if(width > c)
  5157  0572  0833               	movf	printf@c,w
  5158  0573  00A6               	movwf	??_printf
  5159  0574  01A7               	clrf	??_printf+1
  5160  0575  1BA6               	btfsc	??_printf,7
  5161  0576  03A7               	decf	??_printf+1,f
  5162  0577  0827               	movf	??_printf+1,w
  5163  0578  3A80               	xorlw	128
  5164  0579  00A8               	movwf	??_printf+2
  5165  057A  0830               	movf	printf@width+1,w
  5166  057B  3A80               	xorlw	128
  5167  057C  0228               	subwf	??_printf+2,w
  5168  057D  1D03               	skipz
  5169  057E  2D81               	goto	u187_25
  5170  057F  082F               	movf	printf@width,w
  5171  0580  0226               	subwf	??_printf,w
  5172  0581                     u187_25:	
  5173  0581  1803               	skipnc
  5174  0582  2D91               	goto	i1l1891
  5175                           
  5176                           ;doprnt.c: 1382: width -= c;
  5177  0583  1283               	bcf	3,5	;RP0=0, select bank0
  5178  0584  1303               	bcf	3,6	;RP1=0, select bank0
  5179  0585  0833               	movf	printf@c,w
  5180  0586  00A6               	movwf	??_printf
  5181  0587  01A7               	clrf	??_printf+1
  5182  0588  1BA6               	btfsc	??_printf,7
  5183  0589  03A7               	decf	??_printf+1,f
  5184  058A  0826               	movf	??_printf,w
  5185  058B  02AF               	subwf	printf@width,f
  5186  058C  0827               	movf	??_printf+1,w
  5187  058D  1C03               	skipc
  5188  058E  03B0               	decf	printf@width+1,f
  5189  058F  02B0               	subwf	printf@width+1,f
  5190  0590  2D95               	goto	i1l1893
  5191  0591                     i1l1891:	
  5192                           
  5193                           ;doprnt.c: 1383: else
  5194                           ;doprnt.c: 1384: width = 0;
  5195  0591  1283               	bcf	3,5	;RP0=0, select bank0
  5196  0592  1303               	bcf	3,6	;RP1=0, select bank0
  5197  0593  01AF               	clrf	printf@width
  5198  0594  01B0               	clrf	printf@width+1
  5199  0595                     i1l1893:	
  5200                           
  5201                           ;doprnt.c: 1387: if(flag & 0x04) {
  5202  0595  1D31               	btfss	printf@flag,2
  5203  0596  2DB6               	goto	i1l1905
  5204                           
  5205                           ;doprnt.c: 1392: if(flag & 0x03)
  5206  0597  0831               	movf	printf@flag,w
  5207  0598  3903               	andlw	3
  5208  0599  1903               	btfsc	3,2
  5209  059A  2DA1               	goto	i1l1899
  5210                           
  5211                           ;doprnt.c: 1393: (putch('-') );
  5212  059B  302D               	movlw	45
  5213  059C  120A  158A  2258  120A  118A  	fcall	_putch
  5214  05A1                     i1l1899:	
  5215                           
  5216                           ;doprnt.c: 1415: if(width)
  5217  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  5218  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  5219  05A3                     L9:	
  5220  05A3  082F               	movf	printf@width,w
  5221  05A4  0430               	iorwf	printf@width+1,w
  5222  05A5  1903               	btfsc	3,2
  5223  05A6  2DD6               	goto	i1l1915
  5224                           
  5225                           ;doprnt.c: 1417: (putch('0') );
  5226                           
  5227                           ;doprnt.c: 1416: do
  5228  05A7  3030               	movlw	48
  5229  05A8  120A  158A  2258  120A  118A  	fcall	_putch
  5230                           
  5231                           ;doprnt.c: 1418: while(--width);
  5232  05AD  30FF               	movlw	255
  5233  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  5234  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  5235  05B0  07AF               	addwf	printf@width,f
  5236  05B1  1803               	skipnc
  5237  05B2  0AB0               	incf	printf@width+1,f
  5238  05B3  30FF               	movlw	255
  5239  05B4  07B0               	addwf	printf@width+1,f
  5240  05B5  2DA3               	goto	L9
  5241  05B6                     i1l1905:	
  5242                           ;doprnt.c: 1420: } else
  5243                           
  5244                           
  5245                           ;doprnt.c: 1422: {
  5246                           ;doprnt.c: 1424: if(width
  5247                           ;doprnt.c: 1428: )
  5248  05B6  082F               	movf	printf@width,w
  5249  05B7  0430               	iorwf	printf@width+1,w
  5250  05B8  1903               	btfsc	3,2
  5251  05B9  2DCC               	goto	i1l1911
  5252  05BA                     i1l1907:	
  5253                           ;doprnt.c: 1429: do
  5254                           
  5255                           
  5256                           ;doprnt.c: 1430: (putch(' ') );
  5257  05BA  3020               	movlw	32
  5258  05BB  120A  158A  2258  120A  118A  	fcall	_putch
  5259                           
  5260                           ;doprnt.c: 1431: while(--width);
  5261  05C0  30FF               	movlw	255
  5262  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  5263  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  5264  05C3  07AF               	addwf	printf@width,f
  5265  05C4  1803               	skipnc
  5266  05C5  0AB0               	incf	printf@width+1,f
  5267  05C6  30FF               	movlw	255
  5268  05C7  07B0               	addwf	printf@width+1,f
  5269  05C8  082F               	movf	printf@width,w
  5270  05C9  0430               	iorwf	printf@width+1,w
  5271  05CA  1D03               	btfss	3,2
  5272  05CB  2DBA               	goto	i1l1907
  5273  05CC                     i1l1911:	
  5274                           
  5275                           ;doprnt.c: 1438: if(flag & 0x03)
  5276  05CC  0831               	movf	printf@flag,w
  5277  05CD  3903               	andlw	3
  5278  05CE  1903               	btfsc	3,2
  5279  05CF  2DD6               	goto	i1l1915
  5280                           
  5281                           ;doprnt.c: 1439: (putch('-') );
  5282  05D0  302D               	movlw	45
  5283  05D1  120A  158A  2258  120A  118A  	fcall	_putch
  5284  05D6                     i1l1915:	
  5285                           
  5286                           ;doprnt.c: 1469: }
  5287                           ;doprnt.c: 1472: prec = c;
  5288  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  5289  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  5290  05D8  0833               	movf	printf@c,w
  5291  05D9  00A6               	movwf	??_printf
  5292  05DA  0826               	movf	??_printf,w
  5293  05DB  00AC               	movwf	printf@prec
  5294                           
  5295                           ;doprnt.c: 1474: while(prec--) {
  5296  05DC  2E45               	goto	i1l1935
  5297  05DD                     i1l1917:	
  5298                           ;doprnt.c: 1478: {
  5299                           ;doprnt.c: 1483: case 0x00:
  5300                           
  5301                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  5302                           
  5303                           
  5304                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5305  05DD  300A               	movlw	10
  5306  05DE  00F8               	movwf	___lwmod@divisor
  5307  05DF  3000               	movlw	0
  5308  05E0  00F9               	movwf	___lwmod@divisor+1
  5309  05E1  082C               	movf	printf@prec,w
  5310  05E2  00A6               	movwf	??_printf
  5311  05E3  0726               	addwf	??_printf,w
  5312  05E4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5313  05E5  0084               	movwf	4
  5314  05E6  120A  118A  2715  120A  118A  	fcall	stringdir
  5315  05EB  00F0               	movwf	___lwdiv@divisor
  5316  05EC  120A  118A  2715  120A  118A  	fcall	stringdir
  5317  05F1  00F1               	movwf	___lwdiv@divisor+1
  5318  05F2  082E               	movf	printf@val+1,w
  5319  05F3  00F3               	movwf	___lwdiv@dividend+1
  5320  05F4  082D               	movf	printf@val,w
  5321  05F5  00F2               	movwf	___lwdiv@dividend
  5322  05F6  120A  158A  2494  120A  118A  	fcall	___lwdiv
  5323  05FB  0871               	movf	?___lwdiv+1,w
  5324  05FC  00FB               	movwf	___lwmod@dividend+1
  5325  05FD  0870               	movf	?___lwdiv,w
  5326  05FE  00FA               	movwf	___lwmod@dividend
  5327  05FF  120A  158A  23C9  120A  118A  	fcall	___lwmod
  5328  0604  0878               	movf	?___lwmod,w
  5329  0605  3E30               	addlw	48
  5330  0606  1283               	bcf	3,5	;RP0=0, select bank0
  5331  0607  1303               	bcf	3,6	;RP1=0, select bank0
  5332  0608  00A7               	movwf	??_printf+1
  5333  0609  0827               	movf	??_printf+1,w
  5334  060A  2E3E               	goto	L5
  5335  060B                     i1l1919:	
  5336                           ;doprnt.c: 1497: case 0x80:
  5337                           
  5338                           ;doprnt.c: 1491: break;
  5339                           
  5340                           
  5341                           ;doprnt.c: 1499: {
  5342                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5343  060B  082C               	movf	printf@prec,w
  5344  060C  00A6               	movwf	??_printf
  5345  060D  0726               	addwf	??_printf,w
  5346  060E  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  5347  060F  0084               	movwf	4
  5348  0610  120A  118A  2715  120A  118A  	fcall	stringdir
  5349  0615  00F0               	movwf	___lwdiv@divisor
  5350  0616  120A  118A  2715  120A  118A  	fcall	stringdir
  5351  061B  00F1               	movwf	___lwdiv@divisor+1
  5352  061C  082E               	movf	printf@val+1,w
  5353  061D  00F3               	movwf	___lwdiv@dividend+1
  5354  061E  082D               	movf	printf@val,w
  5355  061F  00F2               	movwf	___lwdiv@dividend
  5356  0620  120A  158A  2494  120A  118A  	fcall	___lwdiv
  5357  0625  0870               	movf	?___lwdiv,w
  5358  0626  390F               	andlw	15
  5359  0627  1283               	bcf	3,5	;RP0=0, select bank0
  5360  0628  1303               	bcf	3,6	;RP1=0, select bank0
  5361  0629  00A7               	movwf	??_printf+1
  5362  062A  0827               	movf	??_printf+1,w
  5363  062B  00A9               	movwf	printf@idx
  5364                           
  5365                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  5366  062C  1AB1               	btfsc	printf@flag,5
  5367  062D  2E30               	goto	i1l1925
  5368  062E  3024               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  5369  062F  2E31               	goto	L6
  5370  0630                     i1l1925:	
  5371  0630  3013               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  5372  0631                     L6:	
  5373  0631  00A6               	movwf	??_printf
  5374  0632  0826               	movf	??_printf,w
  5375  0633  00AA               	movwf	_printf$749
  5376  0634  0829               	movf	printf@idx,w
  5377  0635  072A               	addwf	_printf$749,w
  5378  0636  0084               	movwf	4
  5379  0637  120A  118A  2715  120A  118A  	fcall	stringdir
  5380  063C  00A6               	movwf	??_printf
  5381  063D  0826               	movf	??_printf,w
  5382  063E                     L5:	
  5383  063E  00B3               	movwf	printf@c
  5384  063F                     i1l1933:	
  5385                           ;doprnt.c: 1523: }
  5386                           
  5387                           ;doprnt.c: 1508: }
  5388                           ;doprnt.c: 1510: break;
  5389                           
  5390                           
  5391                           ;doprnt.c: 1524: (putch(c) );
  5392  063F  0833               	movf	printf@c,w
  5393  0640  120A  158A  2258  120A  118A  	fcall	_putch
  5394  0645                     i1l1935:	
  5395  0645  30FF               	movlw	255
  5396  0646  1283               	bcf	3,5	;RP0=0, select bank0
  5397  0647  1303               	bcf	3,6	;RP1=0, select bank0
  5398  0648  00A6               	movwf	??_printf
  5399  0649  0826               	movf	??_printf,w
  5400  064A  07AC               	addwf	printf@prec,f
  5401  064B  0A2C               	incf	printf@prec,w
  5402  064C  1903               	btfsc	3,2
  5403  064D  2C4A               	goto	i1l1937
  5404  064E  0831               	movf	printf@flag,w
  5405  064F  3980               	andlw	128
  5406                           
  5407                           ; Switch size 1, requested type "space"
  5408                           ; Number of cases is 2, Range of values is 0 to 128
  5409                           ; switch strategies available:
  5410                           ; Name         Instructions Cycles
  5411                           ; simple_byte            7     4 (average)
  5412                           ; jumptable            260     6 (fixed)
  5413                           ;	Chosen strategy is simple_byte
  5414  0650  3A00               	xorlw	0	; case 0
  5415  0651  1903               	skipnz
  5416  0652  2DDD               	goto	i1l1917
  5417  0653  3A80               	xorlw	128	; case 128
  5418  0654  1903               	skipnz
  5419  0655  2E0B               	goto	i1l1919
  5420  0656  2E3F               	goto	i1l1933
  5421  0657  2E3F               	goto	i1l1933
  5422  0658                     i1l338:	
  5423                           ;doprnt.c: 1540: return 0;
  5424                           ;	Return value of _printf is never used
  5425                           
  5426                           ;doprnt.c: 1525: }
  5427                           ;doprnt.c: 1533: }
  5428                           ;doprnt.c: 1535: alldone:
  5429                           
  5430  0658  0008               	return
  5431  0659                     __end_of_printf:	
  5432                           
  5433                           	psect	text23
  5434  0A58                     __ptext23:	
  5435 ;; *************** function _putch *****************
  5436 ;; Defined at:
  5437 ;;		line 36 in file "panda17.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  data            1    wreg     unsigned char 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  data            1    0[COMMON] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      void 
  5444 ;; Registers used:
  5445 ;;		wreg
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5451 ;;      Params:         0       0       0       0       0
  5452 ;;      Locals:         1       0       0       0       0
  5453 ;;      Temps:          0       0       0       0       0
  5454 ;;      Totals:         1       0       0       0       0
  5455 ;;Total ram usage:        1 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; This function calls:
  5458 ;;		Nothing
  5459 ;; This function is called by:
  5460 ;;		_printf
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           
  5465                           ;psect for function _putch
  5466  0A58                     _putch:	
  5467                           
  5468                           ;incstack = 0
  5469                           ; Regs used in _putch: [wreg]
  5470                           ;putch@data stored from wreg
  5471  0A58  00F0               	movwf	putch@data
  5472  0A59                     i1l76:	
  5473                           ;panda17.c: 38: continue;
  5474                           
  5475                           ;panda17.c: 37: while(!PIR1bits.TXIF)
  5476                           
  5477  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  5478  0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  5479  0A5B  1E0C               	btfss	12,4	;volatile
  5480  0A5C  2A59               	goto	i1l76
  5481                           
  5482                           ;panda17.c: 39: TXREG = data;
  5483  0A5D  0870               	movf	putch@data,w
  5484  0A5E  0099               	movwf	25	;volatile
  5485  0A5F  0008               	return
  5486  0A60                     __end_of_putch:	
  5487                           
  5488                           	psect	text24
  5489  0A60                     __ptext24:	
  5490 ;; *************** function _isdigit *****************
  5491 ;; Defined at:
  5492 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  c               1    wreg     unsigned char 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  c               1    1[COMMON] unsigned char 
  5497 ;; Return value:  Size  Location     Type
  5498 ;;		None               void
  5499 ;; Registers used:
  5500 ;;		wreg, status,2, status,0
  5501 ;; Tracked objects:
  5502 ;;		On entry : 0/0
  5503 ;;		On exit  : 0/0
  5504 ;;		Unchanged: 0/0
  5505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5506 ;;      Params:         0       0       0       0       0
  5507 ;;      Locals:         2       0       0       0       0
  5508 ;;      Temps:          0       0       0       0       0
  5509 ;;      Totals:         2       0       0       0       0
  5510 ;;Total ram usage:        2 bytes
  5511 ;; Hardware stack levels used:    1
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_printf
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           
  5520                           ;psect for function _isdigit
  5521  0A60                     _isdigit:	
  5522                           
  5523                           ;incstack = 0
  5524                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5525                           ;isdigit@c stored from wreg
  5526  0A60  00F1               	movwf	isdigit@c
  5527  0A61  01F0               	clrf	_isdigit$935
  5528  0A62  303A               	movlw	58
  5529  0A63  0271               	subwf	isdigit@c,w
  5530  0A64  1803               	skipnc
  5531  0A65  2A6C               	goto	i1l1677
  5532  0A66  3030               	movlw	48
  5533  0A67  0271               	subwf	isdigit@c,w
  5534  0A68  1C03               	skipc
  5535  0A69  2A6C               	goto	i1l1677
  5536  0A6A  01F0               	clrf	_isdigit$935
  5537  0A6B  0AF0               	incf	_isdigit$935,f
  5538  0A6C                     i1l1677:	
  5539  0A6C  0C70               	rrf	_isdigit$935,w
  5540  0A6D  0008               	return
  5541  0A6E                     __end_of_isdigit:	
  5542                           
  5543                           	psect	text25
  5544  0AA3                     __ptext25:	
  5545 ;; *************** function ___wmul *****************
  5546 ;; Defined at:
  5547 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;  multiplier      2    0[COMMON] unsigned int 
  5550 ;;  multiplicand    2    2[COMMON] unsigned int 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  product         2    4[COMMON] unsigned int 
  5553 ;; Return value:  Size  Location     Type
  5554 ;;                  2    0[COMMON] unsigned int 
  5555 ;; Registers used:
  5556 ;;		wreg, status,2, status,0
  5557 ;; Tracked objects:
  5558 ;;		On entry : 0/0
  5559 ;;		On exit  : 0/0
  5560 ;;		Unchanged: 0/0
  5561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5562 ;;      Params:         4       0       0       0       0
  5563 ;;      Locals:         2       0       0       0       0
  5564 ;;      Temps:          0       0       0       0       0
  5565 ;;      Totals:         6       0       0       0       0
  5566 ;;Total ram usage:        6 bytes
  5567 ;; Hardware stack levels used:    1
  5568 ;; This function calls:
  5569 ;;		Nothing
  5570 ;; This function is called by:
  5571 ;;		_printf
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           
  5576                           ;psect for function ___wmul
  5577  0AA3                     ___wmul:	
  5578                           
  5579                           ;incstack = 0
  5580                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5581  0AA3  01F4               	clrf	___wmul@product
  5582  0AA4  01F5               	clrf	___wmul@product+1
  5583  0AA5                     i1l1683:	
  5584  0AA5  1C70               	btfss	___wmul@multiplier,0
  5585  0AA6  2AAD               	goto	i1l422
  5586  0AA7  0872               	movf	___wmul@multiplicand,w
  5587  0AA8  07F4               	addwf	___wmul@product,f
  5588  0AA9  1803               	skipnc
  5589  0AAA  0AF5               	incf	___wmul@product+1,f
  5590  0AAB  0873               	movf	___wmul@multiplicand+1,w
  5591  0AAC  07F5               	addwf	___wmul@product+1,f
  5592  0AAD                     i1l422:	
  5593  0AAD  3001               	movlw	1
  5594  0AAE                     u156_25:	
  5595  0AAE  1003               	clrc
  5596  0AAF  0DF2               	rlf	___wmul@multiplicand,f
  5597  0AB0  0DF3               	rlf	___wmul@multiplicand+1,f
  5598  0AB1  3EFF               	addlw	-1
  5599  0AB2  1D03               	skipz
  5600  0AB3  2AAE               	goto	u156_25
  5601  0AB4  3001               	movlw	1
  5602  0AB5                     u157_25:	
  5603  0AB5  1003               	clrc
  5604  0AB6  0CF1               	rrf	___wmul@multiplier+1,f
  5605  0AB7  0CF0               	rrf	___wmul@multiplier,f
  5606  0AB8  3EFF               	addlw	-1
  5607  0AB9  1D03               	skipz
  5608  0ABA  2AB5               	goto	u157_25
  5609  0ABB  0870               	movf	___wmul@multiplier,w
  5610  0ABC  0471               	iorwf	___wmul@multiplier+1,w
  5611  0ABD  1D03               	btfss	3,2
  5612  0ABE  2AA5               	goto	i1l1683
  5613  0ABF  0875               	movf	___wmul@product+1,w
  5614  0AC0  00F1               	movwf	?___wmul+1
  5615  0AC1  0874               	movf	___wmul@product,w
  5616  0AC2  00F0               	movwf	?___wmul
  5617  0AC3  0008               	return
  5618  0AC4                     __end_of___wmul:	
  5619                           
  5620                           	psect	text26
  5621  0BC9                     __ptext26:	
  5622 ;; *************** function ___lwmod *****************
  5623 ;; Defined at:
  5624 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  divisor         2    8[COMMON] unsigned int 
  5627 ;;  dividend        2   10[COMMON] unsigned int 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  counter         1   13[COMMON] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  2    8[COMMON] unsigned int 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         4       0       0       0       0
  5640 ;;      Locals:         1       0       0       0       0
  5641 ;;      Temps:          1       0       0       0       0
  5642 ;;      Totals:         6       0       0       0       0
  5643 ;;Total ram usage:        6 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_printf
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function ___lwmod
  5654  0BC9                     ___lwmod:	
  5655                           
  5656                           ;incstack = 0
  5657                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5658  0BC9  0878               	movf	___lwmod@divisor,w
  5659  0BCA  0479               	iorwf	___lwmod@divisor+1,w
  5660  0BCB  1903               	btfsc	3,2
  5661  0BCC  2BF6               	goto	i1l1739
  5662  0BCD  01FD               	clrf	___lwmod@counter
  5663  0BCE  0AFD               	incf	___lwmod@counter,f
  5664  0BCF                     i1l1729:	
  5665  0BCF  1BF9               	btfsc	___lwmod@divisor+1,7
  5666  0BD0  2BDD               	goto	i1l1731
  5667  0BD1  3001               	movlw	1
  5668  0BD2                     u167_25:	
  5669  0BD2  1003               	clrc
  5670  0BD3  0DF8               	rlf	___lwmod@divisor,f
  5671  0BD4  0DF9               	rlf	___lwmod@divisor+1,f
  5672  0BD5  3EFF               	addlw	-1
  5673  0BD6  1D03               	skipz
  5674  0BD7  2BD2               	goto	u167_25
  5675  0BD8  3001               	movlw	1
  5676  0BD9  00FC               	movwf	??___lwmod
  5677  0BDA  087C               	movf	??___lwmod,w
  5678  0BDB  07FD               	addwf	___lwmod@counter,f
  5679  0BDC  2BCF               	goto	i1l1729
  5680  0BDD                     i1l1731:	
  5681  0BDD  0879               	movf	___lwmod@divisor+1,w
  5682  0BDE  027B               	subwf	___lwmod@dividend+1,w
  5683  0BDF  1D03               	skipz
  5684  0BE0  2BE3               	goto	u169_25
  5685  0BE1  0878               	movf	___lwmod@divisor,w
  5686  0BE2  027A               	subwf	___lwmod@dividend,w
  5687  0BE3                     u169_25:	
  5688  0BE3  1C03               	skipc
  5689  0BE4  2BEB               	goto	i1l1735
  5690  0BE5  0878               	movf	___lwmod@divisor,w
  5691  0BE6  02FA               	subwf	___lwmod@dividend,f
  5692  0BE7  0879               	movf	___lwmod@divisor+1,w
  5693  0BE8  1C03               	skipc
  5694  0BE9  03FB               	decf	___lwmod@dividend+1,f
  5695  0BEA  02FB               	subwf	___lwmod@dividend+1,f
  5696  0BEB                     i1l1735:	
  5697  0BEB  3001               	movlw	1
  5698  0BEC                     u170_25:	
  5699  0BEC  1003               	clrc
  5700  0BED  0CF9               	rrf	___lwmod@divisor+1,f
  5701  0BEE  0CF8               	rrf	___lwmod@divisor,f
  5702  0BEF  3EFF               	addlw	-1
  5703  0BF0  1D03               	skipz
  5704  0BF1  2BEC               	goto	u170_25
  5705  0BF2  3001               	movlw	1
  5706  0BF3  02FD               	subwf	___lwmod@counter,f
  5707  0BF4  1D03               	btfss	3,2
  5708  0BF5  2BDD               	goto	i1l1731
  5709  0BF6                     i1l1739:	
  5710  0BF6  087B               	movf	___lwmod@dividend+1,w
  5711  0BF7  00F9               	movwf	?___lwmod+1
  5712  0BF8  087A               	movf	___lwmod@dividend,w
  5713  0BF9  00F8               	movwf	?___lwmod
  5714  0BFA  0008               	return
  5715  0BFB                     __end_of___lwmod:	
  5716                           
  5717                           	psect	text27
  5718  0C94                     __ptext27:	
  5719 ;; *************** function ___lwdiv *****************
  5720 ;; Defined at:
  5721 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  divisor         2    0[COMMON] unsigned int 
  5724 ;;  dividend        2    2[COMMON] unsigned int 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  quotient        2    5[COMMON] unsigned int 
  5727 ;;  counter         1    7[COMMON] unsigned char 
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  2    0[COMMON] unsigned int 
  5730 ;; Registers used:
  5731 ;;		wreg, status,2, status,0
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5737 ;;      Params:         4       0       0       0       0
  5738 ;;      Locals:         3       0       0       0       0
  5739 ;;      Temps:          1       0       0       0       0
  5740 ;;      Totals:         8       0       0       0       0
  5741 ;;Total ram usage:        8 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; This function calls:
  5744 ;;		Nothing
  5745 ;; This function is called by:
  5746 ;;		_printf
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           
  5751                           ;psect for function ___lwdiv
  5752  0C94                     ___lwdiv:	
  5753                           
  5754                           ;incstack = 0
  5755                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5756  0C94  01F5               	clrf	___lwdiv@quotient
  5757  0C95  01F6               	clrf	___lwdiv@quotient+1
  5758  0C96  0870               	movf	___lwdiv@divisor,w
  5759  0C97  0471               	iorwf	___lwdiv@divisor+1,w
  5760  0C98  1903               	btfsc	3,2
  5761  0C99  2CCB               	goto	i1l1717
  5762  0C9A  01F7               	clrf	___lwdiv@counter
  5763  0C9B  0AF7               	incf	___lwdiv@counter,f
  5764  0C9C                     i1l1705:	
  5765  0C9C  1BF1               	btfsc	___lwdiv@divisor+1,7
  5766  0C9D  2CAA               	goto	i1l1707
  5767  0C9E  3001               	movlw	1
  5768  0C9F                     u160_25:	
  5769  0C9F  1003               	clrc
  5770  0CA0  0DF0               	rlf	___lwdiv@divisor,f
  5771  0CA1  0DF1               	rlf	___lwdiv@divisor+1,f
  5772  0CA2  3EFF               	addlw	-1
  5773  0CA3  1D03               	skipz
  5774  0CA4  2C9F               	goto	u160_25
  5775  0CA5  3001               	movlw	1
  5776  0CA6  00F4               	movwf	??___lwdiv
  5777  0CA7  0874               	movf	??___lwdiv,w
  5778  0CA8  07F7               	addwf	___lwdiv@counter,f
  5779  0CA9  2C9C               	goto	i1l1705
  5780  0CAA                     i1l1707:	
  5781  0CAA  3001               	movlw	1
  5782  0CAB                     u162_25:	
  5783  0CAB  1003               	clrc
  5784  0CAC  0DF5               	rlf	___lwdiv@quotient,f
  5785  0CAD  0DF6               	rlf	___lwdiv@quotient+1,f
  5786  0CAE  3EFF               	addlw	-1
  5787  0CAF  1D03               	skipz
  5788  0CB0  2CAB               	goto	u162_25
  5789  0CB1  0871               	movf	___lwdiv@divisor+1,w
  5790  0CB2  0273               	subwf	___lwdiv@dividend+1,w
  5791  0CB3  1D03               	skipz
  5792  0CB4  2CB7               	goto	u163_25
  5793  0CB5  0870               	movf	___lwdiv@divisor,w
  5794  0CB6  0272               	subwf	___lwdiv@dividend,w
  5795  0CB7                     u163_25:	
  5796  0CB7  1C03               	skipc
  5797  0CB8  2CC0               	goto	i1l1713
  5798  0CB9  0870               	movf	___lwdiv@divisor,w
  5799  0CBA  02F2               	subwf	___lwdiv@dividend,f
  5800  0CBB  0871               	movf	___lwdiv@divisor+1,w
  5801  0CBC  1C03               	skipc
  5802  0CBD  03F3               	decf	___lwdiv@dividend+1,f
  5803  0CBE  02F3               	subwf	___lwdiv@dividend+1,f
  5804  0CBF  1475               	bsf	___lwdiv@quotient,0
  5805  0CC0                     i1l1713:	
  5806  0CC0  3001               	movlw	1
  5807  0CC1                     u164_25:	
  5808  0CC1  1003               	clrc
  5809  0CC2  0CF1               	rrf	___lwdiv@divisor+1,f
  5810  0CC3  0CF0               	rrf	___lwdiv@divisor,f
  5811  0CC4  3EFF               	addlw	-1
  5812  0CC5  1D03               	skipz
  5813  0CC6  2CC1               	goto	u164_25
  5814  0CC7  3001               	movlw	1
  5815  0CC8  02F7               	subwf	___lwdiv@counter,f
  5816  0CC9  1D03               	btfss	3,2
  5817  0CCA  2CAA               	goto	i1l1707
  5818  0CCB                     i1l1717:	
  5819  0CCB  0876               	movf	___lwdiv@quotient+1,w
  5820  0CCC  00F1               	movwf	?___lwdiv+1
  5821  0CCD  0875               	movf	___lwdiv@quotient,w
  5822  0CCE  00F0               	movwf	?___lwdiv
  5823  0CCF  0008               	return
  5824  0CD0                     __end_of___lwdiv:	
  5825                           
  5826                           	psect	text28
  5827  0C2E                     __ptext28:	
  5828 ;; *************** function _ds_set *****************
  5829 ;; Defined at:
  5830 ;;		line 13 in file "ds1307.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;  data            1    wreg     PTR unsigned char 
  5833 ;;		 -> time(7), 
  5834 ;; Auto vars:     Size  Location     Type
  5835 ;;  data            1   11[COMMON] PTR unsigned char 
  5836 ;;		 -> time(7), 
  5837 ;;  j               1   12[COMMON] unsigned char 
  5838 ;; Return value:  Size  Location     Type
  5839 ;;                  1    wreg      void 
  5840 ;; Registers used:
  5841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5842 ;; Tracked objects:
  5843 ;;		On entry : 0/0
  5844 ;;		On exit  : 0/0
  5845 ;;		Unchanged: 0/0
  5846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5847 ;;      Params:         0       0       0       0       0
  5848 ;;      Locals:         2       0       0       0       0
  5849 ;;      Temps:          1       0       0       0       0
  5850 ;;      Totals:         3       0       0       0       0
  5851 ;;Total ram usage:        3 bytes
  5852 ;; Hardware stack levels used:    1
  5853 ;; Hardware stack levels required when called:    1
  5854 ;; This function calls:
  5855 ;;		i1_i2c_start
  5856 ;;		i1_i2c_stop
  5857 ;;		i1_i2c_write
  5858 ;; This function is called by:
  5859 ;;		_ints_isr
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           
  5864                           ;psect for function _ds_set
  5865  0C2E                     _ds_set:	
  5866                           
  5867                           ;incstack = 0
  5868                           ; Regs used in _ds_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5869                           ;ds_set@data stored from wreg
  5870  0C2E  00FB               	movwf	ds_set@data
  5871                           
  5872                           ;ds1307.c: 14: unsigned char j;
  5873                           ;ds1307.c: 15: for (j=0;j<7;j++){
  5874  0C2F  01FC               	clrf	ds_set@j
  5875  0C30                     L10:	
  5876  0C30  3007               	movlw	7
  5877  0C31  027C               	subwf	ds_set@j,w
  5878  0C32  1803               	btfsc	3,0
  5879  0C33  0008               	return
  5880                           
  5881                           ;ds1307.c: 16: i2c_start();
  5882  0C34  120A  158A  22C4  120A  158A  	fcall	i1_i2c_start
  5883                           
  5884                           ;ds1307.c: 17: i2c_write(0b11010000,1);
  5885  0C39  01F0               	clrf	i1i2c_write@ack
  5886  0C3A  0AF0               	incf	i1i2c_write@ack,f
  5887  0C3B  30D0               	movlw	208
  5888  0C3C  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  5889                           
  5890                           ;ds1307.c: 18: i2c_write(j,1);
  5891  0C41  01F0               	clrf	i1i2c_write@ack
  5892  0C42  0AF0               	incf	i1i2c_write@ack,f
  5893  0C43  087C               	movf	ds_set@j,w
  5894  0C44  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  5895                           
  5896                           ;ds1307.c: 19: i2c_write(*(data+j),1);
  5897  0C49  01F0               	clrf	i1i2c_write@ack
  5898  0C4A  0AF0               	incf	i1i2c_write@ack,f
  5899  0C4B  087C               	movf	ds_set@j,w
  5900  0C4C  077B               	addwf	ds_set@data,w
  5901  0C4D  00FA               	movwf	??_ds_set
  5902  0C4E  087A               	movf	??_ds_set,w
  5903  0C4F  0084               	movwf	4
  5904  0C50  1383               	bcf	3,7	;select IRP bank0
  5905  0C51  0800               	movf	0,w
  5906  0C52  120A  158A  23FB  120A  158A  	fcall	i1_i2c_write
  5907                           
  5908                           ;ds1307.c: 20: i2c_stop();
  5909  0C57  120A  158A  22E7  120A  158A  	fcall	i1_i2c_stop
  5910  0C5C  3001               	movlw	1
  5911  0C5D  00FA               	movwf	??_ds_set
  5912  0C5E  087A               	movf	??_ds_set,w
  5913  0C5F  07FC               	addwf	ds_set@j,f
  5914  0C60  2C30               	goto	L10
  5915  0C61                     __end_of_ds_set:	
  5916                           
  5917                           	psect	text29
  5918  0BFB                     __ptext29:	
  5919 ;; *************** function i1_i2c_write *****************
  5920 ;; Defined at:
  5921 ;;		line 39 in file "i2clib.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  datum           1    wreg     unsigned char 
  5924 ;;  ack             1    0[COMMON] unsigned char 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;  datum           1    9[COMMON] unsigned char 
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		wreg, status,2, status,0
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5936 ;;      Params:         1       0       0       0       0
  5937 ;;      Locals:         1       0       0       0       0
  5938 ;;      Temps:          8       0       0       0       0
  5939 ;;      Totals:        10       0       0       0       0
  5940 ;;Total ram usage:       10 bytes
  5941 ;; Hardware stack levels used:    1
  5942 ;; This function calls:
  5943 ;;		Nothing
  5944 ;; This function is called by:
  5945 ;;		_si_read_h
  5946 ;;		_si_read_t
  5947 ;;		_ds_set
  5948 ;;		_ds_get
  5949 ;;		i1_mem_write
  5950 ;;		i1_mem_read
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           
  5955                           ;psect for function i1_i2c_write
  5956  0BFB                     i1_i2c_write:	
  5957                           
  5958                           ;incstack = 0
  5959                           ; Regs used in i1_i2c_write: [wreg+status,2+status,0]
  5960                           ;i1i2c_write@datum stored from wreg
  5961  0BFB  00F9               	movwf	i1i2c_write@datum
  5962  0BFC                     i1l1583:	
  5963                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5964                           
  5965  0BFC  1683               	bsf	3,5	;RP0=1, select bank1
  5966  0BFD  1303               	bcf	3,6	;RP1=0, select bank1
  5967  0BFE  0811               	movf	17,w	;volatile
  5968  0BFF  3901               	andlw	1
  5969  0C00  00F1               	movwf	??i1_i2c_write
  5970  0C01  0C11               	rrf	17,w	;volatile
  5971  0C02  3901               	andlw	1
  5972  0C03  00F2               	movwf	??i1_i2c_write+1
  5973  0C04  0C11               	rrf	17,w	;volatile
  5974  0C05  00F3               	movwf	??i1_i2c_write+2
  5975  0C06  0CF3               	rrf	??i1_i2c_write+2,f
  5976  0C07  0C73               	rrf	??i1_i2c_write+2,w
  5977  0C08  3901               	andlw	1
  5978  0C09  00F4               	movwf	??i1_i2c_write+3
  5979  0C0A  0E11               	swapf	17,w	;volatile
  5980  0C0B  3901               	andlw	1
  5981  0C0C  00F5               	movwf	??i1_i2c_write+4
  5982  0C0D  0C11               	rrf	17,w	;volatile
  5983  0C0E  00F6               	movwf	??i1_i2c_write+5
  5984  0C0F  0C76               	rrf	??i1_i2c_write+5,w
  5985  0C10  3901               	andlw	1
  5986  0C11  00F7               	movwf	??i1_i2c_write+6
  5987  0C12  0C14               	rrf	20,w	;volatile
  5988  0C13  00F8               	movwf	??i1_i2c_write+7
  5989  0C14  0C78               	rrf	??i1_i2c_write+7,w
  5990  0C15  3901               	andlw	1
  5991  0C16  0477               	iorwf	??i1_i2c_write+6,w
  5992  0C17  0475               	iorwf	??i1_i2c_write+4,w
  5993  0C18  0474               	iorwf	??i1_i2c_write+3,w
  5994  0C19  0472               	iorwf	??i1_i2c_write+1,w
  5995  0C1A  0471               	iorwf	??i1_i2c_write,w
  5996  0C1B  1D03               	btfss	3,2
  5997  0C1C  2BFC               	goto	i1l1583
  5998                           
  5999                           ;i2clib.c: 42: SSPBUF = datum;
  6000  0C1D  0879               	movf	i1i2c_write@datum,w
  6001  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  6002  0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  6003  0C20  0093               	movwf	19	;volatile
  6004  0C21                     i1l177:	
  6005                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  6006                           
  6007  0C21  1683               	bsf	3,5	;RP0=1, select bank1
  6008  0C22  1303               	bcf	3,6	;RP1=0, select bank1
  6009  0C23  1814               	btfsc	20,0	;volatile
  6010  0C24  2C21               	goto	i1l177
  6011                           
  6012                           ;i2clib.c: 44: if(ack){
  6013  0C25  0870               	movf	i1i2c_write@ack,w
  6014  0C26  1903               	btfsc	3,2
  6015  0C27  2C2A               	goto	i1l184
  6016  0C28                     i1l181:	
  6017                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  6018                           
  6019  0C28  1B11               	btfsc	17,6	;volatile
  6020  0C29  2C28               	goto	i1l181
  6021  0C2A                     i1l184:	
  6022                           ;i2clib.c: 46: }
  6023                           ;i2clib.c: 47: }
  6024                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  6025                           
  6026  0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  6027  0C2B  198C               	btfsc	12,3	;volatile
  6028  0C2C  0008               	return
  6029  0C2D  2C2A               	goto	i1l184
  6030  0C2E                     __end_ofi1_i2c_write:	
  6031                           
  6032                           	psect	text30
  6033  0AE7                     __ptext30:	
  6034 ;; *************** function i1_i2c_stop *****************
  6035 ;; Defined at:
  6036 ;;		line 34 in file "i2clib.c"
  6037 ;; Parameters:    Size  Location     Type
  6038 ;;		None
  6039 ;; Auto vars:     Size  Location     Type
  6040 ;;		None
  6041 ;; Return value:  Size  Location     Type
  6042 ;;                  1    wreg      void 
  6043 ;; Registers used:
  6044 ;;		wreg, status,2, status,0
  6045 ;; Tracked objects:
  6046 ;;		On entry : 0/0
  6047 ;;		On exit  : 0/0
  6048 ;;		Unchanged: 0/0
  6049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6050 ;;      Params:         0       0       0       0       0
  6051 ;;      Locals:         0       0       0       0       0
  6052 ;;      Temps:          8       0       0       0       0
  6053 ;;      Totals:         8       0       0       0       0
  6054 ;;Total ram usage:        8 bytes
  6055 ;; Hardware stack levels used:    1
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_si_read_h
  6060 ;;		_si_read_t
  6061 ;;		_ds_set
  6062 ;;		_ds_get
  6063 ;;		i1_mem_write
  6064 ;;		i1_mem_read
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           
  6069                           ;psect for function i1_i2c_stop
  6070  0AE7                     i1_i2c_stop:	
  6071  0AE7                     i1l1579:	
  6072                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  6073                           
  6074                           ;incstack = 0
  6075                           ; Regs used in i1_i2c_stop: [wreg+status,2+status,0]
  6076                           
  6077  0AE7  1683               	bsf	3,5	;RP0=1, select bank1
  6078  0AE8  1303               	bcf	3,6	;RP1=0, select bank1
  6079  0AE9  0811               	movf	17,w	;volatile
  6080  0AEA  3901               	andlw	1
  6081  0AEB  00F0               	movwf	??i1_i2c_stop
  6082  0AEC  0C11               	rrf	17,w	;volatile
  6083  0AED  3901               	andlw	1
  6084  0AEE  00F1               	movwf	??i1_i2c_stop+1
  6085  0AEF  0C11               	rrf	17,w	;volatile
  6086  0AF0  00F2               	movwf	??i1_i2c_stop+2
  6087  0AF1  0CF2               	rrf	??i1_i2c_stop+2,f
  6088  0AF2  0C72               	rrf	??i1_i2c_stop+2,w
  6089  0AF3  3901               	andlw	1
  6090  0AF4  00F3               	movwf	??i1_i2c_stop+3
  6091  0AF5  0E11               	swapf	17,w	;volatile
  6092  0AF6  3901               	andlw	1
  6093  0AF7  00F4               	movwf	??i1_i2c_stop+4
  6094  0AF8  0C11               	rrf	17,w	;volatile
  6095  0AF9  00F5               	movwf	??i1_i2c_stop+5
  6096  0AFA  0C75               	rrf	??i1_i2c_stop+5,w
  6097  0AFB  3901               	andlw	1
  6098  0AFC  00F6               	movwf	??i1_i2c_stop+6
  6099  0AFD  0C14               	rrf	20,w	;volatile
  6100  0AFE  00F7               	movwf	??i1_i2c_stop+7
  6101  0AFF  0C77               	rrf	??i1_i2c_stop+7,w
  6102  0B00  3901               	andlw	1
  6103  0B01  0476               	iorwf	??i1_i2c_stop+6,w
  6104  0B02  0474               	iorwf	??i1_i2c_stop+4,w
  6105  0B03  0473               	iorwf	??i1_i2c_stop+3,w
  6106  0B04  0471               	iorwf	??i1_i2c_stop+1,w
  6107  0B05  0470               	iorwf	??i1_i2c_stop,w
  6108  0B06  1D03               	btfss	3,2
  6109  0B07  2AE7               	goto	i1l1579
  6110                           
  6111                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  6112  0B08  1511               	bsf	17,2	;volatile
  6113  0B09  0008               	return
  6114  0B0A                     __end_ofi1_i2c_stop:	
  6115                           
  6116                           	psect	text31
  6117  0AC4                     __ptext31:	
  6118 ;; *************** function i1_i2c_start *****************
  6119 ;; Defined at:
  6120 ;;		line 24 in file "i2clib.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;		None
  6123 ;; Auto vars:     Size  Location     Type
  6124 ;;		None
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  1    wreg      void 
  6127 ;; Registers used:
  6128 ;;		wreg, status,2, status,0
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6134 ;;      Params:         0       0       0       0       0
  6135 ;;      Locals:         0       0       0       0       0
  6136 ;;      Temps:          8       0       0       0       0
  6137 ;;      Totals:         8       0       0       0       0
  6138 ;;Total ram usage:        8 bytes
  6139 ;; Hardware stack levels used:    1
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		_si_read_h
  6144 ;;		_si_read_t
  6145 ;;		_ds_set
  6146 ;;		_ds_get
  6147 ;;		i1_mem_write
  6148 ;;		i1_mem_read
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           
  6153                           ;psect for function i1_i2c_start
  6154  0AC4                     i1_i2c_start:	
  6155  0AC4                     i1l1575:	
  6156                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  6157                           
  6158                           ;incstack = 0
  6159                           ; Regs used in i1_i2c_start: [wreg+status,2+status,0]
  6160                           
  6161  0AC4  1683               	bsf	3,5	;RP0=1, select bank1
  6162  0AC5  1303               	bcf	3,6	;RP1=0, select bank1
  6163  0AC6  0811               	movf	17,w	;volatile
  6164  0AC7  3901               	andlw	1
  6165  0AC8  00F0               	movwf	??i1_i2c_start
  6166  0AC9  0C11               	rrf	17,w	;volatile
  6167  0ACA  3901               	andlw	1
  6168  0ACB  00F1               	movwf	??i1_i2c_start+1
  6169  0ACC  0C11               	rrf	17,w	;volatile
  6170  0ACD  00F2               	movwf	??i1_i2c_start+2
  6171  0ACE  0CF2               	rrf	??i1_i2c_start+2,f
  6172  0ACF  0C72               	rrf	??i1_i2c_start+2,w
  6173  0AD0  3901               	andlw	1
  6174  0AD1  00F3               	movwf	??i1_i2c_start+3
  6175  0AD2  0E11               	swapf	17,w	;volatile
  6176  0AD3  3901               	andlw	1
  6177  0AD4  00F4               	movwf	??i1_i2c_start+4
  6178  0AD5  0C11               	rrf	17,w	;volatile
  6179  0AD6  00F5               	movwf	??i1_i2c_start+5
  6180  0AD7  0C75               	rrf	??i1_i2c_start+5,w
  6181  0AD8  3901               	andlw	1
  6182  0AD9  00F6               	movwf	??i1_i2c_start+6
  6183  0ADA  0C14               	rrf	20,w	;volatile
  6184  0ADB  00F7               	movwf	??i1_i2c_start+7
  6185  0ADC  0C77               	rrf	??i1_i2c_start+7,w
  6186  0ADD  3901               	andlw	1
  6187  0ADE  0476               	iorwf	??i1_i2c_start+6,w
  6188  0ADF  0474               	iorwf	??i1_i2c_start+4,w
  6189  0AE0  0473               	iorwf	??i1_i2c_start+3,w
  6190  0AE1  0471               	iorwf	??i1_i2c_start+1,w
  6191  0AE2  0470               	iorwf	??i1_i2c_start,w
  6192  0AE3  1D03               	btfss	3,2
  6193  0AE4  2AC4               	goto	i1l1575
  6194                           
  6195                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  6196  0AE5  1411               	bsf	17,0	;volatile
  6197  0AE6  0008               	return
  6198  0AE7                     __end_ofi1_i2c_start:	
  6199  007E                     btemp	set	126	;btemp
  6200  007E                     wtemp0	set	126


Data Sizes:
    Strings     94
    Constant    18
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      65
    BANK1            80     20      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf$749	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_20(CODE[17]), STR_19(CODE[17]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_18(CODE[2]), STR_17(CODE[5]), STR_16(CODE[7]), STR_15(CODE[4]), 
		 -> STR_14(CODE[3]), STR_13(CODE[2]), STR_12(CODE[3]), STR_11(CODE[5]), 
		 -> STR_10(CODE[5]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[2]), STR_3(CODE[5]), 
		 -> STR_2(CODE[5]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    ds_set@data	PTR unsigned char  size(1) Largest target is 7
		 -> time(BANK0[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ints_isr in COMMON

    _ints_isr->_si_read_h
    _ints_isr->_si_read_t
    _ints_isr->i1_mem_write
    i1_mem_init->i1_mem_write
    _si_read_t->i1_i2c_read
    _si_read_t->i1_i2c_write
    _si_read_h->i1_i2c_read
    _si_read_h->i1_i2c_write
    _save_the_date->i1_mem_write
    i1_mem_write->i1_i2c_write
    i1_mem_read->i1_i2c_read
    i1_mem_read->i1_i2c_write
    _ds_get->i1_i2c_read
    _ds_get->i1_i2c_write
    _printf->___lwmod
    _printf->_si_read_h
    _printf->_si_read_t
    ___lwmod->___lwdiv
    _ds_set->i1_i2c_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _ints_isr in BANK0

    _ints_isr->_printf
    i1_mem_init->i1_mem_read
    _save_the_date->i1_mem_read
    _printf->_si_read_h
    _printf->_si_read_t

Critical Paths under _main in BANK1

    _main->_mem_init
    _si_reset->_i2c_write
    _mem_init->_mem_read
    _mem_init->_mem_write
    _mem_write->_i2c_write
    _mem_read->_i2c_read
    _mem_read->_i2c_write

Critical Paths under _ints_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ints_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ints_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7321
                                             18 BANK1      2     2      0
                           _i2c_init
                        _init_timer2
                           _mem_init
                           _si_reset
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _si_reset                                             0     0      0    1268
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _mem_init                                             2     2      0    5833
                                             16 BANK1      2     2      0
                           _mem_read
                          _mem_write
 ---------------------------------------------------------------------------------
 (2) _mem_write                                            6     3      3    3440
                                             10 BANK1      6     3      3
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _mem_read                                             6     4      2    2370
                                             10 BANK1      6     4      2
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                           10     9      1    1268
                                              0 BANK1     10     9      1
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             8     8      0       0
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            8     8      0       0
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                            10    10      0      89
                                              0 BANK1     10    10      0
 ---------------------------------------------------------------------------------
 (1) _init_timer2                                          6     4      2     220
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ints_isr                                            32    32      0   17847
                                             20 BANK0     32    32      0
                             _ds_get
                             _ds_set
                             _printf
                      _save_the_date
                          _si_read_h
                          _si_read_t
                         i1_mem_init
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_init                                           2     2      0    3363
                                              3 BANK0      2     2      0
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) _si_read_t                                            8     6      2     798
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _si_read_h                                            8     6      2     799
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _save_the_date                                        2     2      0    4251
                                              3 BANK0      2     2      0
                             _ds_get
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_write                                          6     3      3    1924
                                             10 COMMON     4     1      3
                                              0 BANK0      2     2      0
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_read                                           6     4      2    1416
                                             10 COMMON     3     1      2
                                              0 BANK0      3     3      0
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) _ds_get                                               3     3      0     750
                                             10 COMMON     3     3      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) i1_i2c_read                                          10    10      0      89
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (6) _i2c_rstart                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (5) _printf                                              24    22      2    2599
                                              4 BANK0     16    14      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
                             _ds_get (ARG)
                            _isdigit
                              _putch
                          _si_read_h (ARG)
                          _si_read_t (ARG)
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     418
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _ds_set                                               3     3      0     758
                                             10 COMMON     3     3      0
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) i1_i2c_write                                         10     9      1     616
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (6) i1_i2c_stop                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (6) i1_i2c_start                                          8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _init_timer2
   _mem_init
     _mem_read
       _i2c_read
       _i2c_start
       _i2c_stop
       _i2c_write
     _mem_write
       _i2c_start
       _i2c_stop
       _i2c_write
   _si_reset
     _i2c_start
     _i2c_stop
     _i2c_write
   _uart_init

 _ints_isr (ROOT)
   _ds_get
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _ds_set
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _ds_get (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     _isdigit (ARG)
     _putch (ARG)
     _si_read_h (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     _si_read_t (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
   _save_the_date
     _ds_get
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     i1_mem_read
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     i1_mem_write
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
   _si_read_h
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _si_read_t
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   i1_mem_init
     i1_mem_read
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     i1_mem_write
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
   i1_mem_read
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   i1_mem_write
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     14      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     34      41       5       81.3%
BITBANK0            50      0       1       4        1.3%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      63      12        0.0%
ABS                  0      0      63       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sat Sep 09 02:15:05 2017

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      fsr 0004       ___wmul@multiplicand 0072            si_read_h@rta_h 0020  
          si_read_h@rta_l 0021                       l202 07CD                       l205 07EC  
                     l133 0E43                       l181 0C8E                       l184 0C90  
                     l177 0C87                       l199 07CB                       _PR2 0092  
            __CFG_CPD$OFF 0000                       _led 0060                       _fyh 02FC  
                     fsr0 0004            si_read_t@rta_h 0020                       indf 0000  
          si_read_t@rta_l 0021              __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000  
              i1_mem_init 0E44                i1_mem_read 0CD0                      l1535 0B2D  
                    l1543 0B50                      l1561 07A0                      l1547 0C64  
                    l1565 07A9                      l1557 0798                      l1567 07E4  
                    STR_1 074F                      STR_2 077B                      STR_3 077B  
                    STR_4 0789                      STR_5 0770                      STR_6 0764  
                    STR_7 076A                      STR_8 076A                      STR_9 075E  
                    u1300 07E1                      u2005 0B7C                      u1280 07D6  
                    u1294 07D9                      u2277 0E17                      u2287 0E2F  
                    i1l91 02B3                      i1l76 0A59                      i1l98 003F  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 0DF6  
                    _secs 0054                      _time 0058                      btemp 007E  
                    start 0012             __CFG_MCLRE$ON 0000                     ?_main 0070  
                   STR_10 0776                     STR_11 0776                     STR_12 0754  
                   STR_20 073E                     STR_13 0787                     STR_14 0784  
                   STR_15 0780                     STR_16 0757                     STR_17 077B  
           __CFG_WDTE$OFF 0000                     STR_18 0787                     STR_19 072D  
             i2c_read@ack 00A9                     _T2CON 0012               i1_mem_write 0D16  
         __end_of___lwdiv 0CD0                     i1l110 0222                     i1l102 02B2  
                   i1l121 02E6                     i1l202 0F24                     i1l106 01FC  
                   i1l205 0F41                     i1l125 0436                     i1l304 0513  
                   i1l313 0572                     i1l181 0C28                     i1l309 0537  
                   i1l422 0AAD                     i1l184 0C2A                     i1l177 0C21  
         __end_of___lwmod 0BFB                     i1l338 0658                     i1l284 046D  
                   i1l199 0F22                     i1l296 04EA                     i1l297 04CA  
                   i1l298 04CB                     _RCREG 001A                     _SPBRG 0099  
                   _TRISA 0085                     _TRISB 0086                     _TXREG 0019  
            ?_init_timer2 00A0           __end_of_dpowers 0725                     _milis 0057  
         __end_of_isdigit 0A6E               ?i1_i2c_read 0070               ?i1_i2c_stop 0070  
                   _putch 0A58            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 0015  
            __end_of_main 0E44                _i2c_rstart 0B0A          __end_of_i2c_init 07FF  
        __end_of_i2c_read 07F0          __end_of_i2c_stop 0B73                    ??_main 00B2  
             mem_init@aux 00B1               mem_read@add 00AA               mem_read@rta 00AD  
             ?i1_mem_init 0070               ?i1_mem_read 007A                    ?_putch 0070  
            i2c_read@flag 02F9                    i1l2103 01F7                    i1l2113 0213  
                  i1l2117 021B                    i1l2127 0254                    i1l2143 029F  
                  i1l1601 0F00                    i1l2233 0435                    i1l2153 02C2  
                  i1l2073 007B                    i1l1603 0F3B                    i1l2139 0276  
                  i1l2075 0124                    i1l2159 02D5                    i1l1713 0CC0  
                  i1l1705 0C9C                    i1l2169 02E7                    i1l2177 02F6  
                  i1l1707 0CAA                    i1l1731 0BDD                    i1l1539 0B0A  
                  i1l1717 0CCB                    i1l1821 0467              i2c_read@resp 00A8  
                  i1l1575 0AC4                    i1l1583 0BFC                    i1l1735 0BEB  
                  i1l1911 05CC                    i1l1729 0BCF                    i1l1905 05B6  
                  i1l1833 048F                    i1l1579 0AE7                    i1l1739 0BF6  
                  i1l1683 0AA5                    i1l1907 05BA                    i1l1915 05D6  
                  i1l1843 04CD                    i1l1827 0472                    i1l1677 0A6C  
                  i1l1925 0630                    i1l1933 063F                    i1l1917 05DD  
                  i1l1829 047D                    i1l1597 0EF9     __end_of_save_the_date 0715  
                  i1l1919 060B                    i1l1935 0645                    i1l1855 0506  
                  i1l1881 055B                    i1l1937 044A                    i1l1891 0591  
                  i1l1883 0564                    i1l1893 0595                    i1l1899 05A1  
                  u207_25 0081                    u160_25 0C9F                    _INTCON 000B  
                  u146_20 0F2D                    u162_25 0CAB                    u170_25 0BEC  
                  u147_24 0F30                    u163_25 0CB7                    u148_20 0F38  
                  u164_25 0CC1                    u156_25 0AAE                    u180_25 0530  
                  u157_25 0AB5                    u167_25 0BD2                    u183_25 0554  
                  u169_25 0BE3                    u187_25 0581                    _OSCCON 008F  
                  _SPBRGH 009A                    _SSPADD 0093                    _SSPBUF 0013  
      __size_of_i2c_start 0023        __size_of_i2c_write 0033            __CFG_PWRTE$OFF 0000  
                  ___wmul 0AA3                 ??___lwdiv 0074                 ??___lwmod 007C  
                  _ds_get 0B98          __end_of_mem_init 0FA3          __end_of_mem_read 0DA8  
                  _ds_set 0C2E       __size_ofi1_i2c_read 005A       __size_ofi1_i2c_stop 0023  
                  _printf 0443              ?i1_i2c_start 0070          __end_of_ints_isr 0443  
            ?i1_i2c_write 0070          __end_of_si_reset 0AA3                 ??_isdigit 0070  
                  saved_w 007E              i2c_write@ack 00A0   __end_of__initialization 0025  
          i1i2c_read@resp 0078            __pcstackCOMMON 0070               ?_i2c_rstart 0070  
            __pidataBANK0 07FF             __end_of_putch 0A60       __size_ofi1_mem_init 0050  
     __size_ofi1_mem_read 0046           save_the_date@ax 0024          i1i2c_write@datum 0079  
       __end_of_i2c_start 0B50         __end_of_i2c_write 0C94      __size_of_init_timer2 0025  
                 ??_putch 0070               ints_isr@add 0043               ints_isr@arg 0053  
             ints_isr@aux 004B               ints_isr@rcv 003E                __pbssBANK0 0054  
               ?_i2c_init 0070                 ?_i2c_read 0070                 ?_i2c_stop 0070  
          i1i2c_write@ack 0070        __size_of_mem_write 004E                __pmaintext 0DF6  
                 ?___wmul 0070                __pintentry 0004                   ?_ds_get 0070  
                 ?_ds_set 0070        __size_of_si_read_h 005D        __size_of_si_read_t 0059  
                 ?_printf 0024              ?i1_mem_write 007A        __size_of_uart_init 0018  
            ??i1_i2c_read 0070              ??i1_i2c_stop 0070       __size_of_i2c_rstart 0023  
              __stringtab 0715                ??_i2c_init 00A0                ??_i2c_read 00A0  
               ?_mem_init 0070                 ?_mem_read 00AA                ??_i2c_stop 00A0  
               ?_ints_isr 0070                 ?_si_reset 0070           __size_of___wmul 0021  
                 ___lwdiv 0C94                   ___lwmod 0BC9           __size_of_ds_get 0031  
         __size_of_ds_set 0033              mem_write@add 00AA        __end_ofi1_i2c_read 0F47  
      __end_ofi1_i2c_stop 0B0A                   __ptext1 0A6E                   __ptext2 0A86  
                 __ptext3 0F47                   __ptext4 0DA8                   __ptext5 0D5E  
                 __ptext6 0C61                   __ptext7 0B50                   __ptext8 0B2D  
                 __ptext9 078B           __size_of_printf 0216         __end_of_hexpowers 072D  
                 _dpowers 071B         __end_of_mem_write 0DF6                   _isdigit 0A60  
    __size_ofi1_i2c_start 0023      __size_ofi1_i2c_write 0033                   ds_set@j 007C  
            ??i1_mem_init 0023              ??i1_mem_read 007C      end_of_initialization 0025  
       __end_of_si_read_h 1000         __end_of_si_read_t 0EED                ??_mem_init 00B0  
              ??_mem_read 00AC                ??_ints_isr 0034         __end_of_uart_init 0A86  
              ??_si_reset 00AA                 _RCSTAbits 0018                   printf@c 0033  
                 printf@f 0032                _printf$749 002A        __end_ofi1_mem_init 0E94  
      __end_ofi1_mem_read 0D16                 _PORTBbits 0006            i1mem_write@add 007A  
              ds_get@data 007B                 _TRISBbits 0086                 _TRISCbits 0087  
              ds_get@resp 007C               printf@width 002F                 _TXSTAbits 0098  
              ds_set@data 007B              ??_i2c_rstart 0070            __end_of___wmul 0AC4  
             _BAUDCTLbits 0187            __end_of_ds_get 0BC9            __end_of_ds_set 0C61  
  __size_of_save_the_date 00BC             __pbitbssBANK0 02F8            __end_of_printf 0659  
     start_initialization 0015      __size_ofi1_mem_write 0048                 _i2c_start 0B2D  
               _i2c_write 0C61        __end_of_i2c_rstart 0B2D  __CFG_FOSC$INTRC_NOCLKOUT 0000  
       __size_of_i2c_init 000F         __size_of_i2c_read 0065         __size_of_i2c_stop 0023  
                ??___wmul 0074                  ??_ds_get 007A                  ??_ds_set 007A  
             __pdataBANK0 0060                  ??_printf 0026              ints_isr@aux2 0051  
            ints_isr@ferr 02FB              ints_isr@oerr 02FA             i1i2c_read@ack 0079  
           ??_init_timer2 00A2                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00A0                ?_i2c_start 0070                ?_i2c_write 00A0  
           _save_the_date 0659                ints_isr@dt 003C                ints_isr@up 0047  
          mem_write@add_h 00AE            mem_write@add_l 00AF         __size_of_mem_init 005C  
       __size_of_mem_read 004A          ___lwdiv@dividend 0072         __size_of_ints_isr 041A  
       __size_of_si_reset 001D                  ?___lwdiv 0070                  ?___lwmod 0078  
         init_timer2@post 00A0                 _condition 0056                 __pstrings 0715  
           mem_read@add_h 00AE             mem_read@add_l 00AF                  ?_isdigit 0070  
               _hexpowers 0725          ___lwdiv@quotient 0075                 _mem_write 0DA8  
           i1mem_init@aux 0024             i1mem_read@add 007A             i1mem_read@rta 0020  
          __size_of_putch 0008       __end_of_init_timer2 0B98            ?_save_the_date 0070  
       interrupt_function 0004            ___wmul@product 0074                  _PIE1bits 008C  
               _si_read_h 0FA3                 _si_read_t 0E94                  _PIR1bits 000C  
               _uart_init 0A6E             ??i1_i2c_start 0070             ??i1_i2c_write 0071  
             __stringbase 071A              si_read_h@rta 0022         ___wmul@multiplier 0070  
            si_read_t@rta 0022                printf@flag 0031                printf@prec 002C  
             ??_i2c_start 00A0               ??_i2c_write 00A1                ?_mem_write 00AA  
                _i2c_init 07F0                  _i2c_read 078B                  _i2c_stop 0B50  
              ?_si_read_h 007A                ?_si_read_t 007A                ?_uart_init 0070  
        __size_of___lwdiv 003C          __size_of___lwmod 0032        __end_of__stringtab 071B  
             _isdigit$935 0070                _ANSELHbits 0189                 ints_isr@k 0046  
               ints_isr@n 0049                 ints_isr@z 0045             mem_write@data 00AC  
             _init_timer2 0B73          __size_of_isdigit 000E           ___lwdiv@divisor 0070  
         i1mem_read@add_h 0021           i1mem_read@add_l 0022       __end_ofi1_i2c_start 0AE7  
         ___lwdiv@counter 0077       __end_ofi1_i2c_write 0C2E                  __ptext10 0B73  
                __ptext11 07F0                  __ptext20 0EED                  __ptext12 0029  
                __ptext21 0B0A                  __ptext13 0E44                  __ptext30 0AE7  
                __ptext22 0443                  __ptext14 0E94                  __ptext31 0AC4  
                __ptext23 0A58                  __ptext15 0FA3                  __ptext24 0A60  
                __ptext16 0659                  __ptext25 0AA3                  __ptext17 0D16  
                __ptext26 0BC9                  __ptext18 0CD0                  __ptext27 0C94  
                __ptext19 0B98                  __ptext28 0C2E                  __ptext29 0BFB  
       __CFG_BOR4V$BOR21V 0000            init_timer2@eoc 00A1            init_timer2@pre 00A4  
          init_timer2@sfr 00A5           ??_save_the_date 0023                  _mem_init 0F47  
                _mem_read 0D5E             __size_of_main 004E                  _ints_isr 0029  
                _si_reset 0A86          i2c_read@not_flag 02F8                 printf@idx 0029  
               printf@val 002D             ??i1_mem_write 007D                 putch@data 0070  
              _INTCONbits 000B                  isdigit@c 0071               ??_mem_write 00AD  
                intlevel1 0000          ___lwmod@dividend 007A               ??_si_read_h 007C  
             ??_si_read_t 007C                 stringcode 0715               ??_uart_init 00A0  
                printf@ap 002B               i1_i2c_start 0AC4          i1mem_write@add_h 0020  
        i1mem_write@add_l 0021               i1_i2c_write 0BFB           ___lwmod@divisor 0078  
         ___lwmod@counter 007D          ints_isr@temp_add 004D                  stringdir 0715  
                stringtab 0715          ints_isr@temp_val 0041               _SSPCON2bits 0091  
     __end_ofi1_mem_write 0D5E                i1_i2c_read 0EED           ints_isr@hum_add 004F  
              i1_i2c_stop 0AE7           ints_isr@hum_val 003F           i1mem_write@data 007C  
              _SSPCONbits 0014            i2c_write@datum 00A9  
