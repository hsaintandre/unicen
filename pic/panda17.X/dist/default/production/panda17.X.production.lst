

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Sep 06 17:40:43 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 1.43
    48                           ; Generated 25/07/2017 GMT
    49                           ; 
    50                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F886 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0089                     	;# 
   120  008C                     	;# 
   121  008D                     	;# 
   122  008E                     	;# 
   123  008F                     	;# 
   124  0090                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0095                     	;# 
   132  0096                     	;# 
   133  0097                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009A                     	;# 
   137  009B                     	;# 
   138  009C                     	;# 
   139  009D                     	;# 
   140  009E                     	;# 
   141  009F                     	;# 
   142  0105                     	;# 
   143  0107                     	;# 
   144  0108                     	;# 
   145  0109                     	;# 
   146  010C                     	;# 
   147  010C                     	;# 
   148  010D                     	;# 
   149  010E                     	;# 
   150  010F                     	;# 
   151  0185                     	;# 
   152  0187                     	;# 
   153  0188                     	;# 
   154  0189                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  0000                     	;# 
   158  0001                     	;# 
   159  0002                     	;# 
   160  0003                     	;# 
   161  0004                     	;# 
   162  0005                     	;# 
   163  0006                     	;# 
   164  0007                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0089                     	;# 
   196  008C                     	;# 
   197  008D                     	;# 
   198  008E                     	;# 
   199  008F                     	;# 
   200  0090                     	;# 
   201  0091                     	;# 
   202  0092                     	;# 
   203  0093                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0094                     	;# 
   207  0095                     	;# 
   208  0096                     	;# 
   209  0097                     	;# 
   210  0098                     	;# 
   211  0099                     	;# 
   212  009A                     	;# 
   213  009B                     	;# 
   214  009C                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  0105                     	;# 
   219  0107                     	;# 
   220  0108                     	;# 
   221  0109                     	;# 
   222  010C                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  0185                     	;# 
   228  0187                     	;# 
   229  0188                     	;# 
   230  0189                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309                           
   310                           	psect	idataBANK0
   311  07FA                     __pidataBANK0:	
   312                           
   313                           ;initializer for _led
   314  07FA  3405               	retlw	5
   315                           
   316                           	psect	strings
   317  0600                     __pstrings:	
   318  0600                     stringtab:	
   319  0600                     __stringtab:	
   320  0600                     stringcode:	
   321                           ;	String table - string pointers are 1 byte each
   322                           
   323  0600                     stringdir:	
   324  0600  3006               	movlw	high stringdir
   325  0601  008A               	movwf	10
   326  0602  0804               	movf	4,w
   327  0603  0A84               	incf	4,f
   328  0604  0782               	addwf	2,f
   329  0605                     __stringbase:	
   330  0605  3400               	retlw	0
   331  0606                     __end_of__stringtab:	
   332  0606                     _dpowers:	
   333  0606  3401               	retlw	1
   334  0607  3400               	retlw	0
   335  0608  340A               	retlw	10
   336  0609  3400               	retlw	0
   337  060A  3464               	retlw	100
   338  060B  3400               	retlw	0
   339  060C  34E8               	retlw	232
   340  060D  3403               	retlw	3
   341  060E  3410               	retlw	16
   342  060F  3427               	retlw	39
   343  0610                     __end_of_dpowers:	
   344  0610                     _hexpowers:	
   345  0610  3401               	retlw	1
   346  0611  3400               	retlw	0
   347  0612  3410               	retlw	16
   348  0613  3400               	retlw	0
   349  0614  3400               	retlw	0
   350  0615  3401               	retlw	1
   351  0616  3400               	retlw	0
   352  0617  3410               	retlw	16
   353  0618                     __end_of_hexpowers:	
   354  0013                     _SSPBUF	set	19
   355  0014                     _SSPCONbits	set	20
   356  000B                     _INTCON	set	11
   357  0012                     _T2CON	set	18
   358  0006                     _PORTBbits	set	6
   359  001A                     _RCREG	set	26
   360  000B                     _INTCONbits	set	11
   361  0019                     _TXREG	set	25
   362  000C                     _PIR1bits	set	12
   363  0018                     _RCSTAbits	set	24
   364  0091                     _SSPCON2bits	set	145
   365  0087                     _TRISCbits	set	135
   366  0094                     _SSPSTATbits	set	148
   367  0093                     _SSPADD	set	147
   368  0086                     _TRISBbits	set	134
   369  0086                     _TRISB	set	134
   370  0085                     _TRISA	set	133
   371  008F                     _OSCCON	set	143
   372  0092                     _PR2	set	146
   373  0099                     _SPBRG	set	153
   374  009A                     _SPBRGH	set	154
   375  0098                     _TXSTAbits	set	152
   376  008C                     _PIE1bits	set	140
   377  0189                     _ANSELHbits	set	393
   378  0187                     _BAUDCTLbits	set	391
   379  0618                     STR_10:	
   380  0618  3430               	retlw	48	;'0'
   381  0619  3431               	retlw	49	;'1'
   382  061A  3432               	retlw	50	;'2'
   383  061B  3433               	retlw	51	;'3'
   384  061C  3434               	retlw	52	;'4'
   385  061D  3435               	retlw	53	;'5'
   386  061E  3436               	retlw	54	;'6'
   387  061F  3437               	retlw	55	;'7'
   388  0620  3438               	retlw	56	;'8'
   389  0621  3439               	retlw	57	;'9'
   390  0622  3441               	retlw	65	;'A'
   391  0623  3442               	retlw	66	;'B'
   392  0624  3443               	retlw	67	;'C'
   393  0625  3444               	retlw	68	;'D'
   394  0626  3445               	retlw	69	;'E'
   395  0627  3446               	retlw	70	;'F'
   396  0628  3400               	retlw	0
   397  0629                     STR_11:	
   398  0629  3430               	retlw	48	;'0'
   399  062A  3431               	retlw	49	;'1'
   400  062B  3432               	retlw	50	;'2'
   401  062C  3433               	retlw	51	;'3'
   402  062D  3434               	retlw	52	;'4'
   403  062E  3435               	retlw	53	;'5'
   404  062F  3436               	retlw	54	;'6'
   405  0630  3437               	retlw	55	;'7'
   406  0631  3438               	retlw	56	;'8'
   407  0632  3439               	retlw	57	;'9'
   408  0633  3461               	retlw	97	;'a'
   409  0634  3462               	retlw	98	;'b'
   410  0635  3463               	retlw	99	;'c'
   411  0636  3464               	retlw	100	;'d'
   412  0637  3465               	retlw	101	;'e'
   413  0638  3466               	retlw	102	;'f'
   414  0639  3400               	retlw	0
   415  063A                     STR_1:	
   416  063A  3449               	retlw	73	;'I'
   417  063B  3425               	retlw	37	;'%'
   418  063C  3430               	retlw	48	;'0'
   419  063D  3435               	retlw	53	;'5'
   420  063E  3464               	retlw	100	;'d'
   421  063F  340D               	retlw	13
   422  0640  340A               	retlw	10
   423  0641  3400               	retlw	0
   424  0642                     STR_3:	
   425  0642  3425               	retlw	37	;'%'
   426  0643  3430               	retlw	48	;'0'
   427  0644  3434               	retlw	52	;'4'
   428  0645  3478               	retlw	120	;'x'
   429  0646  340D               	retlw	13
   430  0647  340A               	retlw	10
   431  0648  3400               	retlw	0
   432  0649                     STR_7:	
   433  0649  3449               	retlw	73	;'I'
   434  064A  3425               	retlw	37	;'%'
   435  064B  3430               	retlw	48	;'0'
   436  064C  3434               	retlw	52	;'4'
   437  064D  3478               	retlw	120	;'x'
   438  064E  343B               	retlw	59	;';'
   439  064F  3400               	retlw	0
   440  0650                     STR_8:	
   441  0650  3425               	retlw	37	;'%'
   442  0651  3430               	retlw	48	;'0'
   443  0652  3434               	retlw	52	;'4'
   444  0653  3478               	retlw	120	;'x'
   445  0654  3400               	retlw	0
   446  0655                     STR_6:	
   447  0655  3425               	retlw	37	;'%'
   448  0656  3458               	retlw	88	;'X'
   449  0657  3420               	retlw	32	;' '
   450  0658  3400               	retlw	0
   451  0659                     STR_5:	
   452  0659  344F               	retlw	79	;'O'
   453  065A  344B               	retlw	75	;'K'
   454  065B  3400               	retlw	0
   455  065C                     STR_4:	
   456  065C  3458               	retlw	88	;'X'
   457  065D  3400               	retlw	0
   458  064A                     
   459                           ; #config settings
   460  0000                     
   461                           	psect	cinit
   462  0015                     start_initialization:	
   463  0015                     __initialization:	
   464                           
   465                           ; Initialize objects allocated to BANK0
   466  0015  120A  118A  27FA   	fcall	__pidataBANK0	;fetch initializer
   467  0018  00DB               	movwf	__pdataBANK0& (0+127)
   468                           
   469                           ; Clear objects allocated to BANK0
   470  0019  01D0               	clrf	__pbssBANK0& (0+127)
   471  001A  01D1               	clrf	(__pbssBANK0+1)& (0+127)
   472  001B  01D2               	clrf	(__pbssBANK0+2)& (0+127)
   473  001C  01D3               	clrf	(__pbssBANK0+3)& (0+127)
   474  001D  01D4               	clrf	(__pbssBANK0+4)& (0+127)
   475  001E  01D5               	clrf	(__pbssBANK0+5)& (0+127)
   476  001F  01D6               	clrf	(__pbssBANK0+6)& (0+127)
   477  0020  01D7               	clrf	(__pbssBANK0+7)& (0+127)
   478  0021  01D8               	clrf	(__pbssBANK0+8)& (0+127)
   479  0022  01D9               	clrf	(__pbssBANK0+9)& (0+127)
   480                           
   481                           ; Clear objects allocated to BITBANK0
   482  0023  01DA               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   483  0024                     end_of_initialization:	
   484                           ;End of C runtime variable initialization code
   485                           
   486  0024                     __end_of__initialization:	
   487  0024  0183               	clrf	3
   488  0025  120A  158A  2F67   	ljmp	_main	;jump to C main() function
   489                           
   490                           	psect	bitbssBANK0
   491  02D0                     __pbitbssBANK0:	
   492  02D0                     i2c_read@not_flag:	
   493  02D0                     	ds	1
   494  02D1                     i2c_read@flag:	
   495  02D1                     	ds	1
   496  02D2                     ints_isr@oerr:	
   497  02D2                     	ds	1
   498  02D3                     ints_isr@ferr:	
   499  02D3                     	ds	1
   500                           
   501                           	psect	bssBANK0
   502  0050                     __pbssBANK0:	
   503  0050                     _secs:	
   504  0050                     	ds	2
   505  0052                     _milis:	
   506  0052                     	ds	1
   507  0053                     _time:	
   508  0053                     	ds	7
   509                           
   510                           	psect	dataBANK0
   511  005B                     __pdataBANK0:	
   512  005B                     _led:	
   513  005B                     	ds	1
   514                           
   515                           	psect	cstackBANK1
   516  00A0                     __pcstackBANK1:	
   517  00A0                     ??_i2c_init:	
   518  00A0                     ??_uart_init:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  00A0                     ?_init_timer2:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  00A0                     ??_i2c_start:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  00A0                     ??_i2c_stop:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  00A0                     ?_i2c_write:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  00A0                     ??_i2c_read:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  00A0                     init_timer2@post:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  00A0                     i2c_write@ack:	
   540                           ; 1 bytes @ 0x0
   541                           
   542                           
   543                           ; 1 bytes @ 0x0
   544  00A0                     	ds	1
   545  00A1                     ??_i2c_write:	
   546  00A1                     init_timer2@eoc:	
   547                           ; 1 bytes @ 0x1
   548                           
   549                           
   550                           ; 1 bytes @ 0x1
   551  00A1                     	ds	1
   552  00A2                     ??_init_timer2:	
   553                           
   554                           ; 1 bytes @ 0x2
   555  00A2                     	ds	2
   556  00A4                     init_timer2@pre:	
   557                           
   558                           ; 1 bytes @ 0x4
   559  00A4                     	ds	1
   560  00A5                     init_timer2@sfr:	
   561                           
   562                           ; 1 bytes @ 0x5
   563  00A5                     	ds	3
   564  00A8                     i2c_read@resp:	
   565                           
   566                           ; 1 bytes @ 0x8
   567  00A8                     	ds	1
   568  00A9                     i2c_write@datum:	
   569  00A9                     i2c_read@ack:	
   570                           ; 1 bytes @ 0x9
   571                           
   572                           
   573                           ; 1 bytes @ 0x9
   574  00A9                     	ds	1
   575  00AA                     ?_mem_read:	
   576  00AA                     ?_mem_write:	
   577                           ; 1 bytes @ 0xA
   578                           
   579  00AA                     ??_si_reset:	
   580                           ; 1 bytes @ 0xA
   581                           
   582  00AA                     mem_write@add:	
   583                           ; 1 bytes @ 0xA
   584                           
   585  00AA                     mem_read@add:	
   586                           ; 2 bytes @ 0xA
   587                           
   588                           
   589                           ; 2 bytes @ 0xA
   590  00AA                     	ds	2
   591  00AC                     ??_mem_read:	
   592  00AC                     mem_write@data:	
   593                           ; 1 bytes @ 0xC
   594                           
   595                           
   596                           ; 1 bytes @ 0xC
   597  00AC                     	ds	1
   598  00AD                     ??_mem_write:	
   599  00AD                     mem_read@rta:	
   600                           ; 1 bytes @ 0xD
   601                           
   602                           
   603                           ; 1 bytes @ 0xD
   604  00AD                     	ds	1
   605  00AE                     mem_write@add_h:	
   606  00AE                     mem_read@add_h:	
   607                           ; 1 bytes @ 0xE
   608                           
   609                           
   610                           ; 1 bytes @ 0xE
   611  00AE                     	ds	1
   612  00AF                     mem_write@add_l:	
   613  00AF                     mem_read@add_l:	
   614                           ; 1 bytes @ 0xF
   615                           
   616                           
   617                           ; 1 bytes @ 0xF
   618  00AF                     	ds	1
   619  00B0                     ??_mem_init:	
   620                           
   621                           ; 1 bytes @ 0x10
   622  00B0                     	ds	1
   623  00B1                     mem_init@aux:	
   624                           
   625                           ; 1 bytes @ 0x11
   626  00B1                     	ds	1
   627  00B2                     ??_main:	
   628                           
   629                           ; 1 bytes @ 0x12
   630  00B2                     	ds	2
   631                           
   632                           	psect	cstackCOMMON
   633  0070                     __pcstackCOMMON:	
   634  0070                     ?_isdigit:	
   635  0070                     ?_ds_set:	
   636                           ; 1 bit 
   637                           
   638  0070                     ?_ds_get:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_i2c_init:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_si_reset:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ??_isdigit:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_uart_init:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ?_putch:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ??_putch:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_mem_init:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_ints_isr:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_i2c_start:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ?_i2c_rstart:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ??_i2c_rstart:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_i2c_stop:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_i2c_read:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?i1_mem_init:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?i1_i2c_start:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ??i1_i2c_start:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?i1_i2c_stop:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ??i1_i2c_stop:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?i1_i2c_write:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?i1_i2c_read:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ??i1_i2c_read:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_main:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?___wmul:	
   708                           ; 2 bytes @ 0x0
   709                           
   710  0070                     ?___lwdiv:	
   711                           ; 2 bytes @ 0x0
   712                           
   713  0070                     putch@data:	
   714                           ; 2 bytes @ 0x0
   715                           
   716  0070                     _isdigit$919:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     i1i2c_write@ack:	
   720                           ; 1 bytes @ 0x0
   721                           
   722  0070                     ___wmul@multiplier:	
   723                           ; 1 bytes @ 0x0
   724                           
   725  0070                     ___lwdiv@divisor:	
   726                           ; 2 bytes @ 0x0
   727                           
   728                           
   729                           ; 2 bytes @ 0x0
   730  0070                     	ds	1
   731  0071                     ??i1_i2c_write:	
   732  0071                     isdigit@c:	
   733                           ; 1 bytes @ 0x1
   734                           
   735                           
   736                           ; 1 bytes @ 0x1
   737  0071                     	ds	1
   738  0072                     ___wmul@multiplicand:	
   739  0072                     ___lwdiv@dividend:	
   740                           ; 2 bytes @ 0x2
   741                           
   742                           
   743                           ; 2 bytes @ 0x2
   744  0072                     	ds	2
   745  0074                     ??___wmul:	
   746  0074                     ??___lwdiv:	
   747                           ; 1 bytes @ 0x4
   748                           
   749  0074                     ___wmul@product:	
   750                           ; 1 bytes @ 0x4
   751                           
   752                           
   753                           ; 2 bytes @ 0x4
   754  0074                     	ds	1
   755  0075                     ___lwdiv@quotient:	
   756                           
   757                           ; 2 bytes @ 0x5
   758  0075                     	ds	2
   759  0077                     ___lwdiv@counter:	
   760                           
   761                           ; 1 bytes @ 0x7
   762  0077                     	ds	1
   763  0078                     ?___lwmod:	
   764  0078                     i1i2c_read@resp:	
   765                           ; 2 bytes @ 0x8
   766                           
   767  0078                     ___lwmod@divisor:	
   768                           ; 1 bytes @ 0x8
   769                           
   770                           
   771                           ; 2 bytes @ 0x8
   772  0078                     	ds	1
   773  0079                     i1i2c_write@datum:	
   774  0079                     i1i2c_read@ack:	
   775                           ; 1 bytes @ 0x9
   776                           
   777                           
   778                           ; 1 bytes @ 0x9
   779  0079                     	ds	1
   780  007A                     ??_ds_set:	
   781  007A                     ??_ds_get:	
   782                           ; 1 bytes @ 0xA
   783                           
   784  007A                     ?i1_mem_write:	
   785                           ; 1 bytes @ 0xA
   786                           
   787  007A                     ?i1_mem_read:	
   788                           ; 1 bytes @ 0xA
   789                           
   790  007A                     ?_si_read_h:	
   791                           ; 1 bytes @ 0xA
   792                           
   793  007A                     ?_si_read_t:	
   794                           ; 2 bytes @ 0xA
   795                           
   796  007A                     ___lwmod@dividend:	
   797                           ; 2 bytes @ 0xA
   798                           
   799  007A                     i1mem_write@add:	
   800                           ; 2 bytes @ 0xA
   801                           
   802  007A                     i1mem_read@add:	
   803                           ; 2 bytes @ 0xA
   804                           
   805                           
   806                           ; 2 bytes @ 0xA
   807  007A                     	ds	1
   808  007B                     ds_set@data:	
   809  007B                     ds_get@data:	
   810                           ; 1 bytes @ 0xB
   811                           
   812                           
   813                           ; 1 bytes @ 0xB
   814  007B                     	ds	1
   815  007C                     ??_si_read_h:	
   816  007C                     ??_si_read_t:	
   817                           ; 1 bytes @ 0xC
   818                           
   819  007C                     ??___lwmod:	
   820                           ; 1 bytes @ 0xC
   821                           
   822  007C                     ??i1_mem_read:	
   823                           ; 1 bytes @ 0xC
   824                           
   825  007C                     ds_set@j:	
   826                           ; 1 bytes @ 0xC
   827                           
   828  007C                     ds_get@resp:	
   829                           ; 1 bytes @ 0xC
   830                           
   831  007C                     i1mem_write@data:	
   832                           ; 1 bytes @ 0xC
   833                           
   834                           
   835                           ; 1 bytes @ 0xC
   836  007C                     	ds	1
   837  007D                     ??i1_mem_write:	
   838  007D                     ___lwmod@counter:	
   839                           ; 1 bytes @ 0xD
   840                           
   841                           
   842                           ; 1 bytes @ 0xD
   843  007D                     	ds	1
   844                           
   845                           	psect	cstackBANK0
   846  0020                     __pcstackBANK0:	
   847  0020                     si_read_h@rta_h:	
   848  0020                     si_read_t@rta_h:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0020                     i1mem_write@add_h:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0020                     i1mem_read@rta:	
   855                           ; 1 bytes @ 0x0
   856                           
   857                           
   858                           ; 1 bytes @ 0x0
   859  0020                     	ds	1
   860  0021                     si_read_h@rta_l:	
   861  0021                     si_read_t@rta_l:	
   862                           ; 1 bytes @ 0x1
   863                           
   864  0021                     i1mem_write@add_l:	
   865                           ; 1 bytes @ 0x1
   866                           
   867  0021                     i1mem_read@add_h:	
   868                           ; 1 bytes @ 0x1
   869                           
   870                           
   871                           ; 1 bytes @ 0x1
   872  0021                     	ds	1
   873  0022                     i1mem_read@add_l:	
   874  0022                     si_read_h@rta:	
   875                           ; 1 bytes @ 0x2
   876                           
   877  0022                     si_read_t@rta:	
   878                           ; 2 bytes @ 0x2
   879                           
   880                           
   881                           ; 2 bytes @ 0x2
   882  0022                     	ds	1
   883  0023                     ??i1_mem_init:	
   884                           
   885                           ; 1 bytes @ 0x3
   886  0023                     	ds	1
   887  0024                     ?_printf:	
   888  0024                     i1mem_init@aux:	
   889                           ; 2 bytes @ 0x4
   890                           
   891                           
   892                           ; 1 bytes @ 0x4
   893  0024                     	ds	2
   894  0026                     ??_printf:	
   895                           
   896                           ; 1 bytes @ 0x6
   897  0026                     	ds	3
   898  0029                     printf@idx:	
   899                           
   900                           ; 1 bytes @ 0x9
   901  0029                     	ds	1
   902  002A                     _printf$733:	
   903                           
   904                           ; 1 bytes @ 0xA
   905  002A                     	ds	1
   906  002B                     printf@ap:	
   907                           
   908                           ; 1 bytes @ 0xB
   909  002B                     	ds	1
   910  002C                     printf@prec:	
   911                           
   912                           ; 1 bytes @ 0xC
   913  002C                     	ds	1
   914  002D                     printf@val:	
   915                           
   916                           ; 2 bytes @ 0xD
   917  002D                     	ds	2
   918  002F                     printf@width:	
   919                           
   920                           ; 2 bytes @ 0xF
   921  002F                     	ds	2
   922  0031                     printf@flag:	
   923                           
   924                           ; 1 bytes @ 0x11
   925  0031                     	ds	1
   926  0032                     printf@f:	
   927                           
   928                           ; 1 bytes @ 0x12
   929  0032                     	ds	1
   930  0033                     printf@c:	
   931                           
   932                           ; 1 bytes @ 0x13
   933  0033                     	ds	1
   934  0034                     ??_ints_isr:	
   935                           
   936                           ; 1 bytes @ 0x14
   937  0034                     	ds	8
   938  003C                     ints_isr@rcv:	
   939                           
   940                           ; 1 bytes @ 0x1C
   941  003C                     	ds	1
   942  003D                     ints_isr@hum_val:	
   943                           
   944                           ; 2 bytes @ 0x1D
   945  003D                     	ds	2
   946  003F                     ints_isr@temp_val:	
   947                           
   948                           ; 2 bytes @ 0x1F
   949  003F                     	ds	2
   950  0041                     ints_isr@add:	
   951                           
   952                           ; 2 bytes @ 0x21
   953  0041                     	ds	2
   954  0043                     ints_isr@z:	
   955                           
   956                           ; 1 bytes @ 0x23
   957  0043                     	ds	1
   958  0044                     ints_isr@k:	
   959                           
   960                           ; 1 bytes @ 0x24
   961  0044                     	ds	1
   962  0045                     ints_isr@up:	
   963                           
   964                           ; 2 bytes @ 0x25
   965  0045                     	ds	2
   966  0047                     ints_isr@n:	
   967                           
   968                           ; 2 bytes @ 0x27
   969  0047                     	ds	2
   970  0049                     ints_isr@aux:	
   971                           
   972                           ; 2 bytes @ 0x29
   973  0049                     	ds	2
   974  004B                     ints_isr@temp_add:	
   975                           
   976                           ; 2 bytes @ 0x2B
   977  004B                     	ds	2
   978  004D                     ints_isr@hum_add:	
   979                           
   980                           ; 2 bytes @ 0x2D
   981  004D                     	ds	2
   982  004F                     ints_isr@arg:	
   983                           
   984                           ; 1 bytes @ 0x2F
   985  004F                     	ds	1
   986                           
   987                           	psect	maintext
   988  0F67                     __pmaintext:	
   989 ;;
   990 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   991 ;;
   992 ;; *************** function _main *****************
   993 ;; Defined at:
   994 ;;		line 221 in file "panda17.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  2  122[None  ] int 
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : B00/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0
  1010 ;;      Temps:          0       0       2       0       0
  1011 ;;      Totals:         0       0       2       0       0
  1012 ;;Total ram usage:        2 bytes
  1013 ;; Hardware stack levels required when called:    7
  1014 ;; This function calls:
  1015 ;;		_i2c_init
  1016 ;;		_init_timer2
  1017 ;;		_mem_init
  1018 ;;		_si_reset
  1019 ;;		_uart_init
  1020 ;; This function is called by:
  1021 ;;		Startup code after reset
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           
  1026                           ;psect for function _main
  1027  0F67                     _main:	
  1028                           
  1029                           ;panda17.c: 222: OSCCON = 0b01010001;
  1030                           
  1031                           ;incstack = 0
  1032                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1033  0F67  3051               	movlw	81
  1034  0F68  1683               	bsf	3,5	;RP0=1, select bank1
  1035  0F69  1303               	bcf	3,6	;RP1=0, select bank1
  1036  0F6A  008F               	movwf	15	;volatile
  1037                           
  1038                           ;panda17.c: 223: INTCON = 0xC0;
  1039  0F6B  30C0               	movlw	192
  1040  0F6C  008B               	movwf	11	;volatile
  1041                           
  1042                           ;panda17.c: 225: TRISA = 0x00;
  1043  0F6D  0185               	clrf	5	;volatile
  1044                           
  1045                           ;panda17.c: 226: TRISB = 0x00;
  1046  0F6E  0186               	clrf	6	;volatile
  1047                           
  1048                           ;panda17.c: 229: ANSELHbits.ANS8 = 0;
  1049  0F6F  1683               	bsf	3,5	;RP0=1, select bank3
  1050  0F70  1703               	bsf	3,6	;RP1=1, select bank3
  1051  0F71  1009               	bcf	9,0	;volatile
  1052                           
  1053                           ;panda17.c: 230: TRISBbits.TRISB2 = 1;
  1054  0F72  1683               	bsf	3,5	;RP0=1, select bank1
  1055  0F73  1303               	bcf	3,6	;RP1=0, select bank1
  1056  0F74  1506               	bsf	6,2	;volatile
  1057                           
  1058                           ;panda17.c: 231: PORTBbits.RB4 = 0;
  1059  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  1060  0F76  1303               	bcf	3,6	;RP1=0, select bank0
  1061  0F77  1206               	bcf	6,4	;volatile
  1062                           
  1063                           ;panda17.c: 232: uart_init();
  1064  0F78  120A  158A  2448  120A  158A  	fcall	_uart_init
  1065                           
  1066                           ;panda17.c: 233: i2c_init();
  1067  0F7D  120A  158A  2439  120A  158A  	fcall	_i2c_init
  1068                           
  1069                           ;panda17.c: 234: _delay((unsigned long)((10)*(2000000/4000.0)));
  1070  0F82  3007               	movlw	7
  1071  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  1072  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  1073  0F85  00B3               	movwf	(??_main^(0+128)+1)
  1074  0F86  307C               	movlw	124
  1075  0F87  00B2               	movwf	??_main^(0+128)
  1076  0F88                     u2217:	
  1077  0F88  0BB2               	decfsz	??_main^(0+128),f
  1078  0F89  2F88               	goto	u2217
  1079  0F8A  0BB3               	decfsz	(??_main^(0+128)+1),f
  1080  0F8B  2F88               	goto	u2217
  1081  0F8C  0000               	nop
  1082                           
  1083                           ;panda17.c: 235: mem_init();
  1084  0F8D  120A  118A  276E  120A  158A  	fcall	_mem_init
  1085                           
  1086                           ;panda17.c: 236: si_reset();
  1087  0F92  120A  158A  2460  120A  158A  	fcall	_si_reset
  1088                           
  1089                           ;panda17.c: 240: _delay((unsigned long)((200)*(2000000/4000.0)));
  1090  0F97  3082               	movlw	130
  1091  0F98  1683               	bsf	3,5	;RP0=1, select bank1
  1092  0F99  1303               	bcf	3,6	;RP1=0, select bank1
  1093  0F9A  00B3               	movwf	(??_main^(0+128)+1)
  1094  0F9B  30DD               	movlw	221
  1095  0F9C  00B2               	movwf	??_main^(0+128)
  1096  0F9D                     u2227:	
  1097  0F9D  0BB2               	decfsz	??_main^(0+128),f
  1098  0F9E  2F9D               	goto	u2227
  1099  0F9F  0BB3               	decfsz	(??_main^(0+128)+1),f
  1100  0FA0  2F9D               	goto	u2227
  1101                           
  1102                           ;panda17.c: 241: init_timer2(2,5,250);
  1103  0FA1  3005               	movlw	5
  1104  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  1105  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  1106  0FA4  00B2               	movwf	??_main^(0+128)
  1107  0FA5  0832               	movf	??_main^(0+128),w
  1108  0FA6  00A0               	movwf	init_timer2@post^(0+128)
  1109  0FA7  30FA               	movlw	250
  1110  0FA8  00B3               	movwf	(??_main+1)^(0+128)
  1111  0FA9  0833               	movf	(??_main+1)^(0+128),w
  1112  0FAA  00A1               	movwf	init_timer2@eoc^(0+128)
  1113  0FAB  3002               	movlw	2
  1114  0FAC  120A  118A  25D2  120A  158A  	fcall	_init_timer2
  1115  0FB1                     l123:	
  1116                           ;panda17.c: 242: while(1){
  1117                           
  1118  0FB1  2FB1               	goto	l123
  1119  0FB2                     __end_of_main:	
  1120                           
  1121                           	psect	text1
  1122  0C48                     __ptext1:	
  1123 ;; *************** function _uart_init *****************
  1124 ;; Defined at:
  1125 ;;		line 21 in file "panda17.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0
  1142 ;;      Totals:         0       0       0       0       0
  1143 ;;Total ram usage:        0 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    4
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _uart_init
  1155  0C48                     _uart_init:	
  1156                           
  1157                           ;panda17.c: 22: PIE1bits.RCIE = 1;
  1158                           
  1159                           ;incstack = 0
  1160                           ; Regs used in _uart_init: [wreg+status,2]
  1161  0C48  1683               	bsf	3,5	;RP0=1, select bank1
  1162  0C49  1303               	bcf	3,6	;RP1=0, select bank1
  1163  0C4A  168C               	bsf	12,5	;volatile
  1164                           
  1165                           ;panda17.c: 23: PIE1bits.TXIE = 0;
  1166  0C4B  120C               	bcf	12,4	;volatile
  1167                           
  1168                           ;panda17.c: 24: TXSTAbits.BRGH = 1;
  1169  0C4C  1518               	bsf	24,2	;volatile
  1170                           
  1171                           ;panda17.c: 25: BAUDCTLbits.BRG16 = 0;
  1172  0C4D  1683               	bsf	3,5	;RP0=1, select bank3
  1173  0C4E  1703               	bsf	3,6	;RP1=1, select bank3
  1174  0C4F  1187               	bcf	7,3	;volatile
  1175                           
  1176                           ;panda17.c: 26: SPBRGH = 0x00;
  1177  0C50  1683               	bsf	3,5	;RP0=1, select bank1
  1178  0C51  1303               	bcf	3,6	;RP1=0, select bank1
  1179  0C52  019A               	clrf	26	;volatile
  1180                           
  1181                           ;panda17.c: 28: SPBRG = 0x0C;
  1182  0C53  300C               	movlw	12
  1183  0C54  0099               	movwf	25	;volatile
  1184                           
  1185                           ;panda17.c: 29: TXSTAbits.SYNC = 0;
  1186  0C55  1218               	bcf	24,4	;volatile
  1187                           
  1188                           ;panda17.c: 30: RCSTAbits.SPEN = 1;
  1189  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0C58  1798               	bsf	24,7	;volatile
  1192                           
  1193                           ;panda17.c: 31: TXSTAbits.TXEN = 1;
  1194  0C59  1683               	bsf	3,5	;RP0=1, select bank1
  1195  0C5A  1303               	bcf	3,6	;RP1=0, select bank1
  1196  0C5B  1698               	bsf	24,5	;volatile
  1197                           
  1198                           ;panda17.c: 32: RCSTAbits.CREN = 1;
  1199  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0C5E  1618               	bsf	24,4	;volatile
  1202  0C5F  0008               	return
  1203  0C60                     __end_of_uart_init:	
  1204                           
  1205                           	psect	text2
  1206  0C60                     __ptext2:	
  1207 ;; *************** function _si_reset *****************
  1208 ;; Defined at:
  1209 ;;		line 13 in file "si7021.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    5
  1230 ;; This function calls:
  1231 ;;		_i2c_start
  1232 ;;		_i2c_stop
  1233 ;;		_i2c_write
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           
  1240                           ;psect for function _si_reset
  1241  0C60                     _si_reset:	
  1242                           
  1243                           ;si7021.c: 14: i2c_start();
  1244                           
  1245                           ;incstack = 0
  1246                           ; Regs used in _si_reset: [wreg+status,2+status,0+pclath+cstack]
  1247  0C60  120A  158A  2507  120A  158A  	fcall	_i2c_start
  1248                           
  1249                           ;si7021.c: 15: i2c_write(0x80,1);
  1250  0C65  1683               	bsf	3,5	;RP0=1, select bank1
  1251  0C66  1303               	bcf	3,6	;RP1=0, select bank1
  1252  0C67  01A0               	clrf	i2c_write@ack^(0+128)
  1253  0C68  0AA0               	incf	i2c_write@ack^(0+128),f
  1254  0C69  3080               	movlw	128
  1255  0C6A  120A  158A  2616  120A  158A  	fcall	_i2c_write
  1256                           
  1257                           ;si7021.c: 16: i2c_write(0xFE,1);
  1258  0C6F  1683               	bsf	3,5	;RP0=1, select bank1
  1259  0C70  1303               	bcf	3,6	;RP1=0, select bank1
  1260  0C71  01A0               	clrf	i2c_write@ack^(0+128)
  1261  0C72  0AA0               	incf	i2c_write@ack^(0+128),f
  1262  0C73  30FE               	movlw	254
  1263  0C74  120A  158A  2616  120A  158A  	fcall	_i2c_write
  1264                           
  1265                           ;si7021.c: 17: i2c_stop();
  1266  0C79  120A  158A  252A   	fcall	_i2c_stop
  1267  0C7C  0008               	return
  1268  0C7D                     __end_of_si_reset:	
  1269                           
  1270                           	psect	text3
  1271  076E                     __ptext3:	
  1272 ;; *************** function _mem_init *****************
  1273 ;; Defined at:
  1274 ;;		line 41 in file "panda17.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  aux             1   17[BANK1 ] unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2, status,0, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1288 ;;      Params:         0       0       0       0       0
  1289 ;;      Locals:         0       0       1       0       0
  1290 ;;      Temps:          0       0       1       0       0
  1291 ;;      Totals:         0       0       2       0       0
  1292 ;;Total ram usage:        2 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    6
  1295 ;; This function calls:
  1296 ;;		_mem_read
  1297 ;;		_mem_write
  1298 ;; This function is called by:
  1299 ;;		_main
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           
  1304                           ;psect for function _mem_init
  1305  076E                     _mem_init:	
  1306                           
  1307                           ;panda17.c: 42: unsigned char aux;
  1308                           ;panda17.c: 43: aux = mem_read(0x0002);
  1309                           
  1310                           ;incstack = 0
  1311                           ; Regs used in _mem_init: [wreg+status,2+status,0+pclath+cstack]
  1312  076E  3002               	movlw	2
  1313  076F  1683               	bsf	3,5	;RP0=1, select bank1
  1314  0770  1303               	bcf	3,6	;RP1=0, select bank1
  1315  0771  00AA               	movwf	mem_read@add^(0+128)
  1316  0772  3000               	movlw	0
  1317  0773  00AB               	movwf	(mem_read@add^(0+128)+1)
  1318  0774  120A  158A  271D  120A  118A  	fcall	_mem_read
  1319  0779  1683               	bsf	3,5	;RP0=1, select bank1
  1320  077A  1303               	bcf	3,6	;RP1=0, select bank1
  1321  077B  00B0               	movwf	??_mem_init^(0+128)
  1322  077C  0830               	movf	??_mem_init^(0+128),w
  1323  077D  00B1               	movwf	mem_init@aux^(0+128)
  1324                           
  1325                           ;panda17.c: 44: if (aux != 0xAA){
  1326  077E  30AA               	movlw	170
  1327  077F  0631               	xorwf	mem_init@aux^(0+128),w
  1328  0780  1903               	btfsc	3,2
  1329  0781  0008               	return
  1330                           
  1331                           ;panda17.c: 45: mem_write(0x0002,0xAA);
  1332  0782  3002               	movlw	2
  1333  0783  00AA               	movwf	mem_write@add^(0+128)
  1334  0784  3000               	movlw	0
  1335  0785  00AB               	movwf	(mem_write@add^(0+128)+1)
  1336  0786  30AA               	movlw	170
  1337  0787  00B0               	movwf	??_mem_init^(0+128)
  1338  0788  0830               	movf	??_mem_init^(0+128),w
  1339  0789  00AC               	movwf	mem_write@data^(0+128)
  1340  078A  120A  158A  27B2  120A  118A  	fcall	_mem_write
  1341                           
  1342                           ;panda17.c: 46: mem_write(0x000A,0x00);
  1343  078F  300A               	movlw	10
  1344  0790  1683               	bsf	3,5	;RP0=1, select bank1
  1345  0791  1303               	bcf	3,6	;RP1=0, select bank1
  1346  0792  00AA               	movwf	mem_write@add^(0+128)
  1347  0793  3000               	movlw	0
  1348  0794  00AB               	movwf	(mem_write@add^(0+128)+1)
  1349  0795  01AC               	clrf	mem_write@data^(0+128)
  1350  0796  120A  158A  27B2  120A  118A  	fcall	_mem_write
  1351                           
  1352                           ;panda17.c: 47: mem_write(0x000B,0x00);
  1353  079B  300B               	movlw	11
  1354  079C  1683               	bsf	3,5	;RP0=1, select bank1
  1355  079D  1303               	bcf	3,6	;RP1=0, select bank1
  1356  079E  00AA               	movwf	mem_write@add^(0+128)
  1357  079F  3000               	movlw	0
  1358  07A0  00AB               	movwf	(mem_write@add^(0+128)+1)
  1359  07A1  01AC               	clrf	mem_write@data^(0+128)
  1360  07A2  120A  158A  27B2  120A  118A  	fcall	_mem_write
  1361                           
  1362                           ;panda17.c: 48: mem_write(0x000C,0x00);
  1363  07A7  300C               	movlw	12
  1364  07A8  1683               	bsf	3,5	;RP0=1, select bank1
  1365  07A9  1303               	bcf	3,6	;RP1=0, select bank1
  1366  07AA  00AA               	movwf	mem_write@add^(0+128)
  1367  07AB  3000               	movlw	0
  1368  07AC  00AB               	movwf	(mem_write@add^(0+128)+1)
  1369  07AD  01AC               	clrf	mem_write@data^(0+128)
  1370  07AE  120A  158A  27B2  120A  118A  	fcall	_mem_write
  1371                           
  1372                           ;panda17.c: 49: mem_write(0x000D,0x00);
  1373  07B3  300D               	movlw	13
  1374  07B4  1683               	bsf	3,5	;RP0=1, select bank1
  1375  07B5  1303               	bcf	3,6	;RP1=0, select bank1
  1376  07B6  00AA               	movwf	mem_write@add^(0+128)
  1377  07B7  3000               	movlw	0
  1378  07B8  00AB               	movwf	(mem_write@add^(0+128)+1)
  1379  07B9  01AC               	clrf	mem_write@data^(0+128)
  1380  07BA  120A  158A  27B2   	fcall	_mem_write
  1381  07BD  0008               	return
  1382  07BE                     __end_of_mem_init:	
  1383                           
  1384                           	psect	text4
  1385  0FB2                     __ptext4:	
  1386 ;; *************** function _mem_write *****************
  1387 ;; Defined at:
  1388 ;;		line 13 in file "24lc512.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;  add             2   10[BANK1 ] unsigned int 
  1391 ;;  data            1   12[BANK1 ] unsigned char 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  add_l           1   15[BANK1 ] unsigned char 
  1394 ;;  add_h           1   14[BANK1 ] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0, pclath, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         0       0       3       0       0
  1405 ;;      Locals:         0       0       2       0       0
  1406 ;;      Temps:          0       0       1       0       0
  1407 ;;      Totals:         0       0       6       0       0
  1408 ;;Total ram usage:        6 bytes
  1409 ;; Hardware stack levels used:    1
  1410 ;; Hardware stack levels required when called:    5
  1411 ;; This function calls:
  1412 ;;		_i2c_start
  1413 ;;		_i2c_stop
  1414 ;;		_i2c_write
  1415 ;; This function is called by:
  1416 ;;		_mem_init
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           
  1421                           ;psect for function _mem_write
  1422  0FB2                     _mem_write:	
  1423                           
  1424                           ;24lc512.c: 14: unsigned char add_h,add_l;
  1425                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  1426                           
  1427                           ;incstack = 0
  1428                           ; Regs used in _mem_write: [wreg+status,2+status,0+pclath+cstack]
  1429  0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  1430  0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  1431  0FB4  082B               	movf	(mem_write@add+1)^(0+128),w
  1432  0FB5  00AD               	movwf	??_mem_write^(0+128)
  1433  0FB6  082D               	movf	??_mem_write^(0+128),w
  1434  0FB7  00AE               	movwf	mem_write@add_h^(0+128)
  1435                           
  1436                           ;24lc512.c: 16: add_l = add & 0x00FF;
  1437  0FB8  082A               	movf	mem_write@add^(0+128),w
  1438  0FB9  00AD               	movwf	??_mem_write^(0+128)
  1439  0FBA  082D               	movf	??_mem_write^(0+128),w
  1440  0FBB  00AF               	movwf	mem_write@add_l^(0+128)
  1441                           
  1442                           ;24lc512.c: 17: i2c_start();
  1443  0FBC  120A  158A  2507  120A  158A  	fcall	_i2c_start
  1444                           
  1445                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  1446  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0FC2  1303               	bcf	3,6	;RP1=0, select bank1
  1448  0FC3  01A0               	clrf	i2c_write@ack^(0+128)
  1449  0FC4  30A0               	movlw	160
  1450  0FC5  120A  158A  2616  120A  158A  	fcall	_i2c_write
  1451                           
  1452                           ;24lc512.c: 19: i2c_write(add_h,0);
  1453  0FCA  1683               	bsf	3,5	;RP0=1, select bank1
  1454  0FCB  1303               	bcf	3,6	;RP1=0, select bank1
  1455  0FCC  01A0               	clrf	i2c_write@ack^(0+128)
  1456  0FCD  082E               	movf	mem_write@add_h^(0+128),w
  1457  0FCE  120A  158A  2616  120A  158A  	fcall	_i2c_write
  1458                           
  1459                           ;24lc512.c: 20: i2c_write(add_l,0);
  1460  0FD3  1683               	bsf	3,5	;RP0=1, select bank1
  1461  0FD4  1303               	bcf	3,6	;RP1=0, select bank1
  1462  0FD5  01A0               	clrf	i2c_write@ack^(0+128)
  1463  0FD6  082F               	movf	mem_write@add_l^(0+128),w
  1464  0FD7  120A  158A  2616  120A  158A  	fcall	_i2c_write
  1465                           
  1466                           ;24lc512.c: 21: i2c_write(data,0);
  1467  0FDC  1683               	bsf	3,5	;RP0=1, select bank1
  1468  0FDD  1303               	bcf	3,6	;RP1=0, select bank1
  1469  0FDE  01A0               	clrf	i2c_write@ack^(0+128)
  1470  0FDF  082C               	movf	mem_write@data^(0+128),w
  1471  0FE0  120A  158A  2616  120A  158A  	fcall	_i2c_write
  1472                           
  1473                           ;24lc512.c: 22: i2c_stop();
  1474  0FE5  120A  158A  252A  120A  158A  	fcall	_i2c_stop
  1475  0FEA                     L1:	
  1476                           
  1477                           ;24lc512.c: 24: i2c_start();
  1478  0FEA  120A  158A  2507  120A  158A  	fcall	_i2c_start
  1479                           
  1480                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  1481  0FEF  1683               	bsf	3,5	;RP0=1, select bank1
  1482  0FF0  1303               	bcf	3,6	;RP1=0, select bank1
  1483  0FF1  01A0               	clrf	i2c_write@ack^(0+128)
  1484  0FF2  30A0               	movlw	160
  1485  0FF3  120A  158A  2616  120A  158A  	fcall	_i2c_write
  1486                           
  1487                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  1488  0FF8  1683               	bsf	3,5	;RP0=1, select bank1
  1489  0FF9  1303               	bcf	3,6	;RP1=0, select bank1
  1490  0FFA  1B11               	btfsc	17,6	;volatile
  1491  0FFB  2FEA               	goto	L1
  1492                           
  1493                           ;24lc512.c: 30: }
  1494                           ;24lc512.c: 31: i2c_stop();
  1495                           
  1496                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  1497                           
  1498                           ;24lc512.c: 28: i2c_start();
  1499  0FFC  120A  158A  252A   	fcall	_i2c_stop
  1500  0FFF  0008               	return
  1501  1000                     __end_of_mem_write:	
  1502                           
  1503                           	psect	text5
  1504  0F1D                     __ptext5:	
  1505 ;; *************** function _mem_read *****************
  1506 ;; Defined at:
  1507 ;;		line 34 in file "24lc512.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  add             2   10[BANK1 ] unsigned int 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  add_l           1   15[BANK1 ] unsigned char 
  1512 ;;  add_h           1   14[BANK1 ] unsigned char 
  1513 ;;  rta             1   13[BANK1 ] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      unsigned char 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0, pclath, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1523 ;;      Params:         0       0       2       0       0
  1524 ;;      Locals:         0       0       3       0       0
  1525 ;;      Temps:          0       0       1       0       0
  1526 ;;      Totals:         0       0       6       0       0
  1527 ;;Total ram usage:        6 bytes
  1528 ;; Hardware stack levels used:    1
  1529 ;; Hardware stack levels required when called:    5
  1530 ;; This function calls:
  1531 ;;		_i2c_read
  1532 ;;		_i2c_start
  1533 ;;		_i2c_stop
  1534 ;;		_i2c_write
  1535 ;; This function is called by:
  1536 ;;		_mem_init
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _mem_read
  1542  0F1D                     _mem_read:	
  1543                           
  1544                           ;24lc512.c: 35: unsigned char rta;
  1545                           ;24lc512.c: 36: unsigned char add_h,add_l;
  1546                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  1547                           
  1548                           ;incstack = 0
  1549                           ; Regs used in _mem_read: [wreg+status,2+status,0+pclath+cstack]
  1550  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  1551  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  1552  0F1F  082B               	movf	(mem_read@add+1)^(0+128),w
  1553  0F20  00AC               	movwf	??_mem_read^(0+128)
  1554  0F21  082C               	movf	??_mem_read^(0+128),w
  1555  0F22  00AE               	movwf	mem_read@add_h^(0+128)
  1556                           
  1557                           ;24lc512.c: 38: add_l = add & 0x00FF;
  1558  0F23  082A               	movf	mem_read@add^(0+128),w
  1559  0F24  00AC               	movwf	??_mem_read^(0+128)
  1560  0F25  082C               	movf	??_mem_read^(0+128),w
  1561  0F26  00AF               	movwf	mem_read@add_l^(0+128)
  1562                           
  1563                           ;24lc512.c: 39: i2c_start();
  1564  0F27  120A  158A  2507  120A  158A  	fcall	_i2c_start
  1565                           
  1566                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  1567  0F2C  1683               	bsf	3,5	;RP0=1, select bank1
  1568  0F2D  1303               	bcf	3,6	;RP1=0, select bank1
  1569  0F2E  01A0               	clrf	i2c_write@ack^(0+128)
  1570  0F2F  30A0               	movlw	160
  1571  0F30  120A  158A  2616  120A  158A  	fcall	_i2c_write
  1572                           
  1573                           ;24lc512.c: 41: i2c_write(add_h,0);
  1574  0F35  1683               	bsf	3,5	;RP0=1, select bank1
  1575  0F36  1303               	bcf	3,6	;RP1=0, select bank1
  1576  0F37  01A0               	clrf	i2c_write@ack^(0+128)
  1577  0F38  082E               	movf	mem_read@add_h^(0+128),w
  1578  0F39  120A  158A  2616  120A  158A  	fcall	_i2c_write
  1579                           
  1580                           ;24lc512.c: 42: i2c_write(add_l,0);
  1581  0F3E  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0F3F  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0F40  01A0               	clrf	i2c_write@ack^(0+128)
  1584  0F41  082F               	movf	mem_read@add_l^(0+128),w
  1585  0F42  120A  158A  2616  120A  158A  	fcall	_i2c_write
  1586                           
  1587                           ;24lc512.c: 43: i2c_start();
  1588  0F47  120A  158A  2507  120A  158A  	fcall	_i2c_start
  1589                           
  1590                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  1591  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  1592  0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  1593  0F4E  01A0               	clrf	i2c_write@ack^(0+128)
  1594  0F4F  30A1               	movlw	161
  1595  0F50  120A  158A  2616  120A  158A  	fcall	_i2c_write
  1596                           
  1597                           ;24lc512.c: 45: rta = i2c_read(0);
  1598  0F55  3000               	movlw	0
  1599  0F56  120A  118A  256D  120A  158A  	fcall	_i2c_read
  1600  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  1601  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  1602  0F5D  00AC               	movwf	??_mem_read^(0+128)
  1603  0F5E  082C               	movf	??_mem_read^(0+128),w
  1604  0F5F  00AD               	movwf	mem_read@rta^(0+128)
  1605                           
  1606                           ;24lc512.c: 46: i2c_stop();
  1607  0F60  120A  158A  252A   	fcall	_i2c_stop
  1608                           
  1609                           ;24lc512.c: 47: return rta;
  1610  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  1611  0F64  1303               	bcf	3,6	;RP1=0, select bank1
  1612  0F65  082D               	movf	mem_read@rta^(0+128),w
  1613  0F66  0008               	return
  1614  0F67                     __end_of_mem_read:	
  1615                           
  1616                           	psect	text6
  1617  0E16                     __ptext6:	
  1618 ;; *************** function _i2c_write *****************
  1619 ;; Defined at:
  1620 ;;		line 39 in file "i2clib.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  datum           1    wreg     unsigned char 
  1623 ;;  ack             1    0[BANK1 ] unsigned char 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  datum           1    9[BANK1 ] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      unsigned char 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       0       1       0       0
  1636 ;;      Locals:         0       0       1       0       0
  1637 ;;      Temps:          0       0       8       0       0
  1638 ;;      Totals:         0       0      10       0       0
  1639 ;;Total ram usage:       10 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    4
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_mem_write
  1646 ;;		_mem_read
  1647 ;;		_si_reset
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           
  1652                           ;psect for function _i2c_write
  1653  0E16                     _i2c_write:	
  1654                           
  1655                           ;incstack = 0
  1656                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
  1657                           ;i2c_write@datum stored from wreg
  1658  0E16  1683               	bsf	3,5	;RP0=1, select bank1
  1659  0E17  1303               	bcf	3,6	;RP1=0, select bank1
  1660  0E18  00A9               	movwf	i2c_write@datum^(0+128)
  1661  0E19                     l1493:	
  1662                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1663                           
  1664  0E19  0811               	movf	17,w	;volatile
  1665  0E1A  3901               	andlw	1
  1666  0E1B  00A1               	movwf	??_i2c_write^(0+128)
  1667  0E1C  0C11               	rrf	17,w	;volatile
  1668  0E1D  3901               	andlw	1
  1669  0E1E  00A2               	movwf	(??_i2c_write+1)^(0+128)
  1670  0E1F  0C11               	rrf	17,w	;volatile
  1671  0E20  00A3               	movwf	(??_i2c_write+2)^(0+128)
  1672  0E21  0CA3               	rrf	(??_i2c_write+2)^(0+128),f
  1673  0E22  0C23               	rrf	(??_i2c_write+2)^(0+128),w
  1674  0E23  3901               	andlw	1
  1675  0E24  00A4               	movwf	(??_i2c_write+3)^(0+128)
  1676  0E25  0E11               	swapf	17,w	;volatile
  1677  0E26  3901               	andlw	1
  1678  0E27  00A5               	movwf	(??_i2c_write+4)^(0+128)
  1679  0E28  0C11               	rrf	17,w	;volatile
  1680  0E29  00A6               	movwf	(??_i2c_write+5)^(0+128)
  1681  0E2A  0C26               	rrf	(??_i2c_write+5)^(0+128),w
  1682  0E2B  3901               	andlw	1
  1683  0E2C  00A7               	movwf	(??_i2c_write+6)^(0+128)
  1684  0E2D  0C14               	rrf	20,w	;volatile
  1685  0E2E  00A8               	movwf	(??_i2c_write+7)^(0+128)
  1686  0E2F  0C28               	rrf	(??_i2c_write+7)^(0+128),w
  1687  0E30  3901               	andlw	1
  1688  0E31  0427               	iorwf	(??_i2c_write+6)^(0+128),w
  1689  0E32  0425               	iorwf	(??_i2c_write+4)^(0+128),w
  1690  0E33  0424               	iorwf	(??_i2c_write+3)^(0+128),w
  1691  0E34  0422               	iorwf	(??_i2c_write+1)^(0+128),w
  1692  0E35  0421               	iorwf	??_i2c_write^(0+128),w
  1693  0E36  1D03               	btfss	3,2
  1694  0E37  2E19               	goto	l1493
  1695                           
  1696                           ;i2clib.c: 42: SSPBUF = datum;
  1697  0E38  0829               	movf	i2c_write@datum^(0+128),w
  1698  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  1699  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  1700  0E3B  0093               	movwf	19	;volatile
  1701  0E3C                     l167:	
  1702                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  1703                           
  1704  0E3C  1683               	bsf	3,5	;RP0=1, select bank1
  1705  0E3D  1303               	bcf	3,6	;RP1=0, select bank1
  1706  0E3E  1814               	btfsc	20,0	;volatile
  1707  0E3F  2E3C               	goto	l167
  1708                           
  1709                           ;i2clib.c: 44: if(ack){
  1710  0E40  0820               	movf	i2c_write@ack^(0+128),w
  1711  0E41  1903               	btfsc	3,2
  1712  0E42  2E45               	goto	l174
  1713  0E43                     l171:	
  1714                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  1715                           
  1716  0E43  1B11               	btfsc	17,6	;volatile
  1717  0E44  2E43               	goto	l171
  1718  0E45                     l174:	
  1719                           ;i2clib.c: 46: }
  1720                           ;i2clib.c: 47: }
  1721                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  1722                           
  1723  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0E46  198C               	btfsc	12,3	;volatile
  1725  0E47  0008               	return
  1726  0E48  2E45               	goto	l174
  1727  0E49                     __end_of_i2c_write:	
  1728                           
  1729                           	psect	text7
  1730  0D2A                     __ptext7:	
  1731 ;; *************** function _i2c_stop *****************
  1732 ;; Defined at:
  1733 ;;		line 34 in file "i2clib.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0
  1749 ;;      Temps:          0       0       8       0       0
  1750 ;;      Totals:         0       0       8       0       0
  1751 ;;Total ram usage:        8 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    4
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_mem_write
  1758 ;;		_mem_read
  1759 ;;		_si_reset
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           
  1764                           ;psect for function _i2c_stop
  1765  0D2A                     _i2c_stop:	
  1766  0D2A                     l1489:	
  1767                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1768                           
  1769                           ;incstack = 0
  1770                           ; Regs used in _i2c_stop: [wreg+status,2+status,0]
  1771                           
  1772  0D2A  1683               	bsf	3,5	;RP0=1, select bank1
  1773  0D2B  1303               	bcf	3,6	;RP1=0, select bank1
  1774  0D2C  0811               	movf	17,w	;volatile
  1775  0D2D  3901               	andlw	1
  1776  0D2E  00A0               	movwf	??_i2c_stop^(0+128)
  1777  0D2F  0C11               	rrf	17,w	;volatile
  1778  0D30  3901               	andlw	1
  1779  0D31  00A1               	movwf	(??_i2c_stop+1)^(0+128)
  1780  0D32  0C11               	rrf	17,w	;volatile
  1781  0D33  00A2               	movwf	(??_i2c_stop+2)^(0+128)
  1782  0D34  0CA2               	rrf	(??_i2c_stop+2)^(0+128),f
  1783  0D35  0C22               	rrf	(??_i2c_stop+2)^(0+128),w
  1784  0D36  3901               	andlw	1
  1785  0D37  00A3               	movwf	(??_i2c_stop+3)^(0+128)
  1786  0D38  0E11               	swapf	17,w	;volatile
  1787  0D39  3901               	andlw	1
  1788  0D3A  00A4               	movwf	(??_i2c_stop+4)^(0+128)
  1789  0D3B  0C11               	rrf	17,w	;volatile
  1790  0D3C  00A5               	movwf	(??_i2c_stop+5)^(0+128)
  1791  0D3D  0C25               	rrf	(??_i2c_stop+5)^(0+128),w
  1792  0D3E  3901               	andlw	1
  1793  0D3F  00A6               	movwf	(??_i2c_stop+6)^(0+128)
  1794  0D40  0C14               	rrf	20,w	;volatile
  1795  0D41  00A7               	movwf	(??_i2c_stop+7)^(0+128)
  1796  0D42  0C27               	rrf	(??_i2c_stop+7)^(0+128),w
  1797  0D43  3901               	andlw	1
  1798  0D44  0426               	iorwf	(??_i2c_stop+6)^(0+128),w
  1799  0D45  0424               	iorwf	(??_i2c_stop+4)^(0+128),w
  1800  0D46  0423               	iorwf	(??_i2c_stop+3)^(0+128),w
  1801  0D47  0421               	iorwf	(??_i2c_stop+1)^(0+128),w
  1802  0D48  0420               	iorwf	??_i2c_stop^(0+128),w
  1803  0D49  1D03               	btfss	3,2
  1804  0D4A  2D2A               	goto	l1489
  1805                           
  1806                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  1807  0D4B  1511               	bsf	17,2	;volatile
  1808  0D4C  0008               	return
  1809  0D4D                     __end_of_i2c_stop:	
  1810                           
  1811                           	psect	text8
  1812  0D07                     __ptext8:	
  1813 ;; *************** function _i2c_start *****************
  1814 ;; Defined at:
  1815 ;;		line 24 in file "i2clib.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         0       0       0       0       0
  1830 ;;      Locals:         0       0       0       0       0
  1831 ;;      Temps:          0       0       8       0       0
  1832 ;;      Totals:         0       0       8       0       0
  1833 ;;Total ram usage:        8 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    4
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_mem_write
  1840 ;;		_mem_read
  1841 ;;		_si_reset
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           
  1846                           ;psect for function _i2c_start
  1847  0D07                     _i2c_start:	
  1848  0D07                     l1485:	
  1849                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1850                           
  1851                           ;incstack = 0
  1852                           ; Regs used in _i2c_start: [wreg+status,2+status,0]
  1853                           
  1854  0D07  1683               	bsf	3,5	;RP0=1, select bank1
  1855  0D08  1303               	bcf	3,6	;RP1=0, select bank1
  1856  0D09  0811               	movf	17,w	;volatile
  1857  0D0A  3901               	andlw	1
  1858  0D0B  00A0               	movwf	??_i2c_start^(0+128)
  1859  0D0C  0C11               	rrf	17,w	;volatile
  1860  0D0D  3901               	andlw	1
  1861  0D0E  00A1               	movwf	(??_i2c_start+1)^(0+128)
  1862  0D0F  0C11               	rrf	17,w	;volatile
  1863  0D10  00A2               	movwf	(??_i2c_start+2)^(0+128)
  1864  0D11  0CA2               	rrf	(??_i2c_start+2)^(0+128),f
  1865  0D12  0C22               	rrf	(??_i2c_start+2)^(0+128),w
  1866  0D13  3901               	andlw	1
  1867  0D14  00A3               	movwf	(??_i2c_start+3)^(0+128)
  1868  0D15  0E11               	swapf	17,w	;volatile
  1869  0D16  3901               	andlw	1
  1870  0D17  00A4               	movwf	(??_i2c_start+4)^(0+128)
  1871  0D18  0C11               	rrf	17,w	;volatile
  1872  0D19  00A5               	movwf	(??_i2c_start+5)^(0+128)
  1873  0D1A  0C25               	rrf	(??_i2c_start+5)^(0+128),w
  1874  0D1B  3901               	andlw	1
  1875  0D1C  00A6               	movwf	(??_i2c_start+6)^(0+128)
  1876  0D1D  0C14               	rrf	20,w	;volatile
  1877  0D1E  00A7               	movwf	(??_i2c_start+7)^(0+128)
  1878  0D1F  0C27               	rrf	(??_i2c_start+7)^(0+128),w
  1879  0D20  3901               	andlw	1
  1880  0D21  0426               	iorwf	(??_i2c_start+6)^(0+128),w
  1881  0D22  0424               	iorwf	(??_i2c_start+4)^(0+128),w
  1882  0D23  0423               	iorwf	(??_i2c_start+3)^(0+128),w
  1883  0D24  0421               	iorwf	(??_i2c_start+1)^(0+128),w
  1884  0D25  0420               	iorwf	??_i2c_start^(0+128),w
  1885  0D26  1D03               	btfss	3,2
  1886  0D27  2D07               	goto	l1485
  1887                           
  1888                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  1889  0D28  1411               	bsf	17,0	;volatile
  1890  0D29  0008               	return
  1891  0D2A                     __end_of_i2c_start:	
  1892                           
  1893                           	psect	text9
  1894  056D                     __ptext9:	
  1895 ;; *************** function _i2c_read *****************
  1896 ;; Defined at:
  1897 ;;		line 51 in file "i2clib.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  ack             1    wreg     unsigned char 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  ack             1    9[BANK1 ] unsigned char 
  1902 ;;  resp            1    8[BANK1 ] unsigned char 
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      unsigned char 
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, status,0
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         0       0       0       0       0
  1913 ;;      Locals:         0       0       2       0       0
  1914 ;;      Temps:          0       0       8       0       0
  1915 ;;      Totals:         0       0      10       0       0
  1916 ;;Total ram usage:       10 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    4
  1919 ;; This function calls:
  1920 ;;		Nothing
  1921 ;; This function is called by:
  1922 ;;		_mem_read
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function _i2c_read
  1928  056D                     _i2c_read:	
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  1932                           ;i2c_read@ack stored from wreg
  1933  056D  1683               	bsf	3,5	;RP0=1, select bank1
  1934  056E  1303               	bcf	3,6	;RP1=0, select bank1
  1935  056F  00A9               	movwf	i2c_read@ack^(0+128)
  1936                           
  1937                           ;i2clib.c: 52: unsigned char resp;
  1938                           ;i2clib.c: 53: static bit flag, not_flag;
  1939                           ;i2clib.c: 54: flag = ack & 0x01;
  1940  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0572  10DA               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  1943  0573  1683               	bsf	3,5	;RP0=1, select bank1
  1944  0574  1303               	bcf	3,6	;RP1=0, select bank1
  1945  0575  1C29               	btfss	i2c_read@ack^(0+128),0
  1946  0576  2D7A               	goto	l1503
  1947  0577  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0578  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0579  14DA               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  1950  057A                     l1503:	
  1951                           
  1952                           ;i2clib.c: 55: if (ack == 1){
  1953  057A  1683               	bsf	3,5	;RP0=1, select bank1
  1954  057B  1303               	bcf	3,6	;RP1=0, select bank1
  1955  057C  0329               	decf	i2c_read@ack^(0+128),w
  1956  057D  1D03               	btfss	3,2
  1957  057E  2D82               	goto	l1507
  1958                           
  1959                           ;i2clib.c: 56: not_flag = 0;
  1960  057F  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0580  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0581  105A               	bcf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  1963  0582                     l1507:	
  1964                           
  1965                           ;i2clib.c: 57: }
  1966                           ;i2clib.c: 58: if (ack == 3){
  1967  0582  3003               	movlw	3
  1968  0583  1683               	bsf	3,5	;RP0=1, select bank1
  1969  0584  1303               	bcf	3,6	;RP1=0, select bank1
  1970  0585  0629               	xorwf	i2c_read@ack^(0+128),w
  1971  0586  1D03               	btfss	3,2
  1972  0587  2D8B               	goto	l1511
  1973                           
  1974                           ;i2clib.c: 59: not_flag = 1;
  1975  0588  1283               	bcf	3,5	;RP0=0, select bank0
  1976  0589  1303               	bcf	3,6	;RP1=0, select bank0
  1977  058A  145A               	bsf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  1978  058B                     l1511:	
  1979                           ;i2clib.c: 60: }
  1980                           ;i2clib.c: 61: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1981                           
  1982  058B  1683               	bsf	3,5	;RP0=1, select bank1
  1983  058C  1303               	bcf	3,6	;RP1=0, select bank1
  1984  058D  0811               	movf	17,w	;volatile
  1985  058E  3901               	andlw	1
  1986  058F  00A0               	movwf	??_i2c_read^(0+128)
  1987  0590  0C11               	rrf	17,w	;volatile
  1988  0591  3901               	andlw	1
  1989  0592  00A1               	movwf	(??_i2c_read+1)^(0+128)
  1990  0593  0C11               	rrf	17,w	;volatile
  1991  0594  00A2               	movwf	(??_i2c_read+2)^(0+128)
  1992  0595  0CA2               	rrf	(??_i2c_read+2)^(0+128),f
  1993  0596  0C22               	rrf	(??_i2c_read+2)^(0+128),w
  1994  0597  3901               	andlw	1
  1995  0598  00A3               	movwf	(??_i2c_read+3)^(0+128)
  1996  0599  0E11               	swapf	17,w	;volatile
  1997  059A  3901               	andlw	1
  1998  059B  00A4               	movwf	(??_i2c_read+4)^(0+128)
  1999  059C  0C11               	rrf	17,w	;volatile
  2000  059D  00A5               	movwf	(??_i2c_read+5)^(0+128)
  2001  059E  0C25               	rrf	(??_i2c_read+5)^(0+128),w
  2002  059F  3901               	andlw	1
  2003  05A0  00A6               	movwf	(??_i2c_read+6)^(0+128)
  2004  05A1  0C14               	rrf	20,w	;volatile
  2005  05A2  00A7               	movwf	(??_i2c_read+7)^(0+128)
  2006  05A3  0C27               	rrf	(??_i2c_read+7)^(0+128),w
  2007  05A4  3901               	andlw	1
  2008  05A5  0426               	iorwf	(??_i2c_read+6)^(0+128),w
  2009  05A6  0424               	iorwf	(??_i2c_read+4)^(0+128),w
  2010  05A7  0423               	iorwf	(??_i2c_read+3)^(0+128),w
  2011  05A8  0421               	iorwf	(??_i2c_read+1)^(0+128),w
  2012  05A9  0420               	iorwf	??_i2c_read^(0+128),w
  2013  05AA  1D03               	btfss	3,2
  2014  05AB  2D8B               	goto	l1511
  2015                           
  2016                           ;i2clib.c: 62: SSPCON2bits.RCEN = 1;
  2017  05AC  1591               	bsf	17,3	;volatile
  2018  05AD                     l189:	
  2019                           ;i2clib.c: 63: while(!SSPSTATbits.BF);
  2020                           
  2021  05AD  1C14               	btfss	20,0	;volatile
  2022  05AE  2DAD               	goto	l189
  2023  05AF                     l192:	
  2024                           ;i2clib.c: 64: while(!PIR1bits.SSPIF);
  2025                           
  2026  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  2027  05B0  1D8C               	btfss	12,3	;volatile
  2028  05B1  2DAF               	goto	l192
  2029                           
  2030                           ;i2clib.c: 65: SSPCON2bits.ACKDT = not_flag;
  2031  05B2  1C5A               	btfss	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2032  05B3  2DB8               	goto	u1240
  2033  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  2034  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  2035  05B6  1691               	bsf	17,5	;volatile
  2036  05B7  2DBB               	goto	u1254
  2037  05B8                     u1240:	
  2038  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  2039  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  2040  05BA  1291               	bcf	17,5	;volatile
  2041  05BB                     u1254:	
  2042                           
  2043                           ;i2clib.c: 66: SSPCON2bits.ACKEN = flag;
  2044  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  2045  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  2046  05BD  1CDA               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2047  05BE  2DC3               	goto	u1260
  2048  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  2049  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  2050  05C1  1611               	bsf	17,4	;volatile
  2051  05C2  2DC6               	goto	l1513
  2052  05C3                     u1260:	
  2053  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  2054  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  2055  05C5  1211               	bcf	17,4	;volatile
  2056  05C6                     l1513:	
  2057                           
  2058                           ;i2clib.c: 67: resp = SSPBUF;
  2059  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  2060  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  2061  05C8  0813               	movf	19,w	;volatile
  2062  05C9  1683               	bsf	3,5	;RP0=1, select bank1
  2063  05CA  1303               	bcf	3,6	;RP1=0, select bank1
  2064  05CB  00A0               	movwf	??_i2c_read^(0+128)
  2065  05CC  0820               	movf	??_i2c_read^(0+128),w
  2066  05CD  00A8               	movwf	i2c_read@resp^(0+128)
  2067  05CE                     l195:	
  2068                           ;i2clib.c: 68: while(SSPSTATbits.BF);
  2069                           
  2070  05CE  1814               	btfsc	20,0	;volatile
  2071  05CF  2DCE               	goto	l195
  2072                           
  2073                           ;i2clib.c: 69: return resp;
  2074  05D0  0828               	movf	i2c_read@resp^(0+128),w
  2075  05D1  0008               	return
  2076  05D2                     __end_of_i2c_read:	
  2077                           
  2078                           	psect	text10
  2079  05D2                     __ptext10:	
  2080 ;; *************** function _init_timer2 *****************
  2081 ;; Defined at:
  2082 ;;		line 209 in file "panda17.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  pre             1    wreg     unsigned char 
  2085 ;;  post            1    0[BANK1 ] unsigned char 
  2086 ;;  eoc             1    1[BANK1 ] unsigned char 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  pre             1    4[BANK1 ] unsigned char 
  2089 ;;  sfr             1    5[BANK1 ] unsigned char 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2099 ;;      Params:         0       0       2       0       0
  2100 ;;      Locals:         0       0       2       0       0
  2101 ;;      Temps:          0       0       2       0       0
  2102 ;;      Totals:         0       0       6       0       0
  2103 ;;Total ram usage:        6 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    4
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           
  2114                           ;psect for function _init_timer2
  2115  05D2                     _init_timer2:	
  2116                           
  2117                           ;incstack = 0
  2118                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
  2119                           ;init_timer2@pre stored from wreg
  2120  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  2121  05D3  1303               	bcf	3,6	;RP1=0, select bank1
  2122  05D4  00A4               	movwf	init_timer2@pre^(0+128)
  2123                           
  2124                           ;panda17.c: 210: unsigned char sfr = 0x00;
  2125  05D5  01A5               	clrf	init_timer2@sfr^(0+128)
  2126                           
  2127                           ;panda17.c: 211: PR2 = eoc;
  2128  05D6  0821               	movf	init_timer2@eoc^(0+128),w
  2129  05D7  0092               	movwf	18	;volatile
  2130                           
  2131                           ;panda17.c: 212: sfr = ((post-1) << 3) & 0x78;
  2132  05D8  0820               	movf	init_timer2@post^(0+128),w
  2133  05D9  00A2               	movwf	??_init_timer2^(0+128)
  2134  05DA  3002               	movlw	2
  2135  05DB                     u1975:	
  2136  05DB  1003               	clrc
  2137  05DC  0DA2               	rlf	??_init_timer2^(0+128),f
  2138  05DD  3EFF               	addlw	-1
  2139  05DE  1D03               	skipz
  2140  05DF  2DDB               	goto	u1975
  2141  05E0  1003               	clrc
  2142  05E1  0D22               	rlf	??_init_timer2^(0+128),w
  2143  05E2  3EF8               	addlw	248
  2144  05E3  3978               	andlw	120
  2145  05E4  00A3               	movwf	(??_init_timer2+1)^(0+128)
  2146  05E5  0823               	movf	(??_init_timer2+1)^(0+128),w
  2147  05E6  00A5               	movwf	init_timer2@sfr^(0+128)
  2148                           
  2149                           ;panda17.c: 213: sfr += 4;
  2150  05E7  3004               	movlw	4
  2151  05E8  00A2               	movwf	??_init_timer2^(0+128)
  2152  05E9  0822               	movf	??_init_timer2^(0+128),w
  2153  05EA  07A5               	addwf	init_timer2@sfr^(0+128),f
  2154                           
  2155                           ;panda17.c: 214: sfr += pre;
  2156  05EB  0824               	movf	init_timer2@pre^(0+128),w
  2157  05EC  00A2               	movwf	??_init_timer2^(0+128)
  2158  05ED  0822               	movf	??_init_timer2^(0+128),w
  2159  05EE  07A5               	addwf	init_timer2@sfr^(0+128),f
  2160                           
  2161                           ;panda17.c: 215: T2CON = sfr;
  2162  05EF  0825               	movf	init_timer2@sfr^(0+128),w
  2163  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  2164  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  2165  05F2  0092               	movwf	18	;volatile
  2166                           
  2167                           ;panda17.c: 216: PIE1bits.TMR2IE = 1;
  2168  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  2169  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  2170  05F5  148C               	bsf	12,1	;volatile
  2171  05F6  0008               	return
  2172  05F7                     __end_of_init_timer2:	
  2173                           
  2174                           	psect	text11
  2175  0C39                     __ptext11:	
  2176 ;; *************** function _i2c_init *****************
  2177 ;; Defined at:
  2178 ;;		line 13 in file "i2clib.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;		None
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2192 ;;      Params:         0       0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0
  2195 ;;      Totals:         0       0       0       0       0
  2196 ;;Total ram usage:        0 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    4
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_main
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           
  2207                           ;psect for function _i2c_init
  2208  0C39                     _i2c_init:	
  2209                           
  2210                           ;i2clib.c: 15: SSPCONbits.SSPM = 0b1000;
  2211                           
  2212                           ;incstack = 0
  2213                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  2214  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0C3B  0814               	movf	20,w	;volatile
  2217  0C3C  39F0               	andlw	-16
  2218  0C3D  3808               	iorlw	8
  2219  0C3E  0094               	movwf	20	;volatile
  2220                           
  2221                           ;i2clib.c: 16: SSPCONbits.SSPEN = 1;
  2222  0C3F  1694               	bsf	20,5	;volatile
  2223                           
  2224                           ;i2clib.c: 18: SSPADD = 0x04;
  2225  0C40  3004               	movlw	4
  2226  0C41  1683               	bsf	3,5	;RP0=1, select bank1
  2227  0C42  1303               	bcf	3,6	;RP1=0, select bank1
  2228  0C43  0093               	movwf	19	;volatile
  2229                           
  2230                           ;i2clib.c: 19: SSPSTATbits.SMP = 1;
  2231  0C44  1794               	bsf	20,7	;volatile
  2232                           
  2233                           ;i2clib.c: 20: TRISCbits.TRISC3 = 1;
  2234  0C45  1587               	bsf	7,3	;volatile
  2235                           
  2236                           ;i2clib.c: 21: TRISCbits.TRISC4 = 1;
  2237  0C46  1607               	bsf	7,4	;volatile
  2238  0C47  0008               	return
  2239  0C48                     __end_of_i2c_init:	
  2240                           
  2241                           	psect	text12
  2242  0028                     __ptext12:	
  2243 ;; *************** function _ints_isr *****************
  2244 ;; Defined at:
  2245 ;;		line 73 in file "panda17.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  hum_add         2   45[BANK0 ] unsigned int 
  2250 ;;  temp_add        2   43[BANK0 ] unsigned int 
  2251 ;;  up              2   37[BANK0 ] unsigned int 
  2252 ;;  temp_val        2   31[BANK0 ] unsigned int 
  2253 ;;  hum_val         2   29[BANK0 ] unsigned int 
  2254 ;;  arg             1   47[BANK0 ] unsigned char 
  2255 ;;  k               1   36[BANK0 ] unsigned char 
  2256 ;;  z               1   35[BANK0 ] unsigned char 
  2257 ;;  aux             2   41[BANK0 ] unsigned int 
  2258 ;;  n               2   39[BANK0 ] unsigned int 
  2259 ;;  add             2   33[BANK0 ] unsigned int 
  2260 ;;  rcv             1   28[BANK0 ] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2270 ;;      Params:         0       0       0       0       0
  2271 ;;      Locals:         0      20       0       0       0
  2272 ;;      Temps:          0       8       0       0       0
  2273 ;;      Totals:         0      28       0       0       0
  2274 ;;Total ram usage:       28 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    3
  2277 ;; This function calls:
  2278 ;;		_ds_get
  2279 ;;		_ds_set
  2280 ;;		_printf
  2281 ;;		_si_read_h
  2282 ;;		_si_read_t
  2283 ;;		i1_mem_init
  2284 ;;		i1_mem_read
  2285 ;;		i1_mem_write
  2286 ;; This function is called by:
  2287 ;;		Interrupt level 1
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function _ints_isr
  2293  0028                     _ints_isr:	
  2294                           
  2295                           ;panda17.c: 75: if (PIR1bits.RCIF){
  2296  0028  1E8C               	btfss	12,5	;volatile
  2297  0029  29E7               	goto	i1l84
  2298                           
  2299                           ;panda17.c: 76: INTCONbits.GIE = 0;
  2300  002A  138B               	bcf	11,7	;volatile
  2301                           
  2302                           ;panda17.c: 77: static bit ferr = 0, oerr = 0;
  2303                           ;panda17.c: 78: unsigned char rcv = 0;
  2304  002B  01BC               	clrf	ints_isr@rcv
  2305                           
  2306                           ;panda17.c: 79: ferr = RCSTAbits.FERR;
  2307  002C  11DA               	bcf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2308  002D  1918               	btfsc	24,2	;volatile
  2309  002E  15DA               	bsf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2310                           
  2311                           ;panda17.c: 80: oerr = RCSTAbits.OERR;
  2312  002F  1283               	bcf	3,5	;RP0=0, select bank0
  2313  0030  1303               	bcf	3,6	;RP1=0, select bank0
  2314  0031  115A               	bcf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2315  0032  1898               	btfsc	24,1	;volatile
  2316  0033  155A               	bsf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2317                           
  2318                           ;panda17.c: 81: if (!ferr & !oerr){
  2319  0034  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0035  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0036  1DDA               	btfss	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2322  0037  195A               	btfsc	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2323  0038  29D3               	goto	i1l2065
  2324                           
  2325                           ;panda17.c: 82: rcv = RCREG;
  2326  0039  081A               	movf	26,w	;volatile
  2327  003A  00B4               	movwf	??_ints_isr
  2328  003B  0834               	movf	??_ints_isr,w
  2329  003C  00BC               	movwf	ints_isr@rcv
  2330                           
  2331                           ;panda17.c: 83: }
  2332                           ;panda17.c: 84: switch (rcv){
  2333  003D  29D3               	goto	i1l2065
  2334  003E                     i1l91:	
  2335                           ;panda17.c: 85: case 'a':
  2336                           
  2337                           
  2338                           ;panda17.c: 86: PORTBbits.RB4 = 1;
  2339  003E  1606               	bsf	6,4	;volatile
  2340                           
  2341                           ;panda17.c: 87: unsigned int add,n,aux;
  2342                           ;panda17.c: 88: add = mem_read(0x0A);
  2343  003F  300A               	movlw	10
  2344  0040  00FA               	movwf	i1mem_read@add
  2345  0041  3000               	movlw	0
  2346  0042  00FB               	movwf	i1mem_read@add+1
  2347  0043  120A  158A  2649  120A  118A  	fcall	i1_mem_read
  2348  0048  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0049  1303               	bcf	3,6	;RP1=0, select bank0
  2350  004A  00B4               	movwf	??_ints_isr
  2351  004B  01B5               	clrf	??_ints_isr+1
  2352  004C  0834               	movf	??_ints_isr,w
  2353  004D  00C1               	movwf	ints_isr@add
  2354  004E  0835               	movf	??_ints_isr+1,w
  2355  004F  00C2               	movwf	ints_isr@add+1
  2356                           
  2357                           ;panda17.c: 89: add = add << 8;
  2358  0050  0841               	movf	ints_isr@add,w
  2359  0051  00B5               	movwf	??_ints_isr+1
  2360  0052  01B4               	clrf	??_ints_isr
  2361  0053  0834               	movf	??_ints_isr,w
  2362  0054  00C1               	movwf	ints_isr@add
  2363  0055  0835               	movf	??_ints_isr+1,w
  2364  0056  00C2               	movwf	ints_isr@add+1
  2365                           
  2366                           ;panda17.c: 90: add += mem_read(0x0B);
  2367  0057  300B               	movlw	11
  2368  0058  00FA               	movwf	i1mem_read@add
  2369  0059  3000               	movlw	0
  2370  005A  00FB               	movwf	i1mem_read@add+1
  2371  005B  120A  158A  2649  120A  118A  	fcall	i1_mem_read
  2372  0060  1283               	bcf	3,5	;RP0=0, select bank0
  2373  0061  1303               	bcf	3,6	;RP1=0, select bank0
  2374  0062  00B4               	movwf	??_ints_isr
  2375  0063  01B5               	clrf	??_ints_isr+1
  2376  0064  0834               	movf	??_ints_isr,w
  2377  0065  07C1               	addwf	ints_isr@add,f
  2378  0066  1803               	skipnc
  2379  0067  0AC2               	incf	ints_isr@add+1,f
  2380  0068  0835               	movf	??_ints_isr+1,w
  2381  0069  07C2               	addwf	ints_isr@add+1,f
  2382                           
  2383                           ;panda17.c: 92: printf("I%05d\r\n",add);
  2384  006A  0842               	movf	ints_isr@add+1,w
  2385  006B  00A5               	movwf	?_printf+1
  2386  006C  0841               	movf	ints_isr@add,w
  2387  006D  00A4               	movwf	?_printf
  2388  006E  3035               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2389  006F  120A  118A  2357  120A  118A  	fcall	_printf
  2390                           
  2391                           ;panda17.c: 93: for (n=0;n<add;n++){
  2392  0074  1283               	bcf	3,5	;RP0=0, select bank0
  2393  0075  1303               	bcf	3,6	;RP1=0, select bank0
  2394  0076  01C7               	clrf	ints_isr@n
  2395  0077  01C8               	clrf	ints_isr@n+1
  2396  0078                     i1l2019:	
  2397  0078  0842               	movf	ints_isr@add+1,w
  2398  0079  0248               	subwf	ints_isr@n+1,w
  2399  007A  1D03               	skipz
  2400  007B  287E               	goto	u204_25
  2401  007C  0841               	movf	ints_isr@add,w
  2402  007D  0247               	subwf	ints_isr@n,w
  2403  007E                     u204_25:	
  2404  007E  1803               	btfsc	3,0
  2405  007F  2921               	goto	i1l2021
  2406                           
  2407                           ;panda17.c: 94: aux = mem_read(2*n+0x0010);
  2408  0080  0848               	movf	ints_isr@n+1,w
  2409  0081  00B5               	movwf	??_ints_isr+1
  2410  0082  0847               	movf	ints_isr@n,w
  2411  0083  00B4               	movwf	??_ints_isr
  2412  0084  1003               	clrc
  2413  0085  0DB4               	rlf	??_ints_isr,f
  2414  0086  0DB5               	rlf	??_ints_isr+1,f
  2415  0087  0834               	movf	??_ints_isr,w
  2416  0088  3E10               	addlw	16
  2417  0089  00FA               	movwf	i1mem_read@add
  2418  008A  0835               	movf	??_ints_isr+1,w
  2419  008B  1803               	skipnc
  2420  008C  3E01               	addlw	1
  2421  008D  3E00               	addlw	0
  2422  008E  00FB               	movwf	i1mem_read@add+1
  2423  008F  120A  158A  2649  120A  118A  	fcall	i1_mem_read
  2424  0094  1283               	bcf	3,5	;RP0=0, select bank0
  2425  0095  1303               	bcf	3,6	;RP1=0, select bank0
  2426  0096  00B6               	movwf	??_ints_isr+2
  2427  0097  01B7               	clrf	??_ints_isr+3
  2428  0098  0836               	movf	??_ints_isr+2,w
  2429  0099  00C9               	movwf	ints_isr@aux
  2430  009A  0837               	movf	??_ints_isr+3,w
  2431  009B  00CA               	movwf	ints_isr@aux+1
  2432                           
  2433                           ;panda17.c: 95: aux = aux << 8;
  2434  009C  0849               	movf	ints_isr@aux,w
  2435  009D  00B5               	movwf	??_ints_isr+1
  2436  009E  01B4               	clrf	??_ints_isr
  2437  009F  0834               	movf	??_ints_isr,w
  2438  00A0  00C9               	movwf	ints_isr@aux
  2439  00A1  0835               	movf	??_ints_isr+1,w
  2440  00A2  00CA               	movwf	ints_isr@aux+1
  2441                           
  2442                           ;panda17.c: 96: aux += mem_read(2*n+0x0011);
  2443  00A3  0848               	movf	ints_isr@n+1,w
  2444  00A4  00B5               	movwf	??_ints_isr+1
  2445  00A5  0847               	movf	ints_isr@n,w
  2446  00A6  00B4               	movwf	??_ints_isr
  2447  00A7  1003               	clrc
  2448  00A8  0DB4               	rlf	??_ints_isr,f
  2449  00A9  0DB5               	rlf	??_ints_isr+1,f
  2450  00AA  0834               	movf	??_ints_isr,w
  2451  00AB  3E11               	addlw	17
  2452  00AC  00FA               	movwf	i1mem_read@add
  2453  00AD  0835               	movf	??_ints_isr+1,w
  2454  00AE  1803               	skipnc
  2455  00AF  3E01               	addlw	1
  2456  00B0  3E00               	addlw	0
  2457  00B1  00FB               	movwf	i1mem_read@add+1
  2458  00B2  120A  158A  2649  120A  118A  	fcall	i1_mem_read
  2459  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  2460  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  2461  00B9  00B6               	movwf	??_ints_isr+2
  2462  00BA  01B7               	clrf	??_ints_isr+3
  2463  00BB  0836               	movf	??_ints_isr+2,w
  2464  00BC  07C9               	addwf	ints_isr@aux,f
  2465  00BD  1803               	skipnc
  2466  00BE  0ACA               	incf	ints_isr@aux+1,f
  2467  00BF  0837               	movf	??_ints_isr+3,w
  2468  00C0  07CA               	addwf	ints_isr@aux+1,f
  2469                           
  2470                           ;panda17.c: 97: printf("%04x;",aux);
  2471  00C1  084A               	movf	ints_isr@aux+1,w
  2472  00C2  00A5               	movwf	?_printf+1
  2473  00C3  0849               	movf	ints_isr@aux,w
  2474  00C4  00A4               	movwf	?_printf
  2475  00C5  3045               	movlw	(low (((STR_7+1)-__stringbase)| (0+32768)))& (0+255)
  2476  00C6  120A  118A  2357  120A  118A  	fcall	_printf
  2477                           
  2478                           ;panda17.c: 98: aux = mem_read(2*n+0x7FF7);
  2479  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  2480  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  2481  00CD  0848               	movf	ints_isr@n+1,w
  2482  00CE  00B5               	movwf	??_ints_isr+1
  2483  00CF  0847               	movf	ints_isr@n,w
  2484  00D0  00B4               	movwf	??_ints_isr
  2485  00D1  1003               	clrc
  2486  00D2  0DB4               	rlf	??_ints_isr,f
  2487  00D3  0DB5               	rlf	??_ints_isr+1,f
  2488  00D4  0834               	movf	??_ints_isr,w
  2489  00D5  3EF7               	addlw	247
  2490  00D6  00FA               	movwf	i1mem_read@add
  2491  00D7  0835               	movf	??_ints_isr+1,w
  2492  00D8  1803               	skipnc
  2493  00D9  3E01               	addlw	1
  2494  00DA  3E7F               	addlw	127
  2495  00DB  00FB               	movwf	i1mem_read@add+1
  2496  00DC  120A  158A  2649  120A  118A  	fcall	i1_mem_read
  2497  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2498  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2499  00E3  00B6               	movwf	??_ints_isr+2
  2500  00E4  01B7               	clrf	??_ints_isr+3
  2501  00E5  0836               	movf	??_ints_isr+2,w
  2502  00E6  00C9               	movwf	ints_isr@aux
  2503  00E7  0837               	movf	??_ints_isr+3,w
  2504  00E8  00CA               	movwf	ints_isr@aux+1
  2505                           
  2506                           ;panda17.c: 99: aux = aux << 8;
  2507  00E9  0849               	movf	ints_isr@aux,w
  2508  00EA  00B5               	movwf	??_ints_isr+1
  2509  00EB  01B4               	clrf	??_ints_isr
  2510  00EC  0834               	movf	??_ints_isr,w
  2511  00ED  00C9               	movwf	ints_isr@aux
  2512  00EE  0835               	movf	??_ints_isr+1,w
  2513  00EF  00CA               	movwf	ints_isr@aux+1
  2514                           
  2515                           ;panda17.c: 100: aux += mem_read(2*n+0x7FF8);
  2516  00F0  0848               	movf	ints_isr@n+1,w
  2517  00F1  00B5               	movwf	??_ints_isr+1
  2518  00F2  0847               	movf	ints_isr@n,w
  2519  00F3  00B4               	movwf	??_ints_isr
  2520  00F4  1003               	clrc
  2521  00F5  0DB4               	rlf	??_ints_isr,f
  2522  00F6  0DB5               	rlf	??_ints_isr+1,f
  2523  00F7  0834               	movf	??_ints_isr,w
  2524  00F8  3EF8               	addlw	248
  2525  00F9  00FA               	movwf	i1mem_read@add
  2526  00FA  0835               	movf	??_ints_isr+1,w
  2527  00FB  1803               	skipnc
  2528  00FC  3E01               	addlw	1
  2529  00FD  3E7F               	addlw	127
  2530  00FE  00FB               	movwf	i1mem_read@add+1
  2531  00FF  120A  158A  2649  120A  118A  	fcall	i1_mem_read
  2532  0104  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0105  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0106  00B6               	movwf	??_ints_isr+2
  2535  0107  01B7               	clrf	??_ints_isr+3
  2536  0108  0836               	movf	??_ints_isr+2,w
  2537  0109  07C9               	addwf	ints_isr@aux,f
  2538  010A  1803               	skipnc
  2539  010B  0ACA               	incf	ints_isr@aux+1,f
  2540  010C  0837               	movf	??_ints_isr+3,w
  2541  010D  07CA               	addwf	ints_isr@aux+1,f
  2542                           
  2543                           ;panda17.c: 101: printf("%04x\r\n",aux);
  2544  010E  084A               	movf	ints_isr@aux+1,w
  2545  010F  00A5               	movwf	?_printf+1
  2546  0110  0849               	movf	ints_isr@aux,w
  2547  0111  00A4               	movwf	?_printf
  2548  0112  303D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2549  0113  120A  118A  2357  120A  118A  	fcall	_printf
  2550  0118  3001               	movlw	1
  2551  0119  1283               	bcf	3,5	;RP0=0, select bank0
  2552  011A  1303               	bcf	3,6	;RP1=0, select bank0
  2553  011B  07C7               	addwf	ints_isr@n,f
  2554  011C  1803               	skipnc
  2555  011D  0AC8               	incf	ints_isr@n+1,f
  2556  011E  3000               	movlw	0
  2557  011F  07C8               	addwf	ints_isr@n+1,f
  2558  0120  2878               	goto	i1l2019
  2559  0121                     i1l2021:	
  2560                           
  2561                           ;panda17.c: 102: }
  2562                           ;panda17.c: 103: printf("X");
  2563  0121  3057               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2564  0122  120A  118A  2357  120A  118A  	fcall	_printf
  2565                           
  2566                           ;panda17.c: 104: PORTBbits.RB4 = 0;
  2567  0127  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0128  1303               	bcf	3,6	;RP1=0, select bank0
  2569  0129  1206               	bcf	6,4	;volatile
  2570                           
  2571                           ;panda17.c: 105: break;
  2572  012A  29E6               	goto	i1l95
  2573  012B                     i1l2025:	
  2574                           ;panda17.c: 106: case 'b':
  2575                           
  2576                           
  2577                           ;panda17.c: 107: for (unsigned char z = 0;z<7;z++){
  2578  012B  01C3               	clrf	ints_isr@z
  2579  012C  3007               	movlw	7
  2580  012D  0243               	subwf	ints_isr@z,w
  2581  012E  1803               	btfsc	3,0
  2582  012F  294F               	goto	i1l2039
  2583  0130                     i1l99:	
  2584                           ;panda17.c: 108: while(!PIR1bits.RCIF);
  2585                           
  2586  0130  1E8C               	btfss	12,5	;volatile
  2587  0131  2930               	goto	i1l99
  2588                           
  2589                           ;panda17.c: 109: ferr = RCSTAbits.FERR;
  2590  0132  11DA               	bcf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2591  0133  1918               	btfsc	24,2	;volatile
  2592  0134  15DA               	bsf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2593                           
  2594                           ;panda17.c: 110: oerr = RCSTAbits.OERR;
  2595  0135  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0136  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0137  115A               	bcf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2598  0138  1898               	btfsc	24,1	;volatile
  2599  0139  155A               	bsf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2600                           
  2601                           ;panda17.c: 111: if (!ferr & !oerr){
  2602  013A  1283               	bcf	3,5	;RP0=0, select bank0
  2603  013B  1303               	bcf	3,6	;RP1=0, select bank0
  2604  013C  1DDA               	btfss	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2605  013D  195A               	btfsc	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2606  013E  2947               	goto	i1l2035
  2607                           
  2608                           ;panda17.c: 112: time[z] = RCREG;
  2609  013F  081A               	movf	26,w	;volatile
  2610  0140  00B4               	movwf	??_ints_isr
  2611  0141  0843               	movf	ints_isr@z,w
  2612  0142  3E53               	addlw	(low (_time| 0))& (0+255)
  2613  0143  0084               	movwf	4
  2614  0144  0834               	movf	??_ints_isr,w
  2615  0145  1383               	bcf	3,7	;select IRP bank0
  2616  0146  0080               	movwf	0
  2617  0147                     i1l2035:	
  2618  0147  3001               	movlw	1
  2619  0148  00B4               	movwf	??_ints_isr
  2620  0149  0834               	movf	??_ints_isr,w
  2621  014A  07C3               	addwf	ints_isr@z,f
  2622  014B  3007               	movlw	7
  2623  014C  0243               	subwf	ints_isr@z,w
  2624  014D  1C03               	skipc
  2625  014E  2930               	goto	i1l99
  2626  014F                     i1l2039:	
  2627                           
  2628                           ;panda17.c: 113: }
  2629                           ;panda17.c: 114: }
  2630                           ;panda17.c: 115: ds_set(time);
  2631  014F  3053               	movlw	(low (_time| 0))& (0+255)
  2632  0150  120A  158A  25E3  120A  118A  	fcall	_ds_set
  2633                           
  2634                           ;panda17.c: 116: break;
  2635  0155  29E6               	goto	i1l95
  2636  0156                     i1l103:	
  2637                           ;panda17.c: 117: case 'c':
  2638                           
  2639                           
  2640                           ;panda17.c: 118: PORTBbits.RB4 = 1;
  2641  0156  1606               	bsf	6,4	;volatile
  2642                           
  2643                           ;panda17.c: 119: mem_write(0x0002,0x00);
  2644  0157  3002               	movlw	2
  2645  0158  00FA               	movwf	i1mem_write@add
  2646  0159  3000               	movlw	0
  2647  015A  00FB               	movwf	i1mem_write@add+1
  2648  015B  01FC               	clrf	i1mem_write@data
  2649  015C  120A  158A  26D5  120A  118A  	fcall	i1_mem_write
  2650                           
  2651                           ;panda17.c: 120: mem_init();
  2652  0161  120A  158A  268F  120A  118A  	fcall	i1_mem_init
  2653                           
  2654                           ;panda17.c: 121: PORTBbits.RB4 = 0;
  2655  0166  1283               	bcf	3,5	;RP0=0, select bank0
  2656  0167  1303               	bcf	3,6	;RP1=0, select bank0
  2657  0168  1206               	bcf	6,4	;volatile
  2658                           
  2659                           ;panda17.c: 122: if ((mem_read(0x0002) == 0xAA) && (mem_read(0x000D) == 0x00)){
  2660  0169  3002               	movlw	2
  2661  016A  00FA               	movwf	i1mem_read@add
  2662  016B  3000               	movlw	0
  2663  016C  00FB               	movwf	i1mem_read@add+1
  2664  016D  120A  158A  2649  120A  118A  	fcall	i1_mem_read
  2665  0172  3AAA               	xorlw	170
  2666  0173  1D03               	skipz
  2667  0174  29E6               	goto	i1l95
  2668  0175  300D               	movlw	13
  2669  0176  00FA               	movwf	i1mem_read@add
  2670  0177  3000               	movlw	0
  2671  0178  00FB               	movwf	i1mem_read@add+1
  2672  0179  120A  158A  2649  120A  118A  	fcall	i1_mem_read
  2673  017E  3A00               	xorlw	0
  2674  017F  1D03               	skipz
  2675  0180  29E6               	goto	i1l95
  2676                           
  2677                           ;panda17.c: 123: printf("OK");
  2678  0181  3054               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2679  0182  120A  118A  2357  120A  118A  	fcall	_printf
  2680                           
  2681                           ;panda17.c: 124: }
  2682                           ;panda17.c: 125: break;
  2683  0187  29E6               	goto	i1l95
  2684  0188                     i1l2049:	
  2685                           ;panda17.c: 126: case 'd':
  2686                           
  2687                           
  2688                           ;panda17.c: 127: for (unsigned char k=0;k<7;k++){
  2689  0188  1283               	bcf	3,5	;RP0=0, select bank0
  2690  0189  1303               	bcf	3,6	;RP1=0, select bank0
  2691  018A  01C4               	clrf	ints_isr@k
  2692  018B                     L2:	
  2693  018B  3007               	movlw	7
  2694  018C  0244               	subwf	ints_isr@k,w
  2695  018D  1803               	btfsc	3,0
  2696  018E  29E6               	goto	i1l95
  2697                           
  2698                           ;panda17.c: 128: printf("%X ",ds_get(k));
  2699  018F  0844               	movf	ints_isr@k,w
  2700  0190  120A  158A  254D  120A  118A  	fcall	_ds_get
  2701  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2702  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2703  0197  00B4               	movwf	??_ints_isr
  2704  0198  01B5               	clrf	??_ints_isr+1
  2705  0199  0834               	movf	??_ints_isr,w
  2706  019A  00A4               	movwf	?_printf
  2707  019B  0835               	movf	??_ints_isr+1,w
  2708  019C  00A5               	movwf	?_printf+1
  2709  019D  3050               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2710  019E  120A  118A  2357  120A  118A  	fcall	_printf
  2711  01A3  3001               	movlw	1
  2712  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2713  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2714  01A6  00B4               	movwf	??_ints_isr
  2715  01A7  0834               	movf	??_ints_isr,w
  2716  01A8  07C4               	addwf	ints_isr@k,f
  2717  01A9  298B               	goto	L2
  2718  01AA                     i1l2061:	
  2719                           ;panda17.c: 131: case 'm':
  2720                           
  2721                           ;panda17.c: 129: }
  2722                           ;panda17.c: 130: break;
  2723                           
  2724                           
  2725                           ;panda17.c: 132: printf("I%04x;",si_read_h());
  2726  01AA  120A  118A  265E  120A  118A  	fcall	_si_read_h
  2727  01AF  087B               	movf	?_si_read_h+1,w
  2728  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2729  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  2730  01B2  00A5               	movwf	?_printf+1
  2731  01B3  087A               	movf	?_si_read_h,w
  2732  01B4  00A4               	movwf	?_printf
  2733  01B5  3044               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2734  01B6  120A  118A  2357  120A  118A  	fcall	_printf
  2735                           
  2736                           ;panda17.c: 133: printf("%04x",si_read_t());
  2737  01BB  120A  118A  2715  120A  118A  	fcall	_si_read_t
  2738  01C0  087B               	movf	?_si_read_t+1,w
  2739  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2740  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2741  01C3  00A5               	movwf	?_printf+1
  2742  01C4  087A               	movf	?_si_read_t,w
  2743  01C5  00A4               	movwf	?_printf
  2744  01C6  304B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2745  01C7  120A  118A  2357  120A  118A  	fcall	_printf
  2746                           
  2747                           ;panda17.c: 134: printf("X");
  2748  01CC  3057               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2749  01CD  120A  118A  2357  120A  118A  	fcall	_printf
  2750                           
  2751                           ;panda17.c: 137: }
  2752                           
  2753                           ;panda17.c: 135: break;
  2754  01D2  29E6               	goto	i1l95
  2755  01D3                     i1l2065:	
  2756  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2757  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2758  01D5  083C               	movf	ints_isr@rcv,w
  2759                           
  2760                           ; Switch size 1, requested type "space"
  2761                           ; Number of cases is 5, Range of values is 97 to 109
  2762                           ; switch strategies available:
  2763                           ; Name         Instructions Cycles
  2764                           ; simple_byte           16     9 (average)
  2765                           ; direct_byte           50    11 (fixed)
  2766                           ; jumptable            263     9 (fixed)
  2767                           ;	Chosen strategy is simple_byte
  2768  01D6  3A61               	xorlw	97	; case 97
  2769  01D7  1903               	skipnz
  2770  01D8  283E               	goto	i1l91
  2771  01D9  3A03               	xorlw	3	; case 98
  2772  01DA  1903               	skipnz
  2773  01DB  292B               	goto	i1l2025
  2774  01DC  3A01               	xorlw	1	; case 99
  2775  01DD  1903               	skipnz
  2776  01DE  2956               	goto	i1l103
  2777  01DF  3A07               	xorlw	7	; case 100
  2778  01E0  1903               	skipnz
  2779  01E1  2988               	goto	i1l2049
  2780  01E2  3A09               	xorlw	9	; case 109
  2781  01E3  1903               	skipnz
  2782  01E4  29AA               	goto	i1l2061
  2783  01E5  29E6               	goto	i1l95
  2784  01E6                     i1l95:	
  2785                           
  2786                           ;panda17.c: 138: INTCONbits.GIE = 1;
  2787  01E6  178B               	bsf	11,7	;volatile
  2788  01E7                     i1l84:	
  2789                           
  2790                           ;panda17.c: 139: }
  2791                           ;panda17.c: 143: if (PIR1bits.TMR2IF){
  2792  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2793  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2794  01E9  1C8C               	btfss	12,1	;volatile
  2795  01EA  2B4A               	goto	i1l115
  2796                           
  2797                           ;panda17.c: 144: PIR1bits.TMR2IF = 0;
  2798  01EB  108C               	bcf	12,1	;volatile
  2799                           
  2800                           ;panda17.c: 145: INTCONbits.GIE = 0;
  2801  01EC  138B               	bcf	11,7	;volatile
  2802                           
  2803                           ;panda17.c: 146: if (!PORTBbits.RB2){
  2804  01ED  1906               	btfsc	6,2	;volatile
  2805  01EE  29F6               	goto	i1l2075
  2806                           
  2807                           ;panda17.c: 147: led = 5;
  2808  01EF  3005               	movlw	5
  2809  01F0  00B4               	movwf	??_ints_isr
  2810  01F1  0834               	movf	??_ints_isr,w
  2811  01F2  00DB               	movwf	_led
  2812                           
  2813                           ;panda17.c: 148: milis = 0;
  2814  01F3  01D2               	clrf	_milis
  2815                           
  2816                           ;panda17.c: 149: secs = 0;
  2817  01F4  01D0               	clrf	_secs
  2818  01F5  01D1               	clrf	_secs+1
  2819  01F6                     i1l2075:	
  2820                           
  2821                           ;panda17.c: 150: }
  2822                           ;panda17.c: 151: if (PORTBbits.RB2){
  2823  01F6  1D06               	btfss	6,2	;volatile
  2824  01F7  2B49               	goto	i1l2145
  2825                           
  2826                           ;panda17.c: 152: milis++;
  2827  01F8  3001               	movlw	1
  2828  01F9  00B4               	movwf	??_ints_isr
  2829  01FA  0834               	movf	??_ints_isr,w
  2830  01FB  07D2               	addwf	_milis,f
  2831                           
  2832                           ;panda17.c: 153: if(milis > 24){
  2833  01FC  3019               	movlw	25
  2834  01FD  0252               	subwf	_milis,w
  2835  01FE  1C03               	skipc
  2836  01FF  2B49               	goto	i1l2145
  2837                           
  2838                           ;panda17.c: 154: if (led > 0){
  2839  0200  085B               	movf	_led,w
  2840  0201  1903               	btfsc	3,2
  2841  0202  2A07               	goto	i1l113
  2842                           
  2843                           ;panda17.c: 155: PORTBbits.RB4 = 1;
  2844  0203  1606               	bsf	6,4	;volatile
  2845                           
  2846                           ;panda17.c: 156: led--;
  2847  0204  3001               	movlw	1
  2848  0205  02DB               	subwf	_led,f
  2849                           
  2850                           ;panda17.c: 157: }
  2851  0206  2A08               	goto	i1l2087
  2852  0207                     i1l113:	
  2853                           
  2854                           ;panda17.c: 158: else {
  2855                           ;panda17.c: 159: PORTBbits.RB4 = 0;
  2856  0207  1206               	bcf	6,4	;volatile
  2857  0208                     i1l2087:	
  2858                           
  2859                           ;panda17.c: 160: }
  2860                           ;panda17.c: 161: secs++;
  2861  0208  3001               	movlw	1
  2862  0209  07D0               	addwf	_secs,f
  2863  020A  1803               	skipnc
  2864  020B  0AD1               	incf	_secs+1,f
  2865  020C  3000               	movlw	0
  2866  020D  07D1               	addwf	_secs+1,f
  2867                           
  2868                           ;panda17.c: 162: milis = 0;
  2869  020E  01D2               	clrf	_milis
  2870                           
  2871                           ;panda17.c: 164: secs = 0;
  2872  020F  01D0               	clrf	_secs
  2873  0210  01D1               	clrf	_secs+1
  2874                           
  2875                           ;panda17.c: 166: unsigned char arg;
  2876                           ;panda17.c: 167: unsigned int temp_add,hum_add,up;
  2877                           ;panda17.c: 168: unsigned int hum_val,temp_val;
  2878                           ;panda17.c: 170: hum_val = si_read_h();
  2879  0211  120A  118A  265E  120A  118A  	fcall	_si_read_h
  2880  0216  087B               	movf	?_si_read_h+1,w
  2881  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2882  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2883  0219  00BE               	movwf	ints_isr@hum_val+1
  2884  021A  087A               	movf	?_si_read_h,w
  2885  021B  00BD               	movwf	ints_isr@hum_val
  2886                           
  2887                           ;panda17.c: 171: temp_val = si_read_t();
  2888  021C  120A  118A  2715  120A  118A  	fcall	_si_read_t
  2889  0221  087B               	movf	?_si_read_t+1,w
  2890  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2891  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2892  0224  00C0               	movwf	ints_isr@temp_val+1
  2893  0225  087A               	movf	?_si_read_t,w
  2894  0226  00BF               	movwf	ints_isr@temp_val
  2895                           
  2896                           ;panda17.c: 173: hum_add = mem_read(0x000A);
  2897  0227  300A               	movlw	10
  2898  0228  00FA               	movwf	i1mem_read@add
  2899  0229  3000               	movlw	0
  2900  022A  00FB               	movwf	i1mem_read@add+1
  2901  022B  120A  158A  2649  120A  118A  	fcall	i1_mem_read
  2902  0230  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0231  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0232  00B4               	movwf	??_ints_isr
  2905  0233  01B5               	clrf	??_ints_isr+1
  2906  0234  0834               	movf	??_ints_isr,w
  2907  0235  00CD               	movwf	ints_isr@hum_add
  2908  0236  0835               	movf	??_ints_isr+1,w
  2909  0237  00CE               	movwf	ints_isr@hum_add+1
  2910                           
  2911                           ;panda17.c: 174: hum_add = hum_add << 8;
  2912  0238  084D               	movf	ints_isr@hum_add,w
  2913  0239  00B5               	movwf	??_ints_isr+1
  2914  023A  01B4               	clrf	??_ints_isr
  2915  023B  0834               	movf	??_ints_isr,w
  2916  023C  00CD               	movwf	ints_isr@hum_add
  2917  023D  0835               	movf	??_ints_isr+1,w
  2918  023E  00CE               	movwf	ints_isr@hum_add+1
  2919                           
  2920                           ;panda17.c: 175: hum_add += mem_read(0x000B);
  2921  023F  300B               	movlw	11
  2922  0240  00FA               	movwf	i1mem_read@add
  2923  0241  3000               	movlw	0
  2924  0242  00FB               	movwf	i1mem_read@add+1
  2925  0243  120A  158A  2649  120A  118A  	fcall	i1_mem_read
  2926  0248  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0249  1303               	bcf	3,6	;RP1=0, select bank0
  2928  024A  00B4               	movwf	??_ints_isr
  2929  024B  01B5               	clrf	??_ints_isr+1
  2930  024C  0834               	movf	??_ints_isr,w
  2931  024D  07CD               	addwf	ints_isr@hum_add,f
  2932  024E  1803               	skipnc
  2933  024F  0ACE               	incf	ints_isr@hum_add+1,f
  2934  0250  0835               	movf	??_ints_isr+1,w
  2935  0251  07CE               	addwf	ints_isr@hum_add+1,f
  2936                           
  2937                           ;panda17.c: 176: up = hum_add + 1;
  2938  0252  084D               	movf	ints_isr@hum_add,w
  2939  0253  3E01               	addlw	1
  2940  0254  00C5               	movwf	ints_isr@up
  2941  0255  084E               	movf	ints_isr@hum_add+1,w
  2942  0256  1803               	skipnc
  2943  0257  3E01               	addlw	1
  2944  0258  3E00               	addlw	0
  2945  0259  00C6               	movwf	ints_isr@up+1
  2946                           
  2947                           ;panda17.c: 177: arg = up >> 8;
  2948  025A  0846               	movf	ints_isr@up+1,w
  2949  025B  00B4               	movwf	??_ints_isr
  2950  025C  0834               	movf	??_ints_isr,w
  2951  025D  00CF               	movwf	ints_isr@arg
  2952                           
  2953                           ;panda17.c: 178: mem_write(0x000A,arg);
  2954  025E  300A               	movlw	10
  2955  025F  00FA               	movwf	i1mem_write@add
  2956  0260  3000               	movlw	0
  2957  0261  00FB               	movwf	i1mem_write@add+1
  2958  0262  084F               	movf	ints_isr@arg,w
  2959  0263  00B4               	movwf	??_ints_isr
  2960  0264  0834               	movf	??_ints_isr,w
  2961  0265  00FC               	movwf	i1mem_write@data
  2962  0266  120A  158A  26D5  120A  118A  	fcall	i1_mem_write
  2963                           
  2964                           ;panda17.c: 179: arg = up & 0x00FF;
  2965  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2966  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2967  026D  0845               	movf	ints_isr@up,w
  2968  026E  00B4               	movwf	??_ints_isr
  2969  026F  0834               	movf	??_ints_isr,w
  2970  0270  00CF               	movwf	ints_isr@arg
  2971                           
  2972                           ;panda17.c: 180: mem_write(0x000B,arg);
  2973  0271  300B               	movlw	11
  2974  0272  00FA               	movwf	i1mem_write@add
  2975  0273  3000               	movlw	0
  2976  0274  00FB               	movwf	i1mem_write@add+1
  2977  0275  084F               	movf	ints_isr@arg,w
  2978  0276  00B4               	movwf	??_ints_isr
  2979  0277  0834               	movf	??_ints_isr,w
  2980  0278  00FC               	movwf	i1mem_write@data
  2981  0279  120A  158A  26D5  120A  118A  	fcall	i1_mem_write
  2982                           
  2983                           ;panda17.c: 181: hum_add = (hum_add * 2) + 1 + 0x000F;
  2984  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2985  027F  1303               	bcf	3,6	;RP1=0, select bank0
  2986  0280  084E               	movf	ints_isr@hum_add+1,w
  2987  0281  00B5               	movwf	??_ints_isr+1
  2988  0282  084D               	movf	ints_isr@hum_add,w
  2989  0283  00B4               	movwf	??_ints_isr
  2990  0284  1003               	clrc
  2991  0285  0DB4               	rlf	??_ints_isr,f
  2992  0286  0DB5               	rlf	??_ints_isr+1,f
  2993  0287  0834               	movf	??_ints_isr,w
  2994  0288  3E10               	addlw	16
  2995  0289  00CD               	movwf	ints_isr@hum_add
  2996  028A  0835               	movf	??_ints_isr+1,w
  2997  028B  1803               	skipnc
  2998  028C  3E01               	addlw	1
  2999  028D  3E00               	addlw	0
  3000  028E  00CE               	movwf	ints_isr@hum_add+1
  3001                           
  3002                           ;panda17.c: 182: temp_add = mem_read(0x000C);
  3003  028F  300C               	movlw	12
  3004  0290  00FA               	movwf	i1mem_read@add
  3005  0291  3000               	movlw	0
  3006  0292  00FB               	movwf	i1mem_read@add+1
  3007  0293  120A  158A  2649  120A  118A  	fcall	i1_mem_read
  3008  0298  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0299  1303               	bcf	3,6	;RP1=0, select bank0
  3010  029A  00B4               	movwf	??_ints_isr
  3011  029B  01B5               	clrf	??_ints_isr+1
  3012  029C  0834               	movf	??_ints_isr,w
  3013  029D  00CB               	movwf	ints_isr@temp_add
  3014  029E  0835               	movf	??_ints_isr+1,w
  3015  029F  00CC               	movwf	ints_isr@temp_add+1
  3016                           
  3017                           ;panda17.c: 183: temp_add = temp_add << 8;
  3018  02A0  084B               	movf	ints_isr@temp_add,w
  3019  02A1  00B5               	movwf	??_ints_isr+1
  3020  02A2  01B4               	clrf	??_ints_isr
  3021  02A3  0834               	movf	??_ints_isr,w
  3022  02A4  00CB               	movwf	ints_isr@temp_add
  3023  02A5  0835               	movf	??_ints_isr+1,w
  3024  02A6  00CC               	movwf	ints_isr@temp_add+1
  3025                           
  3026                           ;panda17.c: 184: temp_add += mem_read(0x000D);
  3027  02A7  300D               	movlw	13
  3028  02A8  00FA               	movwf	i1mem_read@add
  3029  02A9  3000               	movlw	0
  3030  02AA  00FB               	movwf	i1mem_read@add+1
  3031  02AB  120A  158A  2649  120A  118A  	fcall	i1_mem_read
  3032  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  3033  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  3034  02B2  00B4               	movwf	??_ints_isr
  3035  02B3  01B5               	clrf	??_ints_isr+1
  3036  02B4  0834               	movf	??_ints_isr,w
  3037  02B5  07CB               	addwf	ints_isr@temp_add,f
  3038  02B6  1803               	skipnc
  3039  02B7  0ACC               	incf	ints_isr@temp_add+1,f
  3040  02B8  0835               	movf	??_ints_isr+1,w
  3041  02B9  07CC               	addwf	ints_isr@temp_add+1,f
  3042                           
  3043                           ;panda17.c: 185: up = temp_add + 1;
  3044  02BA  084B               	movf	ints_isr@temp_add,w
  3045  02BB  3E01               	addlw	1
  3046  02BC  00C5               	movwf	ints_isr@up
  3047  02BD  084C               	movf	ints_isr@temp_add+1,w
  3048  02BE  1803               	skipnc
  3049  02BF  3E01               	addlw	1
  3050  02C0  3E00               	addlw	0
  3051  02C1  00C6               	movwf	ints_isr@up+1
  3052                           
  3053                           ;panda17.c: 186: arg = up >> 8;
  3054  02C2  0846               	movf	ints_isr@up+1,w
  3055  02C3  00B4               	movwf	??_ints_isr
  3056  02C4  0834               	movf	??_ints_isr,w
  3057  02C5  00CF               	movwf	ints_isr@arg
  3058                           
  3059                           ;panda17.c: 187: mem_write(0x000C,arg);
  3060  02C6  300C               	movlw	12
  3061  02C7  00FA               	movwf	i1mem_write@add
  3062  02C8  3000               	movlw	0
  3063  02C9  00FB               	movwf	i1mem_write@add+1
  3064  02CA  084F               	movf	ints_isr@arg,w
  3065  02CB  00B4               	movwf	??_ints_isr
  3066  02CC  0834               	movf	??_ints_isr,w
  3067  02CD  00FC               	movwf	i1mem_write@data
  3068  02CE  120A  158A  26D5  120A  118A  	fcall	i1_mem_write
  3069                           
  3070                           ;panda17.c: 188: arg = up & 0x00FF;
  3071  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  3072  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  3073  02D5  0845               	movf	ints_isr@up,w
  3074  02D6  00B4               	movwf	??_ints_isr
  3075  02D7  0834               	movf	??_ints_isr,w
  3076  02D8  00CF               	movwf	ints_isr@arg
  3077                           
  3078                           ;panda17.c: 189: mem_write(0x000D,arg);
  3079  02D9  300D               	movlw	13
  3080  02DA  00FA               	movwf	i1mem_write@add
  3081  02DB  3000               	movlw	0
  3082  02DC  00FB               	movwf	i1mem_write@add+1
  3083  02DD  084F               	movf	ints_isr@arg,w
  3084  02DE  00B4               	movwf	??_ints_isr
  3085  02DF  0834               	movf	??_ints_isr,w
  3086  02E0  00FC               	movwf	i1mem_write@data
  3087  02E1  120A  158A  26D5  120A  118A  	fcall	i1_mem_write
  3088                           
  3089                           ;panda17.c: 190: temp_add = (temp_add * 2) + 1 + 0x7FF6;
  3090  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  3091  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  3092  02E8  084C               	movf	ints_isr@temp_add+1,w
  3093  02E9  00B5               	movwf	??_ints_isr+1
  3094  02EA  084B               	movf	ints_isr@temp_add,w
  3095  02EB  00B4               	movwf	??_ints_isr
  3096  02EC  1003               	clrc
  3097  02ED  0DB4               	rlf	??_ints_isr,f
  3098  02EE  0DB5               	rlf	??_ints_isr+1,f
  3099  02EF  0834               	movf	??_ints_isr,w
  3100  02F0  3EF7               	addlw	247
  3101  02F1  00CB               	movwf	ints_isr@temp_add
  3102  02F2  0835               	movf	??_ints_isr+1,w
  3103  02F3  1803               	skipnc
  3104  02F4  3E01               	addlw	1
  3105  02F5  3E7F               	addlw	127
  3106  02F6  00CC               	movwf	ints_isr@temp_add+1
  3107                           
  3108                           ;panda17.c: 192: arg = hum_val >> 8;
  3109  02F7  083E               	movf	ints_isr@hum_val+1,w
  3110  02F8  00B4               	movwf	??_ints_isr
  3111  02F9  0834               	movf	??_ints_isr,w
  3112  02FA  00CF               	movwf	ints_isr@arg
  3113                           
  3114                           ;panda17.c: 193: mem_write(hum_add,arg);
  3115  02FB  084E               	movf	ints_isr@hum_add+1,w
  3116  02FC  00FB               	movwf	i1mem_write@add+1
  3117  02FD  084D               	movf	ints_isr@hum_add,w
  3118  02FE  00FA               	movwf	i1mem_write@add
  3119  02FF  084F               	movf	ints_isr@arg,w
  3120  0300  00B4               	movwf	??_ints_isr
  3121  0301  0834               	movf	??_ints_isr,w
  3122  0302  00FC               	movwf	i1mem_write@data
  3123  0303  120A  158A  26D5  120A  118A  	fcall	i1_mem_write
  3124                           
  3125                           ;panda17.c: 194: arg = hum_val & 0x00FF;
  3126  0308  1283               	bcf	3,5	;RP0=0, select bank0
  3127  0309  1303               	bcf	3,6	;RP1=0, select bank0
  3128  030A  083D               	movf	ints_isr@hum_val,w
  3129  030B  00B4               	movwf	??_ints_isr
  3130  030C  0834               	movf	??_ints_isr,w
  3131  030D  00CF               	movwf	ints_isr@arg
  3132                           
  3133                           ;panda17.c: 195: mem_write(hum_add + 1,arg);
  3134  030E  084D               	movf	ints_isr@hum_add,w
  3135  030F  3E01               	addlw	1
  3136  0310  00FA               	movwf	i1mem_write@add
  3137  0311  084E               	movf	ints_isr@hum_add+1,w
  3138  0312  1803               	skipnc
  3139  0313  3E01               	addlw	1
  3140  0314  3E00               	addlw	0
  3141  0315  00FB               	movwf	i1mem_write@add+1
  3142  0316  084F               	movf	ints_isr@arg,w
  3143  0317  00B4               	movwf	??_ints_isr
  3144  0318  0834               	movf	??_ints_isr,w
  3145  0319  00FC               	movwf	i1mem_write@data
  3146  031A  120A  158A  26D5  120A  118A  	fcall	i1_mem_write
  3147                           
  3148                           ;panda17.c: 196: arg = (temp_val >> 8) & 0x00FF;
  3149  031F  1283               	bcf	3,5	;RP0=0, select bank0
  3150  0320  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0321  0840               	movf	ints_isr@temp_val+1,w
  3152  0322  00B4               	movwf	??_ints_isr
  3153  0323  0834               	movf	??_ints_isr,w
  3154  0324  00CF               	movwf	ints_isr@arg
  3155                           
  3156                           ;panda17.c: 197: mem_write(temp_add,arg);
  3157  0325  084C               	movf	ints_isr@temp_add+1,w
  3158  0326  00FB               	movwf	i1mem_write@add+1
  3159  0327  084B               	movf	ints_isr@temp_add,w
  3160  0328  00FA               	movwf	i1mem_write@add
  3161  0329  084F               	movf	ints_isr@arg,w
  3162  032A  00B4               	movwf	??_ints_isr
  3163  032B  0834               	movf	??_ints_isr,w
  3164  032C  00FC               	movwf	i1mem_write@data
  3165  032D  120A  158A  26D5  120A  118A  	fcall	i1_mem_write
  3166                           
  3167                           ;panda17.c: 198: arg = temp_val & 0x00FF;
  3168  0332  1283               	bcf	3,5	;RP0=0, select bank0
  3169  0333  1303               	bcf	3,6	;RP1=0, select bank0
  3170  0334  083F               	movf	ints_isr@temp_val,w
  3171  0335  00B4               	movwf	??_ints_isr
  3172  0336  0834               	movf	??_ints_isr,w
  3173  0337  00CF               	movwf	ints_isr@arg
  3174                           
  3175                           ;panda17.c: 199: mem_write(temp_add + 1,arg);
  3176  0338  084B               	movf	ints_isr@temp_add,w
  3177  0339  3E01               	addlw	1
  3178  033A  00FA               	movwf	i1mem_write@add
  3179  033B  084C               	movf	ints_isr@temp_add+1,w
  3180  033C  1803               	skipnc
  3181  033D  3E01               	addlw	1
  3182  033E  3E00               	addlw	0
  3183  033F  00FB               	movwf	i1mem_write@add+1
  3184  0340  084F               	movf	ints_isr@arg,w
  3185  0341  00B4               	movwf	??_ints_isr
  3186  0342  0834               	movf	??_ints_isr,w
  3187  0343  00FC               	movwf	i1mem_write@data
  3188  0344  120A  158A  26D5  120A  118A  	fcall	i1_mem_write
  3189  0349                     i1l2145:	
  3190                           
  3191                           ;panda17.c: 202: }
  3192                           ;panda17.c: 203: }
  3193                           ;panda17.c: 204: INTCONbits.GIE = 1;
  3194  0349  178B               	bsf	11,7	;volatile
  3195  034A                     i1l115:	
  3196  034A  1283               	bcf	3,5	;RP0=0, select bank0
  3197  034B  1303               	bcf	3,6	;RP1=0, select bank0
  3198  034C  083B               	movf	??_ints_isr+7,w
  3199  034D  00FF               	movwf	127
  3200  034E  083A               	movf	??_ints_isr+6,w
  3201  034F  008A               	movwf	10
  3202  0350  0839               	movf	??_ints_isr+5,w
  3203  0351  0084               	movwf	4
  3204  0352  0E38               	swapf	(??_ints_isr+4)^0,w
  3205  0353  0083               	movwf	3
  3206  0354  0EFE               	swapf	126,f
  3207  0355  0E7E               	swapf	126,w
  3208  0356  0009               	retfie
  3209  0357                     __end_of_ints_isr:	
  3210                           
  3211                           	psect	intentry
  3212  0004                     __pintentry:	
  3213                           ;incstack = 0
  3214                           ; Regs used in _ints_isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3215                           
  3216  0004                     interrupt_function:	
  3217  007E                     saved_w	set	btemp
  3218  0004  00FE               	movwf	btemp
  3219  0005  0E03               	swapf	3,w
  3220  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3221  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3222  0008  00B8               	movwf	??_ints_isr+4
  3223  0009  0804               	movf	4,w
  3224  000A  00B9               	movwf	??_ints_isr+5
  3225  000B  080A               	movf	10,w
  3226  000C  00BA               	movwf	??_ints_isr+6
  3227  000D  087F               	movf	btemp+1,w
  3228  000E  00BB               	movwf	??_ints_isr+7
  3229  000F  120A  118A  2828   	ljmp	_ints_isr
  3230                           
  3231                           	psect	text13
  3232  0E8F                     __ptext13:	
  3233 ;; *************** function i1_mem_init *****************
  3234 ;; Defined at:
  3235 ;;		line 41 in file "panda17.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;		None
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  mem_init        1    4[BANK0 ] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0, pclath, cstack
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3249 ;;      Params:         0       0       0       0       0
  3250 ;;      Locals:         0       1       0       0       0
  3251 ;;      Temps:          0       1       0       0       0
  3252 ;;      Totals:         0       2       0       0       0
  3253 ;;Total ram usage:        2 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; Hardware stack levels required when called:    2
  3256 ;; This function calls:
  3257 ;;		i1_mem_read
  3258 ;;		i1_mem_write
  3259 ;; This function is called by:
  3260 ;;		_ints_isr
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           
  3265                           ;psect for function i1_mem_init
  3266  0E8F                     i1_mem_init:	
  3267                           
  3268                           ;panda17.c: 42: unsigned char aux;
  3269                           ;panda17.c: 43: aux = mem_read(0x0002);
  3270                           
  3271                           ;incstack = 0
  3272                           ; Regs used in i1_mem_init: [wreg+status,2+status,0+pclath+cstack]
  3273  0E8F  3002               	movlw	2
  3274  0E90  00FA               	movwf	i1mem_read@add
  3275  0E91  3000               	movlw	0
  3276  0E92  00FB               	movwf	i1mem_read@add+1
  3277  0E93  120A  158A  2649  120A  158A  	fcall	i1_mem_read
  3278  0E98  1283               	bcf	3,5	;RP0=0, select bank0
  3279  0E99  1303               	bcf	3,6	;RP1=0, select bank0
  3280  0E9A  00A3               	movwf	??i1_mem_init
  3281  0E9B  0823               	movf	??i1_mem_init,w
  3282  0E9C  00A4               	movwf	i1mem_init@aux
  3283                           
  3284                           ;panda17.c: 44: if (aux != 0xAA){
  3285  0E9D  30AA               	movlw	170
  3286  0E9E  0624               	xorwf	i1mem_init@aux,w
  3287  0E9F  1903               	btfsc	3,2
  3288  0EA0  0008               	return
  3289                           
  3290                           ;panda17.c: 45: mem_write(0x0002,0xAA);
  3291  0EA1  3002               	movlw	2
  3292  0EA2  00FA               	movwf	i1mem_write@add
  3293  0EA3  3000               	movlw	0
  3294  0EA4  00FB               	movwf	i1mem_write@add+1
  3295  0EA5  30AA               	movlw	170
  3296  0EA6  00A3               	movwf	??i1_mem_init
  3297  0EA7  0823               	movf	??i1_mem_init,w
  3298  0EA8  00FC               	movwf	i1mem_write@data
  3299  0EA9  120A  158A  26D5  120A  158A  	fcall	i1_mem_write
  3300                           
  3301                           ;panda17.c: 46: mem_write(0x000A,0x00);
  3302  0EAE  300A               	movlw	10
  3303  0EAF  00FA               	movwf	i1mem_write@add
  3304  0EB0  3000               	movlw	0
  3305  0EB1  00FB               	movwf	i1mem_write@add+1
  3306  0EB2  01FC               	clrf	i1mem_write@data
  3307  0EB3  120A  158A  26D5  120A  158A  	fcall	i1_mem_write
  3308                           
  3309                           ;panda17.c: 47: mem_write(0x000B,0x00);
  3310  0EB8  300B               	movlw	11
  3311  0EB9  00FA               	movwf	i1mem_write@add
  3312  0EBA  3000               	movlw	0
  3313  0EBB  00FB               	movwf	i1mem_write@add+1
  3314  0EBC  01FC               	clrf	i1mem_write@data
  3315  0EBD  120A  158A  26D5  120A  158A  	fcall	i1_mem_write
  3316                           
  3317                           ;panda17.c: 48: mem_write(0x000C,0x00);
  3318  0EC2  300C               	movlw	12
  3319  0EC3  00FA               	movwf	i1mem_write@add
  3320  0EC4  3000               	movlw	0
  3321  0EC5  00FB               	movwf	i1mem_write@add+1
  3322  0EC6  01FC               	clrf	i1mem_write@data
  3323  0EC7  120A  158A  26D5  120A  158A  	fcall	i1_mem_write
  3324                           
  3325                           ;panda17.c: 49: mem_write(0x000D,0x00);
  3326  0ECC  300D               	movlw	13
  3327  0ECD  00FA               	movwf	i1mem_write@add
  3328  0ECE  3000               	movlw	0
  3329  0ECF  00FB               	movwf	i1mem_write@add+1
  3330  0ED0  01FC               	clrf	i1mem_write@data
  3331  0ED1  120A  158A  26D5   	fcall	i1_mem_write
  3332  0ED4  0008               	return
  3333  0ED5                     __end_ofi1_mem_init:	
  3334                           
  3335                           	psect	text14
  3336  0ED5                     __ptext14:	
  3337 ;; *************** function i1_mem_write *****************
  3338 ;; Defined at:
  3339 ;;		line 13 in file "24lc512.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;  add             2   10[COMMON] unsigned int 
  3342 ;;  data            1   12[COMMON] unsigned char 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  mem_write       1    1[BANK0 ] unsigned char 
  3345 ;;  mem_write       1    0[BANK0 ] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0, pclath, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3355 ;;      Params:         3       0       0       0       0
  3356 ;;      Locals:         0       2       0       0       0
  3357 ;;      Temps:          1       0       0       0       0
  3358 ;;      Totals:         4       2       0       0       0
  3359 ;;Total ram usage:        6 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    1
  3362 ;; This function calls:
  3363 ;;		i1_i2c_start
  3364 ;;		i1_i2c_stop
  3365 ;;		i1_i2c_write
  3366 ;; This function is called by:
  3367 ;;		_ints_isr
  3368 ;;		i1_mem_init
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           
  3373                           ;psect for function i1_mem_write
  3374  0ED5                     i1_mem_write:	
  3375                           
  3376                           ;24lc512.c: 14: unsigned char add_h,add_l;
  3377                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  3378                           
  3379                           ;incstack = 0
  3380                           ; Regs used in i1_mem_write: [wreg+status,2+status,0+pclath+cstack]
  3381  0ED5  087B               	movf	i1mem_write@add+1,w
  3382  0ED6  00FD               	movwf	??i1_mem_write
  3383  0ED7  087D               	movf	??i1_mem_write,w
  3384  0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0EDA  00A0               	movwf	i1mem_write@add_h
  3387                           
  3388                           ;24lc512.c: 16: add_l = add & 0x00FF;
  3389  0EDB  087A               	movf	i1mem_write@add,w
  3390  0EDC  00FD               	movwf	??i1_mem_write
  3391  0EDD  087D               	movf	??i1_mem_write,w
  3392  0EDE  00A1               	movwf	i1mem_write@add_l
  3393                           
  3394                           ;24lc512.c: 17: i2c_start();
  3395  0EDF  120A  158A  24C1  120A  158A  	fcall	i1_i2c_start
  3396                           
  3397                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  3398  0EE4  01F0               	clrf	i1i2c_write@ack
  3399  0EE5  30A0               	movlw	160
  3400  0EE6  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  3401                           
  3402                           ;24lc512.c: 19: i2c_write(add_h,0);
  3403  0EEB  01F0               	clrf	i1i2c_write@ack
  3404  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0EEE  0820               	movf	i1mem_write@add_h,w
  3407  0EEF  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  3408                           
  3409                           ;24lc512.c: 20: i2c_write(add_l,0);
  3410  0EF4  01F0               	clrf	i1i2c_write@ack
  3411  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0EF7  0821               	movf	i1mem_write@add_l,w
  3414  0EF8  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  3415                           
  3416                           ;24lc512.c: 21: i2c_write(data,0);
  3417  0EFD  01F0               	clrf	i1i2c_write@ack
  3418  0EFE  087C               	movf	i1mem_write@data,w
  3419  0EFF  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  3420                           
  3421                           ;24lc512.c: 22: i2c_stop();
  3422  0F04  120A  158A  24E4  120A  158A  	fcall	i1_i2c_stop
  3423  0F09                     L3:	
  3424                           
  3425                           ;24lc512.c: 24: i2c_start();
  3426  0F09  120A  158A  24C1  120A  158A  	fcall	i1_i2c_start
  3427                           
  3428                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  3429  0F0E  01F0               	clrf	i1i2c_write@ack
  3430  0F0F  30A0               	movlw	160
  3431  0F10  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  3432                           
  3433                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  3434  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  3435  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  3436  0F17  1B11               	btfsc	17,6	;volatile
  3437  0F18  2F09               	goto	L3
  3438                           
  3439                           ;24lc512.c: 30: }
  3440                           ;24lc512.c: 31: i2c_stop();
  3441                           
  3442                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  3443                           
  3444                           ;24lc512.c: 28: i2c_start();
  3445  0F19  120A  158A  24E4   	fcall	i1_i2c_stop
  3446  0F1C  0008               	return
  3447  0F1D                     __end_ofi1_mem_write:	
  3448                           
  3449                           	psect	text15
  3450  0E49                     __ptext15:	
  3451 ;; *************** function i1_mem_read *****************
  3452 ;; Defined at:
  3453 ;;		line 34 in file "24lc512.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  add             2   10[COMMON] unsigned int 
  3456 ;; Auto vars:     Size  Location     Type
  3457 ;;  mem_read        1    2[BANK0 ] unsigned char 
  3458 ;;  mem_read        1    1[BANK0 ] unsigned char 
  3459 ;;  mem_read        1    0[BANK0 ] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      unsigned char 
  3462 ;; Registers used:
  3463 ;;		wreg, status,2, status,0, pclath, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3469 ;;      Params:         2       0       0       0       0
  3470 ;;      Locals:         0       3       0       0       0
  3471 ;;      Temps:          1       0       0       0       0
  3472 ;;      Totals:         3       3       0       0       0
  3473 ;;Total ram usage:        6 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    1
  3476 ;; This function calls:
  3477 ;;		i1_i2c_read
  3478 ;;		i1_i2c_start
  3479 ;;		i1_i2c_stop
  3480 ;;		i1_i2c_write
  3481 ;; This function is called by:
  3482 ;;		_ints_isr
  3483 ;;		i1_mem_init
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           
  3488                           ;psect for function i1_mem_read
  3489  0E49                     i1_mem_read:	
  3490                           
  3491                           ;24lc512.c: 35: unsigned char rta;
  3492                           ;24lc512.c: 36: unsigned char add_h,add_l;
  3493                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  3494                           
  3495                           ;incstack = 0
  3496                           ; Regs used in i1_mem_read: [wreg+status,2+status,0+pclath+cstack]
  3497  0E49  087B               	movf	i1mem_read@add+1,w
  3498  0E4A  00FC               	movwf	??i1_mem_read
  3499  0E4B  087C               	movf	??i1_mem_read,w
  3500  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3501  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  3502  0E4E  00A1               	movwf	i1mem_read@add_h
  3503                           
  3504                           ;24lc512.c: 38: add_l = add & 0x00FF;
  3505  0E4F  087A               	movf	i1mem_read@add,w
  3506  0E50  00FC               	movwf	??i1_mem_read
  3507  0E51  087C               	movf	??i1_mem_read,w
  3508  0E52  00A2               	movwf	i1mem_read@add_l
  3509                           
  3510                           ;24lc512.c: 39: i2c_start();
  3511  0E53  120A  158A  24C1  120A  158A  	fcall	i1_i2c_start
  3512                           
  3513                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  3514  0E58  01F0               	clrf	i1i2c_write@ack
  3515  0E59  30A0               	movlw	160
  3516  0E5A  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  3517                           
  3518                           ;24lc512.c: 41: i2c_write(add_h,0);
  3519  0E5F  01F0               	clrf	i1i2c_write@ack
  3520  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  3521  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  3522  0E62  0821               	movf	i1mem_read@add_h,w
  3523  0E63  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  3524                           
  3525                           ;24lc512.c: 42: i2c_write(add_l,0);
  3526  0E68  01F0               	clrf	i1i2c_write@ack
  3527  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  3529  0E6B  0822               	movf	i1mem_read@add_l,w
  3530  0E6C  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  3531                           
  3532                           ;24lc512.c: 43: i2c_start();
  3533  0E71  120A  158A  24C1  120A  158A  	fcall	i1_i2c_start
  3534                           
  3535                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  3536  0E76  01F0               	clrf	i1i2c_write@ack
  3537  0E77  30A1               	movlw	161
  3538  0E78  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  3539                           
  3540                           ;24lc512.c: 45: rta = i2c_read(0);
  3541  0E7D  3000               	movlw	0
  3542  0E7E  120A  118A  26BB  120A  158A  	fcall	i1_i2c_read
  3543  0E83  00FC               	movwf	??i1_mem_read
  3544  0E84  087C               	movf	??i1_mem_read,w
  3545  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0E87  00A0               	movwf	i1mem_read@rta
  3548                           
  3549                           ;24lc512.c: 46: i2c_stop();
  3550  0E88  120A  158A  24E4   	fcall	i1_i2c_stop
  3551                           
  3552                           ;24lc512.c: 47: return rta;
  3553  0E8B  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0E8C  1303               	bcf	3,6	;RP1=0, select bank0
  3555  0E8D  0820               	movf	i1mem_read@rta,w
  3556  0E8E  0008               	return
  3557  0E8F                     __end_ofi1_mem_read:	
  3558                           
  3559                           	psect	text16
  3560  0715                     __ptext16:	
  3561 ;; *************** function _si_read_t *****************
  3562 ;; Defined at:
  3563 ;;		line 37 in file "si7021.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;  rta             2    2[BANK0 ] unsigned int 
  3568 ;;  rta_l           1    1[BANK0 ] unsigned char 
  3569 ;;  rta_h           1    0[BANK0 ] unsigned char 
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  2   10[COMMON] int 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0, pclath, cstack
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3579 ;;      Params:         2       0       0       0       0
  3580 ;;      Locals:         0       4       0       0       0
  3581 ;;      Temps:          2       0       0       0       0
  3582 ;;      Totals:         4       4       0       0       0
  3583 ;;Total ram usage:        8 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; Hardware stack levels required when called:    1
  3586 ;; This function calls:
  3587 ;;		_i2c_rstart
  3588 ;;		i1_i2c_read
  3589 ;;		i1_i2c_start
  3590 ;;		i1_i2c_stop
  3591 ;;		i1_i2c_write
  3592 ;; This function is called by:
  3593 ;;		_ints_isr
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           
  3598                           ;psect for function _si_read_t
  3599  0715                     _si_read_t:	
  3600                           
  3601                           ;si7021.c: 38: unsigned int rta;
  3602                           ;si7021.c: 39: unsigned char rta_h,rta_l;
  3603                           ;si7021.c: 40: i2c_start();
  3604                           
  3605                           ;incstack = 0
  3606                           ; Regs used in _si_read_t: [wreg+status,2+status,0+pclath+cstack]
  3607  0715  120A  158A  24C1  120A  118A  	fcall	i1_i2c_start
  3608                           
  3609                           ;si7021.c: 41: i2c_write(0x80,1);
  3610  071A  01F0               	clrf	i1i2c_write@ack
  3611  071B  0AF0               	incf	i1i2c_write@ack,f
  3612  071C  3080               	movlw	128
  3613  071D  120A  158A  25B0  120A  118A  	fcall	i1_i2c_write
  3614                           
  3615                           ;si7021.c: 42: i2c_write(0xE3,1);
  3616  0722  01F0               	clrf	i1i2c_write@ack
  3617  0723  0AF0               	incf	i1i2c_write@ack,f
  3618  0724  30E3               	movlw	227
  3619  0725  120A  158A  25B0  120A  118A  	fcall	i1_i2c_write
  3620                           
  3621                           ;si7021.c: 43: i2c_rstart();
  3622  072A  120A  158A  249E  120A  118A  	fcall	_i2c_rstart
  3623                           
  3624                           ;si7021.c: 44: i2c_write(0x81,1);
  3625  072F  01F0               	clrf	i1i2c_write@ack
  3626  0730  0AF0               	incf	i1i2c_write@ack,f
  3627  0731  3081               	movlw	129
  3628  0732  120A  158A  25B0  120A  118A  	fcall	i1_i2c_write
  3629                           
  3630                           ;si7021.c: 45: rta_h = i2c_read(1);
  3631  0737  3001               	movlw	1
  3632  0738  120A  118A  26BB  120A  118A  	fcall	i1_i2c_read
  3633  073D  00FC               	movwf	??_si_read_t
  3634  073E  087C               	movf	??_si_read_t,w
  3635  073F  1283               	bcf	3,5	;RP0=0, select bank0
  3636  0740  1303               	bcf	3,6	;RP1=0, select bank0
  3637  0741  00A0               	movwf	si_read_t@rta_h
  3638                           
  3639                           ;si7021.c: 46: rta_l = i2c_read(3);
  3640  0742  3003               	movlw	3
  3641  0743  120A  118A  26BB  120A  118A  	fcall	i1_i2c_read
  3642  0748  00FC               	movwf	??_si_read_t
  3643  0749  087C               	movf	??_si_read_t,w
  3644  074A  1283               	bcf	3,5	;RP0=0, select bank0
  3645  074B  1303               	bcf	3,6	;RP1=0, select bank0
  3646  074C  00A1               	movwf	si_read_t@rta_l
  3647                           
  3648                           ;si7021.c: 47: i2c_stop();
  3649  074D  120A  158A  24E4   	fcall	i1_i2c_stop
  3650                           
  3651                           ;si7021.c: 48: rta = rta_h;
  3652  0750  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0751  1303               	bcf	3,6	;RP1=0, select bank0
  3654  0752  0820               	movf	si_read_t@rta_h,w
  3655  0753  00FC               	movwf	??_si_read_t
  3656  0754  01FD               	clrf	??_si_read_t+1
  3657  0755  087C               	movf	??_si_read_t,w
  3658  0756  00A2               	movwf	si_read_t@rta
  3659  0757  087D               	movf	??_si_read_t+1,w
  3660  0758  00A3               	movwf	si_read_t@rta+1
  3661                           
  3662                           ;si7021.c: 49: rta = rta << 8;
  3663  0759  0822               	movf	si_read_t@rta,w
  3664  075A  00FD               	movwf	??_si_read_t+1
  3665  075B  01FC               	clrf	??_si_read_t
  3666  075C  087C               	movf	??_si_read_t,w
  3667  075D  00A2               	movwf	si_read_t@rta
  3668  075E  087D               	movf	??_si_read_t+1,w
  3669  075F  00A3               	movwf	si_read_t@rta+1
  3670                           
  3671                           ;si7021.c: 50: rta += rta_l;
  3672  0760  0821               	movf	si_read_t@rta_l,w
  3673  0761  00FC               	movwf	??_si_read_t
  3674  0762  01FD               	clrf	??_si_read_t+1
  3675  0763  087C               	movf	??_si_read_t,w
  3676  0764  07A2               	addwf	si_read_t@rta,f
  3677  0765  1803               	skipnc
  3678  0766  0AA3               	incf	si_read_t@rta+1,f
  3679  0767  087D               	movf	??_si_read_t+1,w
  3680  0768  07A3               	addwf	si_read_t@rta+1,f
  3681                           
  3682                           ;si7021.c: 51: return rta;
  3683  0769  0823               	movf	si_read_t@rta+1,w
  3684  076A  00FB               	movwf	?_si_read_t+1
  3685  076B  0822               	movf	si_read_t@rta,w
  3686  076C  00FA               	movwf	?_si_read_t
  3687  076D  0008               	return
  3688  076E                     __end_of_si_read_t:	
  3689                           
  3690                           	psect	text17
  3691  065E                     __ptext17:	
  3692 ;; *************** function _si_read_h *****************
  3693 ;; Defined at:
  3694 ;;		line 20 in file "si7021.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;  rta             2    2[BANK0 ] unsigned int 
  3699 ;;  rta_l           1    1[BANK0 ] unsigned char 
  3700 ;;  rta_h           1    0[BANK0 ] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  2   10[COMMON] int 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0, pclath, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3710 ;;      Params:         2       0       0       0       0
  3711 ;;      Locals:         0       4       0       0       0
  3712 ;;      Temps:          2       0       0       0       0
  3713 ;;      Totals:         4       4       0       0       0
  3714 ;;Total ram usage:        8 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    1
  3717 ;; This function calls:
  3718 ;;		_i2c_rstart
  3719 ;;		i1_i2c_read
  3720 ;;		i1_i2c_start
  3721 ;;		i1_i2c_stop
  3722 ;;		i1_i2c_write
  3723 ;; This function is called by:
  3724 ;;		_ints_isr
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           
  3729                           ;psect for function _si_read_h
  3730  065E                     _si_read_h:	
  3731                           
  3732                           ;si7021.c: 21: unsigned int rta = 0;
  3733                           
  3734                           ;incstack = 0
  3735                           ; Regs used in _si_read_h: [wreg+status,2+status,0+pclath+cstack]
  3736  065E  1283               	bcf	3,5	;RP0=0, select bank0
  3737  065F  1303               	bcf	3,6	;RP1=0, select bank0
  3738  0660  01A2               	clrf	si_read_h@rta
  3739  0661  01A3               	clrf	si_read_h@rta+1
  3740                           
  3741                           ;si7021.c: 22: unsigned char rta_h,rta_l;
  3742                           ;si7021.c: 23: i2c_start();
  3743  0662  120A  158A  24C1  120A  118A  	fcall	i1_i2c_start
  3744                           
  3745                           ;si7021.c: 24: i2c_write(0x80,1);
  3746  0667  01F0               	clrf	i1i2c_write@ack
  3747  0668  0AF0               	incf	i1i2c_write@ack,f
  3748  0669  3080               	movlw	128
  3749  066A  120A  158A  25B0  120A  118A  	fcall	i1_i2c_write
  3750                           
  3751                           ;si7021.c: 25: i2c_write(0xE5,1);
  3752  066F  01F0               	clrf	i1i2c_write@ack
  3753  0670  0AF0               	incf	i1i2c_write@ack,f
  3754  0671  30E5               	movlw	229
  3755  0672  120A  158A  25B0  120A  118A  	fcall	i1_i2c_write
  3756                           
  3757                           ;si7021.c: 26: i2c_rstart();
  3758  0677  120A  158A  249E  120A  118A  	fcall	_i2c_rstart
  3759                           
  3760                           ;si7021.c: 27: i2c_write(0x81,1);
  3761  067C  01F0               	clrf	i1i2c_write@ack
  3762  067D  0AF0               	incf	i1i2c_write@ack,f
  3763  067E  3081               	movlw	129
  3764  067F  120A  158A  25B0  120A  118A  	fcall	i1_i2c_write
  3765                           
  3766                           ;si7021.c: 28: rta_h = i2c_read(1);
  3767  0684  3001               	movlw	1
  3768  0685  120A  118A  26BB  120A  118A  	fcall	i1_i2c_read
  3769  068A  00FC               	movwf	??_si_read_h
  3770  068B  087C               	movf	??_si_read_h,w
  3771  068C  1283               	bcf	3,5	;RP0=0, select bank0
  3772  068D  1303               	bcf	3,6	;RP1=0, select bank0
  3773  068E  00A0               	movwf	si_read_h@rta_h
  3774                           
  3775                           ;si7021.c: 29: rta_l = i2c_read(3);
  3776  068F  3003               	movlw	3
  3777  0690  120A  118A  26BB  120A  118A  	fcall	i1_i2c_read
  3778  0695  00FC               	movwf	??_si_read_h
  3779  0696  087C               	movf	??_si_read_h,w
  3780  0697  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0698  1303               	bcf	3,6	;RP1=0, select bank0
  3782  0699  00A1               	movwf	si_read_h@rta_l
  3783                           
  3784                           ;si7021.c: 30: i2c_stop();
  3785  069A  120A  158A  24E4   	fcall	i1_i2c_stop
  3786                           
  3787                           ;si7021.c: 31: rta = rta_h;
  3788  069D  1283               	bcf	3,5	;RP0=0, select bank0
  3789  069E  1303               	bcf	3,6	;RP1=0, select bank0
  3790  069F  0820               	movf	si_read_h@rta_h,w
  3791  06A0  00FC               	movwf	??_si_read_h
  3792  06A1  01FD               	clrf	??_si_read_h+1
  3793  06A2  087C               	movf	??_si_read_h,w
  3794  06A3  00A2               	movwf	si_read_h@rta
  3795  06A4  087D               	movf	??_si_read_h+1,w
  3796  06A5  00A3               	movwf	si_read_h@rta+1
  3797                           
  3798                           ;si7021.c: 32: rta = rta << 8;
  3799  06A6  0822               	movf	si_read_h@rta,w
  3800  06A7  00FD               	movwf	??_si_read_h+1
  3801  06A8  01FC               	clrf	??_si_read_h
  3802  06A9  087C               	movf	??_si_read_h,w
  3803  06AA  00A2               	movwf	si_read_h@rta
  3804  06AB  087D               	movf	??_si_read_h+1,w
  3805  06AC  00A3               	movwf	si_read_h@rta+1
  3806                           
  3807                           ;si7021.c: 33: rta += rta_l;
  3808  06AD  0821               	movf	si_read_h@rta_l,w
  3809  06AE  00FC               	movwf	??_si_read_h
  3810  06AF  01FD               	clrf	??_si_read_h+1
  3811  06B0  087C               	movf	??_si_read_h,w
  3812  06B1  07A2               	addwf	si_read_h@rta,f
  3813  06B2  1803               	skipnc
  3814  06B3  0AA3               	incf	si_read_h@rta+1,f
  3815  06B4  087D               	movf	??_si_read_h+1,w
  3816  06B5  07A3               	addwf	si_read_h@rta+1,f
  3817                           
  3818                           ;si7021.c: 34: return rta;
  3819  06B6  0823               	movf	si_read_h@rta+1,w
  3820  06B7  00FB               	movwf	?_si_read_h+1
  3821  06B8  0822               	movf	si_read_h@rta,w
  3822  06B9  00FA               	movwf	?_si_read_h
  3823  06BA  0008               	return
  3824  06BB                     __end_of_si_read_h:	
  3825                           
  3826                           	psect	text18
  3827  0357                     __ptext18:	
  3828 ;; *************** function _printf *****************
  3829 ;; Defined at:
  3830 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  f               1    wreg     PTR const unsigned char 
  3833 ;;		 -> STR_9(2), STR_8(5), STR_7(7), STR_6(4), 
  3834 ;;		 -> STR_5(3), STR_4(2), STR_3(7), STR_2(6), 
  3835 ;;		 -> STR_1(8), 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  f               1   18[BANK0 ] PTR const unsigned char 
  3838 ;;		 -> STR_9(2), STR_8(5), STR_7(7), STR_6(4), 
  3839 ;;		 -> STR_5(3), STR_4(2), STR_3(7), STR_2(6), 
  3840 ;;		 -> STR_1(8), 
  3841 ;;  idx             1    9[BANK0 ] unsigned char 
  3842 ;;  tmpval          4    0        struct .
  3843 ;;  width           2   15[BANK0 ] int 
  3844 ;;  val             2   13[BANK0 ] unsigned int 
  3845 ;;  cp              2    0        PTR const unsigned char 
  3846 ;;  len             2    0        unsigned int 
  3847 ;;  c               1   19[BANK0 ] char 
  3848 ;;  flag            1   17[BANK0 ] unsigned char 
  3849 ;;  prec            1   12[BANK0 ] char 
  3850 ;;  ap              1   11[BANK0 ] PTR void [1]
  3851 ;;		 -> ?_printf(2), 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  2    4[BANK0 ] int 
  3854 ;; Registers used:
  3855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3861 ;;      Params:         0       2       0       0       0
  3862 ;;      Locals:         0      11       0       0       0
  3863 ;;      Temps:          0       3       0       0       0
  3864 ;;      Totals:         0      16       0       0       0
  3865 ;;Total ram usage:       16 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    1
  3868 ;; This function calls:
  3869 ;;		___lwdiv
  3870 ;;		___lwmod
  3871 ;;		___wmul
  3872 ;;		_isdigit
  3873 ;;		_putch
  3874 ;; This function is called by:
  3875 ;;		_ints_isr
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           
  3880                           ;psect for function _printf
  3881  0357                     _printf:	
  3882                           
  3883                           ;incstack = 0
  3884                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3885                           ;printf@f stored from wreg
  3886  0357  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0358  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0359  00B2               	movwf	printf@f
  3889                           
  3890                           ;doprnt.c: 466: va_list ap;
  3891                           ;doprnt.c: 499: signed char c;
  3892                           ;doprnt.c: 501: int width;
  3893                           ;doprnt.c: 506: signed char prec;
  3894                           ;doprnt.c: 508: unsigned char flag;
  3895                           ;doprnt.c: 523: union {
  3896                           ;doprnt.c: 524: unsigned long vd;
  3897                           ;doprnt.c: 525: double integ;
  3898                           ;doprnt.c: 526: } tmpval;
  3899                           ;doprnt.c: 528: unsigned int val;
  3900                           ;doprnt.c: 529: unsigned len;
  3901                           ;doprnt.c: 530: const char * cp;
  3902                           ;doprnt.c: 533: *ap = __va_start();
  3903  035A  3024               	movlw	(low (?_printf| 0))& (0+255)
  3904  035B  00A6               	movwf	??_printf
  3905  035C  0826               	movf	??_printf,w
  3906  035D  00AB               	movwf	printf@ap
  3907  035E                     i1l1879:	
  3908                           ;doprnt.c: 536: while(c = *f++) {
  3909                           
  3910  035E  3001               	movlw	1
  3911  035F  1283               	bcf	3,5	;RP0=0, select bank0
  3912  0360  1303               	bcf	3,6	;RP1=0, select bank0
  3913  0361  07B2               	addwf	printf@f,f
  3914  0362  30FF               	movlw	-1
  3915  0363  0732               	addwf	printf@f,w
  3916  0364  0084               	movwf	4
  3917  0365  120A  118A  2600  120A  118A  	fcall	stringdir
  3918  036A  00A6               	movwf	??_printf
  3919  036B  0826               	movf	??_printf,w
  3920  036C  00B3               	movwf	printf@c
  3921  036D  0833               	movf	printf@c,w
  3922  036E  1903               	btfsc	3,2
  3923  036F  0008               	return
  3924                           
  3925                           ;doprnt.c: 538: if(c != '%')
  3926  0370  3025               	movlw	37
  3927  0371  0633               	xorwf	printf@c,w
  3928  0372  1903               	btfsc	3,2
  3929  0373  2B7B               	goto	i1l1763
  3930                           
  3931                           ;doprnt.c: 540: {
  3932                           ;doprnt.c: 541: (putch(c) );
  3933  0374  0833               	movf	printf@c,w
  3934  0375  120A  118A  25F7  120A  118A  	fcall	_putch
  3935                           
  3936                           ;doprnt.c: 542: continue;
  3937  037A  2B5E               	goto	i1l1879
  3938  037B                     i1l1763:	
  3939                           
  3940                           ;doprnt.c: 543: }
  3941                           ;doprnt.c: 546: width = 0;
  3942  037B  1283               	bcf	3,5	;RP0=0, select bank0
  3943  037C  1303               	bcf	3,6	;RP1=0, select bank0
  3944  037D  01AF               	clrf	printf@width
  3945  037E  01B0               	clrf	printf@width+1
  3946                           
  3947                           ;doprnt.c: 548: flag = 0;
  3948  037F  01B1               	clrf	printf@flag
  3949                           
  3950                           ;doprnt.c: 551: switch(*f) {
  3951                           
  3952                           ;doprnt.c: 550: for(;;) {
  3953  0380  2B86               	goto	i1l1769
  3954  0381                     i1l274:	
  3955                           ;doprnt.c: 579: case '0':
  3956                           
  3957                           
  3958                           ;doprnt.c: 580: flag |= 0x04;
  3959  0381  1531               	bsf	printf@flag,2
  3960                           
  3961                           ;doprnt.c: 581: f++;
  3962  0382  3001               	movlw	1
  3963  0383  00A6               	movwf	??_printf
  3964  0384  0826               	movf	??_printf,w
  3965  0385  07B2               	addwf	printf@f,f
  3966  0386                     i1l1769:	
  3967                           ;doprnt.c: 584: }
  3968                           
  3969                           ;doprnt.c: 582: continue;
  3970                           
  3971  0386  0832               	movf	printf@f,w
  3972  0387  0084               	movwf	4
  3973  0388  120A  118A  2600  120A  118A  	fcall	stringdir
  3974                           
  3975                           ; Switch size 1, requested type "space"
  3976                           ; Number of cases is 1, Range of values is 48 to 48
  3977                           ; switch strategies available:
  3978                           ; Name         Instructions Cycles
  3979                           ; simple_byte            4     3 (average)
  3980                           ; direct_byte           14    11 (fixed)
  3981                           ; jumptable            263     9 (fixed)
  3982                           ;	Chosen strategy is simple_byte
  3983  038D  3A30               	xorlw	48	; case 48
  3984  038E  1903               	skipnz
  3985  038F  2B81               	goto	i1l274
  3986  0390  2B91               	goto	i1l1771
  3987  0391                     i1l1771:	
  3988                           ;doprnt.c: 586: }
  3989                           
  3990                           ;doprnt.c: 585: break;
  3991                           
  3992                           
  3993                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  3994  0391  0832               	movf	printf@f,w
  3995  0392  0084               	movwf	4
  3996  0393  120A  118A  2600  120A  118A  	fcall	stringdir
  3997  0398  120A  158A  242B  120A  118A  	fcall	_isdigit
  3998  039D  1C03               	btfss	3,0
  3999  039E  2BE1               	goto	i1l1785
  4000                           
  4001                           ;doprnt.c: 598: width = 0;
  4002  039F  1283               	bcf	3,5	;RP0=0, select bank0
  4003  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  4004  03A1  01AF               	clrf	printf@width
  4005  03A2  01B0               	clrf	printf@width+1
  4006  03A3                     i1l1775:	
  4007                           ;doprnt.c: 599: do {
  4008                           
  4009                           
  4010                           ;doprnt.c: 600: width *= 10;
  4011  03A3  300A               	movlw	10
  4012  03A4  00F0               	movwf	___wmul@multiplier
  4013  03A5  3000               	movlw	0
  4014  03A6  00F1               	movwf	___wmul@multiplier+1
  4015  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  4016  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  4017  03A9  0830               	movf	printf@width+1,w
  4018  03AA  00F3               	movwf	___wmul@multiplicand+1
  4019  03AB  082F               	movf	printf@width,w
  4020  03AC  00F2               	movwf	___wmul@multiplicand
  4021  03AD  120A  158A  247D  120A  118A  	fcall	___wmul
  4022  03B2  0871               	movf	?___wmul+1,w
  4023  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  4024  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  4025  03B5  00B0               	movwf	printf@width+1
  4026  03B6  0870               	movf	?___wmul,w
  4027  03B7  00AF               	movwf	printf@width
  4028                           
  4029                           ;doprnt.c: 601: width += *f++ - '0';
  4030  03B8  0832               	movf	printf@f,w
  4031  03B9  0084               	movwf	4
  4032  03BA  120A  118A  2600  120A  118A  	fcall	stringdir
  4033  03BF  3ED0               	addlw	208
  4034  03C0  00A6               	movwf	??_printf
  4035  03C1  30FF               	movlw	255
  4036  03C2  1803               	skipnc
  4037  03C3  3000               	movlw	0
  4038  03C4  00A7               	movwf	??_printf+1
  4039  03C5  0826               	movf	??_printf,w
  4040  03C6  07AF               	addwf	printf@width,f
  4041  03C7  1803               	skipnc
  4042  03C8  0AB0               	incf	printf@width+1,f
  4043  03C9  0827               	movf	??_printf+1,w
  4044  03CA  07B0               	addwf	printf@width+1,f
  4045  03CB  3001               	movlw	1
  4046  03CC  00A6               	movwf	??_printf
  4047  03CD  0826               	movf	??_printf,w
  4048  03CE  07B2               	addwf	printf@f,f
  4049                           
  4050                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4051  03CF  0832               	movf	printf@f,w
  4052  03D0  0084               	movwf	4
  4053  03D1  120A  118A  2600  120A  118A  	fcall	stringdir
  4054  03D6  120A  158A  242B  120A  118A  	fcall	_isdigit
  4055  03DB  1C03               	btfss	3,0
  4056  03DC  2BE1               	goto	i1l1785
  4057  03DD  2BA3               	goto	i1l1775
  4058  03DE                     i1l287:	
  4059                           ;doprnt.c: 712: case 'X':
  4060                           
  4061                           ;doprnt.c: 698: case 'i':
  4062                           ;doprnt.c: 699: break;
  4063                           
  4064                           ;doprnt.c: 697: case 'd':
  4065                           
  4066                           ;doprnt.c: 638: goto alldone;
  4067                           
  4068                           ;doprnt.c: 637: case 0:
  4069                           
  4070                           ;doprnt.c: 608: }
  4071                           ;doprnt.c: 635: switch(c = *f++) {
  4072                           
  4073                           
  4074                           ;doprnt.c: 714: flag |= 0x20;
  4075  03DE  16B1               	bsf	printf@flag,5
  4076  03DF                     i1l288:	
  4077                           ;doprnt.c: 718: case 'x':
  4078                           
  4079                           
  4080                           ;doprnt.c: 721: flag |= 0x80;
  4081  03DF  17B1               	bsf	printf@flag,7
  4082                           
  4083                           ;doprnt.c: 723: break;
  4084  03E0  2BFE               	goto	i1l286
  4085  03E1                     i1l1785:	
  4086                           ;doprnt.c: 822: }
  4087                           
  4088                           ;doprnt.c: 813: continue;
  4089                           
  4090                           ;doprnt.c: 802: default:
  4091                           
  4092  03E1  3001               	movlw	1
  4093  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  4094  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  4095  03E4  07B2               	addwf	printf@f,f
  4096  03E5  30FF               	movlw	-1
  4097  03E6  0732               	addwf	printf@f,w
  4098  03E7  0084               	movwf	4
  4099  03E8  120A  118A  2600  120A  118A  	fcall	stringdir
  4100  03ED  00B3               	movwf	printf@c
  4101                           
  4102                           ; Switch size 1, requested type "space"
  4103                           ; Number of cases is 5, Range of values is 0 to 120
  4104                           ; switch strategies available:
  4105                           ; Name         Instructions Cycles
  4106                           ; simple_byte           16     9 (average)
  4107                           ; jumptable            260     6 (fixed)
  4108                           ;	Chosen strategy is simple_byte
  4109  03EE  3A00               	xorlw	0	; case 0
  4110  03EF  1903               	skipnz
  4111  03F0  2D6C               	goto	i1l328
  4112  03F1  3A58               	xorlw	88	; case 88
  4113  03F2  1903               	skipnz
  4114  03F3  2BDE               	goto	i1l287
  4115  03F4  3A3C               	xorlw	60	; case 100
  4116  03F5  1903               	skipnz
  4117  03F6  2BFE               	goto	i1l286
  4118  03F7  3A0D               	xorlw	13	; case 105
  4119  03F8  1903               	skipnz
  4120  03F9  2BFE               	goto	i1l286
  4121  03FA  3A11               	xorlw	17	; case 120
  4122  03FB  1903               	skipnz
  4123  03FC  2BDF               	goto	i1l288
  4124  03FD  2B5E               	goto	i1l1879
  4125  03FE                     i1l286:	
  4126                           
  4127                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  4128  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  4129  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  4130  0400  1BB1               	btfsc	printf@flag,7
  4131  0401  2C1A               	goto	i1l1797
  4132                           
  4133                           ;doprnt.c: 1253: {
  4134                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4135  0402  082B               	movf	printf@ap,w
  4136  0403  0084               	movwf	4
  4137  0404  1383               	bcf	3,7	;select IRP bank0
  4138  0405  0800               	movf	0,w
  4139  0406  00AD               	movwf	printf@val
  4140  0407  0A84               	incf	4,f
  4141  0408  0800               	movf	0,w
  4142  0409  00AE               	movwf	printf@val+1
  4143  040A  3002               	movlw	2
  4144  040B  00A6               	movwf	??_printf
  4145  040C  0826               	movf	??_printf,w
  4146  040D  07AB               	addwf	printf@ap,f
  4147                           
  4148                           ;doprnt.c: 1261: if((int)val < 0) {
  4149  040E  1FAE               	btfss	printf@val+1,7
  4150  040F  2C6F               	goto	i1l1823
  4151                           
  4152                           ;doprnt.c: 1262: flag |= 0x03;
  4153  0410  3003               	movlw	3
  4154  0411  00A6               	movwf	??_printf
  4155  0412  0826               	movf	??_printf,w
  4156  0413  04B1               	iorwf	printf@flag,f
  4157                           
  4158                           ;doprnt.c: 1263: val = -val;
  4159  0414  09AD               	comf	printf@val,f
  4160  0415  09AE               	comf	printf@val+1,f
  4161  0416  0AAD               	incf	printf@val,f
  4162  0417  1903               	skipnz
  4163  0418  0AAE               	incf	printf@val+1,f
  4164                           
  4165                           ;doprnt.c: 1264: }
  4166                           ;doprnt.c: 1266: }
  4167  0419  2C6F               	goto	i1l1823
  4168  041A                     i1l1797:	
  4169                           
  4170                           ;doprnt.c: 1268: else
  4171                           ;doprnt.c: 1273: {
  4172                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  4173  041A  082B               	movf	printf@ap,w
  4174  041B  0084               	movwf	4
  4175  041C  1383               	bcf	3,7	;select IRP bank0
  4176  041D  0800               	movf	0,w
  4177  041E  00AD               	movwf	printf@val
  4178  041F  0A84               	incf	4,f
  4179  0420  0800               	movf	0,w
  4180  0421  00AE               	movwf	printf@val+1
  4181  0422  3002               	movlw	2
  4182  0423  00A6               	movwf	??_printf
  4183  0424  0826               	movf	??_printf,w
  4184  0425  07AB               	addwf	printf@ap,f
  4185                           
  4186                           ;doprnt.c: 1287: }
  4187                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  4188  0426  2C6F               	goto	i1l1823
  4189  0427                     i1l294:	
  4190                           ;doprnt.c: 1299: case 0x00:
  4191                           
  4192                           
  4193                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4194  0427  01B3               	clrf	printf@c
  4195  0428  0AB3               	incf	printf@c,f
  4196  0429                     L7:	
  4197  0429  3005               	movlw	5
  4198  042A  0633               	xorwf	printf@c,w
  4199  042B  1903               	btfsc	3,2
  4200  042C  2C78               	goto	i1l1825
  4201                           
  4202                           ;doprnt.c: 1306: if(val < dpowers[c])
  4203  042D  0833               	movf	printf@c,w
  4204  042E  00A6               	movwf	??_printf
  4205  042F  0726               	addwf	??_printf,w
  4206  0430  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4207  0431  0084               	movwf	4
  4208  0432  120A  118A  2600  120A  118A  	fcall	stringdir
  4209  0437  00A7               	movwf	??_printf+1
  4210  0438  120A  118A  2600  120A  118A  	fcall	stringdir
  4211  043D  00A8               	movwf	??_printf+2
  4212  043E  0828               	movf	??_printf+2,w
  4213  043F  022E               	subwf	printf@val+1,w
  4214  0440  1D03               	skipz
  4215  0441  2C44               	goto	u177_25
  4216  0442  0827               	movf	??_printf+1,w
  4217  0443  022D               	subwf	printf@val,w
  4218  0444                     u177_25:	
  4219  0444  1C03               	btfss	3,0
  4220  0445  2C78               	goto	i1l1825
  4221                           
  4222                           ;doprnt.c: 1307: break;
  4223  0446  3001               	movlw	1
  4224  0447  00A6               	movwf	??_printf
  4225  0448  0826               	movf	??_printf,w
  4226  0449  07B3               	addwf	printf@c,f
  4227  044A  2C29               	goto	L7
  4228  044B                     i1l299:	
  4229                           ;doprnt.c: 1314: case 0x80:
  4230                           
  4231                           ;doprnt.c: 1309: break;
  4232                           
  4233                           
  4234                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  4235  044B  01B3               	clrf	printf@c
  4236  044C  0AB3               	incf	printf@c,f
  4237  044D                     L8:	
  4238  044D  3004               	movlw	4
  4239  044E  0633               	xorwf	printf@c,w
  4240  044F  1903               	btfsc	3,2
  4241  0450  2C78               	goto	i1l1825
  4242                           
  4243                           ;doprnt.c: 1317: if(val < hexpowers[c])
  4244  0451  0833               	movf	printf@c,w
  4245  0452  00A6               	movwf	??_printf
  4246  0453  0726               	addwf	??_printf,w
  4247  0454  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  4248  0455  0084               	movwf	4
  4249  0456  120A  118A  2600  120A  118A  	fcall	stringdir
  4250  045B  00A7               	movwf	??_printf+1
  4251  045C  120A  118A  2600  120A  118A  	fcall	stringdir
  4252  0461  00A8               	movwf	??_printf+2
  4253  0462  0828               	movf	??_printf+2,w
  4254  0463  022E               	subwf	printf@val+1,w
  4255  0464  1D03               	skipz
  4256  0465  2C68               	goto	u180_25
  4257  0466  0827               	movf	??_printf+1,w
  4258  0467  022D               	subwf	printf@val,w
  4259  0468                     u180_25:	
  4260  0468  1C03               	btfss	3,0
  4261  0469  2C78               	goto	i1l1825
  4262                           
  4263                           ;doprnt.c: 1318: break;
  4264  046A  3001               	movlw	1
  4265  046B  00A6               	movwf	??_printf
  4266  046C  0826               	movf	??_printf,w
  4267  046D  07B3               	addwf	printf@c,f
  4268  046E  2C4D               	goto	L8
  4269  046F                     i1l1823:	
  4270                           ;doprnt.c: 1336: }
  4271                           
  4272                           ;doprnt.c: 1320: break;
  4273                           
  4274  046F  0831               	movf	printf@flag,w
  4275  0470  3980               	andlw	128
  4276                           
  4277                           ; Switch size 1, requested type "space"
  4278                           ; Number of cases is 2, Range of values is 0 to 128
  4279                           ; switch strategies available:
  4280                           ; Name         Instructions Cycles
  4281                           ; simple_byte            7     4 (average)
  4282                           ; jumptable            260     6 (fixed)
  4283                           ;	Chosen strategy is simple_byte
  4284  0471  3A00               	xorlw	0	; case 0
  4285  0472  1903               	skipnz
  4286  0473  2C27               	goto	i1l294
  4287  0474  3A80               	xorlw	128	; case 128
  4288  0475  1903               	skipnz
  4289  0476  2C4B               	goto	i1l299
  4290  0477  2C78               	goto	i1l1825
  4291  0478                     i1l1825:	
  4292                           
  4293                           ;doprnt.c: 1345: if(width && flag & 0x03)
  4294  0478  082F               	movf	printf@width,w
  4295  0479  0430               	iorwf	printf@width+1,w
  4296  047A  1903               	btfsc	3,2
  4297  047B  2C86               	goto	i1l303
  4298  047C  0831               	movf	printf@flag,w
  4299  047D  3903               	andlw	3
  4300  047E  1903               	btfsc	3,2
  4301  047F  2C86               	goto	i1l303
  4302                           
  4303                           ;doprnt.c: 1346: width--;
  4304  0480  30FF               	movlw	255
  4305  0481  07AF               	addwf	printf@width,f
  4306  0482  1803               	skipnc
  4307  0483  0AB0               	incf	printf@width+1,f
  4308  0484  30FF               	movlw	255
  4309  0485  07B0               	addwf	printf@width+1,f
  4310  0486                     i1l303:	
  4311                           
  4312                           ;doprnt.c: 1381: if(width > c)
  4313  0486  0833               	movf	printf@c,w
  4314  0487  00A6               	movwf	??_printf
  4315  0488  01A7               	clrf	??_printf+1
  4316  0489  1BA6               	btfsc	??_printf,7
  4317  048A  03A7               	decf	??_printf+1,f
  4318  048B  0827               	movf	??_printf+1,w
  4319  048C  3A80               	xorlw	128
  4320  048D  00A8               	movwf	??_printf+2
  4321  048E  0830               	movf	printf@width+1,w
  4322  048F  3A80               	xorlw	128
  4323  0490  0228               	subwf	??_printf+2,w
  4324  0491  1D03               	skipz
  4325  0492  2C95               	goto	u184_25
  4326  0493  082F               	movf	printf@width,w
  4327  0494  0226               	subwf	??_printf,w
  4328  0495                     u184_25:	
  4329  0495  1803               	skipnc
  4330  0496  2CA5               	goto	i1l1833
  4331                           
  4332                           ;doprnt.c: 1382: width -= c;
  4333  0497  1283               	bcf	3,5	;RP0=0, select bank0
  4334  0498  1303               	bcf	3,6	;RP1=0, select bank0
  4335  0499  0833               	movf	printf@c,w
  4336  049A  00A6               	movwf	??_printf
  4337  049B  01A7               	clrf	??_printf+1
  4338  049C  1BA6               	btfsc	??_printf,7
  4339  049D  03A7               	decf	??_printf+1,f
  4340  049E  0826               	movf	??_printf,w
  4341  049F  02AF               	subwf	printf@width,f
  4342  04A0  0827               	movf	??_printf+1,w
  4343  04A1  1C03               	skipc
  4344  04A2  03B0               	decf	printf@width+1,f
  4345  04A3  02B0               	subwf	printf@width+1,f
  4346  04A4  2CA9               	goto	i1l1835
  4347  04A5                     i1l1833:	
  4348                           
  4349                           ;doprnt.c: 1383: else
  4350                           ;doprnt.c: 1384: width = 0;
  4351  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  4352  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  4353  04A7  01AF               	clrf	printf@width
  4354  04A8  01B0               	clrf	printf@width+1
  4355  04A9                     i1l1835:	
  4356                           
  4357                           ;doprnt.c: 1387: if(flag & 0x04) {
  4358  04A9  1D31               	btfss	printf@flag,2
  4359  04AA  2CCA               	goto	i1l1847
  4360                           
  4361                           ;doprnt.c: 1392: if(flag & 0x03)
  4362  04AB  0831               	movf	printf@flag,w
  4363  04AC  3903               	andlw	3
  4364  04AD  1903               	btfsc	3,2
  4365  04AE  2CB5               	goto	i1l1841
  4366                           
  4367                           ;doprnt.c: 1393: (putch('-') );
  4368  04AF  302D               	movlw	45
  4369  04B0  120A  118A  25F7  120A  118A  	fcall	_putch
  4370  04B5                     i1l1841:	
  4371                           
  4372                           ;doprnt.c: 1415: if(width)
  4373  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  4374  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  4375  04B7                     L9:	
  4376  04B7  082F               	movf	printf@width,w
  4377  04B8  0430               	iorwf	printf@width+1,w
  4378  04B9  1903               	btfsc	3,2
  4379  04BA  2CEA               	goto	i1l1857
  4380                           
  4381                           ;doprnt.c: 1417: (putch('0') );
  4382                           
  4383                           ;doprnt.c: 1416: do
  4384  04BB  3030               	movlw	48
  4385  04BC  120A  118A  25F7  120A  118A  	fcall	_putch
  4386                           
  4387                           ;doprnt.c: 1418: while(--width);
  4388  04C1  30FF               	movlw	255
  4389  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  4390  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  4391  04C4  07AF               	addwf	printf@width,f
  4392  04C5  1803               	skipnc
  4393  04C6  0AB0               	incf	printf@width+1,f
  4394  04C7  30FF               	movlw	255
  4395  04C8  07B0               	addwf	printf@width+1,f
  4396  04C9  2CB7               	goto	L9
  4397  04CA                     i1l1847:	
  4398                           ;doprnt.c: 1420: } else
  4399                           
  4400                           
  4401                           ;doprnt.c: 1422: {
  4402                           ;doprnt.c: 1424: if(width
  4403                           ;doprnt.c: 1428: )
  4404  04CA  082F               	movf	printf@width,w
  4405  04CB  0430               	iorwf	printf@width+1,w
  4406  04CC  1903               	btfsc	3,2
  4407  04CD  2CE0               	goto	i1l1853
  4408  04CE                     i1l1849:	
  4409                           ;doprnt.c: 1429: do
  4410                           
  4411                           
  4412                           ;doprnt.c: 1430: (putch(' ') );
  4413  04CE  3020               	movlw	32
  4414  04CF  120A  118A  25F7  120A  118A  	fcall	_putch
  4415                           
  4416                           ;doprnt.c: 1431: while(--width);
  4417  04D4  30FF               	movlw	255
  4418  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  4419  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  4420  04D7  07AF               	addwf	printf@width,f
  4421  04D8  1803               	skipnc
  4422  04D9  0AB0               	incf	printf@width+1,f
  4423  04DA  30FF               	movlw	255
  4424  04DB  07B0               	addwf	printf@width+1,f
  4425  04DC  082F               	movf	printf@width,w
  4426  04DD  0430               	iorwf	printf@width+1,w
  4427  04DE  1D03               	btfss	3,2
  4428  04DF  2CCE               	goto	i1l1849
  4429  04E0                     i1l1853:	
  4430                           
  4431                           ;doprnt.c: 1438: if(flag & 0x03)
  4432  04E0  0831               	movf	printf@flag,w
  4433  04E1  3903               	andlw	3
  4434  04E2  1903               	btfsc	3,2
  4435  04E3  2CEA               	goto	i1l1857
  4436                           
  4437                           ;doprnt.c: 1439: (putch('-') );
  4438  04E4  302D               	movlw	45
  4439  04E5  120A  118A  25F7  120A  118A  	fcall	_putch
  4440  04EA                     i1l1857:	
  4441                           
  4442                           ;doprnt.c: 1469: }
  4443                           ;doprnt.c: 1472: prec = c;
  4444  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  4445  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  4446  04EC  0833               	movf	printf@c,w
  4447  04ED  00A6               	movwf	??_printf
  4448  04EE  0826               	movf	??_printf,w
  4449  04EF  00AC               	movwf	printf@prec
  4450                           
  4451                           ;doprnt.c: 1474: while(prec--) {
  4452  04F0  2D59               	goto	i1l1877
  4453  04F1                     i1l1859:	
  4454                           ;doprnt.c: 1478: {
  4455                           ;doprnt.c: 1483: case 0x00:
  4456                           
  4457                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  4458                           
  4459                           
  4460                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  4461  04F1  300A               	movlw	10
  4462  04F2  00F8               	movwf	___lwmod@divisor
  4463  04F3  3000               	movlw	0
  4464  04F4  00F9               	movwf	___lwmod@divisor+1
  4465  04F5  082C               	movf	printf@prec,w
  4466  04F6  00A6               	movwf	??_printf
  4467  04F7  0726               	addwf	??_printf,w
  4468  04F8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4469  04F9  0084               	movwf	4
  4470  04FA  120A  118A  2600  120A  118A  	fcall	stringdir
  4471  04FF  00F0               	movwf	___lwdiv@divisor
  4472  0500  120A  118A  2600  120A  118A  	fcall	stringdir
  4473  0505  00F1               	movwf	___lwdiv@divisor+1
  4474  0506  082E               	movf	printf@val+1,w
  4475  0507  00F3               	movwf	___lwdiv@dividend+1
  4476  0508  082D               	movf	printf@val,w
  4477  0509  00F2               	movwf	___lwdiv@dividend
  4478  050A  120A  118A  27BE  120A  118A  	fcall	___lwdiv
  4479  050F  0871               	movf	?___lwdiv+1,w
  4480  0510  00FB               	movwf	___lwmod@dividend+1
  4481  0511  0870               	movf	?___lwdiv,w
  4482  0512  00FA               	movwf	___lwmod@dividend
  4483  0513  120A  158A  257E  120A  118A  	fcall	___lwmod
  4484  0518  0878               	movf	?___lwmod,w
  4485  0519  3E30               	addlw	48
  4486  051A  1283               	bcf	3,5	;RP0=0, select bank0
  4487  051B  1303               	bcf	3,6	;RP1=0, select bank0
  4488  051C  00A7               	movwf	??_printf+1
  4489  051D  0827               	movf	??_printf+1,w
  4490  051E  2D52               	goto	L5
  4491  051F                     i1l1861:	
  4492                           ;doprnt.c: 1497: case 0x80:
  4493                           
  4494                           ;doprnt.c: 1491: break;
  4495                           
  4496                           
  4497                           ;doprnt.c: 1499: {
  4498                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  4499  051F  082C               	movf	printf@prec,w
  4500  0520  00A6               	movwf	??_printf
  4501  0521  0726               	addwf	??_printf,w
  4502  0522  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  4503  0523  0084               	movwf	4
  4504  0524  120A  118A  2600  120A  118A  	fcall	stringdir
  4505  0529  00F0               	movwf	___lwdiv@divisor
  4506  052A  120A  118A  2600  120A  118A  	fcall	stringdir
  4507  052F  00F1               	movwf	___lwdiv@divisor+1
  4508  0530  082E               	movf	printf@val+1,w
  4509  0531  00F3               	movwf	___lwdiv@dividend+1
  4510  0532  082D               	movf	printf@val,w
  4511  0533  00F2               	movwf	___lwdiv@dividend
  4512  0534  120A  118A  27BE  120A  118A  	fcall	___lwdiv
  4513  0539  0870               	movf	?___lwdiv,w
  4514  053A  390F               	andlw	15
  4515  053B  1283               	bcf	3,5	;RP0=0, select bank0
  4516  053C  1303               	bcf	3,6	;RP1=0, select bank0
  4517  053D  00A7               	movwf	??_printf+1
  4518  053E  0827               	movf	??_printf+1,w
  4519  053F  00A9               	movwf	printf@idx
  4520                           
  4521                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  4522  0540  1AB1               	btfsc	printf@flag,5
  4523  0541  2D44               	goto	i1l1867
  4524  0542  3024               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  4525  0543  2D45               	goto	L6
  4526  0544                     i1l1867:	
  4527  0544  3013               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  4528  0545                     L6:	
  4529  0545  00A6               	movwf	??_printf
  4530  0546  0826               	movf	??_printf,w
  4531  0547  00AA               	movwf	_printf$733
  4532  0548  0829               	movf	printf@idx,w
  4533  0549  072A               	addwf	_printf$733,w
  4534  054A  0084               	movwf	4
  4535  054B  120A  118A  2600  120A  118A  	fcall	stringdir
  4536  0550  00A6               	movwf	??_printf
  4537  0551  0826               	movf	??_printf,w
  4538  0552                     L5:	
  4539  0552  00B3               	movwf	printf@c
  4540  0553                     i1l1875:	
  4541                           ;doprnt.c: 1523: }
  4542                           
  4543                           ;doprnt.c: 1508: }
  4544                           ;doprnt.c: 1510: break;
  4545                           
  4546                           
  4547                           ;doprnt.c: 1524: (putch(c) );
  4548  0553  0833               	movf	printf@c,w
  4549  0554  120A  118A  25F7  120A  118A  	fcall	_putch
  4550  0559                     i1l1877:	
  4551  0559  30FF               	movlw	255
  4552  055A  1283               	bcf	3,5	;RP0=0, select bank0
  4553  055B  1303               	bcf	3,6	;RP1=0, select bank0
  4554  055C  00A6               	movwf	??_printf
  4555  055D  0826               	movf	??_printf,w
  4556  055E  07AC               	addwf	printf@prec,f
  4557  055F  0A2C               	incf	printf@prec,w
  4558  0560  1903               	btfsc	3,2
  4559  0561  2B5E               	goto	i1l1879
  4560  0562  0831               	movf	printf@flag,w
  4561  0563  3980               	andlw	128
  4562                           
  4563                           ; Switch size 1, requested type "space"
  4564                           ; Number of cases is 2, Range of values is 0 to 128
  4565                           ; switch strategies available:
  4566                           ; Name         Instructions Cycles
  4567                           ; simple_byte            7     4 (average)
  4568                           ; jumptable            260     6 (fixed)
  4569                           ;	Chosen strategy is simple_byte
  4570  0564  3A00               	xorlw	0	; case 0
  4571  0565  1903               	skipnz
  4572  0566  2CF1               	goto	i1l1859
  4573  0567  3A80               	xorlw	128	; case 128
  4574  0568  1903               	skipnz
  4575  0569  2D1F               	goto	i1l1861
  4576  056A  2D53               	goto	i1l1875
  4577  056B  2D53               	goto	i1l1875
  4578  056C                     i1l328:	
  4579                           ;doprnt.c: 1540: return 0;
  4580                           ;	Return value of _printf is never used
  4581                           
  4582                           ;doprnt.c: 1525: }
  4583                           ;doprnt.c: 1533: }
  4584                           ;doprnt.c: 1535: alldone:
  4585                           
  4586  056C  0008               	return
  4587  056D                     __end_of_printf:	
  4588                           
  4589                           	psect	text19
  4590  05F7                     __ptext19:	
  4591 ;; *************** function _putch *****************
  4592 ;; Defined at:
  4593 ;;		line 35 in file "panda17.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  data            1    wreg     unsigned char 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  data            1    0[COMMON] unsigned char 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  1    wreg      void 
  4600 ;; Registers used:
  4601 ;;		wreg
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4607 ;;      Params:         0       0       0       0       0
  4608 ;;      Locals:         1       0       0       0       0
  4609 ;;      Temps:          0       0       0       0       0
  4610 ;;      Totals:         1       0       0       0       0
  4611 ;;Total ram usage:        1 bytes
  4612 ;; Hardware stack levels used:    1
  4613 ;; This function calls:
  4614 ;;		Nothing
  4615 ;; This function is called by:
  4616 ;;		_printf
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           
  4621                           ;psect for function _putch
  4622  05F7                     _putch:	
  4623                           
  4624                           ;incstack = 0
  4625                           ; Regs used in _putch: [wreg]
  4626                           ;putch@data stored from wreg
  4627  05F7  00F0               	movwf	putch@data
  4628  05F8                     i1l72:	
  4629                           ;panda17.c: 37: continue;
  4630                           
  4631                           ;panda17.c: 36: while(!PIR1bits.TXIF)
  4632                           
  4633  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  4634  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  4635  05FA  1E0C               	btfss	12,4	;volatile
  4636  05FB  2DF8               	goto	i1l72
  4637                           
  4638                           ;panda17.c: 38: TXREG = data;
  4639  05FC  0870               	movf	putch@data,w
  4640  05FD  0099               	movwf	25	;volatile
  4641  05FE  0008               	return
  4642  05FF                     __end_of_putch:	
  4643                           
  4644                           	psect	text20
  4645  0C2B                     __ptext20:	
  4646 ;; *************** function _isdigit *****************
  4647 ;; Defined at:
  4648 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;  c               1    wreg     unsigned char 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  c               1    1[COMMON] unsigned char 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;		None               void
  4655 ;; Registers used:
  4656 ;;		wreg, status,2, status,0
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4662 ;;      Params:         0       0       0       0       0
  4663 ;;      Locals:         2       0       0       0       0
  4664 ;;      Temps:          0       0       0       0       0
  4665 ;;      Totals:         2       0       0       0       0
  4666 ;;Total ram usage:        2 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; This function calls:
  4669 ;;		Nothing
  4670 ;; This function is called by:
  4671 ;;		_printf
  4672 ;; This function uses a non-reentrant model
  4673 ;;
  4674                           
  4675                           
  4676                           ;psect for function _isdigit
  4677  0C2B                     _isdigit:	
  4678                           
  4679                           ;incstack = 0
  4680                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4681                           ;isdigit@c stored from wreg
  4682  0C2B  00F1               	movwf	isdigit@c
  4683  0C2C  01F0               	clrf	_isdigit$919
  4684  0C2D  303A               	movlw	58
  4685  0C2E  0271               	subwf	isdigit@c,w
  4686  0C2F  1803               	skipnc
  4687  0C30  2C37               	goto	i1l1621
  4688  0C31  3030               	movlw	48
  4689  0C32  0271               	subwf	isdigit@c,w
  4690  0C33  1C03               	skipc
  4691  0C34  2C37               	goto	i1l1621
  4692  0C35  01F0               	clrf	_isdigit$919
  4693  0C36  0AF0               	incf	_isdigit$919,f
  4694  0C37                     i1l1621:	
  4695  0C37  0C70               	rrf	_isdigit$919,w
  4696  0C38  0008               	return
  4697  0C39                     __end_of_isdigit:	
  4698                           
  4699                           	psect	text21
  4700  0C7D                     __ptext21:	
  4701 ;; *************** function ___wmul *****************
  4702 ;; Defined at:
  4703 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  multiplier      2    0[COMMON] unsigned int 
  4706 ;;  multiplicand    2    2[COMMON] unsigned int 
  4707 ;; Auto vars:     Size  Location     Type
  4708 ;;  product         2    4[COMMON] unsigned int 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  2    0[COMMON] unsigned int 
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4718 ;;      Params:         4       0       0       0       0
  4719 ;;      Locals:         2       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0
  4721 ;;      Totals:         6       0       0       0       0
  4722 ;;Total ram usage:        6 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; This function calls:
  4725 ;;		Nothing
  4726 ;; This function is called by:
  4727 ;;		_printf
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           
  4732                           ;psect for function ___wmul
  4733  0C7D                     ___wmul:	
  4734                           
  4735                           ;incstack = 0
  4736                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4737  0C7D  01F4               	clrf	___wmul@product
  4738  0C7E  01F5               	clrf	___wmul@product+1
  4739  0C7F                     i1l1627:	
  4740  0C7F  1C70               	btfss	___wmul@multiplier,0
  4741  0C80  2C87               	goto	i1l412
  4742  0C81  0872               	movf	___wmul@multiplicand,w
  4743  0C82  07F4               	addwf	___wmul@product,f
  4744  0C83  1803               	skipnc
  4745  0C84  0AF5               	incf	___wmul@product+1,f
  4746  0C85  0873               	movf	___wmul@multiplicand+1,w
  4747  0C86  07F5               	addwf	___wmul@product+1,f
  4748  0C87                     i1l412:	
  4749  0C87  3001               	movlw	1
  4750  0C88                     u153_25:	
  4751  0C88  1003               	clrc
  4752  0C89  0DF2               	rlf	___wmul@multiplicand,f
  4753  0C8A  0DF3               	rlf	___wmul@multiplicand+1,f
  4754  0C8B  3EFF               	addlw	-1
  4755  0C8C  1D03               	skipz
  4756  0C8D  2C88               	goto	u153_25
  4757  0C8E  3001               	movlw	1
  4758  0C8F                     u154_25:	
  4759  0C8F  1003               	clrc
  4760  0C90  0CF1               	rrf	___wmul@multiplier+1,f
  4761  0C91  0CF0               	rrf	___wmul@multiplier,f
  4762  0C92  3EFF               	addlw	-1
  4763  0C93  1D03               	skipz
  4764  0C94  2C8F               	goto	u154_25
  4765  0C95  0870               	movf	___wmul@multiplier,w
  4766  0C96  0471               	iorwf	___wmul@multiplier+1,w
  4767  0C97  1D03               	btfss	3,2
  4768  0C98  2C7F               	goto	i1l1627
  4769  0C99  0875               	movf	___wmul@product+1,w
  4770  0C9A  00F1               	movwf	?___wmul+1
  4771  0C9B  0874               	movf	___wmul@product,w
  4772  0C9C  00F0               	movwf	?___wmul
  4773  0C9D  0008               	return
  4774  0C9E                     __end_of___wmul:	
  4775                           
  4776                           	psect	text22
  4777  0D7E                     __ptext22:	
  4778 ;; *************** function ___lwmod *****************
  4779 ;; Defined at:
  4780 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;  divisor         2    8[COMMON] unsigned int 
  4783 ;;  dividend        2   10[COMMON] unsigned int 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  counter         1   13[COMMON] unsigned char 
  4786 ;; Return value:  Size  Location     Type
  4787 ;;                  2    8[COMMON] unsigned int 
  4788 ;; Registers used:
  4789 ;;		wreg, status,2, status,0
  4790 ;; Tracked objects:
  4791 ;;		On entry : 0/0
  4792 ;;		On exit  : 0/0
  4793 ;;		Unchanged: 0/0
  4794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4795 ;;      Params:         4       0       0       0       0
  4796 ;;      Locals:         1       0       0       0       0
  4797 ;;      Temps:          1       0       0       0       0
  4798 ;;      Totals:         6       0       0       0       0
  4799 ;;Total ram usage:        6 bytes
  4800 ;; Hardware stack levels used:    1
  4801 ;; This function calls:
  4802 ;;		Nothing
  4803 ;; This function is called by:
  4804 ;;		_printf
  4805 ;; This function uses a non-reentrant model
  4806 ;;
  4807                           
  4808                           
  4809                           ;psect for function ___lwmod
  4810  0D7E                     ___lwmod:	
  4811                           
  4812                           ;incstack = 0
  4813                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4814  0D7E  0878               	movf	___lwmod@divisor,w
  4815  0D7F  0479               	iorwf	___lwmod@divisor+1,w
  4816  0D80  1903               	btfsc	3,2
  4817  0D81  2DAB               	goto	i1l1683
  4818  0D82  01FD               	clrf	___lwmod@counter
  4819  0D83  0AFD               	incf	___lwmod@counter,f
  4820  0D84                     i1l1673:	
  4821  0D84  1BF9               	btfsc	___lwmod@divisor+1,7
  4822  0D85  2D92               	goto	i1l1675
  4823  0D86  3001               	movlw	1
  4824  0D87                     u164_25:	
  4825  0D87  1003               	clrc
  4826  0D88  0DF8               	rlf	___lwmod@divisor,f
  4827  0D89  0DF9               	rlf	___lwmod@divisor+1,f
  4828  0D8A  3EFF               	addlw	-1
  4829  0D8B  1D03               	skipz
  4830  0D8C  2D87               	goto	u164_25
  4831  0D8D  3001               	movlw	1
  4832  0D8E  00FC               	movwf	??___lwmod
  4833  0D8F  087C               	movf	??___lwmod,w
  4834  0D90  07FD               	addwf	___lwmod@counter,f
  4835  0D91  2D84               	goto	i1l1673
  4836  0D92                     i1l1675:	
  4837  0D92  0879               	movf	___lwmod@divisor+1,w
  4838  0D93  027B               	subwf	___lwmod@dividend+1,w
  4839  0D94  1D03               	skipz
  4840  0D95  2D98               	goto	u166_25
  4841  0D96  0878               	movf	___lwmod@divisor,w
  4842  0D97  027A               	subwf	___lwmod@dividend,w
  4843  0D98                     u166_25:	
  4844  0D98  1C03               	skipc
  4845  0D99  2DA0               	goto	i1l1679
  4846  0D9A  0878               	movf	___lwmod@divisor,w
  4847  0D9B  02FA               	subwf	___lwmod@dividend,f
  4848  0D9C  0879               	movf	___lwmod@divisor+1,w
  4849  0D9D  1C03               	skipc
  4850  0D9E  03FB               	decf	___lwmod@dividend+1,f
  4851  0D9F  02FB               	subwf	___lwmod@dividend+1,f
  4852  0DA0                     i1l1679:	
  4853  0DA0  3001               	movlw	1
  4854  0DA1                     u167_25:	
  4855  0DA1  1003               	clrc
  4856  0DA2  0CF9               	rrf	___lwmod@divisor+1,f
  4857  0DA3  0CF8               	rrf	___lwmod@divisor,f
  4858  0DA4  3EFF               	addlw	-1
  4859  0DA5  1D03               	skipz
  4860  0DA6  2DA1               	goto	u167_25
  4861  0DA7  3001               	movlw	1
  4862  0DA8  02FD               	subwf	___lwmod@counter,f
  4863  0DA9  1D03               	btfss	3,2
  4864  0DAA  2D92               	goto	i1l1675
  4865  0DAB                     i1l1683:	
  4866  0DAB  087B               	movf	___lwmod@dividend+1,w
  4867  0DAC  00F9               	movwf	?___lwmod+1
  4868  0DAD  087A               	movf	___lwmod@dividend,w
  4869  0DAE  00F8               	movwf	?___lwmod
  4870  0DAF  0008               	return
  4871  0DB0                     __end_of___lwmod:	
  4872                           
  4873                           	psect	text23
  4874  07BE                     __ptext23:	
  4875 ;; *************** function ___lwdiv *****************
  4876 ;; Defined at:
  4877 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  divisor         2    0[COMMON] unsigned int 
  4880 ;;  dividend        2    2[COMMON] unsigned int 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  quotient        2    5[COMMON] unsigned int 
  4883 ;;  counter         1    7[COMMON] unsigned char 
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  2    0[COMMON] unsigned int 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2, status,0
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4893 ;;      Params:         4       0       0       0       0
  4894 ;;      Locals:         3       0       0       0       0
  4895 ;;      Temps:          1       0       0       0       0
  4896 ;;      Totals:         8       0       0       0       0
  4897 ;;Total ram usage:        8 bytes
  4898 ;; Hardware stack levels used:    1
  4899 ;; This function calls:
  4900 ;;		Nothing
  4901 ;; This function is called by:
  4902 ;;		_printf
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           
  4907                           ;psect for function ___lwdiv
  4908  07BE                     ___lwdiv:	
  4909                           
  4910                           ;incstack = 0
  4911                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4912  07BE  01F5               	clrf	___lwdiv@quotient
  4913  07BF  01F6               	clrf	___lwdiv@quotient+1
  4914  07C0  0870               	movf	___lwdiv@divisor,w
  4915  07C1  0471               	iorwf	___lwdiv@divisor+1,w
  4916  07C2  1903               	btfsc	3,2
  4917  07C3  2FF5               	goto	i1l1661
  4918  07C4  01F7               	clrf	___lwdiv@counter
  4919  07C5  0AF7               	incf	___lwdiv@counter,f
  4920  07C6                     i1l1649:	
  4921  07C6  1BF1               	btfsc	___lwdiv@divisor+1,7
  4922  07C7  2FD4               	goto	i1l1651
  4923  07C8  3001               	movlw	1
  4924  07C9                     u157_25:	
  4925  07C9  1003               	clrc
  4926  07CA  0DF0               	rlf	___lwdiv@divisor,f
  4927  07CB  0DF1               	rlf	___lwdiv@divisor+1,f
  4928  07CC  3EFF               	addlw	-1
  4929  07CD  1D03               	skipz
  4930  07CE  2FC9               	goto	u157_25
  4931  07CF  3001               	movlw	1
  4932  07D0  00F4               	movwf	??___lwdiv
  4933  07D1  0874               	movf	??___lwdiv,w
  4934  07D2  07F7               	addwf	___lwdiv@counter,f
  4935  07D3  2FC6               	goto	i1l1649
  4936  07D4                     i1l1651:	
  4937  07D4  3001               	movlw	1
  4938  07D5                     u159_25:	
  4939  07D5  1003               	clrc
  4940  07D6  0DF5               	rlf	___lwdiv@quotient,f
  4941  07D7  0DF6               	rlf	___lwdiv@quotient+1,f
  4942  07D8  3EFF               	addlw	-1
  4943  07D9  1D03               	skipz
  4944  07DA  2FD5               	goto	u159_25
  4945  07DB  0871               	movf	___lwdiv@divisor+1,w
  4946  07DC  0273               	subwf	___lwdiv@dividend+1,w
  4947  07DD  1D03               	skipz
  4948  07DE  2FE1               	goto	u160_25
  4949  07DF  0870               	movf	___lwdiv@divisor,w
  4950  07E0  0272               	subwf	___lwdiv@dividend,w
  4951  07E1                     u160_25:	
  4952  07E1  1C03               	skipc
  4953  07E2  2FEA               	goto	i1l1657
  4954  07E3  0870               	movf	___lwdiv@divisor,w
  4955  07E4  02F2               	subwf	___lwdiv@dividend,f
  4956  07E5  0871               	movf	___lwdiv@divisor+1,w
  4957  07E6  1C03               	skipc
  4958  07E7  03F3               	decf	___lwdiv@dividend+1,f
  4959  07E8  02F3               	subwf	___lwdiv@dividend+1,f
  4960  07E9  1475               	bsf	___lwdiv@quotient,0
  4961  07EA                     i1l1657:	
  4962  07EA  3001               	movlw	1
  4963  07EB                     u161_25:	
  4964  07EB  1003               	clrc
  4965  07EC  0CF1               	rrf	___lwdiv@divisor+1,f
  4966  07ED  0CF0               	rrf	___lwdiv@divisor,f
  4967  07EE  3EFF               	addlw	-1
  4968  07EF  1D03               	skipz
  4969  07F0  2FEB               	goto	u161_25
  4970  07F1  3001               	movlw	1
  4971  07F2  02F7               	subwf	___lwdiv@counter,f
  4972  07F3  1D03               	btfss	3,2
  4973  07F4  2FD4               	goto	i1l1651
  4974  07F5                     i1l1661:	
  4975  07F5  0876               	movf	___lwdiv@quotient+1,w
  4976  07F6  00F1               	movwf	?___lwdiv+1
  4977  07F7  0875               	movf	___lwdiv@quotient,w
  4978  07F8  00F0               	movwf	?___lwdiv
  4979  07F9  0008               	return
  4980  07FA                     __end_of___lwdiv:	
  4981                           
  4982                           	psect	text24
  4983  0DE3                     __ptext24:	
  4984 ;; *************** function _ds_set *****************
  4985 ;; Defined at:
  4986 ;;		line 13 in file "ds1307.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  data            1    wreg     PTR unsigned char 
  4989 ;;		 -> time(7), 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  data            1   11[COMMON] PTR unsigned char 
  4992 ;;		 -> time(7), 
  4993 ;;  j               1   12[COMMON] unsigned char 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  1    wreg      void 
  4996 ;; Registers used:
  4997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5003 ;;      Params:         0       0       0       0       0
  5004 ;;      Locals:         2       0       0       0       0
  5005 ;;      Temps:          1       0       0       0       0
  5006 ;;      Totals:         3       0       0       0       0
  5007 ;;Total ram usage:        3 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    1
  5010 ;; This function calls:
  5011 ;;		i1_i2c_start
  5012 ;;		i1_i2c_stop
  5013 ;;		i1_i2c_write
  5014 ;; This function is called by:
  5015 ;;		_ints_isr
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           
  5020                           ;psect for function _ds_set
  5021  0DE3                     _ds_set:	
  5022                           
  5023                           ;incstack = 0
  5024                           ; Regs used in _ds_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5025                           ;ds_set@data stored from wreg
  5026  0DE3  00FB               	movwf	ds_set@data
  5027                           
  5028                           ;ds1307.c: 14: unsigned char j;
  5029                           ;ds1307.c: 15: for (j=0;j<7;j++){
  5030  0DE4  01FC               	clrf	ds_set@j
  5031  0DE5                     L10:	
  5032  0DE5  3007               	movlw	7
  5033  0DE6  027C               	subwf	ds_set@j,w
  5034  0DE7  1803               	btfsc	3,0
  5035  0DE8  0008               	return
  5036                           
  5037                           ;ds1307.c: 16: i2c_start();
  5038  0DE9  120A  158A  24C1  120A  158A  	fcall	i1_i2c_start
  5039                           
  5040                           ;ds1307.c: 17: i2c_write(0b11010000,1);
  5041  0DEE  01F0               	clrf	i1i2c_write@ack
  5042  0DEF  0AF0               	incf	i1i2c_write@ack,f
  5043  0DF0  30D0               	movlw	208
  5044  0DF1  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  5045                           
  5046                           ;ds1307.c: 18: i2c_write(j,1);
  5047  0DF6  01F0               	clrf	i1i2c_write@ack
  5048  0DF7  0AF0               	incf	i1i2c_write@ack,f
  5049  0DF8  087C               	movf	ds_set@j,w
  5050  0DF9  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  5051                           
  5052                           ;ds1307.c: 19: i2c_write(*(data+j),1);
  5053  0DFE  01F0               	clrf	i1i2c_write@ack
  5054  0DFF  0AF0               	incf	i1i2c_write@ack,f
  5055  0E00  087C               	movf	ds_set@j,w
  5056  0E01  077B               	addwf	ds_set@data,w
  5057  0E02  00FA               	movwf	??_ds_set
  5058  0E03  087A               	movf	??_ds_set,w
  5059  0E04  0084               	movwf	4
  5060  0E05  1383               	bcf	3,7	;select IRP bank0
  5061  0E06  0800               	movf	0,w
  5062  0E07  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  5063                           
  5064                           ;ds1307.c: 20: i2c_stop();
  5065  0E0C  120A  158A  24E4  120A  158A  	fcall	i1_i2c_stop
  5066  0E11  3001               	movlw	1
  5067  0E12  00FA               	movwf	??_ds_set
  5068  0E13  087A               	movf	??_ds_set,w
  5069  0E14  07FC               	addwf	ds_set@j,f
  5070  0E15  2DE5               	goto	L10
  5071  0E16                     __end_of_ds_set:	
  5072                           
  5073                           	psect	text25
  5074  0D4D                     __ptext25:	
  5075 ;; *************** function _ds_get *****************
  5076 ;; Defined at:
  5077 ;;		line 25 in file "ds1307.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  data            1    wreg     unsigned char 
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;  data            1   11[COMMON] unsigned char 
  5082 ;;  resp            1   12[COMMON] unsigned char 
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  1    wreg      unsigned char 
  5085 ;; Registers used:
  5086 ;;		wreg, status,2, status,0, pclath, cstack
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5092 ;;      Params:         0       0       0       0       0
  5093 ;;      Locals:         2       0       0       0       0
  5094 ;;      Temps:          1       0       0       0       0
  5095 ;;      Totals:         3       0       0       0       0
  5096 ;;Total ram usage:        3 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    1
  5099 ;; This function calls:
  5100 ;;		_i2c_rstart
  5101 ;;		i1_i2c_read
  5102 ;;		i1_i2c_start
  5103 ;;		i1_i2c_stop
  5104 ;;		i1_i2c_write
  5105 ;; This function is called by:
  5106 ;;		_ints_isr
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           
  5111                           ;psect for function _ds_get
  5112  0D4D                     _ds_get:	
  5113                           
  5114                           ;incstack = 0
  5115                           ; Regs used in _ds_get: [wreg+status,2+status,0+pclath+cstack]
  5116                           ;ds_get@data stored from wreg
  5117  0D4D  00FB               	movwf	ds_get@data
  5118                           
  5119                           ;ds1307.c: 26: unsigned char resp;
  5120                           ;ds1307.c: 27: i2c_start();
  5121  0D4E  120A  158A  24C1  120A  158A  	fcall	i1_i2c_start
  5122                           
  5123                           ;ds1307.c: 28: i2c_write(0b11010000,1);
  5124  0D53  01F0               	clrf	i1i2c_write@ack
  5125  0D54  0AF0               	incf	i1i2c_write@ack,f
  5126  0D55  30D0               	movlw	208
  5127  0D56  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  5128                           
  5129                           ;ds1307.c: 29: i2c_write(data,1);
  5130  0D5B  01F0               	clrf	i1i2c_write@ack
  5131  0D5C  0AF0               	incf	i1i2c_write@ack,f
  5132  0D5D  087B               	movf	ds_get@data,w
  5133  0D5E  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  5134                           
  5135                           ;ds1307.c: 30: i2c_rstart();
  5136  0D63  120A  158A  249E  120A  158A  	fcall	_i2c_rstart
  5137                           
  5138                           ;ds1307.c: 31: i2c_write(0b11010001,1);
  5139  0D68  01F0               	clrf	i1i2c_write@ack
  5140  0D69  0AF0               	incf	i1i2c_write@ack,f
  5141  0D6A  30D1               	movlw	209
  5142  0D6B  120A  158A  25B0  120A  158A  	fcall	i1_i2c_write
  5143                           
  5144                           ;ds1307.c: 32: resp = i2c_read(0);
  5145  0D70  3000               	movlw	0
  5146  0D71  120A  118A  26BB  120A  158A  	fcall	i1_i2c_read
  5147  0D76  00FA               	movwf	??_ds_get
  5148  0D77  087A               	movf	??_ds_get,w
  5149  0D78  00FC               	movwf	ds_get@resp
  5150                           
  5151                           ;ds1307.c: 33: i2c_stop();
  5152  0D79  120A  158A  24E4   	fcall	i1_i2c_stop
  5153                           
  5154                           ;ds1307.c: 34: return resp;
  5155  0D7C  087C               	movf	ds_get@resp,w
  5156  0D7D  0008               	return
  5157  0D7E                     __end_of_ds_get:	
  5158                           
  5159                           	psect	text26
  5160  0DB0                     __ptext26:	
  5161 ;; *************** function i1_i2c_write *****************
  5162 ;; Defined at:
  5163 ;;		line 39 in file "i2clib.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  datum           1    wreg     unsigned char 
  5166 ;;  ack             1    0[COMMON] unsigned char 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  datum           1    9[COMMON] unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  1    wreg      unsigned char 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5178 ;;      Params:         1       0       0       0       0
  5179 ;;      Locals:         1       0       0       0       0
  5180 ;;      Temps:          8       0       0       0       0
  5181 ;;      Totals:        10       0       0       0       0
  5182 ;;Total ram usage:       10 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; This function calls:
  5185 ;;		Nothing
  5186 ;; This function is called by:
  5187 ;;		_si_read_h
  5188 ;;		_si_read_t
  5189 ;;		_ds_set
  5190 ;;		_ds_get
  5191 ;;		i1_mem_write
  5192 ;;		i1_mem_read
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           
  5197                           ;psect for function i1_i2c_write
  5198  0DB0                     i1_i2c_write:	
  5199                           
  5200                           ;incstack = 0
  5201                           ; Regs used in i1_i2c_write: [wreg+status,2+status,0]
  5202                           ;i1i2c_write@datum stored from wreg
  5203  0DB0  00F9               	movwf	i1i2c_write@datum
  5204  0DB1                     i1l1529:	
  5205                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5206                           
  5207  0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  5208  0DB2  1303               	bcf	3,6	;RP1=0, select bank1
  5209  0DB3  0811               	movf	17,w	;volatile
  5210  0DB4  3901               	andlw	1
  5211  0DB5  00F1               	movwf	??i1_i2c_write
  5212  0DB6  0C11               	rrf	17,w	;volatile
  5213  0DB7  3901               	andlw	1
  5214  0DB8  00F2               	movwf	??i1_i2c_write+1
  5215  0DB9  0C11               	rrf	17,w	;volatile
  5216  0DBA  00F3               	movwf	??i1_i2c_write+2
  5217  0DBB  0CF3               	rrf	??i1_i2c_write+2,f
  5218  0DBC  0C73               	rrf	??i1_i2c_write+2,w
  5219  0DBD  3901               	andlw	1
  5220  0DBE  00F4               	movwf	??i1_i2c_write+3
  5221  0DBF  0E11               	swapf	17,w	;volatile
  5222  0DC0  3901               	andlw	1
  5223  0DC1  00F5               	movwf	??i1_i2c_write+4
  5224  0DC2  0C11               	rrf	17,w	;volatile
  5225  0DC3  00F6               	movwf	??i1_i2c_write+5
  5226  0DC4  0C76               	rrf	??i1_i2c_write+5,w
  5227  0DC5  3901               	andlw	1
  5228  0DC6  00F7               	movwf	??i1_i2c_write+6
  5229  0DC7  0C14               	rrf	20,w	;volatile
  5230  0DC8  00F8               	movwf	??i1_i2c_write+7
  5231  0DC9  0C78               	rrf	??i1_i2c_write+7,w
  5232  0DCA  3901               	andlw	1
  5233  0DCB  0477               	iorwf	??i1_i2c_write+6,w
  5234  0DCC  0475               	iorwf	??i1_i2c_write+4,w
  5235  0DCD  0474               	iorwf	??i1_i2c_write+3,w
  5236  0DCE  0472               	iorwf	??i1_i2c_write+1,w
  5237  0DCF  0471               	iorwf	??i1_i2c_write,w
  5238  0DD0  1D03               	btfss	3,2
  5239  0DD1  2DB1               	goto	i1l1529
  5240                           
  5241                           ;i2clib.c: 42: SSPBUF = datum;
  5242  0DD2  0879               	movf	i1i2c_write@datum,w
  5243  0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  5244  0DD4  1303               	bcf	3,6	;RP1=0, select bank0
  5245  0DD5  0093               	movwf	19	;volatile
  5246  0DD6                     i1l167:	
  5247                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  5248                           
  5249  0DD6  1683               	bsf	3,5	;RP0=1, select bank1
  5250  0DD7  1303               	bcf	3,6	;RP1=0, select bank1
  5251  0DD8  1814               	btfsc	20,0	;volatile
  5252  0DD9  2DD6               	goto	i1l167
  5253                           
  5254                           ;i2clib.c: 44: if(ack){
  5255  0DDA  0870               	movf	i1i2c_write@ack,w
  5256  0DDB  1903               	btfsc	3,2
  5257  0DDC  2DDF               	goto	i1l174
  5258  0DDD                     i1l171:	
  5259                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  5260                           
  5261  0DDD  1B11               	btfsc	17,6	;volatile
  5262  0DDE  2DDD               	goto	i1l171
  5263  0DDF                     i1l174:	
  5264                           ;i2clib.c: 46: }
  5265                           ;i2clib.c: 47: }
  5266                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  5267                           
  5268  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  5269  0DE0  198C               	btfsc	12,3	;volatile
  5270  0DE1  0008               	return
  5271  0DE2  2DDF               	goto	i1l174
  5272  0DE3                     __end_ofi1_i2c_write:	
  5273                           
  5274                           	psect	text27
  5275  0CE4                     __ptext27:	
  5276 ;; *************** function i1_i2c_stop *****************
  5277 ;; Defined at:
  5278 ;;		line 34 in file "i2clib.c"
  5279 ;; Parameters:    Size  Location     Type
  5280 ;;		None
  5281 ;; Auto vars:     Size  Location     Type
  5282 ;;		None
  5283 ;; Return value:  Size  Location     Type
  5284 ;;                  1    wreg      void 
  5285 ;; Registers used:
  5286 ;;		wreg, status,2, status,0
  5287 ;; Tracked objects:
  5288 ;;		On entry : 0/0
  5289 ;;		On exit  : 0/0
  5290 ;;		Unchanged: 0/0
  5291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5292 ;;      Params:         0       0       0       0       0
  5293 ;;      Locals:         0       0       0       0       0
  5294 ;;      Temps:          8       0       0       0       0
  5295 ;;      Totals:         8       0       0       0       0
  5296 ;;Total ram usage:        8 bytes
  5297 ;; Hardware stack levels used:    1
  5298 ;; This function calls:
  5299 ;;		Nothing
  5300 ;; This function is called by:
  5301 ;;		_si_read_h
  5302 ;;		_si_read_t
  5303 ;;		_ds_set
  5304 ;;		_ds_get
  5305 ;;		i1_mem_write
  5306 ;;		i1_mem_read
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           
  5311                           ;psect for function i1_i2c_stop
  5312  0CE4                     i1_i2c_stop:	
  5313  0CE4                     i1l1525:	
  5314                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5315                           
  5316                           ;incstack = 0
  5317                           ; Regs used in i1_i2c_stop: [wreg+status,2+status,0]
  5318                           
  5319  0CE4  1683               	bsf	3,5	;RP0=1, select bank1
  5320  0CE5  1303               	bcf	3,6	;RP1=0, select bank1
  5321  0CE6  0811               	movf	17,w	;volatile
  5322  0CE7  3901               	andlw	1
  5323  0CE8  00F0               	movwf	??i1_i2c_stop
  5324  0CE9  0C11               	rrf	17,w	;volatile
  5325  0CEA  3901               	andlw	1
  5326  0CEB  00F1               	movwf	??i1_i2c_stop+1
  5327  0CEC  0C11               	rrf	17,w	;volatile
  5328  0CED  00F2               	movwf	??i1_i2c_stop+2
  5329  0CEE  0CF2               	rrf	??i1_i2c_stop+2,f
  5330  0CEF  0C72               	rrf	??i1_i2c_stop+2,w
  5331  0CF0  3901               	andlw	1
  5332  0CF1  00F3               	movwf	??i1_i2c_stop+3
  5333  0CF2  0E11               	swapf	17,w	;volatile
  5334  0CF3  3901               	andlw	1
  5335  0CF4  00F4               	movwf	??i1_i2c_stop+4
  5336  0CF5  0C11               	rrf	17,w	;volatile
  5337  0CF6  00F5               	movwf	??i1_i2c_stop+5
  5338  0CF7  0C75               	rrf	??i1_i2c_stop+5,w
  5339  0CF8  3901               	andlw	1
  5340  0CF9  00F6               	movwf	??i1_i2c_stop+6
  5341  0CFA  0C14               	rrf	20,w	;volatile
  5342  0CFB  00F7               	movwf	??i1_i2c_stop+7
  5343  0CFC  0C77               	rrf	??i1_i2c_stop+7,w
  5344  0CFD  3901               	andlw	1
  5345  0CFE  0476               	iorwf	??i1_i2c_stop+6,w
  5346  0CFF  0474               	iorwf	??i1_i2c_stop+4,w
  5347  0D00  0473               	iorwf	??i1_i2c_stop+3,w
  5348  0D01  0471               	iorwf	??i1_i2c_stop+1,w
  5349  0D02  0470               	iorwf	??i1_i2c_stop,w
  5350  0D03  1D03               	btfss	3,2
  5351  0D04  2CE4               	goto	i1l1525
  5352                           
  5353                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  5354  0D05  1511               	bsf	17,2	;volatile
  5355  0D06  0008               	return
  5356  0D07                     __end_ofi1_i2c_stop:	
  5357                           
  5358                           	psect	text28
  5359  0CC1                     __ptext28:	
  5360 ;; *************** function i1_i2c_start *****************
  5361 ;; Defined at:
  5362 ;;		line 24 in file "i2clib.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5376 ;;      Params:         0       0       0       0       0
  5377 ;;      Locals:         0       0       0       0       0
  5378 ;;      Temps:          8       0       0       0       0
  5379 ;;      Totals:         8       0       0       0       0
  5380 ;;Total ram usage:        8 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_si_read_h
  5386 ;;		_si_read_t
  5387 ;;		_ds_set
  5388 ;;		_ds_get
  5389 ;;		i1_mem_write
  5390 ;;		i1_mem_read
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           
  5395                           ;psect for function i1_i2c_start
  5396  0CC1                     i1_i2c_start:	
  5397  0CC1                     i1l1521:	
  5398                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5399                           
  5400                           ;incstack = 0
  5401                           ; Regs used in i1_i2c_start: [wreg+status,2+status,0]
  5402                           
  5403  0CC1  1683               	bsf	3,5	;RP0=1, select bank1
  5404  0CC2  1303               	bcf	3,6	;RP1=0, select bank1
  5405  0CC3  0811               	movf	17,w	;volatile
  5406  0CC4  3901               	andlw	1
  5407  0CC5  00F0               	movwf	??i1_i2c_start
  5408  0CC6  0C11               	rrf	17,w	;volatile
  5409  0CC7  3901               	andlw	1
  5410  0CC8  00F1               	movwf	??i1_i2c_start+1
  5411  0CC9  0C11               	rrf	17,w	;volatile
  5412  0CCA  00F2               	movwf	??i1_i2c_start+2
  5413  0CCB  0CF2               	rrf	??i1_i2c_start+2,f
  5414  0CCC  0C72               	rrf	??i1_i2c_start+2,w
  5415  0CCD  3901               	andlw	1
  5416  0CCE  00F3               	movwf	??i1_i2c_start+3
  5417  0CCF  0E11               	swapf	17,w	;volatile
  5418  0CD0  3901               	andlw	1
  5419  0CD1  00F4               	movwf	??i1_i2c_start+4
  5420  0CD2  0C11               	rrf	17,w	;volatile
  5421  0CD3  00F5               	movwf	??i1_i2c_start+5
  5422  0CD4  0C75               	rrf	??i1_i2c_start+5,w
  5423  0CD5  3901               	andlw	1
  5424  0CD6  00F6               	movwf	??i1_i2c_start+6
  5425  0CD7  0C14               	rrf	20,w	;volatile
  5426  0CD8  00F7               	movwf	??i1_i2c_start+7
  5427  0CD9  0C77               	rrf	??i1_i2c_start+7,w
  5428  0CDA  3901               	andlw	1
  5429  0CDB  0476               	iorwf	??i1_i2c_start+6,w
  5430  0CDC  0474               	iorwf	??i1_i2c_start+4,w
  5431  0CDD  0473               	iorwf	??i1_i2c_start+3,w
  5432  0CDE  0471               	iorwf	??i1_i2c_start+1,w
  5433  0CDF  0470               	iorwf	??i1_i2c_start,w
  5434  0CE0  1D03               	btfss	3,2
  5435  0CE1  2CC1               	goto	i1l1521
  5436                           
  5437                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  5438  0CE2  1411               	bsf	17,0	;volatile
  5439  0CE3  0008               	return
  5440  0CE4                     __end_ofi1_i2c_start:	
  5441                           
  5442                           	psect	text29
  5443  06BB                     __ptext29:	
  5444 ;; *************** function i1_i2c_read *****************
  5445 ;; Defined at:
  5446 ;;		line 51 in file "i2clib.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  ack             1    wreg     unsigned char 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  ack             1    9[COMMON] unsigned char 
  5451 ;;  i2c_read        1    8[COMMON] unsigned char 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      unsigned char 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         0       0       0       0       0
  5462 ;;      Locals:         2       0       0       0       0
  5463 ;;      Temps:          8       0       0       0       0
  5464 ;;      Totals:        10       0       0       0       0
  5465 ;;Total ram usage:       10 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_si_read_h
  5471 ;;		_si_read_t
  5472 ;;		_ds_get
  5473 ;;		i1_mem_read
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           
  5478                           ;psect for function i1_i2c_read
  5479  06BB                     i1_i2c_read:	
  5480                           
  5481                           ;incstack = 0
  5482                           ; Regs used in i1_i2c_read: [wreg+status,2+status,0]
  5483                           ;i1i2c_read@ack stored from wreg
  5484  06BB  00F9               	movwf	i1i2c_read@ack
  5485                           
  5486                           ;i2clib.c: 52: unsigned char resp;
  5487                           ;i2clib.c: 53: static bit flag, not_flag;
  5488                           ;i2clib.c: 54: flag = ack & 0x01;
  5489  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  5490  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  5491  06BE  10DA               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  5492  06BF  1879               	btfsc	i1i2c_read@ack,0
  5493  06C0  14DA               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  5494                           
  5495                           ;i2clib.c: 55: if (ack == 1){
  5496  06C1  0379               	decf	i1i2c_read@ack,w
  5497  06C2  1D03               	btfss	3,2
  5498  06C3  2EC7               	goto	i1l1543
  5499                           
  5500                           ;i2clib.c: 56: not_flag = 0;
  5501  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  5502  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  5503  06C6  105A               	bcf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  5504  06C7                     i1l1543:	
  5505                           
  5506                           ;i2clib.c: 57: }
  5507                           ;i2clib.c: 58: if (ack == 3){
  5508  06C7  3003               	movlw	3
  5509  06C8  0679               	xorwf	i1i2c_read@ack,w
  5510  06C9  1D03               	btfss	3,2
  5511  06CA  2ECE               	goto	i1l1547
  5512                           
  5513                           ;i2clib.c: 59: not_flag = 1;
  5514  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  5515  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  5516  06CD  145A               	bsf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  5517  06CE                     i1l1547:	
  5518                           ;i2clib.c: 60: }
  5519                           ;i2clib.c: 61: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5520                           
  5521  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  5522  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  5523  06D0  0811               	movf	17,w	;volatile
  5524  06D1  3901               	andlw	1
  5525  06D2  00F0               	movwf	??i1_i2c_read
  5526  06D3  0C11               	rrf	17,w	;volatile
  5527  06D4  3901               	andlw	1
  5528  06D5  00F1               	movwf	??i1_i2c_read+1
  5529  06D6  0C11               	rrf	17,w	;volatile
  5530  06D7  00F2               	movwf	??i1_i2c_read+2
  5531  06D8  0CF2               	rrf	??i1_i2c_read+2,f
  5532  06D9  0C72               	rrf	??i1_i2c_read+2,w
  5533  06DA  3901               	andlw	1
  5534  06DB  00F3               	movwf	??i1_i2c_read+3
  5535  06DC  0E11               	swapf	17,w	;volatile
  5536  06DD  3901               	andlw	1
  5537  06DE  00F4               	movwf	??i1_i2c_read+4
  5538  06DF  0C11               	rrf	17,w	;volatile
  5539  06E0  00F5               	movwf	??i1_i2c_read+5
  5540  06E1  0C75               	rrf	??i1_i2c_read+5,w
  5541  06E2  3901               	andlw	1
  5542  06E3  00F6               	movwf	??i1_i2c_read+6
  5543  06E4  0C14               	rrf	20,w	;volatile
  5544  06E5  00F7               	movwf	??i1_i2c_read+7
  5545  06E6  0C77               	rrf	??i1_i2c_read+7,w
  5546  06E7  3901               	andlw	1
  5547  06E8  0476               	iorwf	??i1_i2c_read+6,w
  5548  06E9  0474               	iorwf	??i1_i2c_read+4,w
  5549  06EA  0473               	iorwf	??i1_i2c_read+3,w
  5550  06EB  0471               	iorwf	??i1_i2c_read+1,w
  5551  06EC  0470               	iorwf	??i1_i2c_read,w
  5552  06ED  1D03               	btfss	3,2
  5553  06EE  2ECE               	goto	i1l1547
  5554                           
  5555                           ;i2clib.c: 62: SSPCON2bits.RCEN = 1;
  5556  06EF  1591               	bsf	17,3	;volatile
  5557  06F0                     i1l189:	
  5558                           ;i2clib.c: 63: while(!SSPSTATbits.BF);
  5559                           
  5560  06F0  1C14               	btfss	20,0	;volatile
  5561  06F1  2EF0               	goto	i1l189
  5562  06F2                     i1l192:	
  5563                           ;i2clib.c: 64: while(!PIR1bits.SSPIF);
  5564                           
  5565  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  5566  06F3  1D8C               	btfss	12,3	;volatile
  5567  06F4  2EF2               	goto	i1l192
  5568                           
  5569                           ;i2clib.c: 65: SSPCON2bits.ACKDT = not_flag;
  5570  06F5  1C5A               	btfss	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  5571  06F6  2EFB               	goto	u142_20
  5572  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  5573  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  5574  06F9  1691               	bsf	17,5	;volatile
  5575  06FA  2EFE               	goto	u143_24
  5576  06FB                     u142_20:	
  5577  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  5578  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  5579  06FD  1291               	bcf	17,5	;volatile
  5580  06FE                     u143_24:	
  5581                           
  5582                           ;i2clib.c: 66: SSPCON2bits.ACKEN = flag;
  5583  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  5584  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  5585  0700  1CDA               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  5586  0701  2F06               	goto	u144_20
  5587  0702  1683               	bsf	3,5	;RP0=1, select bank1
  5588  0703  1303               	bcf	3,6	;RP1=0, select bank1
  5589  0704  1611               	bsf	17,4	;volatile
  5590  0705  2F09               	goto	i1l1549
  5591  0706                     u144_20:	
  5592  0706  1683               	bsf	3,5	;RP0=1, select bank1
  5593  0707  1303               	bcf	3,6	;RP1=0, select bank1
  5594  0708  1211               	bcf	17,4	;volatile
  5595  0709                     i1l1549:	
  5596                           
  5597                           ;i2clib.c: 67: resp = SSPBUF;
  5598  0709  1283               	bcf	3,5	;RP0=0, select bank0
  5599  070A  1303               	bcf	3,6	;RP1=0, select bank0
  5600  070B  0813               	movf	19,w	;volatile
  5601  070C  00F0               	movwf	??i1_i2c_read
  5602  070D  0870               	movf	??i1_i2c_read,w
  5603  070E  00F8               	movwf	i1i2c_read@resp
  5604  070F                     i1l195:	
  5605                           ;i2clib.c: 68: while(SSPSTATbits.BF);
  5606                           
  5607  070F  1683               	bsf	3,5	;RP0=1, select bank1
  5608  0710  1303               	bcf	3,6	;RP1=0, select bank1
  5609  0711  1814               	btfsc	20,0	;volatile
  5610  0712  2F0F               	goto	i1l195
  5611                           
  5612                           ;i2clib.c: 69: return resp;
  5613  0713  0878               	movf	i1i2c_read@resp,w
  5614  0714  0008               	return
  5615  0715                     __end_ofi1_i2c_read:	
  5616                           
  5617                           	psect	text30
  5618  0C9E                     __ptext30:	
  5619 ;; *************** function _i2c_rstart *****************
  5620 ;; Defined at:
  5621 ;;		line 29 in file "i2clib.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;		None
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;		None
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      void 
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5635 ;;      Params:         0       0       0       0       0
  5636 ;;      Locals:         0       0       0       0       0
  5637 ;;      Temps:          8       0       0       0       0
  5638 ;;      Totals:         8       0       0       0       0
  5639 ;;Total ram usage:        8 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; This function calls:
  5642 ;;		Nothing
  5643 ;; This function is called by:
  5644 ;;		_si_read_h
  5645 ;;		_si_read_t
  5646 ;;		_ds_get
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650                           
  5651                           ;psect for function _i2c_rstart
  5652  0C9E                     _i2c_rstart:	
  5653  0C9E                     i1l1611:	
  5654                           ;i2clib.c: 30: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  5655                           
  5656                           ;incstack = 0
  5657                           ; Regs used in _i2c_rstart: [wreg+status,2+status,0]
  5658                           
  5659  0C9E  1683               	bsf	3,5	;RP0=1, select bank1
  5660  0C9F  1303               	bcf	3,6	;RP1=0, select bank1
  5661  0CA0  0811               	movf	17,w	;volatile
  5662  0CA1  3901               	andlw	1
  5663  0CA2  00F0               	movwf	??_i2c_rstart
  5664  0CA3  0C11               	rrf	17,w	;volatile
  5665  0CA4  3901               	andlw	1
  5666  0CA5  00F1               	movwf	??_i2c_rstart+1
  5667  0CA6  0C11               	rrf	17,w	;volatile
  5668  0CA7  00F2               	movwf	??_i2c_rstart+2
  5669  0CA8  0CF2               	rrf	??_i2c_rstart+2,f
  5670  0CA9  0C72               	rrf	??_i2c_rstart+2,w
  5671  0CAA  3901               	andlw	1
  5672  0CAB  00F3               	movwf	??_i2c_rstart+3
  5673  0CAC  0E11               	swapf	17,w	;volatile
  5674  0CAD  3901               	andlw	1
  5675  0CAE  00F4               	movwf	??_i2c_rstart+4
  5676  0CAF  0C11               	rrf	17,w	;volatile
  5677  0CB0  00F5               	movwf	??_i2c_rstart+5
  5678  0CB1  0C75               	rrf	??_i2c_rstart+5,w
  5679  0CB2  3901               	andlw	1
  5680  0CB3  00F6               	movwf	??_i2c_rstart+6
  5681  0CB4  0C14               	rrf	20,w	;volatile
  5682  0CB5  00F7               	movwf	??_i2c_rstart+7
  5683  0CB6  0C77               	rrf	??_i2c_rstart+7,w
  5684  0CB7  3901               	andlw	1
  5685  0CB8  0476               	iorwf	??_i2c_rstart+6,w
  5686  0CB9  0474               	iorwf	??_i2c_rstart+4,w
  5687  0CBA  0473               	iorwf	??_i2c_rstart+3,w
  5688  0CBB  0471               	iorwf	??_i2c_rstart+1,w
  5689  0CBC  0470               	iorwf	??_i2c_rstart,w
  5690  0CBD  1D03               	btfss	3,2
  5691  0CBE  2C9E               	goto	i1l1611
  5692                           
  5693                           ;i2clib.c: 31: SSPCON2bits.RSEN = 1;
  5694  0CBF  1491               	bsf	17,1	;volatile
  5695  0CC0  0008               	return
  5696  0CC1                     __end_of_i2c_rstart:	
  5697  007E                     btemp	set	126	;btemp
  5698  007E                     wtemp0	set	126


Data Sizes:
    Strings     70
    Constant    18
    Data        1
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      60
    BANK1            80     20      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf$733	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_11(CODE[17]), STR_10(CODE[17]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_9(CODE[2]), STR_8(CODE[5]), STR_7(CODE[7]), STR_6(CODE[4]), 
		 -> STR_5(CODE[3]), STR_4(CODE[2]), STR_3(CODE[7]), STR_2(CODE[6]), 
		 -> STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    ds_set@data	PTR unsigned char  size(1) Largest target is 7
		 -> time(BANK0[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ints_isr in COMMON

    _ints_isr->_si_read_h
    _ints_isr->_si_read_t
    _ints_isr->i1_mem_write
    i1_mem_init->i1_mem_write
    i1_mem_write->i1_i2c_write
    i1_mem_read->i1_i2c_read
    i1_mem_read->i1_i2c_write
    _si_read_t->i1_i2c_read
    _si_read_t->i1_i2c_write
    _si_read_h->i1_i2c_read
    _si_read_h->i1_i2c_write
    _printf->___lwmod
    _printf->_si_read_h
    _printf->_si_read_t
    ___lwmod->___lwdiv
    _ds_set->i1_i2c_write
    _ds_get->i1_i2c_read
    _ds_get->i1_i2c_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _ints_isr in BANK0

    _ints_isr->_printf
    i1_mem_init->i1_mem_read
    _printf->_si_read_h
    _printf->_si_read_t

Critical Paths under _main in BANK1

    _main->_mem_init
    _si_reset->_i2c_write
    _mem_init->_mem_read
    _mem_init->_mem_write
    _mem_write->_i2c_write
    _mem_read->_i2c_read
    _mem_read->_i2c_write

Critical Paths under _ints_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ints_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ints_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6205
                                             18 BANK1      2     2      0
                           _i2c_init
                        _init_timer2
                           _mem_init
                           _si_reset
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _si_reset                                             0     0      0    1268
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _mem_init                                             2     2      0    4717
                                             16 BANK1      2     2      0
                           _mem_read
                          _mem_write
 ---------------------------------------------------------------------------------
 (2) _mem_write                                            6     3      3    2704
                                             10 BANK1      6     3      3
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _mem_read                                             6     4      2    1990
                                             10 BANK1      6     4      2
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                           10     9      1    1268
                                              0 BANK1     10     9      1
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             8     8      0       0
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            8     8      0       0
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                            10    10      0      89
                                              0 BANK1     10    10      0
 ---------------------------------------------------------------------------------
 (1) _init_timer2                                          6     4      2     220
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ints_isr                                            28    28      0   11708
                                             20 BANK0     28    28      0
                             _ds_get
                             _ds_set
                             _printf
                          _si_read_h
                          _si_read_t
                         i1_mem_init
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_init                                           2     2      0    2635
                                              3 BANK0      2     2      0
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_write                                          6     3      3    1456
                                             10 COMMON     4     1      3
                                              0 BANK0      2     2      0
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_read                                           6     4      2    1156
                                             10 COMMON     3     1      2
                                              0 BANK0      3     3      0
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _si_read_t                                            8     6      2     798
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _si_read_h                                            8     6      2     799
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _printf                                              24    22      2    2329
                                              4 BANK0     16    14      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
                             _ds_get (ARG)
                            _isdigit
                              _putch
                          _si_read_h (ARG)
                          _si_read_t (ARG)
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     220
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     418
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _ds_set                                               3     3      0     758
                                             10 COMMON     3     3      0
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _ds_get                                               3     3      0     750
                                             10 COMMON     3     3      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) i1_i2c_write                                         10     9      1     616
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (6) i1_i2c_stop                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (6) i1_i2c_start                                          8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (6) i1_i2c_read                                          10    10      0      89
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (6) _i2c_rstart                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _init_timer2
   _mem_init
     _mem_read
       _i2c_read
       _i2c_start
       _i2c_stop
       _i2c_write
     _mem_write
       _i2c_start
       _i2c_stop
       _i2c_write
   _si_reset
     _i2c_start
     _i2c_stop
     _i2c_write
   _uart_init

 _ints_isr (ROOT)
   _ds_get
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _ds_set
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _ds_get (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     _isdigit (ARG)
     _putch (ARG)
     _si_read_h (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     _si_read_t (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
   _si_read_h
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _si_read_t
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   i1_mem_init
     i1_mem_read
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     i1_mem_write
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
   i1_mem_read
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   i1_mem_write
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     14      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     30      3C       5       75.0%
BITBANK0            50      0       1       4        1.3%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5E      12        0.0%
ABS                  0      0      5E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Sep 06 17:40:43 2017

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      fsr 0004       ___wmul@multiplicand 0072            si_read_h@rta_h 0020  
          si_read_h@rta_l 0021                       l123 0FB1                       l171 0E43  
                     l174 0E45                       l167 0E3C                       l192 05AF  
                     l195 05CE                       l189 05AD                       _PR2 0092  
            __CFG_CPD$OFF 0000                       _led 005B                       fsr0 0004  
          si_read_t@rta_h 0020                       indf 0000            si_read_t@rta_l 0021  
            __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000                      l1511 058B  
                    l1503 057A                i1_mem_init 0E8F                      l1513 05C6  
                    l1507 0582                i1_mem_read 0E49                      l1485 0D07  
                    l1493 0E19                      l1489 0D2A                      STR_1 063A  
                    STR_2 064A                      STR_3 0642                      STR_4 065C  
                    STR_5 0659                      STR_6 0655                      STR_7 0649  
                    STR_8 0650                      STR_9 065C                      u1240 05B8  
                    u1260 05C3                      u1254 05BB                      u2217 0F88  
                    u2227 0F9D                      u1975 05DB                      i1l72 05F8  
                    i1l91 003E                      i1l84 01E7                      i1l95 01E6  
                    i1l99 0130              __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000  
                    _main 0F67                      _secs 0050                      _time 0053  
                    btemp 007E                      start 0012             __CFG_MCLRE$ON 0000  
                   ?_main 0070                     STR_10 0618                     STR_11 0629  
           __CFG_WDTE$OFF 0000               i2c_read@ack 00A9                     _T2CON 0012  
             i1_mem_write 0ED5           __end_of___lwdiv 07FA                     i1l103 0156  
                   i1l113 0207                     i1l115 034A                     i1l303 0486  
                   i1l171 0DDD                     i1l412 0C87                     i1l174 0DDF  
                   i1l167 0DD6                     i1l192 06F2                     i1l328 056C  
         __end_of___lwmod 0DB0                     i1l274 0381                     i1l195 070F  
                   i1l189 06F0                     i1l294 0427                     i1l286 03FE  
                   i1l287 03DE                     i1l288 03DF                     i1l299 044B  
                   _RCREG 001A                     _SPBRG 0099                     _TRISA 0085  
                   _TRISB 0086                     _TXREG 0019              ?_init_timer2 00A0  
         __end_of_dpowers 0610                     _milis 0052           __end_of_isdigit 0C39  
             ?i1_i2c_read 0070               ?i1_i2c_stop 0070                     _putch 05F7  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 0015              __end_of_main 0FB2  
              _i2c_rstart 0C9E          __end_of_i2c_init 0C48          __end_of_i2c_read 05D2  
        __end_of_i2c_stop 0D4D                    ??_main 00B2               mem_init@aux 00B1  
             mem_read@add 00AA               mem_read@rta 00AD               ?i1_mem_init 0070  
             ?i1_mem_read 007A                    ?_putch 0070              i2c_read@flag 02D1  
                  i1l2021 0121                    i1l2025 012B                    i1l2035 0147  
                  i1l2019 0078                    i1l2061 01AA                    i1l2039 014F  
                  i1l1521 0CC1                    i1l2145 0349                    i1l2049 0188  
                  i1l2065 01D3                    i1l1611 0C9E                    i1l2075 01F6  
                  i1l1525 0CE4                    i1l1621 0C37                    i1l1543 06C7  
                  i1l2087 0208                    i1l1529 0DB1                    i1l1547 06CE  
                  i1l1651 07D4                    i1l1627 0C7F                    i1l1549 0709  
                  i1l1661 07F5              i2c_read@resp 00A8                    i1l1823 046F  
                  i1l1657 07EA                    i1l1649 07C6                    i1l1673 0D84  
                  i1l1841 04B5                    i1l1833 04A5                    i1l1825 0478  
                  i1l1675 0D92                    i1l1683 0DAB                    i1l1835 04A9  
                  i1l1771 0391                    i1l1763 037B                    i1l1861 051F  
                  i1l1853 04E0                    i1l1679 0DA0                    i1l1847 04CA  
                  i1l1775 03A3                    i1l1849 04CE                    i1l1857 04EA  
                  i1l1785 03E1                    i1l1769 0386                    i1l1867 0544  
                  i1l1875 0553                    i1l1859 04F1                    i1l1877 0559  
                  i1l1797 041A                    i1l1879 035E                    u204_25 007E  
                  u142_20 06FB                    u143_24 06FE                    u144_20 0706  
                  u160_25 07E1                    _INTCON 000B                    u161_25 07EB  
                  u153_25 0C88                    u154_25 0C8F                    u164_25 0D87  
                  u180_25 0468                    u157_25 07C9                    u166_25 0D98  
                  u159_25 07D5                    u167_25 0DA1                    u184_25 0495  
                  u177_25 0444                    _OSCCON 008F                    _SPBRGH 009A  
                  _SSPADD 0093                    _SSPBUF 0013        __size_of_i2c_start 0023  
      __size_of_i2c_write 0033            __CFG_PWRTE$OFF 0000                    ___wmul 0C7D  
               ??___lwdiv 0074                 ??___lwmod 007C                    _ds_get 0D4D  
        __end_of_mem_init 07BE          __end_of_mem_read 0F67                    _ds_set 0DE3  
     __size_ofi1_i2c_read 005A       __size_ofi1_i2c_stop 0023                    _printf 0357  
            ?i1_i2c_start 0070          __end_of_ints_isr 0357              ?i1_i2c_write 0070  
        __end_of_si_reset 0C7D                 ??_isdigit 0070                    saved_w 007E  
            i2c_write@ack 00A0   __end_of__initialization 0024            i1i2c_read@resp 0078  
          __pcstackCOMMON 0070               ?_i2c_rstart 0070              __pidataBANK0 07FA  
           __end_of_putch 05FF       __size_ofi1_mem_init 0046       __size_ofi1_mem_read 0046  
        i1i2c_write@datum 0079         __end_of_i2c_start 0D2A         __end_of_i2c_write 0E49  
    __size_of_init_timer2 0025                   ??_putch 0070               ints_isr@add 0041  
             ints_isr@arg 004F               ints_isr@aux 0049               ints_isr@rcv 003C  
              __pbssBANK0 0050                 ?_i2c_init 0070                 ?_i2c_read 0070  
               ?_i2c_stop 0070            i1i2c_write@ack 0070        __size_of_mem_write 004E  
              __pmaintext 0F67                   ?___wmul 0070                __pintentry 0004  
                 ?_ds_get 0070                   ?_ds_set 0070        __size_of_si_read_h 005D  
      __size_of_si_read_t 0059                   ?_printf 0024              ?i1_mem_write 007A  
      __size_of_uart_init 0018              ??i1_i2c_read 0070              ??i1_i2c_stop 0070  
     __size_of_i2c_rstart 0023                __stringtab 0600                ??_i2c_init 00A0  
              ??_i2c_read 00A0                 ?_mem_init 0070                 ?_mem_read 00AA  
              ??_i2c_stop 00A0                 ?_ints_isr 0070                 ?_si_reset 0070  
         __size_of___wmul 0021                   ___lwdiv 07BE                   ___lwmod 0D7E  
         __size_of_ds_get 0031           __size_of_ds_set 0033              mem_write@add 00AA  
      __end_ofi1_i2c_read 0715        __end_ofi1_i2c_stop 0D07                   __ptext1 0C48  
                 __ptext2 0C60                   __ptext3 076E                   __ptext4 0FB2  
                 __ptext5 0F1D                   __ptext6 0E16                   __ptext7 0D2A  
                 __ptext8 0D07                   __ptext9 056D           __size_of_printf 0216  
       __end_of_hexpowers 0618                   _dpowers 0606         __end_of_mem_write 1000  
                 _isdigit 0C2B      __size_ofi1_i2c_start 0023      __size_ofi1_i2c_write 0033  
                 ds_set@j 007C              ??i1_mem_init 0023              ??i1_mem_read 007C  
    end_of_initialization 0024         __end_of_si_read_h 06BB         __end_of_si_read_t 076E  
              ??_mem_init 00B0                ??_mem_read 00AC                ??_ints_isr 0034  
       __end_of_uart_init 0C60                ??_si_reset 00AA                 _RCSTAbits 0018  
                 printf@c 0033                   printf@f 0032                _printf$733 002A  
      __end_ofi1_mem_init 0ED5        __end_ofi1_mem_read 0E8F                 _PORTBbits 0006  
          i1mem_write@add 007A                ds_get@data 007B                 _TRISBbits 0086  
               _TRISCbits 0087                ds_get@resp 007C               printf@width 002F  
               _TXSTAbits 0098                ds_set@data 007B              ??_i2c_rstart 0070  
          __end_of___wmul 0C9E               _BAUDCTLbits 0187            __end_of_ds_get 0D7E  
          __end_of_ds_set 0E16             __pbitbssBANK0 02D0            __end_of_printf 056D  
     start_initialization 0015      __size_ofi1_mem_write 0048                 _i2c_start 0D07  
               _i2c_write 0E16        __end_of_i2c_rstart 0CC1  __CFG_FOSC$INTRC_NOCLKOUT 0000  
       __size_of_i2c_init 000F         __size_of_i2c_read 0065         __size_of_i2c_stop 0023  
                ??___wmul 0074                  ??_ds_get 007A                  ??_ds_set 007A  
             __pdataBANK0 005B                  ??_printf 0026              ints_isr@ferr 02D3  
            ints_isr@oerr 02D2             i1i2c_read@ack 0079             ??_init_timer2 00A2  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00A0  
              ?_i2c_start 0070                ?_i2c_write 00A0                ints_isr@up 0045  
          mem_write@add_h 00AE            mem_write@add_l 00AF         __size_of_mem_init 0050  
       __size_of_mem_read 004A          ___lwdiv@dividend 0072         __size_of_ints_isr 032F  
       __size_of_si_reset 001D                  ?___lwdiv 0070                  ?___lwmod 0078  
         init_timer2@post 00A0                 __pstrings 0600             mem_read@add_h 00AE  
           mem_read@add_l 00AF                  ?_isdigit 0070                 _hexpowers 0610  
        ___lwdiv@quotient 0075                 _mem_write 0FB2             i1mem_init@aux 0024  
           i1mem_read@add 007A             i1mem_read@rta 0020            __size_of_putch 0008  
     __end_of_init_timer2 05F7         interrupt_function 0004            ___wmul@product 0074  
                _PIE1bits 008C                 _si_read_h 065E                 _si_read_t 0715  
                _PIR1bits 000C                 _uart_init 0C48             ??i1_i2c_start 0070  
           ??i1_i2c_write 0071               __stringbase 0605              si_read_h@rta 0022  
       ___wmul@multiplier 0070              si_read_t@rta 0022                printf@flag 0031  
              printf@prec 002C               ??_i2c_start 00A0               ??_i2c_write 00A1  
              ?_mem_write 00AA                  _i2c_init 0C39                  _i2c_read 056D  
                _i2c_stop 0D2A                ?_si_read_h 007A                ?_si_read_t 007A  
              ?_uart_init 0070          __size_of___lwdiv 003C          __size_of___lwmod 0032  
      __end_of__stringtab 0606               _isdigit$919 0070                _ANSELHbits 0189  
               ints_isr@k 0044                 ints_isr@n 0047                 ints_isr@z 0043  
           mem_write@data 00AC               _init_timer2 05D2          __size_of_isdigit 000E  
         ___lwdiv@divisor 0070           i1mem_read@add_h 0021           i1mem_read@add_l 0022  
     __end_ofi1_i2c_start 0CE4           ___lwdiv@counter 0077       __end_ofi1_i2c_write 0DE3  
                __ptext10 05D2                  __ptext11 0C39                  __ptext20 0C2B  
                __ptext12 0028                  __ptext21 0C7D                  __ptext13 0E8F  
                __ptext30 0C9E                  __ptext22 0D7E                  __ptext14 0ED5  
                __ptext23 07BE                  __ptext15 0E49                  __ptext24 0DE3  
                __ptext16 0715                  __ptext25 0D4D                  __ptext17 065E  
                __ptext26 0DB0                  __ptext18 0357                  __ptext27 0CE4  
                __ptext19 05F7                  __ptext28 0CC1                  __ptext29 06BB  
       __CFG_BOR4V$BOR21V 0000            init_timer2@eoc 00A1            init_timer2@pre 00A4  
          init_timer2@sfr 00A5                  _mem_init 076E                  _mem_read 0F1D  
           __size_of_main 004B                  _ints_isr 0028                  _si_reset 0C60  
        i2c_read@not_flag 02D0                 printf@idx 0029                 printf@val 002D  
           ??i1_mem_write 007D                 putch@data 0070                _INTCONbits 000B  
                isdigit@c 0071               ??_mem_write 00AD                  intlevel1 0000  
        ___lwmod@dividend 007A               ??_si_read_h 007C               ??_si_read_t 007C  
               stringcode 0600               ??_uart_init 00A0                  printf@ap 002B  
             i1_i2c_start 0CC1          i1mem_write@add_h 0020          i1mem_write@add_l 0021  
             i1_i2c_write 0DB0           ___lwmod@divisor 0078           ___lwmod@counter 007D  
        ints_isr@temp_add 004B                  stringdir 0600                  stringtab 0600  
        ints_isr@temp_val 003F               _SSPCON2bits 0091       __end_ofi1_mem_write 0F1D  
              i1_i2c_read 06BB           ints_isr@hum_add 004D                i1_i2c_stop 0CE4  
         ints_isr@hum_val 003D           i1mem_write@data 007C                _SSPCONbits 0014  
          i2c_write@datum 00A9  
