

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Thu Sep 07 17:25:42 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 1.43
    49                           ; Generated 25/07/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F886 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310                           
   311                           	psect	idataBANK0
   312  07FE                     __pidataBANK0:	
   313                           
   314                           ;initializer for _led
   315  07FE  3405               	retlw	5
   316                           
   317                           	psect	strings
   318  0707                     __pstrings:	
   319  0707                     stringtab:	
   320  0707                     __stringtab:	
   321  0707                     stringcode:	
   322                           ;	String table - string pointers are 1 byte each
   323                           
   324  0707                     stringdir:	
   325  0707  3007               	movlw	high stringdir
   326  0708  008A               	movwf	10
   327  0709  0804               	movf	4,w
   328  070A  0A84               	incf	4,f
   329  070B  0782               	addwf	2,f
   330  070C                     __stringbase:	
   331  070C  3400               	retlw	0
   332  070D                     __end_of__stringtab:	
   333  070D                     _dpowers:	
   334  070D  3401               	retlw	1
   335  070E  3400               	retlw	0
   336  070F  340A               	retlw	10
   337  0710  3400               	retlw	0
   338  0711  3464               	retlw	100
   339  0712  3400               	retlw	0
   340  0713  34E8               	retlw	232
   341  0714  3403               	retlw	3
   342  0715  3410               	retlw	16
   343  0716  3427               	retlw	39
   344  0717                     __end_of_dpowers:	
   345  0717                     _hexpowers:	
   346  0717  3401               	retlw	1
   347  0718  3400               	retlw	0
   348  0719  3410               	retlw	16
   349  071A  3400               	retlw	0
   350  071B  3400               	retlw	0
   351  071C  3401               	retlw	1
   352  071D  3400               	retlw	0
   353  071E  3410               	retlw	16
   354  071F                     __end_of_hexpowers:	
   355  0013                     _SSPBUF	set	19
   356  0014                     _SSPCONbits	set	20
   357  000B                     _INTCON	set	11
   358  0012                     _T2CON	set	18
   359  0006                     _PORTBbits	set	6
   360  001A                     _RCREG	set	26
   361  000B                     _INTCONbits	set	11
   362  0019                     _TXREG	set	25
   363  000C                     _PIR1bits	set	12
   364  0018                     _RCSTAbits	set	24
   365  0091                     _SSPCON2bits	set	145
   366  0087                     _TRISCbits	set	135
   367  0094                     _SSPSTATbits	set	148
   368  0093                     _SSPADD	set	147
   369  0086                     _TRISBbits	set	134
   370  0086                     _TRISB	set	134
   371  0085                     _TRISA	set	133
   372  008F                     _OSCCON	set	143
   373  0092                     _PR2	set	146
   374  0099                     _SPBRG	set	153
   375  009A                     _SPBRGH	set	154
   376  0098                     _TXSTAbits	set	152
   377  008C                     _PIE1bits	set	140
   378  0189                     _ANSELHbits	set	393
   379  0187                     _BAUDCTLbits	set	391
   380  071F                     STR_19:	
   381  071F  3430               	retlw	48	;'0'
   382  0720  3431               	retlw	49	;'1'
   383  0721  3432               	retlw	50	;'2'
   384  0722  3433               	retlw	51	;'3'
   385  0723  3434               	retlw	52	;'4'
   386  0724  3435               	retlw	53	;'5'
   387  0725  3436               	retlw	54	;'6'
   388  0726  3437               	retlw	55	;'7'
   389  0727  3438               	retlw	56	;'8'
   390  0728  3439               	retlw	57	;'9'
   391  0729  3441               	retlw	65	;'A'
   392  072A  3442               	retlw	66	;'B'
   393  072B  3443               	retlw	67	;'C'
   394  072C  3444               	retlw	68	;'D'
   395  072D  3445               	retlw	69	;'E'
   396  072E  3446               	retlw	70	;'F'
   397  072F  3400               	retlw	0
   398  0730                     STR_20:	
   399  0730  3430               	retlw	48	;'0'
   400  0731  3431               	retlw	49	;'1'
   401  0732  3432               	retlw	50	;'2'
   402  0733  3433               	retlw	51	;'3'
   403  0734  3434               	retlw	52	;'4'
   404  0735  3435               	retlw	53	;'5'
   405  0736  3436               	retlw	54	;'6'
   406  0737  3437               	retlw	55	;'7'
   407  0738  3438               	retlw	56	;'8'
   408  0739  3439               	retlw	57	;'9'
   409  073A  3461               	retlw	97	;'a'
   410  073B  3462               	retlw	98	;'b'
   411  073C  3463               	retlw	99	;'c'
   412  073D  3464               	retlw	100	;'d'
   413  073E  3465               	retlw	101	;'e'
   414  073F  3466               	retlw	102	;'f'
   415  0740  3400               	retlw	0
   416  0741                     STR_1:	
   417  0741  3449               	retlw	73	;'I'
   418  0742  3425               	retlw	37	;'%'
   419  0743  3430               	retlw	48	;'0'
   420  0744  3435               	retlw	53	;'5'
   421  0745  3464               	retlw	100	;'d'
   422  0746  340D               	retlw	13
   423  0747  340A               	retlw	10
   424  0748  3400               	retlw	0
   425  0749                     STR_4:	
   426  0749  345A               	retlw	90	;'Z'
   427  074A  3425               	retlw	37	;'%'
   428  074B  3430               	retlw	48	;'0'
   429  074C  3432               	retlw	50	;'2'
   430  074D  3478               	retlw	120	;'x'
   431  074E  340D               	retlw	13
   432  074F  340A               	retlw	10
   433  0750  3400               	retlw	0
   434  0751                     STR_3:	
   435  0751  3425               	retlw	37	;'%'
   436  0752  3430               	retlw	48	;'0'
   437  0753  3434               	retlw	52	;'4'
   438  0754  3478               	retlw	120	;'x'
   439  0755  340D               	retlw	13
   440  0756  340A               	retlw	10
   441  0757  3400               	retlw	0
   442  0758                     STR_16:	
   443  0758  3449               	retlw	73	;'I'
   444  0759  3425               	retlw	37	;'%'
   445  075A  3430               	retlw	48	;'0'
   446  075B  3434               	retlw	52	;'4'
   447  075C  3478               	retlw	120	;'x'
   448  075D  343B               	retlw	59	;';'
   449  075E  3400               	retlw	0
   450  075F                     STR_9:	
   451  075F  3425               	retlw	37	;'%'
   452  0760  3430               	retlw	48	;'0'
   453  0761  3432               	retlw	50	;'2'
   454  0762  3478               	retlw	120	;'x'
   455  0763  3409               	retlw	9
   456  0764  3400               	retlw	0
   457  0765                     STR_6:	
   458  0765  3425               	retlw	37	;'%'
   459  0766  3430               	retlw	48	;'0'
   460  0767  3432               	retlw	50	;'2'
   461  0768  3478               	retlw	120	;'x'
   462  0769  3420               	retlw	32	;' '
   463  076A  3400               	retlw	0
   464  076B                     STR_7:	
   465  076B  3425               	retlw	37	;'%'
   466  076C  3430               	retlw	48	;'0'
   467  076D  3432               	retlw	50	;'2'
   468  076E  3478               	retlw	120	;'x'
   469  076F  342F               	retlw	47	;'/'
   470  0770  3400               	retlw	0
   471  0771                     STR_5:	
   472  0771  3425               	retlw	37	;'%'
   473  0772  3430               	retlw	48	;'0'
   474  0773  3432               	retlw	50	;'2'
   475  0774  3478               	retlw	120	;'x'
   476  0775  343A               	retlw	58	;':'
   477  0776  3400               	retlw	0
   478  0777                     STR_10:	
   479  0777  3425               	retlw	37	;'%'
   480  0778  3430               	retlw	48	;'0'
   481  0779  3432               	retlw	50	;'2'
   482  077A  3478               	retlw	120	;'x'
   483  077B  3400               	retlw	0
   484  077C                     STR_17:	
   485  077C  3425               	retlw	37	;'%'
   486  077D  3430               	retlw	48	;'0'
   487  077E  3434               	retlw	52	;'4'
   488  077F  3478               	retlw	120	;'x'
   489  0780  3400               	retlw	0
   490  0781                     STR_15:	
   491  0781  3425               	retlw	37	;'%'
   492  0782  3458               	retlw	88	;'X'
   493  0783  3420               	retlw	32	;' '
   494  0784  3400               	retlw	0
   495  0785                     STR_14:	
   496  0785  344F               	retlw	79	;'O'
   497  0786  344B               	retlw	75	;'K'
   498  0787  3400               	retlw	0
   499  0788                     STR_13:	
   500  0788  3458               	retlw	88	;'X'
   501  0789  3400               	retlw	0
   502  0746                     
   503                           ; #config settings
   504  0000                     
   505                           	psect	cinit
   506  0015                     start_initialization:	
   507  0015                     __initialization:	
   508                           
   509                           ; Initialize objects allocated to BANK0
   510  0015  120A  118A  27FE   	fcall	__pidataBANK0	;fetch initializer
   511  0018  00E0               	movwf	__pdataBANK0& (0+127)
   512                           
   513                           ; Clear objects allocated to BANK0
   514  0019  01D4               	clrf	__pbssBANK0& (0+127)
   515  001A  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   516  001B  01D6               	clrf	(__pbssBANK0+2)& (0+127)
   517  001C  01D7               	clrf	(__pbssBANK0+3)& (0+127)
   518  001D  01D8               	clrf	(__pbssBANK0+4)& (0+127)
   519  001E  01D9               	clrf	(__pbssBANK0+5)& (0+127)
   520  001F  01DA               	clrf	(__pbssBANK0+6)& (0+127)
   521  0020  01DB               	clrf	(__pbssBANK0+7)& (0+127)
   522  0021  01DC               	clrf	(__pbssBANK0+8)& (0+127)
   523  0022  01DD               	clrf	(__pbssBANK0+9)& (0+127)
   524  0023  01DE               	clrf	(__pbssBANK0+10)& (0+127)
   525                           
   526                           ; Clear objects allocated to BITBANK0
   527  0024  01DF               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   528  0025                     end_of_initialization:	
   529                           ;End of C runtime variable initialization code
   530                           
   531  0025                     __end_of__initialization:	
   532  0025  0183               	clrf	3
   533  0026  120A  158A  2C8B   	ljmp	_main	;jump to C main() function
   534                           
   535                           	psect	bitbssBANK0
   536  02F8                     __pbitbssBANK0:	
   537  02F8                     i2c_read@not_flag:	
   538  02F8                     	ds	1
   539  02F9                     i2c_read@flag:	
   540  02F9                     	ds	1
   541  02FA                     ints_isr@oerr:	
   542  02FA                     	ds	1
   543  02FB                     ints_isr@ferr:	
   544  02FB                     	ds	1
   545  02FC                     _fyh:	
   546  02FC                     	ds	1
   547                           
   548                           	psect	bssBANK0
   549  0054                     __pbssBANK0:	
   550  0054                     _secs:	
   551  0054                     	ds	2
   552  0056                     _condition:	
   553  0056                     	ds	1
   554  0057                     _milis:	
   555  0057                     	ds	1
   556  0058                     _time:	
   557  0058                     	ds	7
   558                           
   559                           	psect	dataBANK0
   560  0060                     __pdataBANK0:	
   561  0060                     _led:	
   562  0060                     	ds	1
   563                           
   564                           	psect	cstackBANK1
   565  00A0                     __pcstackBANK1:	
   566  00A0                     ??_i2c_init:	
   567  00A0                     ??_uart_init:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  00A0                     ?_init_timer2:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  00A0                     ??_i2c_start:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  00A0                     ??_i2c_stop:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  00A0                     ?_i2c_write:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  00A0                     ??_i2c_read:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  00A0                     init_timer2@post:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  00A0                     i2c_write@ack:	
   589                           ; 1 bytes @ 0x0
   590                           
   591                           
   592                           ; 1 bytes @ 0x0
   593  00A0                     	ds	1
   594  00A1                     ??_i2c_write:	
   595  00A1                     init_timer2@eoc:	
   596                           ; 1 bytes @ 0x1
   597                           
   598                           
   599                           ; 1 bytes @ 0x1
   600  00A1                     	ds	1
   601  00A2                     ??_init_timer2:	
   602                           
   603                           ; 1 bytes @ 0x2
   604  00A2                     	ds	2
   605  00A4                     init_timer2@pre:	
   606                           
   607                           ; 1 bytes @ 0x4
   608  00A4                     	ds	1
   609  00A5                     init_timer2@sfr:	
   610                           
   611                           ; 1 bytes @ 0x5
   612  00A5                     	ds	3
   613  00A8                     i2c_read@resp:	
   614                           
   615                           ; 1 bytes @ 0x8
   616  00A8                     	ds	1
   617  00A9                     i2c_write@datum:	
   618  00A9                     i2c_read@ack:	
   619                           ; 1 bytes @ 0x9
   620                           
   621                           
   622                           ; 1 bytes @ 0x9
   623  00A9                     	ds	1
   624  00AA                     ?_mem_read:	
   625  00AA                     ?_mem_write:	
   626                           ; 1 bytes @ 0xA
   627                           
   628  00AA                     ??_si_reset:	
   629                           ; 1 bytes @ 0xA
   630                           
   631  00AA                     mem_write@add:	
   632                           ; 1 bytes @ 0xA
   633                           
   634  00AA                     mem_read@add:	
   635                           ; 2 bytes @ 0xA
   636                           
   637                           
   638                           ; 2 bytes @ 0xA
   639  00AA                     	ds	2
   640  00AC                     ??_mem_read:	
   641  00AC                     mem_write@data:	
   642                           ; 1 bytes @ 0xC
   643                           
   644                           
   645                           ; 1 bytes @ 0xC
   646  00AC                     	ds	1
   647  00AD                     ??_mem_write:	
   648  00AD                     mem_read@rta:	
   649                           ; 1 bytes @ 0xD
   650                           
   651                           
   652                           ; 1 bytes @ 0xD
   653  00AD                     	ds	1
   654  00AE                     mem_write@add_h:	
   655  00AE                     mem_read@add_h:	
   656                           ; 1 bytes @ 0xE
   657                           
   658                           
   659                           ; 1 bytes @ 0xE
   660  00AE                     	ds	1
   661  00AF                     mem_write@add_l:	
   662  00AF                     mem_read@add_l:	
   663                           ; 1 bytes @ 0xF
   664                           
   665                           
   666                           ; 1 bytes @ 0xF
   667  00AF                     	ds	1
   668  00B0                     ??_mem_init:	
   669                           
   670                           ; 1 bytes @ 0x10
   671  00B0                     	ds	1
   672  00B1                     mem_init@aux:	
   673                           
   674                           ; 1 bytes @ 0x11
   675  00B1                     	ds	1
   676  00B2                     ??_main:	
   677                           
   678                           ; 1 bytes @ 0x12
   679  00B2                     	ds	2
   680                           
   681                           	psect	cstackCOMMON
   682  0070                     __pcstackCOMMON:	
   683  0070                     ?_isdigit:	
   684  0070                     ?_ds_get:	
   685                           ; 1 bit 
   686                           
   687  0070                     ?_ds_set:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_i2c_init:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_si_reset:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ??_isdigit:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_uart_init:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_putch:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ??_putch:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_mem_init:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_save_event:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_ints_isr:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_i2c_start:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?_i2c_rstart:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ??_i2c_rstart:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_i2c_stop:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_i2c_read:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?i1_mem_init:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?i1_i2c_start:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ??i1_i2c_start:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?i1_i2c_stop:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ??i1_i2c_stop:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?i1_i2c_write:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?i1_i2c_read:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ??i1_i2c_read:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_main:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?___wmul:	
   760                           ; 2 bytes @ 0x0
   761                           
   762  0070                     ?___lwdiv:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  0070                     putch@data:	
   766                           ; 2 bytes @ 0x0
   767                           
   768  0070                     _isdigit$936:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     i1i2c_write@ack:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ___wmul@multiplier:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ___lwdiv@divisor:	
   778                           ; 2 bytes @ 0x0
   779                           
   780                           
   781                           ; 2 bytes @ 0x0
   782  0070                     	ds	1
   783  0071                     ??i1_i2c_write:	
   784  0071                     isdigit@c:	
   785                           ; 1 bytes @ 0x1
   786                           
   787                           
   788                           ; 1 bytes @ 0x1
   789  0071                     	ds	1
   790  0072                     ___wmul@multiplicand:	
   791  0072                     ___lwdiv@dividend:	
   792                           ; 2 bytes @ 0x2
   793                           
   794                           
   795                           ; 2 bytes @ 0x2
   796  0072                     	ds	2
   797  0074                     ??___wmul:	
   798  0074                     ??___lwdiv:	
   799                           ; 1 bytes @ 0x4
   800                           
   801  0074                     ___wmul@product:	
   802                           ; 1 bytes @ 0x4
   803                           
   804                           
   805                           ; 2 bytes @ 0x4
   806  0074                     	ds	1
   807  0075                     ___lwdiv@quotient:	
   808                           
   809                           ; 2 bytes @ 0x5
   810  0075                     	ds	2
   811  0077                     ___lwdiv@counter:	
   812                           
   813                           ; 1 bytes @ 0x7
   814  0077                     	ds	1
   815  0078                     ?___lwmod:	
   816  0078                     i1i2c_read@resp:	
   817                           ; 2 bytes @ 0x8
   818                           
   819  0078                     ___lwmod@divisor:	
   820                           ; 1 bytes @ 0x8
   821                           
   822                           
   823                           ; 2 bytes @ 0x8
   824  0078                     	ds	1
   825  0079                     i1i2c_write@datum:	
   826  0079                     i1i2c_read@ack:	
   827                           ; 1 bytes @ 0x9
   828                           
   829                           
   830                           ; 1 bytes @ 0x9
   831  0079                     	ds	1
   832  007A                     ??_ds_get:	
   833  007A                     ??_ds_set:	
   834                           ; 1 bytes @ 0xA
   835                           
   836  007A                     ?i1_mem_write:	
   837                           ; 1 bytes @ 0xA
   838                           
   839  007A                     ?i1_mem_read:	
   840                           ; 1 bytes @ 0xA
   841                           
   842  007A                     ?_si_read_h:	
   843                           ; 1 bytes @ 0xA
   844                           
   845  007A                     ?_si_read_t:	
   846                           ; 2 bytes @ 0xA
   847                           
   848  007A                     ___lwmod@dividend:	
   849                           ; 2 bytes @ 0xA
   850                           
   851  007A                     i1mem_write@add:	
   852                           ; 2 bytes @ 0xA
   853                           
   854  007A                     i1mem_read@add:	
   855                           ; 2 bytes @ 0xA
   856                           
   857                           
   858                           ; 2 bytes @ 0xA
   859  007A                     	ds	1
   860  007B                     ds_set@data:	
   861  007B                     ds_get@data:	
   862                           ; 1 bytes @ 0xB
   863                           
   864                           
   865                           ; 1 bytes @ 0xB
   866  007B                     	ds	1
   867  007C                     ??_si_read_h:	
   868  007C                     ??_si_read_t:	
   869                           ; 1 bytes @ 0xC
   870                           
   871  007C                     ??___lwmod:	
   872                           ; 1 bytes @ 0xC
   873                           
   874  007C                     ??i1_mem_read:	
   875                           ; 1 bytes @ 0xC
   876                           
   877  007C                     ds_set@j:	
   878                           ; 1 bytes @ 0xC
   879                           
   880  007C                     ds_get@resp:	
   881                           ; 1 bytes @ 0xC
   882                           
   883  007C                     i1mem_write@data:	
   884                           ; 1 bytes @ 0xC
   885                           
   886                           
   887                           ; 1 bytes @ 0xC
   888  007C                     	ds	1
   889  007D                     ??i1_mem_write:	
   890  007D                     ___lwmod@counter:	
   891                           ; 1 bytes @ 0xD
   892                           
   893                           
   894                           ; 1 bytes @ 0xD
   895  007D                     	ds	1
   896                           
   897                           	psect	cstackBANK0
   898  0020                     __pcstackBANK0:	
   899  0020                     si_read_h@rta_h:	
   900  0020                     si_read_t@rta_h:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0020                     i1mem_write@add_h:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0020                     i1mem_read@rta:	
   907                           ; 1 bytes @ 0x0
   908                           
   909                           
   910                           ; 1 bytes @ 0x0
   911  0020                     	ds	1
   912  0021                     si_read_h@rta_l:	
   913  0021                     si_read_t@rta_l:	
   914                           ; 1 bytes @ 0x1
   915                           
   916  0021                     i1mem_write@add_l:	
   917                           ; 1 bytes @ 0x1
   918                           
   919  0021                     i1mem_read@add_h:	
   920                           ; 1 bytes @ 0x1
   921                           
   922                           
   923                           ; 1 bytes @ 0x1
   924  0021                     	ds	1
   925  0022                     i1mem_read@add_l:	
   926  0022                     si_read_h@rta:	
   927                           ; 1 bytes @ 0x2
   928                           
   929  0022                     si_read_t@rta:	
   930                           ; 2 bytes @ 0x2
   931                           
   932                           
   933                           ; 2 bytes @ 0x2
   934  0022                     	ds	1
   935  0023                     ??_save_event:	
   936  0023                     ??i1_mem_init:	
   937                           ; 1 bytes @ 0x3
   938                           
   939                           
   940                           ; 1 bytes @ 0x3
   941  0023                     	ds	1
   942  0024                     ?_printf:	
   943  0024                     i1mem_init@aux:	
   944                           ; 2 bytes @ 0x4
   945                           
   946                           
   947                           ; 1 bytes @ 0x4
   948  0024                     	ds	2
   949  0026                     ??_printf:	
   950  0026                     save_event@o:	
   951                           ; 1 bytes @ 0x6
   952                           
   953                           
   954                           ; 1 bytes @ 0x6
   955  0026                     	ds	1
   956  0027                     save_event@ax:	
   957                           
   958                           ; 1 bytes @ 0x7
   959  0027                     	ds	2
   960  0029                     printf@idx:	
   961                           
   962                           ; 1 bytes @ 0x9
   963  0029                     	ds	1
   964  002A                     _printf$750:	
   965                           
   966                           ; 1 bytes @ 0xA
   967  002A                     	ds	1
   968  002B                     printf@ap:	
   969                           
   970                           ; 1 bytes @ 0xB
   971  002B                     	ds	1
   972  002C                     printf@prec:	
   973                           
   974                           ; 1 bytes @ 0xC
   975  002C                     	ds	1
   976  002D                     printf@val:	
   977                           
   978                           ; 2 bytes @ 0xD
   979  002D                     	ds	2
   980  002F                     printf@width:	
   981                           
   982                           ; 2 bytes @ 0xF
   983  002F                     	ds	2
   984  0031                     printf@flag:	
   985                           
   986                           ; 1 bytes @ 0x11
   987  0031                     	ds	1
   988  0032                     printf@f:	
   989                           
   990                           ; 1 bytes @ 0x12
   991  0032                     	ds	1
   992  0033                     printf@c:	
   993                           
   994                           ; 1 bytes @ 0x13
   995  0033                     	ds	1
   996  0034                     ??_ints_isr:	
   997                           
   998                           ; 1 bytes @ 0x14
   999  0034                     	ds	8
  1000  003C                     ints_isr@rcv:	
  1001                           
  1002                           ; 1 bytes @ 0x1C
  1003  003C                     	ds	1
  1004  003D                     ints_isr@hum_val:	
  1005                           
  1006                           ; 2 bytes @ 0x1D
  1007  003D                     	ds	2
  1008  003F                     ints_isr@temp_val:	
  1009                           
  1010                           ; 2 bytes @ 0x1F
  1011  003F                     	ds	2
  1012  0041                     ints_isr@dt:	
  1013                           
  1014                           ; 2 bytes @ 0x21
  1015  0041                     	ds	2
  1016  0043                     ints_isr@add:	
  1017                           
  1018                           ; 2 bytes @ 0x23
  1019  0043                     	ds	2
  1020  0045                     ints_isr@z:	
  1021                           
  1022                           ; 1 bytes @ 0x25
  1023  0045                     	ds	1
  1024  0046                     ints_isr@k:	
  1025                           
  1026                           ; 1 bytes @ 0x26
  1027  0046                     	ds	1
  1028  0047                     ints_isr@up:	
  1029                           
  1030                           ; 2 bytes @ 0x27
  1031  0047                     	ds	2
  1032  0049                     ints_isr@aux:	
  1033                           
  1034                           ; 2 bytes @ 0x29
  1035  0049                     	ds	2
  1036  004B                     ints_isr@temp_add:	
  1037                           
  1038                           ; 2 bytes @ 0x2B
  1039  004B                     	ds	2
  1040  004D                     ints_isr@hum_add:	
  1041                           
  1042                           ; 2 bytes @ 0x2D
  1043  004D                     	ds	2
  1044  004F                     ints_isr@aux2:	
  1045                           
  1046                           ; 2 bytes @ 0x2F
  1047  004F                     	ds	2
  1048  0051                     ints_isr@arg:	
  1049                           
  1050                           ; 1 bytes @ 0x31
  1051  0051                     	ds	1
  1052  0052                     ints_isr@n:	
  1053                           
  1054                           ; 2 bytes @ 0x32
  1055  0052                     	ds	2
  1056                           
  1057                           	psect	maintext
  1058  0C8B                     __pmaintext:	
  1059 ;;
  1060 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1061 ;;
  1062 ;; *************** function _main *****************
  1063 ;; Defined at:
  1064 ;;		line 256 in file "panda17.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  2  136[None  ] int 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0, pclath, cstack
  1073 ;; Tracked objects:
  1074 ;;		On entry : B00/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         0       0       0       0       0
  1079 ;;      Locals:         0       0       0       0       0
  1080 ;;      Temps:          0       0       2       0       0
  1081 ;;      Totals:         0       0       2       0       0
  1082 ;;Total ram usage:        2 bytes
  1083 ;; Hardware stack levels required when called:    7
  1084 ;; This function calls:
  1085 ;;		_i2c_init
  1086 ;;		_init_timer2
  1087 ;;		_mem_init
  1088 ;;		_si_reset
  1089 ;;		_uart_init
  1090 ;; This function is called by:
  1091 ;;		Startup code after reset
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           
  1096                           ;psect for function _main
  1097  0C8B                     _main:	
  1098                           
  1099                           ;panda17.c: 257: OSCCON = 0b01010001;
  1100                           
  1101                           ;incstack = 0
  1102                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1103  0C8B  3051               	movlw	81
  1104  0C8C  1683               	bsf	3,5	;RP0=1, select bank1
  1105  0C8D  1303               	bcf	3,6	;RP1=0, select bank1
  1106  0C8E  008F               	movwf	15	;volatile
  1107                           
  1108                           ;panda17.c: 258: INTCON = 0xC0;
  1109  0C8F  30C0               	movlw	192
  1110  0C90  008B               	movwf	11	;volatile
  1111                           
  1112                           ;panda17.c: 260: TRISA = 0x00;
  1113  0C91  0185               	clrf	5	;volatile
  1114                           
  1115                           ;panda17.c: 261: TRISB = 0x00;
  1116  0C92  0186               	clrf	6	;volatile
  1117                           
  1118                           ;panda17.c: 262: ANSELHbits.ANS8 = 0;
  1119  0C93  1683               	bsf	3,5	;RP0=1, select bank3
  1120  0C94  1703               	bsf	3,6	;RP1=1, select bank3
  1121  0C95  1009               	bcf	9,0	;volatile
  1122                           
  1123                           ;panda17.c: 263: TRISBbits.TRISB2 = 1;
  1124  0C96  1683               	bsf	3,5	;RP0=1, select bank1
  1125  0C97  1303               	bcf	3,6	;RP1=0, select bank1
  1126  0C98  1506               	bsf	6,2	;volatile
  1127                           
  1128                           ;panda17.c: 264: PORTBbits.RB4 = 0;
  1129  0C99  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0C9A  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0C9B  1206               	bcf	6,4	;volatile
  1132                           
  1133                           ;panda17.c: 265: uart_init();
  1134  0C9C  120A  158A  2103  120A  158A  	fcall	_uart_init
  1135                           
  1136                           ;panda17.c: 266: i2c_init();
  1137  0CA1  120A  118A  27EF  120A  158A  	fcall	_i2c_init
  1138                           
  1139                           ;panda17.c: 267: _delay((unsigned long)((10)*(2000000/4000.0)));
  1140  0CA6  3007               	movlw	7
  1141  0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  1142  0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  1143  0CA9  00B3               	movwf	(??_main^(0+128)+1)
  1144  0CAA  307C               	movlw	124
  1145  0CAB  00B2               	movwf	??_main^(0+128)
  1146  0CAC                     u2317:	
  1147  0CAC  0BB2               	decfsz	??_main^(0+128),f
  1148  0CAD  2CAC               	goto	u2317
  1149  0CAE  0BB3               	decfsz	(??_main^(0+128)+1),f
  1150  0CAF  2CAC               	goto	u2317
  1151  0CB0  0000               	nop
  1152                           
  1153                           ;panda17.c: 268: mem_init();
  1154  0CB1  120A  158A  25DC  120A  158A  	fcall	_mem_init
  1155                           
  1156                           ;panda17.c: 269: si_reset();
  1157  0CB6  120A  158A  211B  120A  158A  	fcall	_si_reset
  1158                           
  1159                           ;panda17.c: 270: fyh = 1;
  1160  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0CBD  165F               	bsf	_fyh/(0+8),_fyh& (0+7)
  1163                           
  1164                           ;panda17.c: 273: _delay((unsigned long)((200)*(2000000/4000.0)));
  1165  0CBE  3082               	movlw	130
  1166  0CBF  1683               	bsf	3,5	;RP0=1, select bank1
  1167  0CC0  1303               	bcf	3,6	;RP1=0, select bank1
  1168  0CC1  00B3               	movwf	(??_main^(0+128)+1)
  1169  0CC2  30DD               	movlw	221
  1170  0CC3  00B2               	movwf	??_main^(0+128)
  1171  0CC4                     u2327:	
  1172  0CC4  0BB2               	decfsz	??_main^(0+128),f
  1173  0CC5  2CC4               	goto	u2327
  1174  0CC6  0BB3               	decfsz	(??_main^(0+128)+1),f
  1175  0CC7  2CC4               	goto	u2327
  1176                           
  1177                           ;panda17.c: 274: init_timer2(2,5,250);
  1178  0CC8  3005               	movlw	5
  1179  0CC9  1683               	bsf	3,5	;RP0=1, select bank1
  1180  0CCA  1303               	bcf	3,6	;RP1=0, select bank1
  1181  0CCB  00B2               	movwf	??_main^(0+128)
  1182  0CCC  0832               	movf	??_main^(0+128),w
  1183  0CCD  00A0               	movwf	init_timer2@post^(0+128)
  1184  0CCE  30FA               	movlw	250
  1185  0CCF  00B3               	movwf	(??_main+1)^(0+128)
  1186  0CD0  0833               	movf	(??_main+1)^(0+128),w
  1187  0CD1  00A1               	movwf	init_timer2@eoc^(0+128)
  1188  0CD2  3002               	movlw	2
  1189  0CD3  120A  158A  2208  120A  158A  	fcall	_init_timer2
  1190  0CD8                     l137:	
  1191                           ;panda17.c: 275: while(1){
  1192                           
  1193  0CD8  2CD8               	goto	l137
  1194  0CD9                     __end_of_main:	
  1195                           
  1196                           	psect	text1
  1197  0903                     __ptext1:	
  1198 ;; *************** function _uart_init *****************
  1199 ;; Defined at:
  1200 ;;		line 22 in file "panda17.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         0       0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0
  1217 ;;      Totals:         0       0       0       0       0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    4
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           
  1229                           ;psect for function _uart_init
  1230  0903                     _uart_init:	
  1231                           
  1232                           ;panda17.c: 23: PIE1bits.RCIE = 1;
  1233                           
  1234                           ;incstack = 0
  1235                           ; Regs used in _uart_init: [wreg+status,2]
  1236  0903  1683               	bsf	3,5	;RP0=1, select bank1
  1237  0904  1303               	bcf	3,6	;RP1=0, select bank1
  1238  0905  168C               	bsf	12,5	;volatile
  1239                           
  1240                           ;panda17.c: 24: PIE1bits.TXIE = 0;
  1241  0906  120C               	bcf	12,4	;volatile
  1242                           
  1243                           ;panda17.c: 25: TXSTAbits.BRGH = 1;
  1244  0907  1518               	bsf	24,2	;volatile
  1245                           
  1246                           ;panda17.c: 26: BAUDCTLbits.BRG16 = 0;
  1247  0908  1683               	bsf	3,5	;RP0=1, select bank3
  1248  0909  1703               	bsf	3,6	;RP1=1, select bank3
  1249  090A  1187               	bcf	7,3	;volatile
  1250                           
  1251                           ;panda17.c: 27: SPBRGH = 0x00;
  1252  090B  1683               	bsf	3,5	;RP0=1, select bank1
  1253  090C  1303               	bcf	3,6	;RP1=0, select bank1
  1254  090D  019A               	clrf	26	;volatile
  1255                           
  1256                           ;panda17.c: 29: SPBRG = 0x0C;
  1257  090E  300C               	movlw	12
  1258  090F  0099               	movwf	25	;volatile
  1259                           
  1260                           ;panda17.c: 30: TXSTAbits.SYNC = 0;
  1261  0910  1218               	bcf	24,4	;volatile
  1262                           
  1263                           ;panda17.c: 31: RCSTAbits.SPEN = 1;
  1264  0911  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0912  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0913  1798               	bsf	24,7	;volatile
  1267                           
  1268                           ;panda17.c: 32: TXSTAbits.TXEN = 1;
  1269  0914  1683               	bsf	3,5	;RP0=1, select bank1
  1270  0915  1303               	bcf	3,6	;RP1=0, select bank1
  1271  0916  1698               	bsf	24,5	;volatile
  1272                           
  1273                           ;panda17.c: 33: RCSTAbits.CREN = 1;
  1274  0917  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0918  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0919  1618               	bsf	24,4	;volatile
  1277  091A  0008               	return
  1278  091B                     __end_of_uart_init:	
  1279                           
  1280                           	psect	text2
  1281  091B                     __ptext2:	
  1282 ;; *************** function _si_reset *****************
  1283 ;; Defined at:
  1284 ;;		line 13 in file "si7021.c"
  1285 ;; Parameters:    Size  Location     Type
  1286 ;;		None
  1287 ;; Auto vars:     Size  Location     Type
  1288 ;;		None
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, status,2, status,0, pclath, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0
  1300 ;;      Temps:          0       0       0       0       0
  1301 ;;      Totals:         0       0       0       0       0
  1302 ;;Total ram usage:        0 bytes
  1303 ;; Hardware stack levels used:    1
  1304 ;; Hardware stack levels required when called:    5
  1305 ;; This function calls:
  1306 ;;		_i2c_start
  1307 ;;		_i2c_stop
  1308 ;;		_i2c_write
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _si_reset
  1316  091B                     _si_reset:	
  1317                           
  1318                           ;si7021.c: 14: i2c_start();
  1319                           
  1320                           ;incstack = 0
  1321                           ; Regs used in _si_reset: [wreg+status,2+status,0+pclath+cstack]
  1322  091B  120A  158A  21C2  120A  158A  	fcall	_i2c_start
  1323                           
  1324                           ;si7021.c: 15: i2c_write(0x80,1);
  1325  0920  1683               	bsf	3,5	;RP0=1, select bank1
  1326  0921  1303               	bcf	3,6	;RP1=0, select bank1
  1327  0922  01A0               	clrf	i2c_write@ack^(0+128)
  1328  0923  0AA0               	incf	i2c_write@ack^(0+128),f
  1329  0924  3080               	movlw	128
  1330  0925  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1331                           
  1332                           ;si7021.c: 16: i2c_write(0xFE,1);
  1333  092A  1683               	bsf	3,5	;RP0=1, select bank1
  1334  092B  1303               	bcf	3,6	;RP1=0, select bank1
  1335  092C  01A0               	clrf	i2c_write@ack^(0+128)
  1336  092D  0AA0               	incf	i2c_write@ack^(0+128),f
  1337  092E  30FE               	movlw	254
  1338  092F  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1339                           
  1340                           ;si7021.c: 17: i2c_stop();
  1341  0934  120A  158A  21E5   	fcall	_i2c_stop
  1342  0937  0008               	return
  1343  0938                     __end_of_si_reset:	
  1344                           
  1345                           	psect	text3
  1346  0DDC                     __ptext3:	
  1347 ;; *************** function _mem_init *****************
  1348 ;; Defined at:
  1349 ;;		line 42 in file "panda17.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  aux             1   17[BANK1 ] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0, pclath, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1363 ;;      Params:         0       0       0       0       0
  1364 ;;      Locals:         0       0       1       0       0
  1365 ;;      Temps:          0       0       1       0       0
  1366 ;;      Totals:         0       0       2       0       0
  1367 ;;Total ram usage:        2 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    6
  1370 ;; This function calls:
  1371 ;;		_mem_read
  1372 ;;		_mem_write
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           
  1379                           ;psect for function _mem_init
  1380  0DDC                     _mem_init:	
  1381                           
  1382                           ;panda17.c: 43: unsigned char aux;
  1383                           ;panda17.c: 44: aux = mem_read(0x0002);
  1384                           
  1385                           ;incstack = 0
  1386                           ; Regs used in _mem_init: [wreg+status,2+status,0+pclath+cstack]
  1387  0DDC  3002               	movlw	2
  1388  0DDD  1683               	bsf	3,5	;RP0=1, select bank1
  1389  0DDE  1303               	bcf	3,6	;RP1=0, select bank1
  1390  0DDF  00AA               	movwf	mem_read@add^(0+128)
  1391  0DE0  3000               	movlw	0
  1392  0DE1  00AB               	movwf	(mem_read@add^(0+128)+1)
  1393  0DE2  120A  158A  23F3  120A  158A  	fcall	_mem_read
  1394  0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  1395  0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  1396  0DE9  00B0               	movwf	??_mem_init^(0+128)
  1397  0DEA  0830               	movf	??_mem_init^(0+128),w
  1398  0DEB  00B1               	movwf	mem_init@aux^(0+128)
  1399                           
  1400                           ;panda17.c: 45: if (aux != 0xAA){
  1401  0DEC  30AA               	movlw	170
  1402  0DED  0631               	xorwf	mem_init@aux^(0+128),w
  1403  0DEE  1903               	btfsc	3,2
  1404  0DEF  0008               	return
  1405                           
  1406                           ;panda17.c: 46: mem_write(0x0002,0xAA);
  1407  0DF0  3002               	movlw	2
  1408  0DF1  00AA               	movwf	mem_write@add^(0+128)
  1409  0DF2  3000               	movlw	0
  1410  0DF3  00AB               	movwf	(mem_write@add^(0+128)+1)
  1411  0DF4  30AA               	movlw	170
  1412  0DF5  00B0               	movwf	??_mem_init^(0+128)
  1413  0DF6  0830               	movf	??_mem_init^(0+128),w
  1414  0DF7  00AC               	movwf	mem_write@data^(0+128)
  1415  0DF8  120A  158A  243D  120A  158A  	fcall	_mem_write
  1416                           
  1417                           ;panda17.c: 47: mem_write(0x0003,0x00);
  1418  0DFD  3003               	movlw	3
  1419  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  1420  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  1421  0E00  00AA               	movwf	mem_write@add^(0+128)
  1422  0E01  3000               	movlw	0
  1423  0E02  00AB               	movwf	(mem_write@add^(0+128)+1)
  1424  0E03  01AC               	clrf	mem_write@data^(0+128)
  1425  0E04  120A  158A  243D  120A  158A  	fcall	_mem_write
  1426                           
  1427                           ;panda17.c: 48: mem_write(0x000A,0x00);
  1428  0E09  300A               	movlw	10
  1429  0E0A  1683               	bsf	3,5	;RP0=1, select bank1
  1430  0E0B  1303               	bcf	3,6	;RP1=0, select bank1
  1431  0E0C  00AA               	movwf	mem_write@add^(0+128)
  1432  0E0D  3000               	movlw	0
  1433  0E0E  00AB               	movwf	(mem_write@add^(0+128)+1)
  1434  0E0F  01AC               	clrf	mem_write@data^(0+128)
  1435  0E10  120A  158A  243D  120A  158A  	fcall	_mem_write
  1436                           
  1437                           ;panda17.c: 49: mem_write(0x000B,0x00);
  1438  0E15  300B               	movlw	11
  1439  0E16  1683               	bsf	3,5	;RP0=1, select bank1
  1440  0E17  1303               	bcf	3,6	;RP1=0, select bank1
  1441  0E18  00AA               	movwf	mem_write@add^(0+128)
  1442  0E19  3000               	movlw	0
  1443  0E1A  00AB               	movwf	(mem_write@add^(0+128)+1)
  1444  0E1B  01AC               	clrf	mem_write@data^(0+128)
  1445  0E1C  120A  158A  243D  120A  158A  	fcall	_mem_write
  1446                           
  1447                           ;panda17.c: 50: mem_write(0x000C,0x00);
  1448  0E21  300C               	movlw	12
  1449  0E22  1683               	bsf	3,5	;RP0=1, select bank1
  1450  0E23  1303               	bcf	3,6	;RP1=0, select bank1
  1451  0E24  00AA               	movwf	mem_write@add^(0+128)
  1452  0E25  3000               	movlw	0
  1453  0E26  00AB               	movwf	(mem_write@add^(0+128)+1)
  1454  0E27  01AC               	clrf	mem_write@data^(0+128)
  1455  0E28  120A  158A  243D  120A  158A  	fcall	_mem_write
  1456                           
  1457                           ;panda17.c: 51: mem_write(0x000D,0x00);
  1458  0E2D  300D               	movlw	13
  1459  0E2E  1683               	bsf	3,5	;RP0=1, select bank1
  1460  0E2F  1303               	bcf	3,6	;RP1=0, select bank1
  1461  0E30  00AA               	movwf	mem_write@add^(0+128)
  1462  0E31  3000               	movlw	0
  1463  0E32  00AB               	movwf	(mem_write@add^(0+128)+1)
  1464  0E33  01AC               	clrf	mem_write@data^(0+128)
  1465  0E34  120A  158A  243D   	fcall	_mem_write
  1466  0E37  0008               	return
  1467  0E38                     __end_of_mem_init:	
  1468                           
  1469                           	psect	text4
  1470  0C3D                     __ptext4:	
  1471 ;; *************** function _mem_write *****************
  1472 ;; Defined at:
  1473 ;;		line 13 in file "24lc512.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  add             2   10[BANK1 ] unsigned int 
  1476 ;;  data            1   12[BANK1 ] unsigned char 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  add_l           1   15[BANK1 ] unsigned char 
  1479 ;;  add_h           1   14[BANK1 ] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0, pclath, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         0       0       3       0       0
  1490 ;;      Locals:         0       0       2       0       0
  1491 ;;      Temps:          0       0       1       0       0
  1492 ;;      Totals:         0       0       6       0       0
  1493 ;;Total ram usage:        6 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    5
  1496 ;; This function calls:
  1497 ;;		_i2c_start
  1498 ;;		_i2c_stop
  1499 ;;		_i2c_write
  1500 ;; This function is called by:
  1501 ;;		_mem_init
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           
  1506                           ;psect for function _mem_write
  1507  0C3D                     _mem_write:	
  1508                           
  1509                           ;24lc512.c: 14: unsigned char add_h,add_l;
  1510                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  1511                           
  1512                           ;incstack = 0
  1513                           ; Regs used in _mem_write: [wreg+status,2+status,0+pclath+cstack]
  1514  0C3D  1683               	bsf	3,5	;RP0=1, select bank1
  1515  0C3E  1303               	bcf	3,6	;RP1=0, select bank1
  1516  0C3F  082B               	movf	(mem_write@add+1)^(0+128),w
  1517  0C40  00AD               	movwf	??_mem_write^(0+128)
  1518  0C41  082D               	movf	??_mem_write^(0+128),w
  1519  0C42  00AE               	movwf	mem_write@add_h^(0+128)
  1520                           
  1521                           ;24lc512.c: 16: add_l = add & 0x00FF;
  1522  0C43  082A               	movf	mem_write@add^(0+128),w
  1523  0C44  00AD               	movwf	??_mem_write^(0+128)
  1524  0C45  082D               	movf	??_mem_write^(0+128),w
  1525  0C46  00AF               	movwf	mem_write@add_l^(0+128)
  1526                           
  1527                           ;24lc512.c: 17: i2c_start();
  1528  0C47  120A  158A  21C2  120A  158A  	fcall	_i2c_start
  1529                           
  1530                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  1531  0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  1532  0C4D  1303               	bcf	3,6	;RP1=0, select bank1
  1533  0C4E  01A0               	clrf	i2c_write@ack^(0+128)
  1534  0C4F  30A0               	movlw	160
  1535  0C50  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1536                           
  1537                           ;24lc512.c: 19: i2c_write(add_h,0);
  1538  0C55  1683               	bsf	3,5	;RP0=1, select bank1
  1539  0C56  1303               	bcf	3,6	;RP1=0, select bank1
  1540  0C57  01A0               	clrf	i2c_write@ack^(0+128)
  1541  0C58  082E               	movf	mem_write@add_h^(0+128),w
  1542  0C59  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1543                           
  1544                           ;24lc512.c: 20: i2c_write(add_l,0);
  1545  0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0C5F  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0C60  01A0               	clrf	i2c_write@ack^(0+128)
  1548  0C61  082F               	movf	mem_write@add_l^(0+128),w
  1549  0C62  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1550                           
  1551                           ;24lc512.c: 21: i2c_write(data,0);
  1552  0C67  1683               	bsf	3,5	;RP0=1, select bank1
  1553  0C68  1303               	bcf	3,6	;RP1=0, select bank1
  1554  0C69  01A0               	clrf	i2c_write@ack^(0+128)
  1555  0C6A  082C               	movf	mem_write@data^(0+128),w
  1556  0C6B  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1557                           
  1558                           ;24lc512.c: 22: i2c_stop();
  1559  0C70  120A  158A  21E5  120A  158A  	fcall	_i2c_stop
  1560  0C75                     L1:	
  1561                           
  1562                           ;24lc512.c: 24: i2c_start();
  1563  0C75  120A  158A  21C2  120A  158A  	fcall	_i2c_start
  1564                           
  1565                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  1566  0C7A  1683               	bsf	3,5	;RP0=1, select bank1
  1567  0C7B  1303               	bcf	3,6	;RP1=0, select bank1
  1568  0C7C  01A0               	clrf	i2c_write@ack^(0+128)
  1569  0C7D  30A0               	movlw	160
  1570  0C7E  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1571                           
  1572                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  1573  0C83  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0C84  1303               	bcf	3,6	;RP1=0, select bank1
  1575  0C85  1B11               	btfsc	17,6	;volatile
  1576  0C86  2C75               	goto	L1
  1577                           
  1578                           ;24lc512.c: 30: }
  1579                           ;24lc512.c: 31: i2c_stop();
  1580                           
  1581                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  1582                           
  1583                           ;24lc512.c: 28: i2c_start();
  1584  0C87  120A  158A  21E5   	fcall	_i2c_stop
  1585  0C8A  0008               	return
  1586  0C8B                     __end_of_mem_write:	
  1587                           
  1588                           	psect	text5
  1589  0BF3                     __ptext5:	
  1590 ;; *************** function _mem_read *****************
  1591 ;; Defined at:
  1592 ;;		line 34 in file "24lc512.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  add             2   10[BANK1 ] unsigned int 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  add_l           1   15[BANK1 ] unsigned char 
  1597 ;;  add_h           1   14[BANK1 ] unsigned char 
  1598 ;;  rta             1   13[BANK1 ] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      unsigned char 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0, pclath, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       2       0       0
  1609 ;;      Locals:         0       0       3       0       0
  1610 ;;      Temps:          0       0       1       0       0
  1611 ;;      Totals:         0       0       6       0       0
  1612 ;;Total ram usage:        6 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    5
  1615 ;; This function calls:
  1616 ;;		_i2c_read
  1617 ;;		_i2c_start
  1618 ;;		_i2c_stop
  1619 ;;		_i2c_write
  1620 ;; This function is called by:
  1621 ;;		_mem_init
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           
  1626                           ;psect for function _mem_read
  1627  0BF3                     _mem_read:	
  1628                           
  1629                           ;24lc512.c: 35: unsigned char rta;
  1630                           ;24lc512.c: 36: unsigned char add_h,add_l;
  1631                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  1632                           
  1633                           ;incstack = 0
  1634                           ; Regs used in _mem_read: [wreg+status,2+status,0+pclath+cstack]
  1635  0BF3  1683               	bsf	3,5	;RP0=1, select bank1
  1636  0BF4  1303               	bcf	3,6	;RP1=0, select bank1
  1637  0BF5  082B               	movf	(mem_read@add+1)^(0+128),w
  1638  0BF6  00AC               	movwf	??_mem_read^(0+128)
  1639  0BF7  082C               	movf	??_mem_read^(0+128),w
  1640  0BF8  00AE               	movwf	mem_read@add_h^(0+128)
  1641                           
  1642                           ;24lc512.c: 38: add_l = add & 0x00FF;
  1643  0BF9  082A               	movf	mem_read@add^(0+128),w
  1644  0BFA  00AC               	movwf	??_mem_read^(0+128)
  1645  0BFB  082C               	movf	??_mem_read^(0+128),w
  1646  0BFC  00AF               	movwf	mem_read@add_l^(0+128)
  1647                           
  1648                           ;24lc512.c: 39: i2c_start();
  1649  0BFD  120A  158A  21C2  120A  158A  	fcall	_i2c_start
  1650                           
  1651                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  1652  0C02  1683               	bsf	3,5	;RP0=1, select bank1
  1653  0C03  1303               	bcf	3,6	;RP1=0, select bank1
  1654  0C04  01A0               	clrf	i2c_write@ack^(0+128)
  1655  0C05  30A0               	movlw	160
  1656  0C06  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1657                           
  1658                           ;24lc512.c: 41: i2c_write(add_h,0);
  1659  0C0B  1683               	bsf	3,5	;RP0=1, select bank1
  1660  0C0C  1303               	bcf	3,6	;RP1=0, select bank1
  1661  0C0D  01A0               	clrf	i2c_write@ack^(0+128)
  1662  0C0E  082E               	movf	mem_read@add_h^(0+128),w
  1663  0C0F  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1664                           
  1665                           ;24lc512.c: 42: i2c_write(add_l,0);
  1666  0C14  1683               	bsf	3,5	;RP0=1, select bank1
  1667  0C15  1303               	bcf	3,6	;RP1=0, select bank1
  1668  0C16  01A0               	clrf	i2c_write@ack^(0+128)
  1669  0C17  082F               	movf	mem_read@add_l^(0+128),w
  1670  0C18  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1671                           
  1672                           ;24lc512.c: 43: i2c_start();
  1673  0C1D  120A  158A  21C2  120A  158A  	fcall	_i2c_start
  1674                           
  1675                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  1676  0C22  1683               	bsf	3,5	;RP0=1, select bank1
  1677  0C23  1303               	bcf	3,6	;RP1=0, select bank1
  1678  0C24  01A0               	clrf	i2c_write@ack^(0+128)
  1679  0C25  30A1               	movlw	161
  1680  0C26  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1681                           
  1682                           ;24lc512.c: 45: rta = i2c_read(0);
  1683  0C2B  3000               	movlw	0
  1684  0C2C  120A  118A  278A  120A  158A  	fcall	_i2c_read
  1685  0C31  1683               	bsf	3,5	;RP0=1, select bank1
  1686  0C32  1303               	bcf	3,6	;RP1=0, select bank1
  1687  0C33  00AC               	movwf	??_mem_read^(0+128)
  1688  0C34  082C               	movf	??_mem_read^(0+128),w
  1689  0C35  00AD               	movwf	mem_read@rta^(0+128)
  1690                           
  1691                           ;24lc512.c: 46: i2c_stop();
  1692  0C36  120A  158A  21E5   	fcall	_i2c_stop
  1693                           
  1694                           ;24lc512.c: 47: return rta;
  1695  0C39  1683               	bsf	3,5	;RP0=1, select bank1
  1696  0C3A  1303               	bcf	3,6	;RP1=0, select bank1
  1697  0C3B  082D               	movf	mem_read@rta^(0+128),w
  1698  0C3C  0008               	return
  1699  0C3D                     __end_of_mem_read:	
  1700                           
  1701                           	psect	text6
  1702  0AF6                     __ptext6:	
  1703 ;; *************** function _i2c_write *****************
  1704 ;; Defined at:
  1705 ;;		line 39 in file "i2clib.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  datum           1    wreg     unsigned char 
  1708 ;;  ack             1    0[BANK1 ] unsigned char 
  1709 ;; Auto vars:     Size  Location     Type
  1710 ;;  datum           1    9[BANK1 ] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1720 ;;      Params:         0       0       1       0       0
  1721 ;;      Locals:         0       0       1       0       0
  1722 ;;      Temps:          0       0       8       0       0
  1723 ;;      Totals:         0       0      10       0       0
  1724 ;;Total ram usage:       10 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    4
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_mem_write
  1731 ;;		_mem_read
  1732 ;;		_si_reset
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function _i2c_write
  1738  0AF6                     _i2c_write:	
  1739                           
  1740                           ;incstack = 0
  1741                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
  1742                           ;i2c_write@datum stored from wreg
  1743  0AF6  1683               	bsf	3,5	;RP0=1, select bank1
  1744  0AF7  1303               	bcf	3,6	;RP1=0, select bank1
  1745  0AF8  00A9               	movwf	i2c_write@datum^(0+128)
  1746  0AF9                     l1571:	
  1747                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1748                           
  1749  0AF9  0811               	movf	17,w	;volatile
  1750  0AFA  3901               	andlw	1
  1751  0AFB  00A1               	movwf	??_i2c_write^(0+128)
  1752  0AFC  0C11               	rrf	17,w	;volatile
  1753  0AFD  3901               	andlw	1
  1754  0AFE  00A2               	movwf	(??_i2c_write+1)^(0+128)
  1755  0AFF  0C11               	rrf	17,w	;volatile
  1756  0B00  00A3               	movwf	(??_i2c_write+2)^(0+128)
  1757  0B01  0CA3               	rrf	(??_i2c_write+2)^(0+128),f
  1758  0B02  0C23               	rrf	(??_i2c_write+2)^(0+128),w
  1759  0B03  3901               	andlw	1
  1760  0B04  00A4               	movwf	(??_i2c_write+3)^(0+128)
  1761  0B05  0E11               	swapf	17,w	;volatile
  1762  0B06  3901               	andlw	1
  1763  0B07  00A5               	movwf	(??_i2c_write+4)^(0+128)
  1764  0B08  0C11               	rrf	17,w	;volatile
  1765  0B09  00A6               	movwf	(??_i2c_write+5)^(0+128)
  1766  0B0A  0C26               	rrf	(??_i2c_write+5)^(0+128),w
  1767  0B0B  3901               	andlw	1
  1768  0B0C  00A7               	movwf	(??_i2c_write+6)^(0+128)
  1769  0B0D  0C14               	rrf	20,w	;volatile
  1770  0B0E  00A8               	movwf	(??_i2c_write+7)^(0+128)
  1771  0B0F  0C28               	rrf	(??_i2c_write+7)^(0+128),w
  1772  0B10  3901               	andlw	1
  1773  0B11  0427               	iorwf	(??_i2c_write+6)^(0+128),w
  1774  0B12  0425               	iorwf	(??_i2c_write+4)^(0+128),w
  1775  0B13  0424               	iorwf	(??_i2c_write+3)^(0+128),w
  1776  0B14  0422               	iorwf	(??_i2c_write+1)^(0+128),w
  1777  0B15  0421               	iorwf	??_i2c_write^(0+128),w
  1778  0B16  1D03               	btfss	3,2
  1779  0B17  2AF9               	goto	l1571
  1780                           
  1781                           ;i2clib.c: 42: SSPBUF = datum;
  1782  0B18  0829               	movf	i2c_write@datum^(0+128),w
  1783  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0B1B  0093               	movwf	19	;volatile
  1786  0B1C                     l181:	
  1787                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  1788                           
  1789  0B1C  1683               	bsf	3,5	;RP0=1, select bank1
  1790  0B1D  1303               	bcf	3,6	;RP1=0, select bank1
  1791  0B1E  1814               	btfsc	20,0	;volatile
  1792  0B1F  2B1C               	goto	l181
  1793                           
  1794                           ;i2clib.c: 44: if(ack){
  1795  0B20  0820               	movf	i2c_write@ack^(0+128),w
  1796  0B21  1903               	btfsc	3,2
  1797  0B22  2B25               	goto	l188
  1798  0B23                     l185:	
  1799                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  1800                           
  1801  0B23  1B11               	btfsc	17,6	;volatile
  1802  0B24  2B23               	goto	l185
  1803  0B25                     l188:	
  1804                           ;i2clib.c: 46: }
  1805                           ;i2clib.c: 47: }
  1806                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  1807                           
  1808  0B25  1283               	bcf	3,5	;RP0=0, select bank0
  1809  0B26  198C               	btfsc	12,3	;volatile
  1810  0B27  0008               	return
  1811  0B28  2B25               	goto	l188
  1812  0B29                     __end_of_i2c_write:	
  1813                           
  1814                           	psect	text7
  1815  09E5                     __ptext7:	
  1816 ;; *************** function _i2c_stop *****************
  1817 ;; Defined at:
  1818 ;;		line 34 in file "i2clib.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1832 ;;      Params:         0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0
  1834 ;;      Temps:          0       0       8       0       0
  1835 ;;      Totals:         0       0       8       0       0
  1836 ;;Total ram usage:        8 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    4
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_mem_write
  1843 ;;		_mem_read
  1844 ;;		_si_reset
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           
  1849                           ;psect for function _i2c_stop
  1850  09E5                     _i2c_stop:	
  1851  09E5                     l1567:	
  1852                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1853                           
  1854                           ;incstack = 0
  1855                           ; Regs used in _i2c_stop: [wreg+status,2+status,0]
  1856                           
  1857  09E5  1683               	bsf	3,5	;RP0=1, select bank1
  1858  09E6  1303               	bcf	3,6	;RP1=0, select bank1
  1859  09E7  0811               	movf	17,w	;volatile
  1860  09E8  3901               	andlw	1
  1861  09E9  00A0               	movwf	??_i2c_stop^(0+128)
  1862  09EA  0C11               	rrf	17,w	;volatile
  1863  09EB  3901               	andlw	1
  1864  09EC  00A1               	movwf	(??_i2c_stop+1)^(0+128)
  1865  09ED  0C11               	rrf	17,w	;volatile
  1866  09EE  00A2               	movwf	(??_i2c_stop+2)^(0+128)
  1867  09EF  0CA2               	rrf	(??_i2c_stop+2)^(0+128),f
  1868  09F0  0C22               	rrf	(??_i2c_stop+2)^(0+128),w
  1869  09F1  3901               	andlw	1
  1870  09F2  00A3               	movwf	(??_i2c_stop+3)^(0+128)
  1871  09F3  0E11               	swapf	17,w	;volatile
  1872  09F4  3901               	andlw	1
  1873  09F5  00A4               	movwf	(??_i2c_stop+4)^(0+128)
  1874  09F6  0C11               	rrf	17,w	;volatile
  1875  09F7  00A5               	movwf	(??_i2c_stop+5)^(0+128)
  1876  09F8  0C25               	rrf	(??_i2c_stop+5)^(0+128),w
  1877  09F9  3901               	andlw	1
  1878  09FA  00A6               	movwf	(??_i2c_stop+6)^(0+128)
  1879  09FB  0C14               	rrf	20,w	;volatile
  1880  09FC  00A7               	movwf	(??_i2c_stop+7)^(0+128)
  1881  09FD  0C27               	rrf	(??_i2c_stop+7)^(0+128),w
  1882  09FE  3901               	andlw	1
  1883  09FF  0426               	iorwf	(??_i2c_stop+6)^(0+128),w
  1884  0A00  0424               	iorwf	(??_i2c_stop+4)^(0+128),w
  1885  0A01  0423               	iorwf	(??_i2c_stop+3)^(0+128),w
  1886  0A02  0421               	iorwf	(??_i2c_stop+1)^(0+128),w
  1887  0A03  0420               	iorwf	??_i2c_stop^(0+128),w
  1888  0A04  1D03               	btfss	3,2
  1889  0A05  29E5               	goto	l1567
  1890                           
  1891                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  1892  0A06  1511               	bsf	17,2	;volatile
  1893  0A07  0008               	return
  1894  0A08                     __end_of_i2c_stop:	
  1895                           
  1896                           	psect	text8
  1897  09C2                     __ptext8:	
  1898 ;; *************** function _i2c_start *****************
  1899 ;; Defined at:
  1900 ;;		line 24 in file "i2clib.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0
  1916 ;;      Temps:          0       0       8       0       0
  1917 ;;      Totals:         0       0       8       0       0
  1918 ;;Total ram usage:        8 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    4
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_mem_write
  1925 ;;		_mem_read
  1926 ;;		_si_reset
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           
  1931                           ;psect for function _i2c_start
  1932  09C2                     _i2c_start:	
  1933  09C2                     l1559:	
  1934                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1935                           
  1936                           ;incstack = 0
  1937                           ; Regs used in _i2c_start: [wreg+status,2+status,0]
  1938                           
  1939  09C2  1683               	bsf	3,5	;RP0=1, select bank1
  1940  09C3  1303               	bcf	3,6	;RP1=0, select bank1
  1941  09C4  0811               	movf	17,w	;volatile
  1942  09C5  3901               	andlw	1
  1943  09C6  00A0               	movwf	??_i2c_start^(0+128)
  1944  09C7  0C11               	rrf	17,w	;volatile
  1945  09C8  3901               	andlw	1
  1946  09C9  00A1               	movwf	(??_i2c_start+1)^(0+128)
  1947  09CA  0C11               	rrf	17,w	;volatile
  1948  09CB  00A2               	movwf	(??_i2c_start+2)^(0+128)
  1949  09CC  0CA2               	rrf	(??_i2c_start+2)^(0+128),f
  1950  09CD  0C22               	rrf	(??_i2c_start+2)^(0+128),w
  1951  09CE  3901               	andlw	1
  1952  09CF  00A3               	movwf	(??_i2c_start+3)^(0+128)
  1953  09D0  0E11               	swapf	17,w	;volatile
  1954  09D1  3901               	andlw	1
  1955  09D2  00A4               	movwf	(??_i2c_start+4)^(0+128)
  1956  09D3  0C11               	rrf	17,w	;volatile
  1957  09D4  00A5               	movwf	(??_i2c_start+5)^(0+128)
  1958  09D5  0C25               	rrf	(??_i2c_start+5)^(0+128),w
  1959  09D6  3901               	andlw	1
  1960  09D7  00A6               	movwf	(??_i2c_start+6)^(0+128)
  1961  09D8  0C14               	rrf	20,w	;volatile
  1962  09D9  00A7               	movwf	(??_i2c_start+7)^(0+128)
  1963  09DA  0C27               	rrf	(??_i2c_start+7)^(0+128),w
  1964  09DB  3901               	andlw	1
  1965  09DC  0426               	iorwf	(??_i2c_start+6)^(0+128),w
  1966  09DD  0424               	iorwf	(??_i2c_start+4)^(0+128),w
  1967  09DE  0423               	iorwf	(??_i2c_start+3)^(0+128),w
  1968  09DF  0421               	iorwf	(??_i2c_start+1)^(0+128),w
  1969  09E0  0420               	iorwf	??_i2c_start^(0+128),w
  1970  09E1  1D03               	btfss	3,2
  1971  09E2  29C2               	goto	l1559
  1972                           
  1973                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  1974  09E3  1411               	bsf	17,0	;volatile
  1975  09E4  0008               	return
  1976  09E5                     __end_of_i2c_start:	
  1977                           
  1978                           	psect	text9
  1979  078A                     __ptext9:	
  1980 ;; *************** function _i2c_read *****************
  1981 ;; Defined at:
  1982 ;;		line 51 in file "i2clib.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  ack             1    wreg     unsigned char 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  ack             1    9[BANK1 ] unsigned char 
  1987 ;;  resp            1    8[BANK1 ] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      unsigned char 
  1990 ;; Registers used:
  1991 ;;		wreg, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1997 ;;      Params:         0       0       0       0       0
  1998 ;;      Locals:         0       0       2       0       0
  1999 ;;      Temps:          0       0       8       0       0
  2000 ;;      Totals:         0       0      10       0       0
  2001 ;;Total ram usage:       10 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    4
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_mem_read
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           
  2012                           ;psect for function _i2c_read
  2013  078A                     _i2c_read:	
  2014                           
  2015                           ;incstack = 0
  2016                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  2017                           ;i2c_read@ack stored from wreg
  2018  078A  1683               	bsf	3,5	;RP0=1, select bank1
  2019  078B  1303               	bcf	3,6	;RP1=0, select bank1
  2020  078C  00A9               	movwf	i2c_read@ack^(0+128)
  2021                           
  2022                           ;i2clib.c: 52: unsigned char resp;
  2023                           ;i2clib.c: 53: static bit flag, not_flag;
  2024                           ;i2clib.c: 54: flag = ack & 0x01;
  2025  078D  1283               	bcf	3,5	;RP0=0, select bank0
  2026  078E  1303               	bcf	3,6	;RP1=0, select bank0
  2027  078F  10DF               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2028  0790  1683               	bsf	3,5	;RP0=1, select bank1
  2029  0791  1303               	bcf	3,6	;RP1=0, select bank1
  2030  0792  1C29               	btfss	i2c_read@ack^(0+128),0
  2031  0793  2F97               	goto	l1581
  2032  0794  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0795  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0796  14DF               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2035  0797                     l1581:	
  2036                           
  2037                           ;i2clib.c: 55: if (ack == 1){
  2038  0797  1683               	bsf	3,5	;RP0=1, select bank1
  2039  0798  1303               	bcf	3,6	;RP1=0, select bank1
  2040  0799  0329               	decf	i2c_read@ack^(0+128),w
  2041  079A  1D03               	btfss	3,2
  2042  079B  2F9F               	goto	l1585
  2043                           
  2044                           ;i2clib.c: 56: not_flag = 0;
  2045  079C  1283               	bcf	3,5	;RP0=0, select bank0
  2046  079D  1303               	bcf	3,6	;RP1=0, select bank0
  2047  079E  105F               	bcf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2048  079F                     l1585:	
  2049                           
  2050                           ;i2clib.c: 57: }
  2051                           ;i2clib.c: 58: if (ack == 3){
  2052  079F  3003               	movlw	3
  2053  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  2054  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  2055  07A2  0629               	xorwf	i2c_read@ack^(0+128),w
  2056  07A3  1D03               	btfss	3,2
  2057  07A4  2FA8               	goto	l1589
  2058                           
  2059                           ;i2clib.c: 59: not_flag = 1;
  2060  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  2061  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  2062  07A7  145F               	bsf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2063  07A8                     l1589:	
  2064                           ;i2clib.c: 60: }
  2065                           ;i2clib.c: 61: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  2066                           
  2067  07A8  1683               	bsf	3,5	;RP0=1, select bank1
  2068  07A9  1303               	bcf	3,6	;RP1=0, select bank1
  2069  07AA  0811               	movf	17,w	;volatile
  2070  07AB  3901               	andlw	1
  2071  07AC  00A0               	movwf	??_i2c_read^(0+128)
  2072  07AD  0C11               	rrf	17,w	;volatile
  2073  07AE  3901               	andlw	1
  2074  07AF  00A1               	movwf	(??_i2c_read+1)^(0+128)
  2075  07B0  0C11               	rrf	17,w	;volatile
  2076  07B1  00A2               	movwf	(??_i2c_read+2)^(0+128)
  2077  07B2  0CA2               	rrf	(??_i2c_read+2)^(0+128),f
  2078  07B3  0C22               	rrf	(??_i2c_read+2)^(0+128),w
  2079  07B4  3901               	andlw	1
  2080  07B5  00A3               	movwf	(??_i2c_read+3)^(0+128)
  2081  07B6  0E11               	swapf	17,w	;volatile
  2082  07B7  3901               	andlw	1
  2083  07B8  00A4               	movwf	(??_i2c_read+4)^(0+128)
  2084  07B9  0C11               	rrf	17,w	;volatile
  2085  07BA  00A5               	movwf	(??_i2c_read+5)^(0+128)
  2086  07BB  0C25               	rrf	(??_i2c_read+5)^(0+128),w
  2087  07BC  3901               	andlw	1
  2088  07BD  00A6               	movwf	(??_i2c_read+6)^(0+128)
  2089  07BE  0C14               	rrf	20,w	;volatile
  2090  07BF  00A7               	movwf	(??_i2c_read+7)^(0+128)
  2091  07C0  0C27               	rrf	(??_i2c_read+7)^(0+128),w
  2092  07C1  3901               	andlw	1
  2093  07C2  0426               	iorwf	(??_i2c_read+6)^(0+128),w
  2094  07C3  0424               	iorwf	(??_i2c_read+4)^(0+128),w
  2095  07C4  0423               	iorwf	(??_i2c_read+3)^(0+128),w
  2096  07C5  0421               	iorwf	(??_i2c_read+1)^(0+128),w
  2097  07C6  0420               	iorwf	??_i2c_read^(0+128),w
  2098  07C7  1D03               	btfss	3,2
  2099  07C8  2FA8               	goto	l1589
  2100                           
  2101                           ;i2clib.c: 62: SSPCON2bits.RCEN = 1;
  2102  07C9  1591               	bsf	17,3	;volatile
  2103  07CA                     l203:	
  2104                           ;i2clib.c: 63: while(!SSPSTATbits.BF);
  2105                           
  2106  07CA  1C14               	btfss	20,0	;volatile
  2107  07CB  2FCA               	goto	l203
  2108  07CC                     l206:	
  2109                           ;i2clib.c: 64: while(!PIR1bits.SSPIF);
  2110                           
  2111  07CC  1283               	bcf	3,5	;RP0=0, select bank0
  2112  07CD  1D8C               	btfss	12,3	;volatile
  2113  07CE  2FCC               	goto	l206
  2114                           
  2115                           ;i2clib.c: 65: SSPCON2bits.ACKDT = not_flag;
  2116  07CF  1C5F               	btfss	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2117  07D0  2FD5               	goto	u1300
  2118  07D1  1683               	bsf	3,5	;RP0=1, select bank1
  2119  07D2  1303               	bcf	3,6	;RP1=0, select bank1
  2120  07D3  1691               	bsf	17,5	;volatile
  2121  07D4  2FD8               	goto	u1314
  2122  07D5                     u1300:	
  2123  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  2124  07D6  1303               	bcf	3,6	;RP1=0, select bank1
  2125  07D7  1291               	bcf	17,5	;volatile
  2126  07D8                     u1314:	
  2127                           
  2128                           ;i2clib.c: 66: SSPCON2bits.ACKEN = flag;
  2129  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  2130  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  2131  07DA  1CDF               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2132  07DB  2FE0               	goto	u1320
  2133  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  2134  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  2135  07DE  1611               	bsf	17,4	;volatile
  2136  07DF  2FE3               	goto	l1591
  2137  07E0                     u1320:	
  2138  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  2139  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  2140  07E2  1211               	bcf	17,4	;volatile
  2141  07E3                     l1591:	
  2142                           
  2143                           ;i2clib.c: 67: resp = SSPBUF;
  2144  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  2145  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  2146  07E5  0813               	movf	19,w	;volatile
  2147  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  2148  07E7  1303               	bcf	3,6	;RP1=0, select bank1
  2149  07E8  00A0               	movwf	??_i2c_read^(0+128)
  2150  07E9  0820               	movf	??_i2c_read^(0+128),w
  2151  07EA  00A8               	movwf	i2c_read@resp^(0+128)
  2152  07EB                     l209:	
  2153                           ;i2clib.c: 68: while(SSPSTATbits.BF);
  2154                           
  2155  07EB  1814               	btfsc	20,0	;volatile
  2156  07EC  2FEB               	goto	l209
  2157                           
  2158                           ;i2clib.c: 69: return resp;
  2159  07ED  0828               	movf	i2c_read@resp^(0+128),w
  2160  07EE  0008               	return
  2161  07EF                     __end_of_i2c_read:	
  2162                           
  2163                           	psect	text10
  2164  0A08                     __ptext10:	
  2165 ;; *************** function _init_timer2 *****************
  2166 ;; Defined at:
  2167 ;;		line 244 in file "panda17.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;  pre             1    wreg     unsigned char 
  2170 ;;  post            1    0[BANK1 ] unsigned char 
  2171 ;;  eoc             1    1[BANK1 ] unsigned char 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  pre             1    4[BANK1 ] unsigned char 
  2174 ;;  sfr             1    5[BANK1 ] unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, status,2, status,0
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2184 ;;      Params:         0       0       2       0       0
  2185 ;;      Locals:         0       0       2       0       0
  2186 ;;      Temps:          0       0       2       0       0
  2187 ;;      Totals:         0       0       6       0       0
  2188 ;;Total ram usage:        6 bytes
  2189 ;; Hardware stack levels used:    1
  2190 ;; Hardware stack levels required when called:    4
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           
  2199                           ;psect for function _init_timer2
  2200  0A08                     _init_timer2:	
  2201                           
  2202                           ;incstack = 0
  2203                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
  2204                           ;init_timer2@pre stored from wreg
  2205  0A08  1683               	bsf	3,5	;RP0=1, select bank1
  2206  0A09  1303               	bcf	3,6	;RP1=0, select bank1
  2207  0A0A  00A4               	movwf	init_timer2@pre^(0+128)
  2208                           
  2209                           ;panda17.c: 245: unsigned char sfr = 0x00;
  2210  0A0B  01A5               	clrf	init_timer2@sfr^(0+128)
  2211                           
  2212                           ;panda17.c: 246: PR2 = eoc;
  2213  0A0C  0821               	movf	init_timer2@eoc^(0+128),w
  2214  0A0D  0092               	movwf	18	;volatile
  2215                           
  2216                           ;panda17.c: 247: sfr = ((post-1) << 3) & 0x78;
  2217  0A0E  0820               	movf	init_timer2@post^(0+128),w
  2218  0A0F  00A2               	movwf	??_init_timer2^(0+128)
  2219  0A10  3002               	movlw	2
  2220  0A11                     u2025:	
  2221  0A11  1003               	clrc
  2222  0A12  0DA2               	rlf	??_init_timer2^(0+128),f
  2223  0A13  3EFF               	addlw	-1
  2224  0A14  1D03               	skipz
  2225  0A15  2A11               	goto	u2025
  2226  0A16  1003               	clrc
  2227  0A17  0D22               	rlf	??_init_timer2^(0+128),w
  2228  0A18  3EF8               	addlw	248
  2229  0A19  3978               	andlw	120
  2230  0A1A  00A3               	movwf	(??_init_timer2+1)^(0+128)
  2231  0A1B  0823               	movf	(??_init_timer2+1)^(0+128),w
  2232  0A1C  00A5               	movwf	init_timer2@sfr^(0+128)
  2233                           
  2234                           ;panda17.c: 248: sfr += 4;
  2235  0A1D  3004               	movlw	4
  2236  0A1E  00A2               	movwf	??_init_timer2^(0+128)
  2237  0A1F  0822               	movf	??_init_timer2^(0+128),w
  2238  0A20  07A5               	addwf	init_timer2@sfr^(0+128),f
  2239                           
  2240                           ;panda17.c: 249: sfr += pre;
  2241  0A21  0824               	movf	init_timer2@pre^(0+128),w
  2242  0A22  00A2               	movwf	??_init_timer2^(0+128)
  2243  0A23  0822               	movf	??_init_timer2^(0+128),w
  2244  0A24  07A5               	addwf	init_timer2@sfr^(0+128),f
  2245                           
  2246                           ;panda17.c: 250: T2CON = sfr;
  2247  0A25  0825               	movf	init_timer2@sfr^(0+128),w
  2248  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  2250  0A28  0092               	movwf	18	;volatile
  2251                           
  2252                           ;panda17.c: 251: PIE1bits.TMR2IE = 1;
  2253  0A29  1683               	bsf	3,5	;RP0=1, select bank1
  2254  0A2A  1303               	bcf	3,6	;RP1=0, select bank1
  2255  0A2B  148C               	bsf	12,1	;volatile
  2256  0A2C  0008               	return
  2257  0A2D                     __end_of_init_timer2:	
  2258                           
  2259                           	psect	text11
  2260  07EF                     __ptext11:	
  2261 ;; *************** function _i2c_init *****************
  2262 ;; Defined at:
  2263 ;;		line 13 in file "i2clib.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;		None
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;		None
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2277 ;;      Params:         0       0       0       0       0
  2278 ;;      Locals:         0       0       0       0       0
  2279 ;;      Temps:          0       0       0       0       0
  2280 ;;      Totals:         0       0       0       0       0
  2281 ;;Total ram usage:        0 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; Hardware stack levels required when called:    4
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_main
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function _i2c_init
  2293  07EF                     _i2c_init:	
  2294                           
  2295                           ;i2clib.c: 15: SSPCONbits.SSPM = 0b1000;
  2296                           
  2297                           ;incstack = 0
  2298                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  2299  07EF  1283               	bcf	3,5	;RP0=0, select bank0
  2300  07F0  1303               	bcf	3,6	;RP1=0, select bank0
  2301  07F1  0814               	movf	20,w	;volatile
  2302  07F2  39F0               	andlw	-16
  2303  07F3  3808               	iorlw	8
  2304  07F4  0094               	movwf	20	;volatile
  2305                           
  2306                           ;i2clib.c: 16: SSPCONbits.SSPEN = 1;
  2307  07F5  1694               	bsf	20,5	;volatile
  2308                           
  2309                           ;i2clib.c: 18: SSPADD = 0x04;
  2310  07F6  3004               	movlw	4
  2311  07F7  1683               	bsf	3,5	;RP0=1, select bank1
  2312  07F8  1303               	bcf	3,6	;RP1=0, select bank1
  2313  07F9  0093               	movwf	19	;volatile
  2314                           
  2315                           ;i2clib.c: 19: SSPSTATbits.SMP = 1;
  2316  07FA  1794               	bsf	20,7	;volatile
  2317                           
  2318                           ;i2clib.c: 20: TRISCbits.TRISC3 = 1;
  2319  07FB  1587               	bsf	7,3	;volatile
  2320                           
  2321                           ;i2clib.c: 21: TRISCbits.TRISC4 = 1;
  2322  07FC  1607               	bsf	7,4	;volatile
  2323  07FD  0008               	return
  2324  07FE                     __end_of_i2c_init:	
  2325                           
  2326                           	psect	text12
  2327  0029                     __ptext12:	
  2328 ;; *************** function _ints_isr *****************
  2329 ;; Defined at:
  2330 ;;		line 77 in file "panda17.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  hum_add         2   45[BANK0 ] unsigned int 
  2335 ;;  temp_add        2   43[BANK0 ] unsigned int 
  2336 ;;  up              2   39[BANK0 ] unsigned int 
  2337 ;;  temp_val        2   31[BANK0 ] unsigned int 
  2338 ;;  hum_val         2   29[BANK0 ] unsigned int 
  2339 ;;  arg             1   49[BANK0 ] unsigned char 
  2340 ;;  k               1   38[BANK0 ] unsigned char 
  2341 ;;  z               1   37[BANK0 ] unsigned char 
  2342 ;;  n               2   50[BANK0 ] unsigned int 
  2343 ;;  aux2            2   47[BANK0 ] unsigned int 
  2344 ;;  aux             2   41[BANK0 ] unsigned int 
  2345 ;;  add             2   35[BANK0 ] unsigned int 
  2346 ;;  dt              2   33[BANK0 ] unsigned int 
  2347 ;;  rcv             1   28[BANK0 ] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       0       0       0       0
  2358 ;;      Locals:         0      24       0       0       0
  2359 ;;      Temps:          0       8       0       0       0
  2360 ;;      Totals:         0      32       0       0       0
  2361 ;;Total ram usage:       32 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    3
  2364 ;; This function calls:
  2365 ;;		___wmul
  2366 ;;		_ds_get
  2367 ;;		_ds_set
  2368 ;;		_printf
  2369 ;;		_save_event
  2370 ;;		_si_read_h
  2371 ;;		_si_read_t
  2372 ;;		i1_mem_init
  2373 ;;		i1_mem_read
  2374 ;;		i1_mem_write
  2375 ;; This function is called by:
  2376 ;;		Interrupt level 1
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380                           
  2381                           ;psect for function _ints_isr
  2382  0029                     _ints_isr:	
  2383                           
  2384                           ;panda17.c: 79: if (PIR1bits.RCIF){
  2385  0029  1E8C               	btfss	12,5	;volatile
  2386  002A  2B60               	goto	i1l91
  2387                           
  2388                           ;panda17.c: 80: INTCONbits.GIE = 0;
  2389  002B  138B               	bcf	11,7	;volatile
  2390                           
  2391                           ;panda17.c: 81: static bit ferr = 0, oerr = 0;
  2392                           ;panda17.c: 82: unsigned char rcv = 0;
  2393  002C  01BC               	clrf	ints_isr@rcv
  2394                           
  2395                           ;panda17.c: 83: ferr = RCSTAbits.FERR;
  2396  002D  11DF               	bcf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2397  002E  1918               	btfsc	24,2	;volatile
  2398  002F  15DF               	bsf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2399                           
  2400                           ;panda17.c: 84: oerr = RCSTAbits.OERR;
  2401  0030  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0031  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0032  115F               	bcf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2404  0033  1898               	btfsc	24,1	;volatile
  2405  0034  155F               	bsf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2406                           
  2407                           ;panda17.c: 85: if (!ferr & !oerr){
  2408  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0036  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0037  1DDF               	btfss	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2411  0038  195F               	btfsc	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2412  0039  2B4C               	goto	i1l2181
  2413                           
  2414                           ;panda17.c: 86: rcv = RCREG;
  2415  003A  081A               	movf	26,w	;volatile
  2416  003B  00B4               	movwf	??_ints_isr
  2417  003C  0834               	movf	??_ints_isr,w
  2418  003D  00BC               	movwf	ints_isr@rcv
  2419                           
  2420                           ;panda17.c: 87: }
  2421                           ;panda17.c: 88: switch (rcv){
  2422  003E  2B4C               	goto	i1l2181
  2423  003F                     i1l98:	
  2424                           ;panda17.c: 89: case 'a':
  2425                           
  2426                           
  2427                           ;panda17.c: 90: PORTBbits.RB4 = 1;
  2428  003F  1606               	bsf	6,4	;volatile
  2429                           
  2430                           ;panda17.c: 91: unsigned int dt = 0,add,n,aux;
  2431  0040  01C1               	clrf	ints_isr@dt
  2432  0041  01C2               	clrf	ints_isr@dt+1
  2433                           
  2434                           ;panda17.c: 92: unsigned int aux2;
  2435                           ;panda17.c: 93: add = mem_read(0x0A);
  2436  0042  300A               	movlw	10
  2437  0043  00FA               	movwf	i1mem_read@add
  2438  0044  3000               	movlw	0
  2439  0045  00FB               	movwf	i1mem_read@add+1
  2440  0046  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2441  004B  1283               	bcf	3,5	;RP0=0, select bank0
  2442  004C  1303               	bcf	3,6	;RP1=0, select bank0
  2443  004D  00B4               	movwf	??_ints_isr
  2444  004E  01B5               	clrf	??_ints_isr+1
  2445  004F  0834               	movf	??_ints_isr,w
  2446  0050  00C3               	movwf	ints_isr@add
  2447  0051  0835               	movf	??_ints_isr+1,w
  2448  0052  00C4               	movwf	ints_isr@add+1
  2449                           
  2450                           ;panda17.c: 94: add = add << 8;
  2451  0053  0843               	movf	ints_isr@add,w
  2452  0054  00B5               	movwf	??_ints_isr+1
  2453  0055  01B4               	clrf	??_ints_isr
  2454  0056  0834               	movf	??_ints_isr,w
  2455  0057  00C3               	movwf	ints_isr@add
  2456  0058  0835               	movf	??_ints_isr+1,w
  2457  0059  00C4               	movwf	ints_isr@add+1
  2458                           
  2459                           ;panda17.c: 95: add += mem_read(0x0B);
  2460  005A  300B               	movlw	11
  2461  005B  00FA               	movwf	i1mem_read@add
  2462  005C  3000               	movlw	0
  2463  005D  00FB               	movwf	i1mem_read@add+1
  2464  005E  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2465  0063  1283               	bcf	3,5	;RP0=0, select bank0
  2466  0064  1303               	bcf	3,6	;RP1=0, select bank0
  2467  0065  00B4               	movwf	??_ints_isr
  2468  0066  01B5               	clrf	??_ints_isr+1
  2469  0067  0834               	movf	??_ints_isr,w
  2470  0068  07C3               	addwf	ints_isr@add,f
  2471  0069  1803               	skipnc
  2472  006A  0AC4               	incf	ints_isr@add+1,f
  2473  006B  0835               	movf	??_ints_isr+1,w
  2474  006C  07C4               	addwf	ints_isr@add+1,f
  2475                           
  2476                           ;panda17.c: 97: printf("I%05d\r\n",add);
  2477  006D  0844               	movf	ints_isr@add+1,w
  2478  006E  00A5               	movwf	?_printf+1
  2479  006F  0843               	movf	ints_isr@add,w
  2480  0070  00A4               	movwf	?_printf
  2481  0071  3035               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2482  0072  120A  118A  24F1  120A  118A  	fcall	_printf
  2483                           
  2484                           ;panda17.c: 98: for (n=0;n<add;n++){
  2485  0077  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0078  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0079  01D2               	clrf	ints_isr@n
  2488  007A  01D3               	clrf	ints_isr@n+1
  2489  007B                     i1l2103:	
  2490  007B  0844               	movf	ints_isr@add+1,w
  2491  007C  0253               	subwf	ints_isr@n+1,w
  2492  007D  1D03               	skipz
  2493  007E  2881               	goto	u209_25
  2494  007F  0843               	movf	ints_isr@add,w
  2495  0080  0252               	subwf	ints_isr@n,w
  2496  0081                     u209_25:	
  2497  0081  1803               	btfsc	3,0
  2498  0082  2924               	goto	i1l2105
  2499                           
  2500                           ;panda17.c: 99: aux = mem_read(2*n+0x0010);
  2501  0083  0853               	movf	ints_isr@n+1,w
  2502  0084  00B5               	movwf	??_ints_isr+1
  2503  0085  0852               	movf	ints_isr@n,w
  2504  0086  00B4               	movwf	??_ints_isr
  2505  0087  1003               	clrc
  2506  0088  0DB4               	rlf	??_ints_isr,f
  2507  0089  0DB5               	rlf	??_ints_isr+1,f
  2508  008A  0834               	movf	??_ints_isr,w
  2509  008B  3E10               	addlw	16
  2510  008C  00FA               	movwf	i1mem_read@add
  2511  008D  0835               	movf	??_ints_isr+1,w
  2512  008E  1803               	skipnc
  2513  008F  3E01               	addlw	1
  2514  0090  3E00               	addlw	0
  2515  0091  00FB               	movwf	i1mem_read@add+1
  2516  0092  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2517  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2518  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2519  0099  00B6               	movwf	??_ints_isr+2
  2520  009A  01B7               	clrf	??_ints_isr+3
  2521  009B  0836               	movf	??_ints_isr+2,w
  2522  009C  00C9               	movwf	ints_isr@aux
  2523  009D  0837               	movf	??_ints_isr+3,w
  2524  009E  00CA               	movwf	ints_isr@aux+1
  2525                           
  2526                           ;panda17.c: 100: aux = aux << 8;
  2527  009F  0849               	movf	ints_isr@aux,w
  2528  00A0  00B5               	movwf	??_ints_isr+1
  2529  00A1  01B4               	clrf	??_ints_isr
  2530  00A2  0834               	movf	??_ints_isr,w
  2531  00A3  00C9               	movwf	ints_isr@aux
  2532  00A4  0835               	movf	??_ints_isr+1,w
  2533  00A5  00CA               	movwf	ints_isr@aux+1
  2534                           
  2535                           ;panda17.c: 101: aux += mem_read(2*n+0x0011);
  2536  00A6  0853               	movf	ints_isr@n+1,w
  2537  00A7  00B5               	movwf	??_ints_isr+1
  2538  00A8  0852               	movf	ints_isr@n,w
  2539  00A9  00B4               	movwf	??_ints_isr
  2540  00AA  1003               	clrc
  2541  00AB  0DB4               	rlf	??_ints_isr,f
  2542  00AC  0DB5               	rlf	??_ints_isr+1,f
  2543  00AD  0834               	movf	??_ints_isr,w
  2544  00AE  3E11               	addlw	17
  2545  00AF  00FA               	movwf	i1mem_read@add
  2546  00B0  0835               	movf	??_ints_isr+1,w
  2547  00B1  1803               	skipnc
  2548  00B2  3E01               	addlw	1
  2549  00B3  3E00               	addlw	0
  2550  00B4  00FB               	movwf	i1mem_read@add+1
  2551  00B5  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2552  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  2553  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  2554  00BC  00B6               	movwf	??_ints_isr+2
  2555  00BD  01B7               	clrf	??_ints_isr+3
  2556  00BE  0836               	movf	??_ints_isr+2,w
  2557  00BF  07C9               	addwf	ints_isr@aux,f
  2558  00C0  1803               	skipnc
  2559  00C1  0ACA               	incf	ints_isr@aux+1,f
  2560  00C2  0837               	movf	??_ints_isr+3,w
  2561  00C3  07CA               	addwf	ints_isr@aux+1,f
  2562                           
  2563                           ;panda17.c: 102: printf("%04x;",aux);
  2564  00C4  084A               	movf	ints_isr@aux+1,w
  2565  00C5  00A5               	movwf	?_printf+1
  2566  00C6  0849               	movf	ints_isr@aux,w
  2567  00C7  00A4               	movwf	?_printf
  2568  00C8  304D               	movlw	(low (((STR_16+1)-__stringbase)| (0+32768)))& (0+255)
  2569  00C9  120A  118A  24F1  120A  118A  	fcall	_printf
  2570                           
  2571                           ;panda17.c: 103: aux = mem_read(2*n+0x7FF7);
  2572  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2573  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2574  00D0  0853               	movf	ints_isr@n+1,w
  2575  00D1  00B5               	movwf	??_ints_isr+1
  2576  00D2  0852               	movf	ints_isr@n,w
  2577  00D3  00B4               	movwf	??_ints_isr
  2578  00D4  1003               	clrc
  2579  00D5  0DB4               	rlf	??_ints_isr,f
  2580  00D6  0DB5               	rlf	??_ints_isr+1,f
  2581  00D7  0834               	movf	??_ints_isr,w
  2582  00D8  3EF7               	addlw	247
  2583  00D9  00FA               	movwf	i1mem_read@add
  2584  00DA  0835               	movf	??_ints_isr+1,w
  2585  00DB  1803               	skipnc
  2586  00DC  3E01               	addlw	1
  2587  00DD  3E7F               	addlw	127
  2588  00DE  00FB               	movwf	i1mem_read@add+1
  2589  00DF  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2590  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2591  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2592  00E6  00B6               	movwf	??_ints_isr+2
  2593  00E7  01B7               	clrf	??_ints_isr+3
  2594  00E8  0836               	movf	??_ints_isr+2,w
  2595  00E9  00C9               	movwf	ints_isr@aux
  2596  00EA  0837               	movf	??_ints_isr+3,w
  2597  00EB  00CA               	movwf	ints_isr@aux+1
  2598                           
  2599                           ;panda17.c: 104: aux = aux << 8;
  2600  00EC  0849               	movf	ints_isr@aux,w
  2601  00ED  00B5               	movwf	??_ints_isr+1
  2602  00EE  01B4               	clrf	??_ints_isr
  2603  00EF  0834               	movf	??_ints_isr,w
  2604  00F0  00C9               	movwf	ints_isr@aux
  2605  00F1  0835               	movf	??_ints_isr+1,w
  2606  00F2  00CA               	movwf	ints_isr@aux+1
  2607                           
  2608                           ;panda17.c: 105: aux += mem_read(2*n+0x7FF8);
  2609  00F3  0853               	movf	ints_isr@n+1,w
  2610  00F4  00B5               	movwf	??_ints_isr+1
  2611  00F5  0852               	movf	ints_isr@n,w
  2612  00F6  00B4               	movwf	??_ints_isr
  2613  00F7  1003               	clrc
  2614  00F8  0DB4               	rlf	??_ints_isr,f
  2615  00F9  0DB5               	rlf	??_ints_isr+1,f
  2616  00FA  0834               	movf	??_ints_isr,w
  2617  00FB  3EF8               	addlw	248
  2618  00FC  00FA               	movwf	i1mem_read@add
  2619  00FD  0835               	movf	??_ints_isr+1,w
  2620  00FE  1803               	skipnc
  2621  00FF  3E01               	addlw	1
  2622  0100  3E7F               	addlw	127
  2623  0101  00FB               	movwf	i1mem_read@add+1
  2624  0102  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2625  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0109  00B6               	movwf	??_ints_isr+2
  2628  010A  01B7               	clrf	??_ints_isr+3
  2629  010B  0836               	movf	??_ints_isr+2,w
  2630  010C  07C9               	addwf	ints_isr@aux,f
  2631  010D  1803               	skipnc
  2632  010E  0ACA               	incf	ints_isr@aux+1,f
  2633  010F  0837               	movf	??_ints_isr+3,w
  2634  0110  07CA               	addwf	ints_isr@aux+1,f
  2635                           
  2636                           ;panda17.c: 106: printf("%04x\r\n",aux);
  2637  0111  084A               	movf	ints_isr@aux+1,w
  2638  0112  00A5               	movwf	?_printf+1
  2639  0113  0849               	movf	ints_isr@aux,w
  2640  0114  00A4               	movwf	?_printf
  2641  0115  3045               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2642  0116  120A  118A  24F1  120A  118A  	fcall	_printf
  2643  011B  3001               	movlw	1
  2644  011C  1283               	bcf	3,5	;RP0=0, select bank0
  2645  011D  1303               	bcf	3,6	;RP1=0, select bank0
  2646  011E  07D2               	addwf	ints_isr@n,f
  2647  011F  1803               	skipnc
  2648  0120  0AD3               	incf	ints_isr@n+1,f
  2649  0121  3000               	movlw	0
  2650  0122  07D3               	addwf	ints_isr@n+1,f
  2651  0123  287B               	goto	i1l2103
  2652  0124                     i1l2105:	
  2653                           
  2654                           ;panda17.c: 107: }
  2655                           ;panda17.c: 108: dt = mem_read(0x0003);
  2656  0124  3003               	movlw	3
  2657  0125  00FA               	movwf	i1mem_read@add
  2658  0126  3000               	movlw	0
  2659  0127  00FB               	movwf	i1mem_read@add+1
  2660  0128  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2661  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2662  012E  1303               	bcf	3,6	;RP1=0, select bank0
  2663  012F  00B4               	movwf	??_ints_isr
  2664  0130  01B5               	clrf	??_ints_isr+1
  2665  0131  0834               	movf	??_ints_isr,w
  2666  0132  00C1               	movwf	ints_isr@dt
  2667  0133  0835               	movf	??_ints_isr+1,w
  2668  0134  00C2               	movwf	ints_isr@dt+1
  2669                           
  2670                           ;panda17.c: 109: printf("Z%02x\r\n",dt);
  2671  0135  0842               	movf	ints_isr@dt+1,w
  2672  0136  00A5               	movwf	?_printf+1
  2673  0137  0841               	movf	ints_isr@dt,w
  2674  0138  00A4               	movwf	?_printf
  2675  0139  303D               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2676  013A  120A  118A  24F1  120A  118A  	fcall	_printf
  2677                           
  2678                           ;panda17.c: 110: for (n=0;n<dt;n++){
  2679  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0140  1303               	bcf	3,6	;RP1=0, select bank0
  2681  0141  01D2               	clrf	ints_isr@n
  2682  0142  01D3               	clrf	ints_isr@n+1
  2683  0143                     i1l2135:	
  2684  0143  0842               	movf	ints_isr@dt+1,w
  2685  0144  0253               	subwf	ints_isr@n+1,w
  2686  0145  1D03               	skipz
  2687  0146  2949               	goto	u210_25
  2688  0147  0841               	movf	ints_isr@dt,w
  2689  0148  0252               	subwf	ints_isr@n,w
  2690  0149                     u210_25:	
  2691  0149  1803               	btfsc	3,0
  2692  014A  2A9A               	goto	i1l2137
  2693                           
  2694                           ;panda17.c: 111: aux2 = mem_read(7*n + 0xFF74);
  2695  014B  0853               	movf	ints_isr@n+1,w
  2696  014C  00F1               	movwf	___wmul@multiplier+1
  2697  014D  0852               	movf	ints_isr@n,w
  2698  014E  00F0               	movwf	___wmul@multiplier
  2699  014F  3007               	movlw	7
  2700  0150  00F2               	movwf	___wmul@multiplicand
  2701  0151  3000               	movlw	0
  2702  0152  00F3               	movwf	___wmul@multiplicand+1
  2703  0153  120A  158A  2138  120A  118A  	fcall	___wmul
  2704  0158  0870               	movf	?___wmul,w
  2705  0159  3E74               	addlw	116
  2706  015A  00FA               	movwf	i1mem_read@add
  2707  015B  0871               	movf	?___wmul+1,w
  2708  015C  1803               	skipnc
  2709  015D  3E01               	addlw	1
  2710  015E  3EFF               	addlw	255
  2711  015F  00FB               	movwf	i1mem_read@add+1
  2712  0160  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2713  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2714  0166  1303               	bcf	3,6	;RP1=0, select bank0
  2715  0167  00B4               	movwf	??_ints_isr
  2716  0168  01B5               	clrf	??_ints_isr+1
  2717  0169  0834               	movf	??_ints_isr,w
  2718  016A  00CF               	movwf	ints_isr@aux2
  2719  016B  0835               	movf	??_ints_isr+1,w
  2720  016C  00D0               	movwf	ints_isr@aux2+1
  2721                           
  2722                           ;panda17.c: 112: printf("%02x:",aux2);
  2723  016D  0850               	movf	ints_isr@aux2+1,w
  2724  016E  00A5               	movwf	?_printf+1
  2725  016F  084F               	movf	ints_isr@aux2,w
  2726  0170  00A4               	movwf	?_printf
  2727  0171  3065               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2728  0172  120A  118A  24F1  120A  118A  	fcall	_printf
  2729                           
  2730                           ;panda17.c: 113: aux2 = mem_read(0x0FF75 + 7*n);
  2731  0177  1283               	bcf	3,5	;RP0=0, select bank0
  2732  0178  1303               	bcf	3,6	;RP1=0, select bank0
  2733  0179  0853               	movf	ints_isr@n+1,w
  2734  017A  00F1               	movwf	___wmul@multiplier+1
  2735  017B  0852               	movf	ints_isr@n,w
  2736  017C  00F0               	movwf	___wmul@multiplier
  2737  017D  3007               	movlw	7
  2738  017E  00F2               	movwf	___wmul@multiplicand
  2739  017F  3000               	movlw	0
  2740  0180  00F3               	movwf	___wmul@multiplicand+1
  2741  0181  120A  158A  2138  120A  118A  	fcall	___wmul
  2742  0186  0870               	movf	?___wmul,w
  2743  0187  3E75               	addlw	117
  2744  0188  00FA               	movwf	i1mem_read@add
  2745  0189  0871               	movf	?___wmul+1,w
  2746  018A  1803               	skipnc
  2747  018B  3E01               	addlw	1
  2748  018C  3EFF               	addlw	255
  2749  018D  00FB               	movwf	i1mem_read@add+1
  2750  018E  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2751  0193  1283               	bcf	3,5	;RP0=0, select bank0
  2752  0194  1303               	bcf	3,6	;RP1=0, select bank0
  2753  0195  00B4               	movwf	??_ints_isr
  2754  0196  01B5               	clrf	??_ints_isr+1
  2755  0197  0834               	movf	??_ints_isr,w
  2756  0198  00CF               	movwf	ints_isr@aux2
  2757  0199  0835               	movf	??_ints_isr+1,w
  2758  019A  00D0               	movwf	ints_isr@aux2+1
  2759                           
  2760                           ;panda17.c: 114: printf("%02x ",aux2);
  2761  019B  0850               	movf	ints_isr@aux2+1,w
  2762  019C  00A5               	movwf	?_printf+1
  2763  019D  084F               	movf	ints_isr@aux2,w
  2764  019E  00A4               	movwf	?_printf
  2765  019F  3059               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2766  01A0  120A  118A  24F1  120A  118A  	fcall	_printf
  2767                           
  2768                           ;panda17.c: 115: aux2 = mem_read(0x0FF76 + 7*n);
  2769  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2770  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2771  01A7  0853               	movf	ints_isr@n+1,w
  2772  01A8  00F1               	movwf	___wmul@multiplier+1
  2773  01A9  0852               	movf	ints_isr@n,w
  2774  01AA  00F0               	movwf	___wmul@multiplier
  2775  01AB  3007               	movlw	7
  2776  01AC  00F2               	movwf	___wmul@multiplicand
  2777  01AD  3000               	movlw	0
  2778  01AE  00F3               	movwf	___wmul@multiplicand+1
  2779  01AF  120A  158A  2138  120A  118A  	fcall	___wmul
  2780  01B4  0870               	movf	?___wmul,w
  2781  01B5  3E76               	addlw	118
  2782  01B6  00FA               	movwf	i1mem_read@add
  2783  01B7  0871               	movf	?___wmul+1,w
  2784  01B8  1803               	skipnc
  2785  01B9  3E01               	addlw	1
  2786  01BA  3EFF               	addlw	255
  2787  01BB  00FB               	movwf	i1mem_read@add+1
  2788  01BC  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2789  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2790  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2791  01C3  00B4               	movwf	??_ints_isr
  2792  01C4  01B5               	clrf	??_ints_isr+1
  2793  01C5  0834               	movf	??_ints_isr,w
  2794  01C6  00CF               	movwf	ints_isr@aux2
  2795  01C7  0835               	movf	??_ints_isr+1,w
  2796  01C8  00D0               	movwf	ints_isr@aux2+1
  2797                           
  2798                           ;panda17.c: 116: printf("%02x/",aux2);
  2799  01C9  0850               	movf	ints_isr@aux2+1,w
  2800  01CA  00A5               	movwf	?_printf+1
  2801  01CB  084F               	movf	ints_isr@aux2,w
  2802  01CC  00A4               	movwf	?_printf
  2803  01CD  305F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2804  01CE  120A  118A  24F1  120A  118A  	fcall	_printf
  2805                           
  2806                           ;panda17.c: 117: aux2 = mem_read(0x0FF77 + 7*n);
  2807  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2808  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2809  01D5  0853               	movf	ints_isr@n+1,w
  2810  01D6  00F1               	movwf	___wmul@multiplier+1
  2811  01D7  0852               	movf	ints_isr@n,w
  2812  01D8  00F0               	movwf	___wmul@multiplier
  2813  01D9  3007               	movlw	7
  2814  01DA  00F2               	movwf	___wmul@multiplicand
  2815  01DB  3000               	movlw	0
  2816  01DC  00F3               	movwf	___wmul@multiplicand+1
  2817  01DD  120A  158A  2138  120A  118A  	fcall	___wmul
  2818  01E2  0870               	movf	?___wmul,w
  2819  01E3  3E77               	addlw	119
  2820  01E4  00FA               	movwf	i1mem_read@add
  2821  01E5  0871               	movf	?___wmul+1,w
  2822  01E6  1803               	skipnc
  2823  01E7  3E01               	addlw	1
  2824  01E8  3EFF               	addlw	255
  2825  01E9  00FB               	movwf	i1mem_read@add+1
  2826  01EA  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2827  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2828  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2829  01F1  00B4               	movwf	??_ints_isr
  2830  01F2  01B5               	clrf	??_ints_isr+1
  2831  01F3  0834               	movf	??_ints_isr,w
  2832  01F4  00CF               	movwf	ints_isr@aux2
  2833  01F5  0835               	movf	??_ints_isr+1,w
  2834  01F6  00D0               	movwf	ints_isr@aux2+1
  2835                           
  2836                           ;panda17.c: 118: printf("%02x/",aux2);
  2837  01F7  0850               	movf	ints_isr@aux2+1,w
  2838  01F8  00A5               	movwf	?_printf+1
  2839  01F9  084F               	movf	ints_isr@aux2,w
  2840  01FA  00A4               	movwf	?_printf
  2841  01FB  305F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2842  01FC  120A  118A  24F1  120A  118A  	fcall	_printf
  2843                           
  2844                           ;panda17.c: 119: aux2 = mem_read(0x0FF78 + 7*n);
  2845  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0203  0853               	movf	ints_isr@n+1,w
  2848  0204  00F1               	movwf	___wmul@multiplier+1
  2849  0205  0852               	movf	ints_isr@n,w
  2850  0206  00F0               	movwf	___wmul@multiplier
  2851  0207  3007               	movlw	7
  2852  0208  00F2               	movwf	___wmul@multiplicand
  2853  0209  3000               	movlw	0
  2854  020A  00F3               	movwf	___wmul@multiplicand+1
  2855  020B  120A  158A  2138  120A  118A  	fcall	___wmul
  2856  0210  0870               	movf	?___wmul,w
  2857  0211  3E78               	addlw	120
  2858  0212  00FA               	movwf	i1mem_read@add
  2859  0213  0871               	movf	?___wmul+1,w
  2860  0214  1803               	skipnc
  2861  0215  3E01               	addlw	1
  2862  0216  3EFF               	addlw	255
  2863  0217  00FB               	movwf	i1mem_read@add+1
  2864  0218  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2865  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2866  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2867  021F  00B4               	movwf	??_ints_isr
  2868  0220  01B5               	clrf	??_ints_isr+1
  2869  0221  0834               	movf	??_ints_isr,w
  2870  0222  00CF               	movwf	ints_isr@aux2
  2871  0223  0835               	movf	??_ints_isr+1,w
  2872  0224  00D0               	movwf	ints_isr@aux2+1
  2873                           
  2874                           ;panda17.c: 120: printf("%02x\t",aux2);
  2875  0225  0850               	movf	ints_isr@aux2+1,w
  2876  0226  00A5               	movwf	?_printf+1
  2877  0227  084F               	movf	ints_isr@aux2,w
  2878  0228  00A4               	movwf	?_printf
  2879  0229  3053               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2880  022A  120A  118A  24F1  120A  118A  	fcall	_printf
  2881                           
  2882                           ;panda17.c: 121: aux2 = mem_read(0x0FF79 + 7*n);
  2883  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2884  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2885  0231  0853               	movf	ints_isr@n+1,w
  2886  0232  00F1               	movwf	___wmul@multiplier+1
  2887  0233  0852               	movf	ints_isr@n,w
  2888  0234  00F0               	movwf	___wmul@multiplier
  2889  0235  3007               	movlw	7
  2890  0236  00F2               	movwf	___wmul@multiplicand
  2891  0237  3000               	movlw	0
  2892  0238  00F3               	movwf	___wmul@multiplicand+1
  2893  0239  120A  158A  2138  120A  118A  	fcall	___wmul
  2894  023E  0870               	movf	?___wmul,w
  2895  023F  3E79               	addlw	121
  2896  0240  00FA               	movwf	i1mem_read@add
  2897  0241  0871               	movf	?___wmul+1,w
  2898  0242  1803               	skipnc
  2899  0243  3E01               	addlw	1
  2900  0244  3EFF               	addlw	255
  2901  0245  00FB               	movwf	i1mem_read@add+1
  2902  0246  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2903  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2904  024C  1303               	bcf	3,6	;RP1=0, select bank0
  2905  024D  00B4               	movwf	??_ints_isr
  2906  024E  01B5               	clrf	??_ints_isr+1
  2907  024F  0834               	movf	??_ints_isr,w
  2908  0250  00CF               	movwf	ints_isr@aux2
  2909  0251  0835               	movf	??_ints_isr+1,w
  2910  0252  00D0               	movwf	ints_isr@aux2+1
  2911                           
  2912                           ;panda17.c: 122: printf("%02x",aux2);
  2913  0253  0850               	movf	ints_isr@aux2+1,w
  2914  0254  00A5               	movwf	?_printf+1
  2915  0255  084F               	movf	ints_isr@aux2,w
  2916  0256  00A4               	movwf	?_printf
  2917  0257  306B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2918  0258  120A  118A  24F1  120A  118A  	fcall	_printf
  2919                           
  2920                           ;panda17.c: 123: aux2 = mem_read(0x0FF7A + 7*n);
  2921  025D  1283               	bcf	3,5	;RP0=0, select bank0
  2922  025E  1303               	bcf	3,6	;RP1=0, select bank0
  2923  025F  0853               	movf	ints_isr@n+1,w
  2924  0260  00F1               	movwf	___wmul@multiplier+1
  2925  0261  0852               	movf	ints_isr@n,w
  2926  0262  00F0               	movwf	___wmul@multiplier
  2927  0263  3007               	movlw	7
  2928  0264  00F2               	movwf	___wmul@multiplicand
  2929  0265  3000               	movlw	0
  2930  0266  00F3               	movwf	___wmul@multiplicand+1
  2931  0267  120A  158A  2138  120A  118A  	fcall	___wmul
  2932  026C  0870               	movf	?___wmul,w
  2933  026D  3E7A               	addlw	122
  2934  026E  00FA               	movwf	i1mem_read@add
  2935  026F  0871               	movf	?___wmul+1,w
  2936  0270  1803               	skipnc
  2937  0271  3E01               	addlw	1
  2938  0272  3EFF               	addlw	255
  2939  0273  00FB               	movwf	i1mem_read@add+1
  2940  0274  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2941  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2942  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2943  027B  00B4               	movwf	??_ints_isr
  2944  027C  01B5               	clrf	??_ints_isr+1
  2945  027D  0834               	movf	??_ints_isr,w
  2946  027E  00CF               	movwf	ints_isr@aux2
  2947  027F  0835               	movf	??_ints_isr+1,w
  2948  0280  00D0               	movwf	ints_isr@aux2+1
  2949                           
  2950                           ;panda17.c: 124: printf("%02x",aux2);
  2951  0281  0850               	movf	ints_isr@aux2+1,w
  2952  0282  00A5               	movwf	?_printf+1
  2953  0283  084F               	movf	ints_isr@aux2,w
  2954  0284  00A4               	movwf	?_printf
  2955  0285  306B               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2956  0286  120A  118A  24F1  120A  118A  	fcall	_printf
  2957                           
  2958                           ;panda17.c: 125: printf("\r\n");
  2959  028B  303A               	movlw	(low (((STR_1+5)-__stringbase)| (0+32768)))& (0+255)
  2960  028C  120A  118A  24F1  120A  118A  	fcall	_printf
  2961  0291  3001               	movlw	1
  2962  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2963  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2964  0294  07D2               	addwf	ints_isr@n,f
  2965  0295  1803               	skipnc
  2966  0296  0AD3               	incf	ints_isr@n+1,f
  2967  0297  3000               	movlw	0
  2968  0298  07D3               	addwf	ints_isr@n+1,f
  2969  0299  2943               	goto	i1l2135
  2970  029A                     i1l2137:	
  2971                           
  2972                           ;panda17.c: 126: }
  2973                           ;panda17.c: 127: printf("X");
  2974  029A  307C               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2975  029B  120A  118A  24F1  120A  118A  	fcall	_printf
  2976                           
  2977                           ;panda17.c: 128: PORTBbits.RB4 = 0;
  2978  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2979  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2980  02A2  1206               	bcf	6,4	;volatile
  2981                           
  2982                           ;panda17.c: 129: break;
  2983  02A3  2B5F               	goto	i1l105
  2984  02A4                     i1l2141:	
  2985                           ;panda17.c: 130: case 'b':
  2986                           
  2987                           
  2988                           ;panda17.c: 131: for (unsigned char z = 0;z<7;z++){
  2989  02A4  01C5               	clrf	ints_isr@z
  2990  02A5  3007               	movlw	7
  2991  02A6  0245               	subwf	ints_isr@z,w
  2992  02A7  1803               	btfsc	3,0
  2993  02A8  2AC8               	goto	i1l2155
  2994  02A9                     i1l109:	
  2995                           ;panda17.c: 132: while(!PIR1bits.RCIF);
  2996                           
  2997  02A9  1E8C               	btfss	12,5	;volatile
  2998  02AA  2AA9               	goto	i1l109
  2999                           
  3000                           ;panda17.c: 133: ferr = RCSTAbits.FERR;
  3001  02AB  11DF               	bcf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  3002  02AC  1918               	btfsc	24,2	;volatile
  3003  02AD  15DF               	bsf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  3004                           
  3005                           ;panda17.c: 134: oerr = RCSTAbits.OERR;
  3006  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  3007  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  3008  02B0  115F               	bcf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  3009  02B1  1898               	btfsc	24,1	;volatile
  3010  02B2  155F               	bsf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  3011                           
  3012                           ;panda17.c: 135: if (!ferr & !oerr){
  3013  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  3014  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  3015  02B5  1DDF               	btfss	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  3016  02B6  195F               	btfsc	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  3017  02B7  2AC0               	goto	i1l2151
  3018                           
  3019                           ;panda17.c: 136: time[z] = RCREG;
  3020  02B8  081A               	movf	26,w	;volatile
  3021  02B9  00B4               	movwf	??_ints_isr
  3022  02BA  0845               	movf	ints_isr@z,w
  3023  02BB  3E58               	addlw	(low (_time| 0))& (0+255)
  3024  02BC  0084               	movwf	4
  3025  02BD  0834               	movf	??_ints_isr,w
  3026  02BE  1383               	bcf	3,7	;select IRP bank0
  3027  02BF  0080               	movwf	0
  3028  02C0                     i1l2151:	
  3029  02C0  3001               	movlw	1
  3030  02C1  00B4               	movwf	??_ints_isr
  3031  02C2  0834               	movf	??_ints_isr,w
  3032  02C3  07C5               	addwf	ints_isr@z,f
  3033  02C4  3007               	movlw	7
  3034  02C5  0245               	subwf	ints_isr@z,w
  3035  02C6  1C03               	skipc
  3036  02C7  2AA9               	goto	i1l109
  3037  02C8                     i1l2155:	
  3038                           
  3039                           ;panda17.c: 137: }
  3040                           ;panda17.c: 138: }
  3041                           ;panda17.c: 139: ds_set(time);
  3042  02C8  3058               	movlw	(low (_time| 0))& (0+255)
  3043  02C9  120A  158A  22C3  120A  118A  	fcall	_ds_set
  3044                           
  3045                           ;panda17.c: 140: break;
  3046  02CE  2B5F               	goto	i1l105
  3047  02CF                     i1l113:	
  3048                           ;panda17.c: 141: case 'c':
  3049                           
  3050                           
  3051                           ;panda17.c: 142: PORTBbits.RB4 = 1;
  3052  02CF  1606               	bsf	6,4	;volatile
  3053                           
  3054                           ;panda17.c: 143: mem_write(0x0002,0x00);
  3055  02D0  3002               	movlw	2
  3056  02D1  00FA               	movwf	i1mem_write@add
  3057  02D2  3000               	movlw	0
  3058  02D3  00FB               	movwf	i1mem_write@add+1
  3059  02D4  01FC               	clrf	i1mem_write@data
  3060  02D5  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3061                           
  3062                           ;panda17.c: 144: mem_init();
  3063  02DA  120A  158A  24D9  120A  118A  	fcall	i1_mem_init
  3064                           
  3065                           ;panda17.c: 145: PORTBbits.RB4 = 0;
  3066  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3067  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3068  02E1  1206               	bcf	6,4	;volatile
  3069                           
  3070                           ;panda17.c: 146: if ((mem_read(0x0002) == 0xAA) && (mem_read(0x000D) == 0x00)){
  3071  02E2  3002               	movlw	2
  3072  02E3  00FA               	movwf	i1mem_read@add
  3073  02E4  3000               	movlw	0
  3074  02E5  00FB               	movwf	i1mem_read@add+1
  3075  02E6  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  3076  02EB  3AAA               	xorlw	170
  3077  02EC  1D03               	skipz
  3078  02ED  2B5F               	goto	i1l105
  3079  02EE  300D               	movlw	13
  3080  02EF  00FA               	movwf	i1mem_read@add
  3081  02F0  3000               	movlw	0
  3082  02F1  00FB               	movwf	i1mem_read@add+1
  3083  02F2  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  3084  02F7  3A00               	xorlw	0
  3085  02F8  1D03               	skipz
  3086  02F9  2B5F               	goto	i1l105
  3087                           
  3088                           ;panda17.c: 147: printf("OK");
  3089  02FA  3079               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3090  02FB  120A  118A  24F1  120A  118A  	fcall	_printf
  3091                           
  3092                           ;panda17.c: 148: }
  3093                           ;panda17.c: 149: break;
  3094  0300  2B5F               	goto	i1l105
  3095  0301                     i1l2165:	
  3096                           ;panda17.c: 150: case 'd':
  3097                           
  3098                           
  3099                           ;panda17.c: 151: for (unsigned char k=0;k<7;k++){
  3100  0301  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0302  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0303  01C6               	clrf	ints_isr@k
  3103  0304                     L2:	
  3104  0304  3007               	movlw	7
  3105  0305  0246               	subwf	ints_isr@k,w
  3106  0306  1803               	btfsc	3,0
  3107  0307  2B5F               	goto	i1l105
  3108                           
  3109                           ;panda17.c: 152: printf("%X ",ds_get(k));
  3110  0308  0846               	movf	ints_isr@k,w
  3111  0309  120A  158A  222D  120A  118A  	fcall	_ds_get
  3112  030E  1283               	bcf	3,5	;RP0=0, select bank0
  3113  030F  1303               	bcf	3,6	;RP1=0, select bank0
  3114  0310  00B4               	movwf	??_ints_isr
  3115  0311  01B5               	clrf	??_ints_isr+1
  3116  0312  0834               	movf	??_ints_isr,w
  3117  0313  00A4               	movwf	?_printf
  3118  0314  0835               	movf	??_ints_isr+1,w
  3119  0315  00A5               	movwf	?_printf+1
  3120  0316  3075               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  3121  0317  120A  118A  24F1  120A  118A  	fcall	_printf
  3122  031C  3001               	movlw	1
  3123  031D  1283               	bcf	3,5	;RP0=0, select bank0
  3124  031E  1303               	bcf	3,6	;RP1=0, select bank0
  3125  031F  00B4               	movwf	??_ints_isr
  3126  0320  0834               	movf	??_ints_isr,w
  3127  0321  07C6               	addwf	ints_isr@k,f
  3128  0322  2B04               	goto	L2
  3129  0323                     i1l2177:	
  3130                           ;panda17.c: 155: case 'm':
  3131                           
  3132                           ;panda17.c: 153: }
  3133                           ;panda17.c: 154: break;
  3134                           
  3135                           
  3136                           ;panda17.c: 156: printf("I%04x;",si_read_h());
  3137  0323  120A  158A  2638  120A  118A  	fcall	_si_read_h
  3138  0328  087B               	movf	?_si_read_h+1,w
  3139  0329  1283               	bcf	3,5	;RP0=0, select bank0
  3140  032A  1303               	bcf	3,6	;RP1=0, select bank0
  3141  032B  00A5               	movwf	?_printf+1
  3142  032C  087A               	movf	?_si_read_h,w
  3143  032D  00A4               	movwf	?_printf
  3144  032E  304C               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  3145  032F  120A  118A  24F1  120A  118A  	fcall	_printf
  3146                           
  3147                           ;panda17.c: 157: printf("%04x",si_read_t());
  3148  0334  120A  158A  2529  120A  118A  	fcall	_si_read_t
  3149  0339  087B               	movf	?_si_read_t+1,w
  3150  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3151  033B  1303               	bcf	3,6	;RP1=0, select bank0
  3152  033C  00A5               	movwf	?_printf+1
  3153  033D  087A               	movf	?_si_read_t,w
  3154  033E  00A4               	movwf	?_printf
  3155  033F  3070               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3156  0340  120A  118A  24F1  120A  118A  	fcall	_printf
  3157                           
  3158                           ;panda17.c: 158: printf("X");
  3159  0345  307C               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3160  0346  120A  118A  24F1  120A  118A  	fcall	_printf
  3161                           
  3162                           ;panda17.c: 161: }
  3163                           
  3164                           ;panda17.c: 159: break;
  3165  034B  2B5F               	goto	i1l105
  3166  034C                     i1l2181:	
  3167  034C  1283               	bcf	3,5	;RP0=0, select bank0
  3168  034D  1303               	bcf	3,6	;RP1=0, select bank0
  3169  034E  083C               	movf	ints_isr@rcv,w
  3170                           
  3171                           ; Switch size 1, requested type "space"
  3172                           ; Number of cases is 5, Range of values is 97 to 109
  3173                           ; switch strategies available:
  3174                           ; Name         Instructions Cycles
  3175                           ; simple_byte           16     9 (average)
  3176                           ; direct_byte           50    11 (fixed)
  3177                           ; jumptable            263     9 (fixed)
  3178                           ;	Chosen strategy is simple_byte
  3179  034F  3A61               	xorlw	97	; case 97
  3180  0350  1903               	skipnz
  3181  0351  283F               	goto	i1l98
  3182  0352  3A03               	xorlw	3	; case 98
  3183  0353  1903               	skipnz
  3184  0354  2AA4               	goto	i1l2141
  3185  0355  3A01               	xorlw	1	; case 99
  3186  0356  1903               	skipnz
  3187  0357  2ACF               	goto	i1l113
  3188  0358  3A07               	xorlw	7	; case 100
  3189  0359  1903               	skipnz
  3190  035A  2B01               	goto	i1l2165
  3191  035B  3A09               	xorlw	9	; case 109
  3192  035C  1903               	skipnz
  3193  035D  2B23               	goto	i1l2177
  3194  035E  2B5F               	goto	i1l105
  3195  035F                     i1l105:	
  3196                           
  3197                           ;panda17.c: 162: INTCONbits.GIE = 1;
  3198  035F  178B               	bsf	11,7	;volatile
  3199  0360                     i1l91:	
  3200                           
  3201                           ;panda17.c: 163: }
  3202                           ;panda17.c: 167: if (PIR1bits.TMR2IF){
  3203  0360  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0361  1303               	bcf	3,6	;RP1=0, select bank0
  3205  0362  1C8C               	btfss	12,1	;volatile
  3206  0363  2CE4               	goto	i1l129
  3207                           
  3208                           ;panda17.c: 168: PIR1bits.TMR2IF = 0;
  3209  0364  108C               	bcf	12,1	;volatile
  3210                           
  3211                           ;panda17.c: 169: INTCONbits.GIE = 0;
  3212  0365  138B               	bcf	11,7	;volatile
  3213                           
  3214                           ;panda17.c: 170: if (!PORTBbits.RB2){
  3215  0366  1906               	btfsc	6,2	;volatile
  3216  0367  2B79               	goto	i1l2197
  3217                           
  3218                           ;panda17.c: 171: if (!fyh){
  3219  0368  1A5F               	btfsc	_fyh/(0+8),_fyh& (0+7)
  3220  0369  2B72               	goto	i1l2191
  3221                           
  3222                           ;panda17.c: 172: save_event();
  3223  036A  120A  158A  2695  120A  118A  	fcall	_save_event
  3224                           
  3225                           ;panda17.c: 173: fyh = 1;
  3226  036F  1283               	bcf	3,5	;RP0=0, select bank0
  3227  0370  1303               	bcf	3,6	;RP1=0, select bank0
  3228  0371  165F               	bsf	_fyh/(0+8),_fyh& (0+7)
  3229  0372                     i1l2191:	
  3230                           
  3231                           ;panda17.c: 174: }
  3232                           ;panda17.c: 175: led = 5;
  3233  0372  3005               	movlw	5
  3234  0373  00B4               	movwf	??_ints_isr
  3235  0374  0834               	movf	??_ints_isr,w
  3236  0375  00E0               	movwf	_led
  3237                           
  3238                           ;panda17.c: 176: milis = 0;
  3239  0376  01D7               	clrf	_milis
  3240                           
  3241                           ;panda17.c: 177: secs = 0;
  3242  0377  01D4               	clrf	_secs
  3243  0378  01D5               	clrf	_secs+1
  3244  0379                     i1l2197:	
  3245                           
  3246                           ;panda17.c: 178: }
  3247                           ;panda17.c: 179: if (PORTBbits.RB2){
  3248  0379  1D06               	btfss	6,2	;volatile
  3249  037A  2CE3               	goto	i1l2277
  3250                           
  3251                           ;panda17.c: 180: if (fyh){
  3252  037B  1E5F               	btfss	_fyh/(0+8),_fyh& (0+7)
  3253  037C  2B82               	goto	i1l2203
  3254                           
  3255                           ;panda17.c: 181: save_event();
  3256  037D  120A  158A  2695  120A  118A  	fcall	_save_event
  3257  0382                     i1l2203:	
  3258                           
  3259                           ;panda17.c: 182: }
  3260                           ;panda17.c: 183: milis++;
  3261  0382  3001               	movlw	1
  3262  0383  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0384  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0385  00B4               	movwf	??_ints_isr
  3265  0386  0834               	movf	??_ints_isr,w
  3266  0387  07D7               	addwf	_milis,f
  3267                           
  3268                           ;panda17.c: 184: if(milis > 24){
  3269  0388  3019               	movlw	25
  3270  0389  0257               	subwf	_milis,w
  3271  038A  1C03               	skipc
  3272  038B  2BA4               	goto	i1l2221
  3273                           
  3274                           ;panda17.c: 185: if (led > 0){
  3275  038C  0860               	movf	_led,w
  3276  038D  1903               	btfsc	3,2
  3277  038E  2B93               	goto	i1l125
  3278                           
  3279                           ;panda17.c: 186: PORTBbits.RB4 = 1;
  3280  038F  1606               	bsf	6,4	;volatile
  3281                           
  3282                           ;panda17.c: 187: led--;
  3283  0390  3001               	movlw	1
  3284  0391  02E0               	subwf	_led,f
  3285                           
  3286                           ;panda17.c: 188: }
  3287  0392  2B94               	goto	i1l2213
  3288  0393                     i1l125:	
  3289                           
  3290                           ;panda17.c: 189: else {
  3291                           ;panda17.c: 190: PORTBbits.RB4 = 0;
  3292  0393  1206               	bcf	6,4	;volatile
  3293  0394                     i1l2213:	
  3294                           
  3295                           ;panda17.c: 191: }
  3296                           ;panda17.c: 192: secs++;
  3297  0394  3001               	movlw	1
  3298  0395  07D4               	addwf	_secs,f
  3299  0396  1803               	skipnc
  3300  0397  0AD5               	incf	_secs+1,f
  3301  0398  3000               	movlw	0
  3302  0399  07D5               	addwf	_secs+1,f
  3303                           
  3304                           ;panda17.c: 193: milis = 0;
  3305  039A  01D7               	clrf	_milis
  3306                           
  3307                           ;panda17.c: 194: if (secs == 30){
  3308  039B  301E               	movlw	30
  3309  039C  0654               	xorwf	_secs,w
  3310  039D  0455               	iorwf	_secs+1,w
  3311  039E  1D03               	btfss	3,2
  3312  039F  2BA4               	goto	i1l2221
  3313                           
  3314                           ;panda17.c: 195: condition = 2;
  3315  03A0  3002               	movlw	2
  3316  03A1  00B4               	movwf	??_ints_isr
  3317  03A2  0834               	movf	??_ints_isr,w
  3318  03A3  00D6               	movwf	_condition
  3319  03A4                     i1l2221:	
  3320                           
  3321                           ;panda17.c: 196: }
  3322                           ;panda17.c: 197: }
  3323                           ;panda17.c: 198: if (condition == 2){
  3324  03A4  3002               	movlw	2
  3325  03A5  0656               	xorwf	_condition,w
  3326  03A6  1D03               	btfss	3,2
  3327  03A7  2CE3               	goto	i1l2277
  3328                           
  3329                           ;panda17.c: 199: condition = 0;
  3330  03A8  01D6               	clrf	_condition
  3331                           
  3332                           ;panda17.c: 200: secs = 0;
  3333  03A9  01D4               	clrf	_secs
  3334  03AA  01D5               	clrf	_secs+1
  3335                           
  3336                           ;panda17.c: 202: unsigned char arg;
  3337                           ;panda17.c: 203: unsigned int temp_add,hum_add,up;
  3338                           ;panda17.c: 204: unsigned int hum_val,temp_val;
  3339                           ;panda17.c: 206: hum_val = si_read_h();
  3340  03AB  120A  158A  2638  120A  118A  	fcall	_si_read_h
  3341  03B0  087B               	movf	?_si_read_h+1,w
  3342  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3343  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3344  03B3  00BE               	movwf	ints_isr@hum_val+1
  3345  03B4  087A               	movf	?_si_read_h,w
  3346  03B5  00BD               	movwf	ints_isr@hum_val
  3347                           
  3348                           ;panda17.c: 207: temp_val = si_read_t();
  3349  03B6  120A  158A  2529  120A  118A  	fcall	_si_read_t
  3350  03BB  087B               	movf	?_si_read_t+1,w
  3351  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  3352  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  3353  03BE  00C0               	movwf	ints_isr@temp_val+1
  3354  03BF  087A               	movf	?_si_read_t,w
  3355  03C0  00BF               	movwf	ints_isr@temp_val
  3356                           
  3357                           ;panda17.c: 209: hum_add = mem_read(0x000A);
  3358  03C1  300A               	movlw	10
  3359  03C2  00FA               	movwf	i1mem_read@add
  3360  03C3  3000               	movlw	0
  3361  03C4  00FB               	movwf	i1mem_read@add+1
  3362  03C5  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  3363  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  3364  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  3365  03CC  00B4               	movwf	??_ints_isr
  3366  03CD  01B5               	clrf	??_ints_isr+1
  3367  03CE  0834               	movf	??_ints_isr,w
  3368  03CF  00CD               	movwf	ints_isr@hum_add
  3369  03D0  0835               	movf	??_ints_isr+1,w
  3370  03D1  00CE               	movwf	ints_isr@hum_add+1
  3371                           
  3372                           ;panda17.c: 210: hum_add = hum_add << 8;
  3373  03D2  084D               	movf	ints_isr@hum_add,w
  3374  03D3  00B5               	movwf	??_ints_isr+1
  3375  03D4  01B4               	clrf	??_ints_isr
  3376  03D5  0834               	movf	??_ints_isr,w
  3377  03D6  00CD               	movwf	ints_isr@hum_add
  3378  03D7  0835               	movf	??_ints_isr+1,w
  3379  03D8  00CE               	movwf	ints_isr@hum_add+1
  3380                           
  3381                           ;panda17.c: 211: hum_add += mem_read(0x000B);
  3382  03D9  300B               	movlw	11
  3383  03DA  00FA               	movwf	i1mem_read@add
  3384  03DB  3000               	movlw	0
  3385  03DC  00FB               	movwf	i1mem_read@add+1
  3386  03DD  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  3387  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3388  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3389  03E4  00B4               	movwf	??_ints_isr
  3390  03E5  01B5               	clrf	??_ints_isr+1
  3391  03E6  0834               	movf	??_ints_isr,w
  3392  03E7  07CD               	addwf	ints_isr@hum_add,f
  3393  03E8  1803               	skipnc
  3394  03E9  0ACE               	incf	ints_isr@hum_add+1,f
  3395  03EA  0835               	movf	??_ints_isr+1,w
  3396  03EB  07CE               	addwf	ints_isr@hum_add+1,f
  3397                           
  3398                           ;panda17.c: 212: up = hum_add + 1;
  3399  03EC  084D               	movf	ints_isr@hum_add,w
  3400  03ED  3E01               	addlw	1
  3401  03EE  00C7               	movwf	ints_isr@up
  3402  03EF  084E               	movf	ints_isr@hum_add+1,w
  3403  03F0  1803               	skipnc
  3404  03F1  3E01               	addlw	1
  3405  03F2  3E00               	addlw	0
  3406  03F3  00C8               	movwf	ints_isr@up+1
  3407                           
  3408                           ;panda17.c: 213: arg = up >> 8;
  3409  03F4  0848               	movf	ints_isr@up+1,w
  3410  03F5  00B4               	movwf	??_ints_isr
  3411  03F6  0834               	movf	??_ints_isr,w
  3412  03F7  00D1               	movwf	ints_isr@arg
  3413                           
  3414                           ;panda17.c: 214: mem_write(0x000A,arg);
  3415  03F8  300A               	movlw	10
  3416  03F9  00FA               	movwf	i1mem_write@add
  3417  03FA  3000               	movlw	0
  3418  03FB  00FB               	movwf	i1mem_write@add+1
  3419  03FC  0851               	movf	ints_isr@arg,w
  3420  03FD  00B4               	movwf	??_ints_isr
  3421  03FE  0834               	movf	??_ints_isr,w
  3422  03FF  00FC               	movwf	i1mem_write@data
  3423  0400  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3424                           
  3425                           ;panda17.c: 215: arg = up & 0x00FF;
  3426  0405  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0406  1303               	bcf	3,6	;RP1=0, select bank0
  3428  0407  0847               	movf	ints_isr@up,w
  3429  0408  00B4               	movwf	??_ints_isr
  3430  0409  0834               	movf	??_ints_isr,w
  3431  040A  00D1               	movwf	ints_isr@arg
  3432                           
  3433                           ;panda17.c: 216: mem_write(0x000B,arg);
  3434  040B  300B               	movlw	11
  3435  040C  00FA               	movwf	i1mem_write@add
  3436  040D  3000               	movlw	0
  3437  040E  00FB               	movwf	i1mem_write@add+1
  3438  040F  0851               	movf	ints_isr@arg,w
  3439  0410  00B4               	movwf	??_ints_isr
  3440  0411  0834               	movf	??_ints_isr,w
  3441  0412  00FC               	movwf	i1mem_write@data
  3442  0413  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3443                           
  3444                           ;panda17.c: 217: hum_add = (hum_add * 2) + 1 + 0x000F;
  3445  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0419  1303               	bcf	3,6	;RP1=0, select bank0
  3447  041A  084E               	movf	ints_isr@hum_add+1,w
  3448  041B  00B5               	movwf	??_ints_isr+1
  3449  041C  084D               	movf	ints_isr@hum_add,w
  3450  041D  00B4               	movwf	??_ints_isr
  3451  041E  1003               	clrc
  3452  041F  0DB4               	rlf	??_ints_isr,f
  3453  0420  0DB5               	rlf	??_ints_isr+1,f
  3454  0421  0834               	movf	??_ints_isr,w
  3455  0422  3E10               	addlw	16
  3456  0423  00CD               	movwf	ints_isr@hum_add
  3457  0424  0835               	movf	??_ints_isr+1,w
  3458  0425  1803               	skipnc
  3459  0426  3E01               	addlw	1
  3460  0427  3E00               	addlw	0
  3461  0428  00CE               	movwf	ints_isr@hum_add+1
  3462                           
  3463                           ;panda17.c: 218: temp_add = mem_read(0x000C);
  3464  0429  300C               	movlw	12
  3465  042A  00FA               	movwf	i1mem_read@add
  3466  042B  3000               	movlw	0
  3467  042C  00FB               	movwf	i1mem_read@add+1
  3468  042D  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  3469  0432  1283               	bcf	3,5	;RP0=0, select bank0
  3470  0433  1303               	bcf	3,6	;RP1=0, select bank0
  3471  0434  00B4               	movwf	??_ints_isr
  3472  0435  01B5               	clrf	??_ints_isr+1
  3473  0436  0834               	movf	??_ints_isr,w
  3474  0437  00CB               	movwf	ints_isr@temp_add
  3475  0438  0835               	movf	??_ints_isr+1,w
  3476  0439  00CC               	movwf	ints_isr@temp_add+1
  3477                           
  3478                           ;panda17.c: 219: temp_add = temp_add << 8;
  3479  043A  084B               	movf	ints_isr@temp_add,w
  3480  043B  00B5               	movwf	??_ints_isr+1
  3481  043C  01B4               	clrf	??_ints_isr
  3482  043D  0834               	movf	??_ints_isr,w
  3483  043E  00CB               	movwf	ints_isr@temp_add
  3484  043F  0835               	movf	??_ints_isr+1,w
  3485  0440  00CC               	movwf	ints_isr@temp_add+1
  3486                           
  3487                           ;panda17.c: 220: temp_add += mem_read(0x000D);
  3488  0441  300D               	movlw	13
  3489  0442  00FA               	movwf	i1mem_read@add
  3490  0443  3000               	movlw	0
  3491  0444  00FB               	movwf	i1mem_read@add+1
  3492  0445  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  3493  044A  1283               	bcf	3,5	;RP0=0, select bank0
  3494  044B  1303               	bcf	3,6	;RP1=0, select bank0
  3495  044C  00B4               	movwf	??_ints_isr
  3496  044D  01B5               	clrf	??_ints_isr+1
  3497  044E  0834               	movf	??_ints_isr,w
  3498  044F  07CB               	addwf	ints_isr@temp_add,f
  3499  0450  1803               	skipnc
  3500  0451  0ACC               	incf	ints_isr@temp_add+1,f
  3501  0452  0835               	movf	??_ints_isr+1,w
  3502  0453  07CC               	addwf	ints_isr@temp_add+1,f
  3503                           
  3504                           ;panda17.c: 221: up = temp_add + 1;
  3505  0454  084B               	movf	ints_isr@temp_add,w
  3506  0455  3E01               	addlw	1
  3507  0456  00C7               	movwf	ints_isr@up
  3508  0457  084C               	movf	ints_isr@temp_add+1,w
  3509  0458  1803               	skipnc
  3510  0459  3E01               	addlw	1
  3511  045A  3E00               	addlw	0
  3512  045B  00C8               	movwf	ints_isr@up+1
  3513                           
  3514                           ;panda17.c: 222: arg = up >> 8;
  3515  045C  0848               	movf	ints_isr@up+1,w
  3516  045D  00B4               	movwf	??_ints_isr
  3517  045E  0834               	movf	??_ints_isr,w
  3518  045F  00D1               	movwf	ints_isr@arg
  3519                           
  3520                           ;panda17.c: 223: mem_write(0x000C,arg);
  3521  0460  300C               	movlw	12
  3522  0461  00FA               	movwf	i1mem_write@add
  3523  0462  3000               	movlw	0
  3524  0463  00FB               	movwf	i1mem_write@add+1
  3525  0464  0851               	movf	ints_isr@arg,w
  3526  0465  00B4               	movwf	??_ints_isr
  3527  0466  0834               	movf	??_ints_isr,w
  3528  0467  00FC               	movwf	i1mem_write@data
  3529  0468  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3530                           
  3531                           ;panda17.c: 224: arg = up & 0x00FF;
  3532  046D  1283               	bcf	3,5	;RP0=0, select bank0
  3533  046E  1303               	bcf	3,6	;RP1=0, select bank0
  3534  046F  0847               	movf	ints_isr@up,w
  3535  0470  00B4               	movwf	??_ints_isr
  3536  0471  0834               	movf	??_ints_isr,w
  3537  0472  00D1               	movwf	ints_isr@arg
  3538                           
  3539                           ;panda17.c: 225: mem_write(0x000D,arg);
  3540  0473  300D               	movlw	13
  3541  0474  00FA               	movwf	i1mem_write@add
  3542  0475  3000               	movlw	0
  3543  0476  00FB               	movwf	i1mem_write@add+1
  3544  0477  0851               	movf	ints_isr@arg,w
  3545  0478  00B4               	movwf	??_ints_isr
  3546  0479  0834               	movf	??_ints_isr,w
  3547  047A  00FC               	movwf	i1mem_write@data
  3548  047B  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3549                           
  3550                           ;panda17.c: 226: temp_add = (temp_add * 2) + 1 + 0x7FF6;
  3551  0480  1283               	bcf	3,5	;RP0=0, select bank0
  3552  0481  1303               	bcf	3,6	;RP1=0, select bank0
  3553  0482  084C               	movf	ints_isr@temp_add+1,w
  3554  0483  00B5               	movwf	??_ints_isr+1
  3555  0484  084B               	movf	ints_isr@temp_add,w
  3556  0485  00B4               	movwf	??_ints_isr
  3557  0486  1003               	clrc
  3558  0487  0DB4               	rlf	??_ints_isr,f
  3559  0488  0DB5               	rlf	??_ints_isr+1,f
  3560  0489  0834               	movf	??_ints_isr,w
  3561  048A  3EF7               	addlw	247
  3562  048B  00CB               	movwf	ints_isr@temp_add
  3563  048C  0835               	movf	??_ints_isr+1,w
  3564  048D  1803               	skipnc
  3565  048E  3E01               	addlw	1
  3566  048F  3E7F               	addlw	127
  3567  0490  00CC               	movwf	ints_isr@temp_add+1
  3568                           
  3569                           ;panda17.c: 228: arg = hum_val >> 8;
  3570  0491  083E               	movf	ints_isr@hum_val+1,w
  3571  0492  00B4               	movwf	??_ints_isr
  3572  0493  0834               	movf	??_ints_isr,w
  3573  0494  00D1               	movwf	ints_isr@arg
  3574                           
  3575                           ;panda17.c: 229: mem_write(hum_add,arg);
  3576  0495  084E               	movf	ints_isr@hum_add+1,w
  3577  0496  00FB               	movwf	i1mem_write@add+1
  3578  0497  084D               	movf	ints_isr@hum_add,w
  3579  0498  00FA               	movwf	i1mem_write@add
  3580  0499  0851               	movf	ints_isr@arg,w
  3581  049A  00B4               	movwf	??_ints_isr
  3582  049B  0834               	movf	??_ints_isr,w
  3583  049C  00FC               	movwf	i1mem_write@data
  3584  049D  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3585                           
  3586                           ;panda17.c: 230: arg = hum_val & 0x00FF;
  3587  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  3588  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  3589  04A4  083D               	movf	ints_isr@hum_val,w
  3590  04A5  00B4               	movwf	??_ints_isr
  3591  04A6  0834               	movf	??_ints_isr,w
  3592  04A7  00D1               	movwf	ints_isr@arg
  3593                           
  3594                           ;panda17.c: 231: mem_write(hum_add + 1,arg);
  3595  04A8  084D               	movf	ints_isr@hum_add,w
  3596  04A9  3E01               	addlw	1
  3597  04AA  00FA               	movwf	i1mem_write@add
  3598  04AB  084E               	movf	ints_isr@hum_add+1,w
  3599  04AC  1803               	skipnc
  3600  04AD  3E01               	addlw	1
  3601  04AE  3E00               	addlw	0
  3602  04AF  00FB               	movwf	i1mem_write@add+1
  3603  04B0  0851               	movf	ints_isr@arg,w
  3604  04B1  00B4               	movwf	??_ints_isr
  3605  04B2  0834               	movf	??_ints_isr,w
  3606  04B3  00FC               	movwf	i1mem_write@data
  3607  04B4  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3608                           
  3609                           ;panda17.c: 232: arg = (temp_val >> 8) & 0x00FF;
  3610  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3611  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3612  04BB  0840               	movf	ints_isr@temp_val+1,w
  3613  04BC  00B4               	movwf	??_ints_isr
  3614  04BD  0834               	movf	??_ints_isr,w
  3615  04BE  00D1               	movwf	ints_isr@arg
  3616                           
  3617                           ;panda17.c: 233: mem_write(temp_add,arg);
  3618  04BF  084C               	movf	ints_isr@temp_add+1,w
  3619  04C0  00FB               	movwf	i1mem_write@add+1
  3620  04C1  084B               	movf	ints_isr@temp_add,w
  3621  04C2  00FA               	movwf	i1mem_write@add
  3622  04C3  0851               	movf	ints_isr@arg,w
  3623  04C4  00B4               	movwf	??_ints_isr
  3624  04C5  0834               	movf	??_ints_isr,w
  3625  04C6  00FC               	movwf	i1mem_write@data
  3626  04C7  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3627                           
  3628                           ;panda17.c: 234: arg = temp_val & 0x00FF;
  3629  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  3630  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  3631  04CE  083F               	movf	ints_isr@temp_val,w
  3632  04CF  00B4               	movwf	??_ints_isr
  3633  04D0  0834               	movf	??_ints_isr,w
  3634  04D1  00D1               	movwf	ints_isr@arg
  3635                           
  3636                           ;panda17.c: 235: mem_write(temp_add + 1,arg);
  3637  04D2  084B               	movf	ints_isr@temp_add,w
  3638  04D3  3E01               	addlw	1
  3639  04D4  00FA               	movwf	i1mem_write@add
  3640  04D5  084C               	movf	ints_isr@temp_add+1,w
  3641  04D6  1803               	skipnc
  3642  04D7  3E01               	addlw	1
  3643  04D8  3E00               	addlw	0
  3644  04D9  00FB               	movwf	i1mem_write@add+1
  3645  04DA  0851               	movf	ints_isr@arg,w
  3646  04DB  00B4               	movwf	??_ints_isr
  3647  04DC  0834               	movf	??_ints_isr,w
  3648  04DD  00FC               	movwf	i1mem_write@data
  3649  04DE  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3650  04E3                     i1l2277:	
  3651                           
  3652                           ;panda17.c: 237: }
  3653                           ;panda17.c: 238: }
  3654                           ;panda17.c: 239: INTCONbits.GIE = 1;
  3655  04E3  178B               	bsf	11,7	;volatile
  3656  04E4                     i1l129:	
  3657  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3658  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  3659  04E6  083B               	movf	??_ints_isr+7,w
  3660  04E7  00FF               	movwf	127
  3661  04E8  083A               	movf	??_ints_isr+6,w
  3662  04E9  008A               	movwf	10
  3663  04EA  0839               	movf	??_ints_isr+5,w
  3664  04EB  0084               	movwf	4
  3665  04EC  0E38               	swapf	(??_ints_isr+4)^0,w
  3666  04ED  0083               	movwf	3
  3667  04EE  0EFE               	swapf	126,f
  3668  04EF  0E7E               	swapf	126,w
  3669  04F0  0009               	retfie
  3670  04F1                     __end_of_ints_isr:	
  3671                           
  3672                           	psect	intentry
  3673  0004                     __pintentry:	
  3674                           ;incstack = 0
  3675                           ; Regs used in _ints_isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3676                           
  3677  0004                     interrupt_function:	
  3678  007E                     saved_w	set	btemp
  3679  0004  00FE               	movwf	btemp
  3680  0005  0E03               	swapf	3,w
  3681  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3682  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3683  0008  00B8               	movwf	??_ints_isr+4
  3684  0009  0804               	movf	4,w
  3685  000A  00B9               	movwf	??_ints_isr+5
  3686  000B  080A               	movf	10,w
  3687  000C  00BA               	movwf	??_ints_isr+6
  3688  000D  087F               	movf	btemp+1,w
  3689  000E  00BB               	movwf	??_ints_isr+7
  3690  000F  120A  118A  2829   	ljmp	_ints_isr
  3691                           
  3692                           	psect	text13
  3693  0CD9                     __ptext13:	
  3694 ;; *************** function i1_mem_init *****************
  3695 ;; Defined at:
  3696 ;;		line 42 in file "panda17.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;		None
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  mem_init        1    4[BANK0 ] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  1    wreg      void 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0, pclath, cstack
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3710 ;;      Params:         0       0       0       0       0
  3711 ;;      Locals:         0       1       0       0       0
  3712 ;;      Temps:          0       1       0       0       0
  3713 ;;      Totals:         0       2       0       0       0
  3714 ;;Total ram usage:        2 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    2
  3717 ;; This function calls:
  3718 ;;		i1_mem_read
  3719 ;;		i1_mem_write
  3720 ;; This function is called by:
  3721 ;;		_ints_isr
  3722 ;; This function uses a non-reentrant model
  3723 ;;
  3724                           
  3725                           
  3726                           ;psect for function i1_mem_init
  3727  0CD9                     i1_mem_init:	
  3728                           
  3729                           ;panda17.c: 43: unsigned char aux;
  3730                           ;panda17.c: 44: aux = mem_read(0x0002);
  3731                           
  3732                           ;incstack = 0
  3733                           ; Regs used in i1_mem_init: [wreg+status,2+status,0+pclath+cstack]
  3734  0CD9  3002               	movlw	2
  3735  0CDA  00FA               	movwf	i1mem_read@add
  3736  0CDB  3000               	movlw	0
  3737  0CDC  00FB               	movwf	i1mem_read@add+1
  3738  0CDD  120A  158A  2365  120A  158A  	fcall	i1_mem_read
  3739  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0CE3  1303               	bcf	3,6	;RP1=0, select bank0
  3741  0CE4  00A3               	movwf	??i1_mem_init
  3742  0CE5  0823               	movf	??i1_mem_init,w
  3743  0CE6  00A4               	movwf	i1mem_init@aux
  3744                           
  3745                           ;panda17.c: 45: if (aux != 0xAA){
  3746  0CE7  30AA               	movlw	170
  3747  0CE8  0624               	xorwf	i1mem_init@aux,w
  3748  0CE9  1903               	btfsc	3,2
  3749  0CEA  0008               	return
  3750                           
  3751                           ;panda17.c: 46: mem_write(0x0002,0xAA);
  3752  0CEB  3002               	movlw	2
  3753  0CEC  00FA               	movwf	i1mem_write@add
  3754  0CED  3000               	movlw	0
  3755  0CEE  00FB               	movwf	i1mem_write@add+1
  3756  0CEF  30AA               	movlw	170
  3757  0CF0  00A3               	movwf	??i1_mem_init
  3758  0CF1  0823               	movf	??i1_mem_init,w
  3759  0CF2  00FC               	movwf	i1mem_write@data
  3760  0CF3  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  3761                           
  3762                           ;panda17.c: 47: mem_write(0x0003,0x00);
  3763  0CF8  3003               	movlw	3
  3764  0CF9  00FA               	movwf	i1mem_write@add
  3765  0CFA  3000               	movlw	0
  3766  0CFB  00FB               	movwf	i1mem_write@add+1
  3767  0CFC  01FC               	clrf	i1mem_write@data
  3768  0CFD  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  3769                           
  3770                           ;panda17.c: 48: mem_write(0x000A,0x00);
  3771  0D02  300A               	movlw	10
  3772  0D03  00FA               	movwf	i1mem_write@add
  3773  0D04  3000               	movlw	0
  3774  0D05  00FB               	movwf	i1mem_write@add+1
  3775  0D06  01FC               	clrf	i1mem_write@data
  3776  0D07  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  3777                           
  3778                           ;panda17.c: 49: mem_write(0x000B,0x00);
  3779  0D0C  300B               	movlw	11
  3780  0D0D  00FA               	movwf	i1mem_write@add
  3781  0D0E  3000               	movlw	0
  3782  0D0F  00FB               	movwf	i1mem_write@add+1
  3783  0D10  01FC               	clrf	i1mem_write@data
  3784  0D11  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  3785                           
  3786                           ;panda17.c: 50: mem_write(0x000C,0x00);
  3787  0D16  300C               	movlw	12
  3788  0D17  00FA               	movwf	i1mem_write@add
  3789  0D18  3000               	movlw	0
  3790  0D19  00FB               	movwf	i1mem_write@add+1
  3791  0D1A  01FC               	clrf	i1mem_write@data
  3792  0D1B  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  3793                           
  3794                           ;panda17.c: 51: mem_write(0x000D,0x00);
  3795  0D20  300D               	movlw	13
  3796  0D21  00FA               	movwf	i1mem_write@add
  3797  0D22  3000               	movlw	0
  3798  0D23  00FB               	movwf	i1mem_write@add+1
  3799  0D24  01FC               	clrf	i1mem_write@data
  3800  0D25  120A  158A  23AB   	fcall	i1_mem_write
  3801  0D28  0008               	return
  3802  0D29                     __end_ofi1_mem_init:	
  3803                           
  3804                           	psect	text14
  3805  0D29                     __ptext14:	
  3806 ;; *************** function _si_read_t *****************
  3807 ;; Defined at:
  3808 ;;		line 37 in file "si7021.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  rta             2    2[BANK0 ] unsigned int 
  3813 ;;  rta_l           1    1[BANK0 ] unsigned char 
  3814 ;;  rta_h           1    0[BANK0 ] unsigned char 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  2   10[COMMON] unsigned int 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0, pclath, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3824 ;;      Params:         2       0       0       0       0
  3825 ;;      Locals:         0       4       0       0       0
  3826 ;;      Temps:          2       0       0       0       0
  3827 ;;      Totals:         4       4       0       0       0
  3828 ;;Total ram usage:        8 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:    1
  3831 ;; This function calls:
  3832 ;;		_i2c_rstart
  3833 ;;		i1_i2c_read
  3834 ;;		i1_i2c_start
  3835 ;;		i1_i2c_stop
  3836 ;;		i1_i2c_write
  3837 ;; This function is called by:
  3838 ;;		_ints_isr
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           
  3843                           ;psect for function _si_read_t
  3844  0D29                     _si_read_t:	
  3845                           
  3846                           ;si7021.c: 38: unsigned int rta;
  3847                           ;si7021.c: 39: unsigned char rta_h,rta_l;
  3848                           ;si7021.c: 40: i2c_start();
  3849                           
  3850                           ;incstack = 0
  3851                           ; Regs used in _si_read_t: [wreg+status,2+status,0+pclath+cstack]
  3852  0D29  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  3853                           
  3854                           ;si7021.c: 41: i2c_write(0x80,1);
  3855  0D2E  01F0               	clrf	i1i2c_write@ack
  3856  0D2F  0AF0               	incf	i1i2c_write@ack,f
  3857  0D30  3080               	movlw	128
  3858  0D31  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  3859                           
  3860                           ;si7021.c: 42: i2c_write(0xE3,1);
  3861  0D36  01F0               	clrf	i1i2c_write@ack
  3862  0D37  0AF0               	incf	i1i2c_write@ack,f
  3863  0D38  30E3               	movlw	227
  3864  0D39  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  3865                           
  3866                           ;si7021.c: 43: i2c_rstart();
  3867  0D3E  120A  158A  219F  120A  158A  	fcall	_i2c_rstart
  3868                           
  3869                           ;si7021.c: 44: i2c_write(0x81,1);
  3870  0D43  01F0               	clrf	i1i2c_write@ack
  3871  0D44  0AF0               	incf	i1i2c_write@ack,f
  3872  0D45  3081               	movlw	129
  3873  0D46  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  3874                           
  3875                           ;si7021.c: 45: rta_h = i2c_read(1);
  3876  0D4B  3001               	movlw	1
  3877  0D4C  120A  158A  2582  120A  158A  	fcall	i1_i2c_read
  3878  0D51  00FC               	movwf	??_si_read_t
  3879  0D52  087C               	movf	??_si_read_t,w
  3880  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  3881  0D54  1303               	bcf	3,6	;RP1=0, select bank0
  3882  0D55  00A0               	movwf	si_read_t@rta_h
  3883                           
  3884                           ;si7021.c: 46: rta_l = i2c_read(3);
  3885  0D56  3003               	movlw	3
  3886  0D57  120A  158A  2582  120A  158A  	fcall	i1_i2c_read
  3887  0D5C  00FC               	movwf	??_si_read_t
  3888  0D5D  087C               	movf	??_si_read_t,w
  3889  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  3890  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  3891  0D60  00A1               	movwf	si_read_t@rta_l
  3892                           
  3893                           ;si7021.c: 47: i2c_stop();
  3894  0D61  120A  158A  217C   	fcall	i1_i2c_stop
  3895                           
  3896                           ;si7021.c: 48: rta = rta_h;
  3897  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  3898  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  3899  0D66  0820               	movf	si_read_t@rta_h,w
  3900  0D67  00FC               	movwf	??_si_read_t
  3901  0D68  01FD               	clrf	??_si_read_t+1
  3902  0D69  087C               	movf	??_si_read_t,w
  3903  0D6A  00A2               	movwf	si_read_t@rta
  3904  0D6B  087D               	movf	??_si_read_t+1,w
  3905  0D6C  00A3               	movwf	si_read_t@rta+1
  3906                           
  3907                           ;si7021.c: 49: rta = rta << 8;
  3908  0D6D  0822               	movf	si_read_t@rta,w
  3909  0D6E  00FD               	movwf	??_si_read_t+1
  3910  0D6F  01FC               	clrf	??_si_read_t
  3911  0D70  087C               	movf	??_si_read_t,w
  3912  0D71  00A2               	movwf	si_read_t@rta
  3913  0D72  087D               	movf	??_si_read_t+1,w
  3914  0D73  00A3               	movwf	si_read_t@rta+1
  3915                           
  3916                           ;si7021.c: 50: rta += rta_l;
  3917  0D74  0821               	movf	si_read_t@rta_l,w
  3918  0D75  00FC               	movwf	??_si_read_t
  3919  0D76  01FD               	clrf	??_si_read_t+1
  3920  0D77  087C               	movf	??_si_read_t,w
  3921  0D78  07A2               	addwf	si_read_t@rta,f
  3922  0D79  1803               	skipnc
  3923  0D7A  0AA3               	incf	si_read_t@rta+1,f
  3924  0D7B  087D               	movf	??_si_read_t+1,w
  3925  0D7C  07A3               	addwf	si_read_t@rta+1,f
  3926                           
  3927                           ;si7021.c: 51: return rta;
  3928  0D7D  0823               	movf	si_read_t@rta+1,w
  3929  0D7E  00FB               	movwf	?_si_read_t+1
  3930  0D7F  0822               	movf	si_read_t@rta,w
  3931  0D80  00FA               	movwf	?_si_read_t
  3932  0D81  0008               	return
  3933  0D82                     __end_of_si_read_t:	
  3934                           
  3935                           	psect	text15
  3936  0E38                     __ptext15:	
  3937 ;; *************** function _si_read_h *****************
  3938 ;; Defined at:
  3939 ;;		line 20 in file "si7021.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;		None
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  rta             2    2[BANK0 ] unsigned int 
  3944 ;;  rta_l           1    1[BANK0 ] unsigned char 
  3945 ;;  rta_h           1    0[BANK0 ] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  2   10[COMMON] unsigned int 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0, pclath, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3955 ;;      Params:         2       0       0       0       0
  3956 ;;      Locals:         0       4       0       0       0
  3957 ;;      Temps:          2       0       0       0       0
  3958 ;;      Totals:         4       4       0       0       0
  3959 ;;Total ram usage:        8 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    1
  3962 ;; This function calls:
  3963 ;;		_i2c_rstart
  3964 ;;		i1_i2c_read
  3965 ;;		i1_i2c_start
  3966 ;;		i1_i2c_stop
  3967 ;;		i1_i2c_write
  3968 ;; This function is called by:
  3969 ;;		_ints_isr
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           
  3974                           ;psect for function _si_read_h
  3975  0E38                     _si_read_h:	
  3976                           
  3977                           ;si7021.c: 21: unsigned int rta = 0;
  3978                           
  3979                           ;incstack = 0
  3980                           ; Regs used in _si_read_h: [wreg+status,2+status,0+pclath+cstack]
  3981  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  3982  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  3983  0E3A  01A2               	clrf	si_read_h@rta
  3984  0E3B  01A3               	clrf	si_read_h@rta+1
  3985                           
  3986                           ;si7021.c: 22: unsigned char rta_h,rta_l;
  3987                           ;si7021.c: 23: i2c_start();
  3988  0E3C  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  3989                           
  3990                           ;si7021.c: 24: i2c_write(0x80,1);
  3991  0E41  01F0               	clrf	i1i2c_write@ack
  3992  0E42  0AF0               	incf	i1i2c_write@ack,f
  3993  0E43  3080               	movlw	128
  3994  0E44  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  3995                           
  3996                           ;si7021.c: 25: i2c_write(0xE5,1);
  3997  0E49  01F0               	clrf	i1i2c_write@ack
  3998  0E4A  0AF0               	incf	i1i2c_write@ack,f
  3999  0E4B  30E5               	movlw	229
  4000  0E4C  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4001                           
  4002                           ;si7021.c: 26: i2c_rstart();
  4003  0E51  120A  158A  219F  120A  158A  	fcall	_i2c_rstart
  4004                           
  4005                           ;si7021.c: 27: i2c_write(0x81,1);
  4006  0E56  01F0               	clrf	i1i2c_write@ack
  4007  0E57  0AF0               	incf	i1i2c_write@ack,f
  4008  0E58  3081               	movlw	129
  4009  0E59  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4010                           
  4011                           ;si7021.c: 28: rta_h = i2c_read(1);
  4012  0E5E  3001               	movlw	1
  4013  0E5F  120A  158A  2582  120A  158A  	fcall	i1_i2c_read
  4014  0E64  00FC               	movwf	??_si_read_h
  4015  0E65  087C               	movf	??_si_read_h,w
  4016  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  4017  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  4018  0E68  00A0               	movwf	si_read_h@rta_h
  4019                           
  4020                           ;si7021.c: 29: rta_l = i2c_read(3);
  4021  0E69  3003               	movlw	3
  4022  0E6A  120A  158A  2582  120A  158A  	fcall	i1_i2c_read
  4023  0E6F  00FC               	movwf	??_si_read_h
  4024  0E70  087C               	movf	??_si_read_h,w
  4025  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  4026  0E72  1303               	bcf	3,6	;RP1=0, select bank0
  4027  0E73  00A1               	movwf	si_read_h@rta_l
  4028                           
  4029                           ;si7021.c: 30: i2c_stop();
  4030  0E74  120A  158A  217C   	fcall	i1_i2c_stop
  4031                           
  4032                           ;si7021.c: 31: rta = rta_h;
  4033  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4034  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4035  0E79  0820               	movf	si_read_h@rta_h,w
  4036  0E7A  00FC               	movwf	??_si_read_h
  4037  0E7B  01FD               	clrf	??_si_read_h+1
  4038  0E7C  087C               	movf	??_si_read_h,w
  4039  0E7D  00A2               	movwf	si_read_h@rta
  4040  0E7E  087D               	movf	??_si_read_h+1,w
  4041  0E7F  00A3               	movwf	si_read_h@rta+1
  4042                           
  4043                           ;si7021.c: 32: rta = rta << 8;
  4044  0E80  0822               	movf	si_read_h@rta,w
  4045  0E81  00FD               	movwf	??_si_read_h+1
  4046  0E82  01FC               	clrf	??_si_read_h
  4047  0E83  087C               	movf	??_si_read_h,w
  4048  0E84  00A2               	movwf	si_read_h@rta
  4049  0E85  087D               	movf	??_si_read_h+1,w
  4050  0E86  00A3               	movwf	si_read_h@rta+1
  4051                           
  4052                           ;si7021.c: 33: rta += rta_l;
  4053  0E87  0821               	movf	si_read_h@rta_l,w
  4054  0E88  00FC               	movwf	??_si_read_h
  4055  0E89  01FD               	clrf	??_si_read_h+1
  4056  0E8A  087C               	movf	??_si_read_h,w
  4057  0E8B  07A2               	addwf	si_read_h@rta,f
  4058  0E8C  1803               	skipnc
  4059  0E8D  0AA3               	incf	si_read_h@rta+1,f
  4060  0E8E  087D               	movf	??_si_read_h+1,w
  4061  0E8F  07A3               	addwf	si_read_h@rta+1,f
  4062                           
  4063                           ;si7021.c: 34: return rta;
  4064  0E90  0823               	movf	si_read_h@rta+1,w
  4065  0E91  00FB               	movwf	?_si_read_h+1
  4066  0E92  0822               	movf	si_read_h@rta,w
  4067  0E93  00FA               	movwf	?_si_read_h
  4068  0E94  0008               	return
  4069  0E95                     __end_of_si_read_h:	
  4070                           
  4071                           	psect	text16
  4072  0E95                     __ptext16:	
  4073 ;; *************** function _save_event *****************
  4074 ;; Defined at:
  4075 ;;		line 55 in file "panda17.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  ax              1    7[BANK0 ] unsigned char 
  4080 ;;  o               1    6[BANK0 ] unsigned char 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, status,2, status,0, pclath, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4090 ;;      Params:         0       0       0       0       0
  4091 ;;      Locals:         0       2       0       0       0
  4092 ;;      Temps:          0       3       0       0       0
  4093 ;;      Totals:         0       5       0       0       0
  4094 ;;Total ram usage:        5 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:    2
  4097 ;; This function calls:
  4098 ;;		___wmul
  4099 ;;		_ds_get
  4100 ;;		i1_mem_read
  4101 ;;		i1_mem_write
  4102 ;; This function is called by:
  4103 ;;		_ints_isr
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           
  4108                           ;psect for function _save_event
  4109  0E95                     _save_event:	
  4110                           
  4111                           ;panda17.c: 56: unsigned char o,ax;
  4112                           ;panda17.c: 57: fyh = 0;
  4113                           
  4114                           ;incstack = 0
  4115                           ; Regs used in _save_event: [wreg+status,2+status,0+pclath+cstack]
  4116  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  4117  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  4118  0E97  125F               	bcf	_fyh/(0+8),_fyh& (0+7)
  4119                           
  4120                           ;panda17.c: 58: o = mem_read(0x0003);
  4121  0E98  3003               	movlw	3
  4122  0E99  00FA               	movwf	i1mem_read@add
  4123  0E9A  3000               	movlw	0
  4124  0E9B  00FB               	movwf	i1mem_read@add+1
  4125  0E9C  120A  158A  2365  120A  158A  	fcall	i1_mem_read
  4126  0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  4127  0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  4128  0EA3  00A3               	movwf	??_save_event
  4129  0EA4  0823               	movf	??_save_event,w
  4130  0EA5  00A6               	movwf	save_event@o
  4131                           
  4132                           ;panda17.c: 59: ax = ds_get(0x01);
  4133  0EA6  3001               	movlw	1
  4134  0EA7  120A  158A  222D  120A  158A  	fcall	_ds_get
  4135  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  4136  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  4137  0EAE  00A3               	movwf	??_save_event
  4138  0EAF  0823               	movf	??_save_event,w
  4139  0EB0  00A7               	movwf	save_event@ax
  4140                           
  4141                           ;panda17.c: 60: mem_write(0xFF75 + 7*o,ax);
  4142  0EB1  0826               	movf	save_event@o,w
  4143  0EB2  00A3               	movwf	??_save_event
  4144  0EB3  01A4               	clrf	??_save_event+1
  4145  0EB4  0823               	movf	??_save_event,w
  4146  0EB5  00F0               	movwf	___wmul@multiplier
  4147  0EB6  0824               	movf	??_save_event+1,w
  4148  0EB7  00F1               	movwf	___wmul@multiplier+1
  4149  0EB8  3007               	movlw	7
  4150  0EB9  00F2               	movwf	___wmul@multiplicand
  4151  0EBA  3000               	movlw	0
  4152  0EBB  00F3               	movwf	___wmul@multiplicand+1
  4153  0EBC  120A  158A  2138  120A  158A  	fcall	___wmul
  4154  0EC1  0870               	movf	?___wmul,w
  4155  0EC2  3E75               	addlw	117
  4156  0EC3  00FA               	movwf	i1mem_write@add
  4157  0EC4  0871               	movf	?___wmul+1,w
  4158  0EC5  1803               	skipnc
  4159  0EC6  3E01               	addlw	1
  4160  0EC7  3EFF               	addlw	255
  4161  0EC8  00FB               	movwf	i1mem_write@add+1
  4162  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  4163  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  4164  0ECB  0827               	movf	save_event@ax,w
  4165  0ECC  00A5               	movwf	??_save_event+2
  4166  0ECD  0825               	movf	??_save_event+2,w
  4167  0ECE  00FC               	movwf	i1mem_write@data
  4168  0ECF  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4169                           
  4170                           ;panda17.c: 61: ax = ds_get(0x02);
  4171  0ED4  3002               	movlw	2
  4172  0ED5  120A  158A  222D  120A  158A  	fcall	_ds_get
  4173  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  4174  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  4175  0EDC  00A3               	movwf	??_save_event
  4176  0EDD  0823               	movf	??_save_event,w
  4177  0EDE  00A7               	movwf	save_event@ax
  4178                           
  4179                           ;panda17.c: 62: mem_write(0xFF74 + 7*o,ax);
  4180  0EDF  0826               	movf	save_event@o,w
  4181  0EE0  00A3               	movwf	??_save_event
  4182  0EE1  01A4               	clrf	??_save_event+1
  4183  0EE2  0823               	movf	??_save_event,w
  4184  0EE3  00F0               	movwf	___wmul@multiplier
  4185  0EE4  0824               	movf	??_save_event+1,w
  4186  0EE5  00F1               	movwf	___wmul@multiplier+1
  4187  0EE6  3007               	movlw	7
  4188  0EE7  00F2               	movwf	___wmul@multiplicand
  4189  0EE8  3000               	movlw	0
  4190  0EE9  00F3               	movwf	___wmul@multiplicand+1
  4191  0EEA  120A  158A  2138  120A  158A  	fcall	___wmul
  4192  0EEF  0870               	movf	?___wmul,w
  4193  0EF0  3E74               	addlw	116
  4194  0EF1  00FA               	movwf	i1mem_write@add
  4195  0EF2  0871               	movf	?___wmul+1,w
  4196  0EF3  1803               	skipnc
  4197  0EF4  3E01               	addlw	1
  4198  0EF5  3EFF               	addlw	255
  4199  0EF6  00FB               	movwf	i1mem_write@add+1
  4200  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  4202  0EF9  0827               	movf	save_event@ax,w
  4203  0EFA  00A5               	movwf	??_save_event+2
  4204  0EFB  0825               	movf	??_save_event+2,w
  4205  0EFC  00FC               	movwf	i1mem_write@data
  4206  0EFD  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4207                           
  4208                           ;panda17.c: 63: ax = ds_get(0x04);
  4209  0F02  3004               	movlw	4
  4210  0F03  120A  158A  222D  120A  158A  	fcall	_ds_get
  4211  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  4212  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  4213  0F0A  00A3               	movwf	??_save_event
  4214  0F0B  0823               	movf	??_save_event,w
  4215  0F0C  00A7               	movwf	save_event@ax
  4216                           
  4217                           ;panda17.c: 64: mem_write(0xFF76 + 7*o,ax);
  4218  0F0D  0826               	movf	save_event@o,w
  4219  0F0E  00A3               	movwf	??_save_event
  4220  0F0F  01A4               	clrf	??_save_event+1
  4221  0F10  0823               	movf	??_save_event,w
  4222  0F11  00F0               	movwf	___wmul@multiplier
  4223  0F12  0824               	movf	??_save_event+1,w
  4224  0F13  00F1               	movwf	___wmul@multiplier+1
  4225  0F14  3007               	movlw	7
  4226  0F15  00F2               	movwf	___wmul@multiplicand
  4227  0F16  3000               	movlw	0
  4228  0F17  00F3               	movwf	___wmul@multiplicand+1
  4229  0F18  120A  158A  2138  120A  158A  	fcall	___wmul
  4230  0F1D  0870               	movf	?___wmul,w
  4231  0F1E  3E76               	addlw	118
  4232  0F1F  00FA               	movwf	i1mem_write@add
  4233  0F20  0871               	movf	?___wmul+1,w
  4234  0F21  1803               	skipnc
  4235  0F22  3E01               	addlw	1
  4236  0F23  3EFF               	addlw	255
  4237  0F24  00FB               	movwf	i1mem_write@add+1
  4238  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  4239  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  4240  0F27  0827               	movf	save_event@ax,w
  4241  0F28  00A5               	movwf	??_save_event+2
  4242  0F29  0825               	movf	??_save_event+2,w
  4243  0F2A  00FC               	movwf	i1mem_write@data
  4244  0F2B  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4245                           
  4246                           ;panda17.c: 65: ax = ds_get(0x05);
  4247  0F30  3005               	movlw	5
  4248  0F31  120A  158A  222D  120A  158A  	fcall	_ds_get
  4249  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  4250  0F37  1303               	bcf	3,6	;RP1=0, select bank0
  4251  0F38  00A3               	movwf	??_save_event
  4252  0F39  0823               	movf	??_save_event,w
  4253  0F3A  00A7               	movwf	save_event@ax
  4254                           
  4255                           ;panda17.c: 66: mem_write(0xFF77 + 7*o,ax);
  4256  0F3B  0826               	movf	save_event@o,w
  4257  0F3C  00A3               	movwf	??_save_event
  4258  0F3D  01A4               	clrf	??_save_event+1
  4259  0F3E  0823               	movf	??_save_event,w
  4260  0F3F  00F0               	movwf	___wmul@multiplier
  4261  0F40  0824               	movf	??_save_event+1,w
  4262  0F41  00F1               	movwf	___wmul@multiplier+1
  4263  0F42  3007               	movlw	7
  4264  0F43  00F2               	movwf	___wmul@multiplicand
  4265  0F44  3000               	movlw	0
  4266  0F45  00F3               	movwf	___wmul@multiplicand+1
  4267  0F46  120A  158A  2138  120A  158A  	fcall	___wmul
  4268  0F4B  0870               	movf	?___wmul,w
  4269  0F4C  3E77               	addlw	119
  4270  0F4D  00FA               	movwf	i1mem_write@add
  4271  0F4E  0871               	movf	?___wmul+1,w
  4272  0F4F  1803               	skipnc
  4273  0F50  3E01               	addlw	1
  4274  0F51  3EFF               	addlw	255
  4275  0F52  00FB               	movwf	i1mem_write@add+1
  4276  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  4277  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  4278  0F55  0827               	movf	save_event@ax,w
  4279  0F56  00A5               	movwf	??_save_event+2
  4280  0F57  0825               	movf	??_save_event+2,w
  4281  0F58  00FC               	movwf	i1mem_write@data
  4282  0F59  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4283                           
  4284                           ;panda17.c: 67: ax = ds_get(0x06);
  4285  0F5E  3006               	movlw	6
  4286  0F5F  120A  158A  222D  120A  158A  	fcall	_ds_get
  4287  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  4289  0F66  00A3               	movwf	??_save_event
  4290  0F67  0823               	movf	??_save_event,w
  4291  0F68  00A7               	movwf	save_event@ax
  4292                           
  4293                           ;panda17.c: 68: mem_write(0xFF78 + 7*o,ax);
  4294  0F69  0826               	movf	save_event@o,w
  4295  0F6A  00A3               	movwf	??_save_event
  4296  0F6B  01A4               	clrf	??_save_event+1
  4297  0F6C  0823               	movf	??_save_event,w
  4298  0F6D  00F0               	movwf	___wmul@multiplier
  4299  0F6E  0824               	movf	??_save_event+1,w
  4300  0F6F  00F1               	movwf	___wmul@multiplier+1
  4301  0F70  3007               	movlw	7
  4302  0F71  00F2               	movwf	___wmul@multiplicand
  4303  0F72  3000               	movlw	0
  4304  0F73  00F3               	movwf	___wmul@multiplicand+1
  4305  0F74  120A  158A  2138  120A  158A  	fcall	___wmul
  4306  0F79  0870               	movf	?___wmul,w
  4307  0F7A  3E78               	addlw	120
  4308  0F7B  00FA               	movwf	i1mem_write@add
  4309  0F7C  0871               	movf	?___wmul+1,w
  4310  0F7D  1803               	skipnc
  4311  0F7E  3E01               	addlw	1
  4312  0F7F  3EFF               	addlw	255
  4313  0F80  00FB               	movwf	i1mem_write@add+1
  4314  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  4315  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  4316  0F83  0827               	movf	save_event@ax,w
  4317  0F84  00A5               	movwf	??_save_event+2
  4318  0F85  0825               	movf	??_save_event+2,w
  4319  0F86  00FC               	movwf	i1mem_write@data
  4320  0F87  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4321                           
  4322                           ;panda17.c: 69: ax = mem_read(0x000A);
  4323  0F8C  300A               	movlw	10
  4324  0F8D  00FA               	movwf	i1mem_read@add
  4325  0F8E  3000               	movlw	0
  4326  0F8F  00FB               	movwf	i1mem_read@add+1
  4327  0F90  120A  158A  2365  120A  158A  	fcall	i1_mem_read
  4328  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4329  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4330  0F97  00A3               	movwf	??_save_event
  4331  0F98  0823               	movf	??_save_event,w
  4332  0F99  00A7               	movwf	save_event@ax
  4333                           
  4334                           ;panda17.c: 70: mem_write(0xFF79 + 7*o,ax);
  4335  0F9A  0826               	movf	save_event@o,w
  4336  0F9B  00A3               	movwf	??_save_event
  4337  0F9C  01A4               	clrf	??_save_event+1
  4338  0F9D  0823               	movf	??_save_event,w
  4339  0F9E  00F0               	movwf	___wmul@multiplier
  4340  0F9F  0824               	movf	??_save_event+1,w
  4341  0FA0  00F1               	movwf	___wmul@multiplier+1
  4342  0FA1  3007               	movlw	7
  4343  0FA2  00F2               	movwf	___wmul@multiplicand
  4344  0FA3  3000               	movlw	0
  4345  0FA4  00F3               	movwf	___wmul@multiplicand+1
  4346  0FA5  120A  158A  2138  120A  158A  	fcall	___wmul
  4347  0FAA  0870               	movf	?___wmul,w
  4348  0FAB  3E79               	addlw	121
  4349  0FAC  00FA               	movwf	i1mem_write@add
  4350  0FAD  0871               	movf	?___wmul+1,w
  4351  0FAE  1803               	skipnc
  4352  0FAF  3E01               	addlw	1
  4353  0FB0  3EFF               	addlw	255
  4354  0FB1  00FB               	movwf	i1mem_write@add+1
  4355  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  4356  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  4357  0FB4  0827               	movf	save_event@ax,w
  4358  0FB5  00A5               	movwf	??_save_event+2
  4359  0FB6  0825               	movf	??_save_event+2,w
  4360  0FB7  00FC               	movwf	i1mem_write@data
  4361  0FB8  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4362                           
  4363                           ;panda17.c: 71: ax = mem_read(0x000B);
  4364  0FBD  300B               	movlw	11
  4365  0FBE  00FA               	movwf	i1mem_read@add
  4366  0FBF  3000               	movlw	0
  4367  0FC0  00FB               	movwf	i1mem_read@add+1
  4368  0FC1  120A  158A  2365  120A  158A  	fcall	i1_mem_read
  4369  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  4370  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  4371  0FC8  00A3               	movwf	??_save_event
  4372  0FC9  0823               	movf	??_save_event,w
  4373  0FCA  00A7               	movwf	save_event@ax
  4374                           
  4375                           ;panda17.c: 72: mem_write(0xFF7A + 7*o,ax);
  4376  0FCB  0826               	movf	save_event@o,w
  4377  0FCC  00A3               	movwf	??_save_event
  4378  0FCD  01A4               	clrf	??_save_event+1
  4379  0FCE  0823               	movf	??_save_event,w
  4380  0FCF  00F0               	movwf	___wmul@multiplier
  4381  0FD0  0824               	movf	??_save_event+1,w
  4382  0FD1  00F1               	movwf	___wmul@multiplier+1
  4383  0FD2  3007               	movlw	7
  4384  0FD3  00F2               	movwf	___wmul@multiplicand
  4385  0FD4  3000               	movlw	0
  4386  0FD5  00F3               	movwf	___wmul@multiplicand+1
  4387  0FD6  120A  158A  2138  120A  158A  	fcall	___wmul
  4388  0FDB  0870               	movf	?___wmul,w
  4389  0FDC  3E7A               	addlw	122
  4390  0FDD  00FA               	movwf	i1mem_write@add
  4391  0FDE  0871               	movf	?___wmul+1,w
  4392  0FDF  1803               	skipnc
  4393  0FE0  3E01               	addlw	1
  4394  0FE1  3EFF               	addlw	255
  4395  0FE2  00FB               	movwf	i1mem_write@add+1
  4396  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  4397  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  4398  0FE5  0827               	movf	save_event@ax,w
  4399  0FE6  00A5               	movwf	??_save_event+2
  4400  0FE7  0825               	movf	??_save_event+2,w
  4401  0FE8  00FC               	movwf	i1mem_write@data
  4402  0FE9  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4403                           
  4404                           ;panda17.c: 73: o++;
  4405  0FEE  3001               	movlw	1
  4406  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  4407  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  4408  0FF1  00A3               	movwf	??_save_event
  4409  0FF2  0823               	movf	??_save_event,w
  4410  0FF3  07A6               	addwf	save_event@o,f
  4411                           
  4412                           ;panda17.c: 74: mem_write(0x0003,o);
  4413  0FF4  3003               	movlw	3
  4414  0FF5  00FA               	movwf	i1mem_write@add
  4415  0FF6  3000               	movlw	0
  4416  0FF7  00FB               	movwf	i1mem_write@add+1
  4417  0FF8  0826               	movf	save_event@o,w
  4418  0FF9  00A3               	movwf	??_save_event
  4419  0FFA  0823               	movf	??_save_event,w
  4420  0FFB  00FC               	movwf	i1mem_write@data
  4421  0FFC  120A  158A  23AB   	fcall	i1_mem_write
  4422  0FFF  0008               	return
  4423  1000                     __end_of_save_event:	
  4424                           
  4425                           	psect	text17
  4426  0BAB                     __ptext17:	
  4427 ;; *************** function i1_mem_write *****************
  4428 ;; Defined at:
  4429 ;;		line 13 in file "24lc512.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  add             2   10[COMMON] unsigned int 
  4432 ;;  data            1   12[COMMON] unsigned char 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  mem_write       1    1[BANK0 ] unsigned char 
  4435 ;;  mem_write       1    0[BANK0 ] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0, pclath, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4445 ;;      Params:         3       0       0       0       0
  4446 ;;      Locals:         0       2       0       0       0
  4447 ;;      Temps:          1       0       0       0       0
  4448 ;;      Totals:         4       2       0       0       0
  4449 ;;Total ram usage:        6 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    1
  4452 ;; This function calls:
  4453 ;;		i1_i2c_start
  4454 ;;		i1_i2c_stop
  4455 ;;		i1_i2c_write
  4456 ;; This function is called by:
  4457 ;;		_save_event
  4458 ;;		_ints_isr
  4459 ;;		i1_mem_init
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           
  4464                           ;psect for function i1_mem_write
  4465  0BAB                     i1_mem_write:	
  4466                           
  4467                           ;24lc512.c: 14: unsigned char add_h,add_l;
  4468                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  4469                           
  4470                           ;incstack = 0
  4471                           ; Regs used in i1_mem_write: [wreg+status,2+status,0+pclath+cstack]
  4472  0BAB  087B               	movf	i1mem_write@add+1,w
  4473  0BAC  00FD               	movwf	??i1_mem_write
  4474  0BAD  087D               	movf	??i1_mem_write,w
  4475  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  4476  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  4477  0BB0  00A0               	movwf	i1mem_write@add_h
  4478                           
  4479                           ;24lc512.c: 16: add_l = add & 0x00FF;
  4480  0BB1  087A               	movf	i1mem_write@add,w
  4481  0BB2  00FD               	movwf	??i1_mem_write
  4482  0BB3  087D               	movf	??i1_mem_write,w
  4483  0BB4  00A1               	movwf	i1mem_write@add_l
  4484                           
  4485                           ;24lc512.c: 17: i2c_start();
  4486  0BB5  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  4487                           
  4488                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  4489  0BBA  01F0               	clrf	i1i2c_write@ack
  4490  0BBB  30A0               	movlw	160
  4491  0BBC  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4492                           
  4493                           ;24lc512.c: 19: i2c_write(add_h,0);
  4494  0BC1  01F0               	clrf	i1i2c_write@ack
  4495  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  4497  0BC4  0820               	movf	i1mem_write@add_h,w
  4498  0BC5  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4499                           
  4500                           ;24lc512.c: 20: i2c_write(add_l,0);
  4501  0BCA  01F0               	clrf	i1i2c_write@ack
  4502  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  4503  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  4504  0BCD  0821               	movf	i1mem_write@add_l,w
  4505  0BCE  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4506                           
  4507                           ;24lc512.c: 21: i2c_write(data,0);
  4508  0BD3  01F0               	clrf	i1i2c_write@ack
  4509  0BD4  087C               	movf	i1mem_write@data,w
  4510  0BD5  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4511                           
  4512                           ;24lc512.c: 22: i2c_stop();
  4513  0BDA  120A  158A  217C  120A  158A  	fcall	i1_i2c_stop
  4514  0BDF                     L3:	
  4515                           
  4516                           ;24lc512.c: 24: i2c_start();
  4517  0BDF  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  4518                           
  4519                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  4520  0BE4  01F0               	clrf	i1i2c_write@ack
  4521  0BE5  30A0               	movlw	160
  4522  0BE6  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4523                           
  4524                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  4525  0BEB  1683               	bsf	3,5	;RP0=1, select bank1
  4526  0BEC  1303               	bcf	3,6	;RP1=0, select bank1
  4527  0BED  1B11               	btfsc	17,6	;volatile
  4528  0BEE  2BDF               	goto	L3
  4529                           
  4530                           ;24lc512.c: 30: }
  4531                           ;24lc512.c: 31: i2c_stop();
  4532                           
  4533                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  4534                           
  4535                           ;24lc512.c: 28: i2c_start();
  4536  0BEF  120A  158A  217C   	fcall	i1_i2c_stop
  4537  0BF2  0008               	return
  4538  0BF3                     __end_ofi1_mem_write:	
  4539                           
  4540                           	psect	text18
  4541  0B65                     __ptext18:	
  4542 ;; *************** function i1_mem_read *****************
  4543 ;; Defined at:
  4544 ;;		line 34 in file "24lc512.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  add             2   10[COMMON] unsigned int 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  mem_read        1    2[BANK0 ] unsigned char 
  4549 ;;  mem_read        1    1[BANK0 ] unsigned char 
  4550 ;;  mem_read        1    0[BANK0 ] unsigned char 
  4551 ;; Return value:  Size  Location     Type
  4552 ;;                  1    wreg      unsigned char 
  4553 ;; Registers used:
  4554 ;;		wreg, status,2, status,0, pclath, cstack
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: 0/0
  4559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4560 ;;      Params:         2       0       0       0       0
  4561 ;;      Locals:         0       3       0       0       0
  4562 ;;      Temps:          1       0       0       0       0
  4563 ;;      Totals:         3       3       0       0       0
  4564 ;;Total ram usage:        6 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; Hardware stack levels required when called:    1
  4567 ;; This function calls:
  4568 ;;		i1_i2c_read
  4569 ;;		i1_i2c_start
  4570 ;;		i1_i2c_stop
  4571 ;;		i1_i2c_write
  4572 ;; This function is called by:
  4573 ;;		_save_event
  4574 ;;		_ints_isr
  4575 ;;		i1_mem_init
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           
  4580                           ;psect for function i1_mem_read
  4581  0B65                     i1_mem_read:	
  4582                           
  4583                           ;24lc512.c: 35: unsigned char rta;
  4584                           ;24lc512.c: 36: unsigned char add_h,add_l;
  4585                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  4586                           
  4587                           ;incstack = 0
  4588                           ; Regs used in i1_mem_read: [wreg+status,2+status,0+pclath+cstack]
  4589  0B65  087B               	movf	i1mem_read@add+1,w
  4590  0B66  00FC               	movwf	??i1_mem_read
  4591  0B67  087C               	movf	??i1_mem_read,w
  4592  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  4593  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  4594  0B6A  00A1               	movwf	i1mem_read@add_h
  4595                           
  4596                           ;24lc512.c: 38: add_l = add & 0x00FF;
  4597  0B6B  087A               	movf	i1mem_read@add,w
  4598  0B6C  00FC               	movwf	??i1_mem_read
  4599  0B6D  087C               	movf	??i1_mem_read,w
  4600  0B6E  00A2               	movwf	i1mem_read@add_l
  4601                           
  4602                           ;24lc512.c: 39: i2c_start();
  4603  0B6F  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  4604                           
  4605                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  4606  0B74  01F0               	clrf	i1i2c_write@ack
  4607  0B75  30A0               	movlw	160
  4608  0B76  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4609                           
  4610                           ;24lc512.c: 41: i2c_write(add_h,0);
  4611  0B7B  01F0               	clrf	i1i2c_write@ack
  4612  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  4613  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  4614  0B7E  0821               	movf	i1mem_read@add_h,w
  4615  0B7F  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4616                           
  4617                           ;24lc512.c: 42: i2c_write(add_l,0);
  4618  0B84  01F0               	clrf	i1i2c_write@ack
  4619  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4620  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4621  0B87  0822               	movf	i1mem_read@add_l,w
  4622  0B88  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4623                           
  4624                           ;24lc512.c: 43: i2c_start();
  4625  0B8D  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  4626                           
  4627                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  4628  0B92  01F0               	clrf	i1i2c_write@ack
  4629  0B93  30A1               	movlw	161
  4630  0B94  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4631                           
  4632                           ;24lc512.c: 45: rta = i2c_read(0);
  4633  0B99  3000               	movlw	0
  4634  0B9A  120A  158A  2582  120A  158A  	fcall	i1_i2c_read
  4635  0B9F  00FC               	movwf	??i1_mem_read
  4636  0BA0  087C               	movf	??i1_mem_read,w
  4637  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  4638  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  4639  0BA3  00A0               	movwf	i1mem_read@rta
  4640                           
  4641                           ;24lc512.c: 46: i2c_stop();
  4642  0BA4  120A  158A  217C   	fcall	i1_i2c_stop
  4643                           
  4644                           ;24lc512.c: 47: return rta;
  4645  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  4646  0BA8  1303               	bcf	3,6	;RP1=0, select bank0
  4647  0BA9  0820               	movf	i1mem_read@rta,w
  4648  0BAA  0008               	return
  4649  0BAB                     __end_ofi1_mem_read:	
  4650                           
  4651                           	psect	text19
  4652  0A2D                     __ptext19:	
  4653 ;; *************** function _ds_get *****************
  4654 ;; Defined at:
  4655 ;;		line 25 in file "ds1307.c"
  4656 ;; Parameters:    Size  Location     Type
  4657 ;;  data            1    wreg     unsigned char 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  data            1   11[COMMON] unsigned char 
  4660 ;;  resp            1   12[COMMON] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      unsigned char 
  4663 ;; Registers used:
  4664 ;;		wreg, status,2, status,0, pclath, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4670 ;;      Params:         0       0       0       0       0
  4671 ;;      Locals:         2       0       0       0       0
  4672 ;;      Temps:          1       0       0       0       0
  4673 ;;      Totals:         3       0       0       0       0
  4674 ;;Total ram usage:        3 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    1
  4677 ;; This function calls:
  4678 ;;		_i2c_rstart
  4679 ;;		i1_i2c_read
  4680 ;;		i1_i2c_start
  4681 ;;		i1_i2c_stop
  4682 ;;		i1_i2c_write
  4683 ;; This function is called by:
  4684 ;;		_save_event
  4685 ;;		_ints_isr
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           
  4690                           ;psect for function _ds_get
  4691  0A2D                     _ds_get:	
  4692                           
  4693                           ;incstack = 0
  4694                           ; Regs used in _ds_get: [wreg+status,2+status,0+pclath+cstack]
  4695                           ;ds_get@data stored from wreg
  4696  0A2D  00FB               	movwf	ds_get@data
  4697                           
  4698                           ;ds1307.c: 26: unsigned char resp;
  4699                           ;ds1307.c: 27: i2c_start();
  4700  0A2E  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  4701                           
  4702                           ;ds1307.c: 28: i2c_write(0b11010000,1);
  4703  0A33  01F0               	clrf	i1i2c_write@ack
  4704  0A34  0AF0               	incf	i1i2c_write@ack,f
  4705  0A35  30D0               	movlw	208
  4706  0A36  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4707                           
  4708                           ;ds1307.c: 29: i2c_write(data,1);
  4709  0A3B  01F0               	clrf	i1i2c_write@ack
  4710  0A3C  0AF0               	incf	i1i2c_write@ack,f
  4711  0A3D  087B               	movf	ds_get@data,w
  4712  0A3E  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4713                           
  4714                           ;ds1307.c: 30: i2c_rstart();
  4715  0A43  120A  158A  219F  120A  158A  	fcall	_i2c_rstart
  4716                           
  4717                           ;ds1307.c: 31: i2c_write(0b11010001,1);
  4718  0A48  01F0               	clrf	i1i2c_write@ack
  4719  0A49  0AF0               	incf	i1i2c_write@ack,f
  4720  0A4A  30D1               	movlw	209
  4721  0A4B  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4722                           
  4723                           ;ds1307.c: 32: resp = i2c_read(0);
  4724  0A50  3000               	movlw	0
  4725  0A51  120A  158A  2582  120A  158A  	fcall	i1_i2c_read
  4726  0A56  00FA               	movwf	??_ds_get
  4727  0A57  087A               	movf	??_ds_get,w
  4728  0A58  00FC               	movwf	ds_get@resp
  4729                           
  4730                           ;ds1307.c: 33: i2c_stop();
  4731  0A59  120A  158A  217C   	fcall	i1_i2c_stop
  4732                           
  4733                           ;ds1307.c: 34: return resp;
  4734  0A5C  087C               	movf	ds_get@resp,w
  4735  0A5D  0008               	return
  4736  0A5E                     __end_of_ds_get:	
  4737                           
  4738                           	psect	text20
  4739  0D82                     __ptext20:	
  4740 ;; *************** function i1_i2c_read *****************
  4741 ;; Defined at:
  4742 ;;		line 51 in file "i2clib.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  ack             1    wreg     unsigned char 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  ack             1    9[COMMON] unsigned char 
  4747 ;;  i2c_read        1    8[COMMON] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      unsigned char 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4757 ;;      Params:         0       0       0       0       0
  4758 ;;      Locals:         2       0       0       0       0
  4759 ;;      Temps:          8       0       0       0       0
  4760 ;;      Totals:        10       0       0       0       0
  4761 ;;Total ram usage:       10 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_si_read_h
  4767 ;;		_si_read_t
  4768 ;;		_ds_get
  4769 ;;		i1_mem_read
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           
  4774                           ;psect for function i1_i2c_read
  4775  0D82                     i1_i2c_read:	
  4776                           
  4777                           ;incstack = 0
  4778                           ; Regs used in i1_i2c_read: [wreg+status,2+status,0]
  4779                           ;i1i2c_read@ack stored from wreg
  4780  0D82  00F9               	movwf	i1i2c_read@ack
  4781                           
  4782                           ;i2clib.c: 52: unsigned char resp;
  4783                           ;i2clib.c: 53: static bit flag, not_flag;
  4784                           ;i2clib.c: 54: flag = ack & 0x01;
  4785  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  4786  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  4787  0D85  10DF               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  4788  0D86  1879               	btfsc	i1i2c_read@ack,0
  4789  0D87  14DF               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  4790                           
  4791                           ;i2clib.c: 55: if (ack == 1){
  4792  0D88  0379               	decf	i1i2c_read@ack,w
  4793  0D89  1D03               	btfss	3,2
  4794  0D8A  2D8E               	goto	i1l1621
  4795                           
  4796                           ;i2clib.c: 56: not_flag = 0;
  4797  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  4798  0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  4799  0D8D  105F               	bcf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  4800  0D8E                     i1l1621:	
  4801                           
  4802                           ;i2clib.c: 57: }
  4803                           ;i2clib.c: 58: if (ack == 3){
  4804  0D8E  3003               	movlw	3
  4805  0D8F  0679               	xorwf	i1i2c_read@ack,w
  4806  0D90  1D03               	btfss	3,2
  4807  0D91  2D95               	goto	i1l1625
  4808                           
  4809                           ;i2clib.c: 59: not_flag = 1;
  4810  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  4811  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  4812  0D94  145F               	bsf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  4813  0D95                     i1l1625:	
  4814                           ;i2clib.c: 60: }
  4815                           ;i2clib.c: 61: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  4816                           
  4817  0D95  1683               	bsf	3,5	;RP0=1, select bank1
  4818  0D96  1303               	bcf	3,6	;RP1=0, select bank1
  4819  0D97  0811               	movf	17,w	;volatile
  4820  0D98  3901               	andlw	1
  4821  0D99  00F0               	movwf	??i1_i2c_read
  4822  0D9A  0C11               	rrf	17,w	;volatile
  4823  0D9B  3901               	andlw	1
  4824  0D9C  00F1               	movwf	??i1_i2c_read+1
  4825  0D9D  0C11               	rrf	17,w	;volatile
  4826  0D9E  00F2               	movwf	??i1_i2c_read+2
  4827  0D9F  0CF2               	rrf	??i1_i2c_read+2,f
  4828  0DA0  0C72               	rrf	??i1_i2c_read+2,w
  4829  0DA1  3901               	andlw	1
  4830  0DA2  00F3               	movwf	??i1_i2c_read+3
  4831  0DA3  0E11               	swapf	17,w	;volatile
  4832  0DA4  3901               	andlw	1
  4833  0DA5  00F4               	movwf	??i1_i2c_read+4
  4834  0DA6  0C11               	rrf	17,w	;volatile
  4835  0DA7  00F5               	movwf	??i1_i2c_read+5
  4836  0DA8  0C75               	rrf	??i1_i2c_read+5,w
  4837  0DA9  3901               	andlw	1
  4838  0DAA  00F6               	movwf	??i1_i2c_read+6
  4839  0DAB  0C14               	rrf	20,w	;volatile
  4840  0DAC  00F7               	movwf	??i1_i2c_read+7
  4841  0DAD  0C77               	rrf	??i1_i2c_read+7,w
  4842  0DAE  3901               	andlw	1
  4843  0DAF  0476               	iorwf	??i1_i2c_read+6,w
  4844  0DB0  0474               	iorwf	??i1_i2c_read+4,w
  4845  0DB1  0473               	iorwf	??i1_i2c_read+3,w
  4846  0DB2  0471               	iorwf	??i1_i2c_read+1,w
  4847  0DB3  0470               	iorwf	??i1_i2c_read,w
  4848  0DB4  1D03               	btfss	3,2
  4849  0DB5  2D95               	goto	i1l1625
  4850                           
  4851                           ;i2clib.c: 62: SSPCON2bits.RCEN = 1;
  4852  0DB6  1591               	bsf	17,3	;volatile
  4853  0DB7                     i1l203:	
  4854                           ;i2clib.c: 63: while(!SSPSTATbits.BF);
  4855                           
  4856  0DB7  1C14               	btfss	20,0	;volatile
  4857  0DB8  2DB7               	goto	i1l203
  4858  0DB9                     i1l206:	
  4859                           ;i2clib.c: 64: while(!PIR1bits.SSPIF);
  4860                           
  4861  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  4862  0DBA  1D8C               	btfss	12,3	;volatile
  4863  0DBB  2DB9               	goto	i1l206
  4864                           
  4865                           ;i2clib.c: 65: SSPCON2bits.ACKDT = not_flag;
  4866  0DBC  1C5F               	btfss	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  4867  0DBD  2DC2               	goto	u148_20
  4868  0DBE  1683               	bsf	3,5	;RP0=1, select bank1
  4869  0DBF  1303               	bcf	3,6	;RP1=0, select bank1
  4870  0DC0  1691               	bsf	17,5	;volatile
  4871  0DC1  2DC5               	goto	u149_24
  4872  0DC2                     u148_20:	
  4873  0DC2  1683               	bsf	3,5	;RP0=1, select bank1
  4874  0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  4875  0DC4  1291               	bcf	17,5	;volatile
  4876  0DC5                     u149_24:	
  4877                           
  4878                           ;i2clib.c: 66: SSPCON2bits.ACKEN = flag;
  4879  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  4880  0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  4881  0DC7  1CDF               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  4882  0DC8  2DCD               	goto	u150_20
  4883  0DC9  1683               	bsf	3,5	;RP0=1, select bank1
  4884  0DCA  1303               	bcf	3,6	;RP1=0, select bank1
  4885  0DCB  1611               	bsf	17,4	;volatile
  4886  0DCC  2DD0               	goto	i1l1627
  4887  0DCD                     u150_20:	
  4888  0DCD  1683               	bsf	3,5	;RP0=1, select bank1
  4889  0DCE  1303               	bcf	3,6	;RP1=0, select bank1
  4890  0DCF  1211               	bcf	17,4	;volatile
  4891  0DD0                     i1l1627:	
  4892                           
  4893                           ;i2clib.c: 67: resp = SSPBUF;
  4894  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  4895  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  4896  0DD2  0813               	movf	19,w	;volatile
  4897  0DD3  00F0               	movwf	??i1_i2c_read
  4898  0DD4  0870               	movf	??i1_i2c_read,w
  4899  0DD5  00F8               	movwf	i1i2c_read@resp
  4900  0DD6                     i1l209:	
  4901                           ;i2clib.c: 68: while(SSPSTATbits.BF);
  4902                           
  4903  0DD6  1683               	bsf	3,5	;RP0=1, select bank1
  4904  0DD7  1303               	bcf	3,6	;RP1=0, select bank1
  4905  0DD8  1814               	btfsc	20,0	;volatile
  4906  0DD9  2DD6               	goto	i1l209
  4907                           
  4908                           ;i2clib.c: 69: return resp;
  4909  0DDA  0878               	movf	i1i2c_read@resp,w
  4910  0DDB  0008               	return
  4911  0DDC                     __end_ofi1_i2c_read:	
  4912                           
  4913                           	psect	text21
  4914  099F                     __ptext21:	
  4915 ;; *************** function _i2c_rstart *****************
  4916 ;; Defined at:
  4917 ;;		line 29 in file "i2clib.c"
  4918 ;; Parameters:    Size  Location     Type
  4919 ;;		None
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  1    wreg      void 
  4924 ;; Registers used:
  4925 ;;		wreg, status,2, status,0
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4931 ;;      Params:         0       0       0       0       0
  4932 ;;      Locals:         0       0       0       0       0
  4933 ;;      Temps:          8       0       0       0       0
  4934 ;;      Totals:         8       0       0       0       0
  4935 ;;Total ram usage:        8 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; This function calls:
  4938 ;;		Nothing
  4939 ;; This function is called by:
  4940 ;;		_si_read_h
  4941 ;;		_si_read_t
  4942 ;;		_ds_get
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           
  4947                           ;psect for function _i2c_rstart
  4948  099F                     _i2c_rstart:	
  4949  099F                     i1l1563:	
  4950                           ;i2clib.c: 30: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  4951                           
  4952                           ;incstack = 0
  4953                           ; Regs used in _i2c_rstart: [wreg+status,2+status,0]
  4954                           
  4955  099F  1683               	bsf	3,5	;RP0=1, select bank1
  4956  09A0  1303               	bcf	3,6	;RP1=0, select bank1
  4957  09A1  0811               	movf	17,w	;volatile
  4958  09A2  3901               	andlw	1
  4959  09A3  00F0               	movwf	??_i2c_rstart
  4960  09A4  0C11               	rrf	17,w	;volatile
  4961  09A5  3901               	andlw	1
  4962  09A6  00F1               	movwf	??_i2c_rstart+1
  4963  09A7  0C11               	rrf	17,w	;volatile
  4964  09A8  00F2               	movwf	??_i2c_rstart+2
  4965  09A9  0CF2               	rrf	??_i2c_rstart+2,f
  4966  09AA  0C72               	rrf	??_i2c_rstart+2,w
  4967  09AB  3901               	andlw	1
  4968  09AC  00F3               	movwf	??_i2c_rstart+3
  4969  09AD  0E11               	swapf	17,w	;volatile
  4970  09AE  3901               	andlw	1
  4971  09AF  00F4               	movwf	??_i2c_rstart+4
  4972  09B0  0C11               	rrf	17,w	;volatile
  4973  09B1  00F5               	movwf	??_i2c_rstart+5
  4974  09B2  0C75               	rrf	??_i2c_rstart+5,w
  4975  09B3  3901               	andlw	1
  4976  09B4  00F6               	movwf	??_i2c_rstart+6
  4977  09B5  0C14               	rrf	20,w	;volatile
  4978  09B6  00F7               	movwf	??_i2c_rstart+7
  4979  09B7  0C77               	rrf	??_i2c_rstart+7,w
  4980  09B8  3901               	andlw	1
  4981  09B9  0476               	iorwf	??_i2c_rstart+6,w
  4982  09BA  0474               	iorwf	??_i2c_rstart+4,w
  4983  09BB  0473               	iorwf	??_i2c_rstart+3,w
  4984  09BC  0471               	iorwf	??_i2c_rstart+1,w
  4985  09BD  0470               	iorwf	??_i2c_rstart,w
  4986  09BE  1D03               	btfss	3,2
  4987  09BF  299F               	goto	i1l1563
  4988                           
  4989                           ;i2clib.c: 31: SSPCON2bits.RSEN = 1;
  4990  09C0  1491               	bsf	17,1	;volatile
  4991  09C1  0008               	return
  4992  09C2                     __end_of_i2c_rstart:	
  4993                           
  4994                           	psect	text22
  4995  04F1                     __ptext22:	
  4996 ;; *************** function _printf *****************
  4997 ;; Defined at:
  4998 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  f               1    wreg     PTR const unsigned char 
  5001 ;;		 -> STR_18(2), STR_17(5), STR_16(7), STR_15(4), 
  5002 ;;		 -> STR_14(3), STR_13(2), STR_12(3), STR_11(5), 
  5003 ;;		 -> STR_10(5), STR_9(6), STR_8(6), STR_7(6), 
  5004 ;;		 -> STR_6(6), STR_5(6), STR_4(8), STR_3(7), 
  5005 ;;		 -> STR_2(6), STR_1(8), 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  f               1   18[BANK0 ] PTR const unsigned char 
  5008 ;;		 -> STR_18(2), STR_17(5), STR_16(7), STR_15(4), 
  5009 ;;		 -> STR_14(3), STR_13(2), STR_12(3), STR_11(5), 
  5010 ;;		 -> STR_10(5), STR_9(6), STR_8(6), STR_7(6), 
  5011 ;;		 -> STR_6(6), STR_5(6), STR_4(8), STR_3(7), 
  5012 ;;		 -> STR_2(6), STR_1(8), 
  5013 ;;  idx             1    9[BANK0 ] unsigned char 
  5014 ;;  tmpval          4    0        struct .
  5015 ;;  width           2   15[BANK0 ] int 
  5016 ;;  val             2   13[BANK0 ] unsigned int 
  5017 ;;  cp              2    0        PTR const unsigned char 
  5018 ;;  len             2    0        unsigned int 
  5019 ;;  c               1   19[BANK0 ] char 
  5020 ;;  flag            1   17[BANK0 ] unsigned char 
  5021 ;;  prec            1   12[BANK0 ] char 
  5022 ;;  ap              1   11[BANK0 ] PTR void [1]
  5023 ;;		 -> ?_printf(2), 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  2    4[BANK0 ] int 
  5026 ;; Registers used:
  5027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5033 ;;      Params:         0       2       0       0       0
  5034 ;;      Locals:         0      11       0       0       0
  5035 ;;      Temps:          0       3       0       0       0
  5036 ;;      Totals:         0      16       0       0       0
  5037 ;;Total ram usage:       16 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; Hardware stack levels required when called:    1
  5040 ;; This function calls:
  5041 ;;		___lwdiv
  5042 ;;		___lwmod
  5043 ;;		___wmul
  5044 ;;		_isdigit
  5045 ;;		_putch
  5046 ;; This function is called by:
  5047 ;;		_ints_isr
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           
  5052                           ;psect for function _printf
  5053  04F1                     _printf:	
  5054                           
  5055                           ;incstack = 0
  5056                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5057                           ;printf@f stored from wreg
  5058  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  5059  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  5060  04F3  00B2               	movwf	printf@f
  5061                           
  5062                           ;doprnt.c: 466: va_list ap;
  5063                           ;doprnt.c: 499: signed char c;
  5064                           ;doprnt.c: 501: int width;
  5065                           ;doprnt.c: 506: signed char prec;
  5066                           ;doprnt.c: 508: unsigned char flag;
  5067                           ;doprnt.c: 523: union {
  5068                           ;doprnt.c: 524: unsigned long vd;
  5069                           ;doprnt.c: 525: double integ;
  5070                           ;doprnt.c: 526: } tmpval;
  5071                           ;doprnt.c: 528: unsigned int val;
  5072                           ;doprnt.c: 529: unsigned len;
  5073                           ;doprnt.c: 530: const char * cp;
  5074                           ;doprnt.c: 533: *ap = __va_start();
  5075  04F4  3024               	movlw	(low (?_printf| 0))& (0+255)
  5076  04F5  00A6               	movwf	??_printf
  5077  04F6  0826               	movf	??_printf,w
  5078  04F7  00AB               	movwf	printf@ap
  5079  04F8                     i1l1967:	
  5080                           ;doprnt.c: 536: while(c = *f++) {
  5081                           
  5082  04F8  3001               	movlw	1
  5083  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  5084  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  5085  04FB  07B2               	addwf	printf@f,f
  5086  04FC  30FF               	movlw	-1
  5087  04FD  0732               	addwf	printf@f,w
  5088  04FE  0084               	movwf	4
  5089  04FF  120A  118A  2707  120A  118A  	fcall	stringdir
  5090  0504  00A6               	movwf	??_printf
  5091  0505  0826               	movf	??_printf,w
  5092  0506  00B3               	movwf	printf@c
  5093  0507  0833               	movf	printf@c,w
  5094  0508  1903               	btfsc	3,2
  5095  0509  0008               	return
  5096                           
  5097                           ;doprnt.c: 538: if(c != '%')
  5098  050A  3025               	movlw	37
  5099  050B  0633               	xorwf	printf@c,w
  5100  050C  1903               	btfsc	3,2
  5101  050D  2D15               	goto	i1l1851
  5102                           
  5103                           ;doprnt.c: 540: {
  5104                           ;doprnt.c: 541: (putch(c) );
  5105  050E  0833               	movf	printf@c,w
  5106  050F  120A  158A  20ED  120A  118A  	fcall	_putch
  5107                           
  5108                           ;doprnt.c: 542: continue;
  5109  0514  2CF8               	goto	i1l1967
  5110  0515                     i1l1851:	
  5111                           
  5112                           ;doprnt.c: 543: }
  5113                           ;doprnt.c: 546: width = 0;
  5114  0515  1283               	bcf	3,5	;RP0=0, select bank0
  5115  0516  1303               	bcf	3,6	;RP1=0, select bank0
  5116  0517  01AF               	clrf	printf@width
  5117  0518  01B0               	clrf	printf@width+1
  5118                           
  5119                           ;doprnt.c: 548: flag = 0;
  5120  0519  01B1               	clrf	printf@flag
  5121                           
  5122                           ;doprnt.c: 551: switch(*f) {
  5123                           
  5124                           ;doprnt.c: 550: for(;;) {
  5125  051A  2D20               	goto	i1l1857
  5126  051B                     i1l288:	
  5127                           ;doprnt.c: 579: case '0':
  5128                           
  5129                           
  5130                           ;doprnt.c: 580: flag |= 0x04;
  5131  051B  1531               	bsf	printf@flag,2
  5132                           
  5133                           ;doprnt.c: 581: f++;
  5134  051C  3001               	movlw	1
  5135  051D  00A6               	movwf	??_printf
  5136  051E  0826               	movf	??_printf,w
  5137  051F  07B2               	addwf	printf@f,f
  5138  0520                     i1l1857:	
  5139                           ;doprnt.c: 584: }
  5140                           
  5141                           ;doprnt.c: 582: continue;
  5142                           
  5143  0520  0832               	movf	printf@f,w
  5144  0521  0084               	movwf	4
  5145  0522  120A  118A  2707  120A  118A  	fcall	stringdir
  5146                           
  5147                           ; Switch size 1, requested type "space"
  5148                           ; Number of cases is 1, Range of values is 48 to 48
  5149                           ; switch strategies available:
  5150                           ; Name         Instructions Cycles
  5151                           ; simple_byte            4     3 (average)
  5152                           ; direct_byte           14    11 (fixed)
  5153                           ; jumptable            263     9 (fixed)
  5154                           ;	Chosen strategy is simple_byte
  5155  0527  3A30               	xorlw	48	; case 48
  5156  0528  1903               	skipnz
  5157  0529  2D1B               	goto	i1l288
  5158  052A  2D2B               	goto	i1l1859
  5159  052B                     i1l1859:	
  5160                           ;doprnt.c: 586: }
  5161                           
  5162                           ;doprnt.c: 585: break;
  5163                           
  5164                           
  5165                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5166  052B  0832               	movf	printf@f,w
  5167  052C  0084               	movwf	4
  5168  052D  120A  118A  2707  120A  118A  	fcall	stringdir
  5169  0532  120A  158A  20F5  120A  118A  	fcall	_isdigit
  5170  0537  1C03               	btfss	3,0
  5171  0538  2D7B               	goto	i1l1873
  5172                           
  5173                           ;doprnt.c: 598: width = 0;
  5174  0539  1283               	bcf	3,5	;RP0=0, select bank0
  5175  053A  1303               	bcf	3,6	;RP1=0, select bank0
  5176  053B  01AF               	clrf	printf@width
  5177  053C  01B0               	clrf	printf@width+1
  5178  053D                     i1l1863:	
  5179                           ;doprnt.c: 599: do {
  5180                           
  5181                           
  5182                           ;doprnt.c: 600: width *= 10;
  5183  053D  300A               	movlw	10
  5184  053E  00F0               	movwf	___wmul@multiplier
  5185  053F  3000               	movlw	0
  5186  0540  00F1               	movwf	___wmul@multiplier+1
  5187  0541  1283               	bcf	3,5	;RP0=0, select bank0
  5188  0542  1303               	bcf	3,6	;RP1=0, select bank0
  5189  0543  0830               	movf	printf@width+1,w
  5190  0544  00F3               	movwf	___wmul@multiplicand+1
  5191  0545  082F               	movf	printf@width,w
  5192  0546  00F2               	movwf	___wmul@multiplicand
  5193  0547  120A  158A  2138  120A  118A  	fcall	___wmul
  5194  054C  0871               	movf	?___wmul+1,w
  5195  054D  1283               	bcf	3,5	;RP0=0, select bank0
  5196  054E  1303               	bcf	3,6	;RP1=0, select bank0
  5197  054F  00B0               	movwf	printf@width+1
  5198  0550  0870               	movf	?___wmul,w
  5199  0551  00AF               	movwf	printf@width
  5200                           
  5201                           ;doprnt.c: 601: width += *f++ - '0';
  5202  0552  0832               	movf	printf@f,w
  5203  0553  0084               	movwf	4
  5204  0554  120A  118A  2707  120A  118A  	fcall	stringdir
  5205  0559  3ED0               	addlw	208
  5206  055A  00A6               	movwf	??_printf
  5207  055B  30FF               	movlw	255
  5208  055C  1803               	skipnc
  5209  055D  3000               	movlw	0
  5210  055E  00A7               	movwf	??_printf+1
  5211  055F  0826               	movf	??_printf,w
  5212  0560  07AF               	addwf	printf@width,f
  5213  0561  1803               	skipnc
  5214  0562  0AB0               	incf	printf@width+1,f
  5215  0563  0827               	movf	??_printf+1,w
  5216  0564  07B0               	addwf	printf@width+1,f
  5217  0565  3001               	movlw	1
  5218  0566  00A6               	movwf	??_printf
  5219  0567  0826               	movf	??_printf,w
  5220  0568  07B2               	addwf	printf@f,f
  5221                           
  5222                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5223  0569  0832               	movf	printf@f,w
  5224  056A  0084               	movwf	4
  5225  056B  120A  118A  2707  120A  118A  	fcall	stringdir
  5226  0570  120A  158A  20F5  120A  118A  	fcall	_isdigit
  5227  0575  1C03               	btfss	3,0
  5228  0576  2D7B               	goto	i1l1873
  5229  0577  2D3D               	goto	i1l1863
  5230  0578                     i1l301:	
  5231                           ;doprnt.c: 712: case 'X':
  5232                           
  5233                           ;doprnt.c: 698: case 'i':
  5234                           ;doprnt.c: 699: break;
  5235                           
  5236                           ;doprnt.c: 697: case 'd':
  5237                           
  5238                           ;doprnt.c: 638: goto alldone;
  5239                           
  5240                           ;doprnt.c: 637: case 0:
  5241                           
  5242                           ;doprnt.c: 608: }
  5243                           ;doprnt.c: 635: switch(c = *f++) {
  5244                           
  5245                           
  5246                           ;doprnt.c: 714: flag |= 0x20;
  5247  0578  16B1               	bsf	printf@flag,5
  5248  0579                     i1l302:	
  5249                           ;doprnt.c: 718: case 'x':
  5250                           
  5251                           
  5252                           ;doprnt.c: 721: flag |= 0x80;
  5253  0579  17B1               	bsf	printf@flag,7
  5254                           
  5255                           ;doprnt.c: 723: break;
  5256  057A  2D98               	goto	i1l300
  5257  057B                     i1l1873:	
  5258                           ;doprnt.c: 822: }
  5259                           
  5260                           ;doprnt.c: 813: continue;
  5261                           
  5262                           ;doprnt.c: 802: default:
  5263                           
  5264  057B  3001               	movlw	1
  5265  057C  1283               	bcf	3,5	;RP0=0, select bank0
  5266  057D  1303               	bcf	3,6	;RP1=0, select bank0
  5267  057E  07B2               	addwf	printf@f,f
  5268  057F  30FF               	movlw	-1
  5269  0580  0732               	addwf	printf@f,w
  5270  0581  0084               	movwf	4
  5271  0582  120A  118A  2707  120A  118A  	fcall	stringdir
  5272  0587  00B3               	movwf	printf@c
  5273                           
  5274                           ; Switch size 1, requested type "space"
  5275                           ; Number of cases is 5, Range of values is 0 to 120
  5276                           ; switch strategies available:
  5277                           ; Name         Instructions Cycles
  5278                           ; simple_byte           16     9 (average)
  5279                           ; jumptable            260     6 (fixed)
  5280                           ;	Chosen strategy is simple_byte
  5281  0588  3A00               	xorlw	0	; case 0
  5282  0589  1903               	skipnz
  5283  058A  2F06               	goto	i1l342
  5284  058B  3A58               	xorlw	88	; case 88
  5285  058C  1903               	skipnz
  5286  058D  2D78               	goto	i1l301
  5287  058E  3A3C               	xorlw	60	; case 100
  5288  058F  1903               	skipnz
  5289  0590  2D98               	goto	i1l300
  5290  0591  3A0D               	xorlw	13	; case 105
  5291  0592  1903               	skipnz
  5292  0593  2D98               	goto	i1l300
  5293  0594  3A11               	xorlw	17	; case 120
  5294  0595  1903               	skipnz
  5295  0596  2D79               	goto	i1l302
  5296  0597  2CF8               	goto	i1l1967
  5297  0598                     i1l300:	
  5298                           
  5299                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  5300  0598  1283               	bcf	3,5	;RP0=0, select bank0
  5301  0599  1303               	bcf	3,6	;RP1=0, select bank0
  5302  059A  1BB1               	btfsc	printf@flag,7
  5303  059B  2DB4               	goto	i1l1885
  5304                           
  5305                           ;doprnt.c: 1253: {
  5306                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5307  059C  082B               	movf	printf@ap,w
  5308  059D  0084               	movwf	4
  5309  059E  1383               	bcf	3,7	;select IRP bank0
  5310  059F  0800               	movf	0,w
  5311  05A0  00AD               	movwf	printf@val
  5312  05A1  0A84               	incf	4,f
  5313  05A2  0800               	movf	0,w
  5314  05A3  00AE               	movwf	printf@val+1
  5315  05A4  3002               	movlw	2
  5316  05A5  00A6               	movwf	??_printf
  5317  05A6  0826               	movf	??_printf,w
  5318  05A7  07AB               	addwf	printf@ap,f
  5319                           
  5320                           ;doprnt.c: 1261: if((int)val < 0) {
  5321  05A8  1FAE               	btfss	printf@val+1,7
  5322  05A9  2E09               	goto	i1l1911
  5323                           
  5324                           ;doprnt.c: 1262: flag |= 0x03;
  5325  05AA  3003               	movlw	3
  5326  05AB  00A6               	movwf	??_printf
  5327  05AC  0826               	movf	??_printf,w
  5328  05AD  04B1               	iorwf	printf@flag,f
  5329                           
  5330                           ;doprnt.c: 1263: val = -val;
  5331  05AE  09AD               	comf	printf@val,f
  5332  05AF  09AE               	comf	printf@val+1,f
  5333  05B0  0AAD               	incf	printf@val,f
  5334  05B1  1903               	skipnz
  5335  05B2  0AAE               	incf	printf@val+1,f
  5336                           
  5337                           ;doprnt.c: 1264: }
  5338                           ;doprnt.c: 1266: }
  5339  05B3  2E09               	goto	i1l1911
  5340  05B4                     i1l1885:	
  5341                           
  5342                           ;doprnt.c: 1268: else
  5343                           ;doprnt.c: 1273: {
  5344                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5345  05B4  082B               	movf	printf@ap,w
  5346  05B5  0084               	movwf	4
  5347  05B6  1383               	bcf	3,7	;select IRP bank0
  5348  05B7  0800               	movf	0,w
  5349  05B8  00AD               	movwf	printf@val
  5350  05B9  0A84               	incf	4,f
  5351  05BA  0800               	movf	0,w
  5352  05BB  00AE               	movwf	printf@val+1
  5353  05BC  3002               	movlw	2
  5354  05BD  00A6               	movwf	??_printf
  5355  05BE  0826               	movf	??_printf,w
  5356  05BF  07AB               	addwf	printf@ap,f
  5357                           
  5358                           ;doprnt.c: 1287: }
  5359                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  5360  05C0  2E09               	goto	i1l1911
  5361  05C1                     i1l308:	
  5362                           ;doprnt.c: 1299: case 0x00:
  5363                           
  5364                           
  5365                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5366  05C1  01B3               	clrf	printf@c
  5367  05C2  0AB3               	incf	printf@c,f
  5368  05C3                     L7:	
  5369  05C3  3005               	movlw	5
  5370  05C4  0633               	xorwf	printf@c,w
  5371  05C5  1903               	btfsc	3,2
  5372  05C6  2E12               	goto	i1l1913
  5373                           
  5374                           ;doprnt.c: 1306: if(val < dpowers[c])
  5375  05C7  0833               	movf	printf@c,w
  5376  05C8  00A6               	movwf	??_printf
  5377  05C9  0726               	addwf	??_printf,w
  5378  05CA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5379  05CB  0084               	movwf	4
  5380  05CC  120A  118A  2707  120A  118A  	fcall	stringdir
  5381  05D1  00A7               	movwf	??_printf+1
  5382  05D2  120A  118A  2707  120A  118A  	fcall	stringdir
  5383  05D7  00A8               	movwf	??_printf+2
  5384  05D8  0828               	movf	??_printf+2,w
  5385  05D9  022E               	subwf	printf@val+1,w
  5386  05DA  1D03               	skipz
  5387  05DB  2DDE               	goto	u182_25
  5388  05DC  0827               	movf	??_printf+1,w
  5389  05DD  022D               	subwf	printf@val,w
  5390  05DE                     u182_25:	
  5391  05DE  1C03               	btfss	3,0
  5392  05DF  2E12               	goto	i1l1913
  5393                           
  5394                           ;doprnt.c: 1307: break;
  5395  05E0  3001               	movlw	1
  5396  05E1  00A6               	movwf	??_printf
  5397  05E2  0826               	movf	??_printf,w
  5398  05E3  07B3               	addwf	printf@c,f
  5399  05E4  2DC3               	goto	L7
  5400  05E5                     i1l313:	
  5401                           ;doprnt.c: 1314: case 0x80:
  5402                           
  5403                           ;doprnt.c: 1309: break;
  5404                           
  5405                           
  5406                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5407  05E5  01B3               	clrf	printf@c
  5408  05E6  0AB3               	incf	printf@c,f
  5409  05E7                     L8:	
  5410  05E7  3004               	movlw	4
  5411  05E8  0633               	xorwf	printf@c,w
  5412  05E9  1903               	btfsc	3,2
  5413  05EA  2E12               	goto	i1l1913
  5414                           
  5415                           ;doprnt.c: 1317: if(val < hexpowers[c])
  5416  05EB  0833               	movf	printf@c,w
  5417  05EC  00A6               	movwf	??_printf
  5418  05ED  0726               	addwf	??_printf,w
  5419  05EE  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  5420  05EF  0084               	movwf	4
  5421  05F0  120A  118A  2707  120A  118A  	fcall	stringdir
  5422  05F5  00A7               	movwf	??_printf+1
  5423  05F6  120A  118A  2707  120A  118A  	fcall	stringdir
  5424  05FB  00A8               	movwf	??_printf+2
  5425  05FC  0828               	movf	??_printf+2,w
  5426  05FD  022E               	subwf	printf@val+1,w
  5427  05FE  1D03               	skipz
  5428  05FF  2E02               	goto	u185_25
  5429  0600  0827               	movf	??_printf+1,w
  5430  0601  022D               	subwf	printf@val,w
  5431  0602                     u185_25:	
  5432  0602  1C03               	btfss	3,0
  5433  0603  2E12               	goto	i1l1913
  5434                           
  5435                           ;doprnt.c: 1318: break;
  5436  0604  3001               	movlw	1
  5437  0605  00A6               	movwf	??_printf
  5438  0606  0826               	movf	??_printf,w
  5439  0607  07B3               	addwf	printf@c,f
  5440  0608  2DE7               	goto	L8
  5441  0609                     i1l1911:	
  5442                           ;doprnt.c: 1336: }
  5443                           
  5444                           ;doprnt.c: 1320: break;
  5445                           
  5446  0609  0831               	movf	printf@flag,w
  5447  060A  3980               	andlw	128
  5448                           
  5449                           ; Switch size 1, requested type "space"
  5450                           ; Number of cases is 2, Range of values is 0 to 128
  5451                           ; switch strategies available:
  5452                           ; Name         Instructions Cycles
  5453                           ; simple_byte            7     4 (average)
  5454                           ; jumptable            260     6 (fixed)
  5455                           ;	Chosen strategy is simple_byte
  5456  060B  3A00               	xorlw	0	; case 0
  5457  060C  1903               	skipnz
  5458  060D  2DC1               	goto	i1l308
  5459  060E  3A80               	xorlw	128	; case 128
  5460  060F  1903               	skipnz
  5461  0610  2DE5               	goto	i1l313
  5462  0611  2E12               	goto	i1l1913
  5463  0612                     i1l1913:	
  5464                           
  5465                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5466  0612  082F               	movf	printf@width,w
  5467  0613  0430               	iorwf	printf@width+1,w
  5468  0614  1903               	btfsc	3,2
  5469  0615  2E20               	goto	i1l317
  5470  0616  0831               	movf	printf@flag,w
  5471  0617  3903               	andlw	3
  5472  0618  1903               	btfsc	3,2
  5473  0619  2E20               	goto	i1l317
  5474                           
  5475                           ;doprnt.c: 1346: width--;
  5476  061A  30FF               	movlw	255
  5477  061B  07AF               	addwf	printf@width,f
  5478  061C  1803               	skipnc
  5479  061D  0AB0               	incf	printf@width+1,f
  5480  061E  30FF               	movlw	255
  5481  061F  07B0               	addwf	printf@width+1,f
  5482  0620                     i1l317:	
  5483                           
  5484                           ;doprnt.c: 1381: if(width > c)
  5485  0620  0833               	movf	printf@c,w
  5486  0621  00A6               	movwf	??_printf
  5487  0622  01A7               	clrf	??_printf+1
  5488  0623  1BA6               	btfsc	??_printf,7
  5489  0624  03A7               	decf	??_printf+1,f
  5490  0625  0827               	movf	??_printf+1,w
  5491  0626  3A80               	xorlw	128
  5492  0627  00A8               	movwf	??_printf+2
  5493  0628  0830               	movf	printf@width+1,w
  5494  0629  3A80               	xorlw	128
  5495  062A  0228               	subwf	??_printf+2,w
  5496  062B  1D03               	skipz
  5497  062C  2E2F               	goto	u189_25
  5498  062D  082F               	movf	printf@width,w
  5499  062E  0226               	subwf	??_printf,w
  5500  062F                     u189_25:	
  5501  062F  1803               	skipnc
  5502  0630  2E3F               	goto	i1l1921
  5503                           
  5504                           ;doprnt.c: 1382: width -= c;
  5505  0631  1283               	bcf	3,5	;RP0=0, select bank0
  5506  0632  1303               	bcf	3,6	;RP1=0, select bank0
  5507  0633  0833               	movf	printf@c,w
  5508  0634  00A6               	movwf	??_printf
  5509  0635  01A7               	clrf	??_printf+1
  5510  0636  1BA6               	btfsc	??_printf,7
  5511  0637  03A7               	decf	??_printf+1,f
  5512  0638  0826               	movf	??_printf,w
  5513  0639  02AF               	subwf	printf@width,f
  5514  063A  0827               	movf	??_printf+1,w
  5515  063B  1C03               	skipc
  5516  063C  03B0               	decf	printf@width+1,f
  5517  063D  02B0               	subwf	printf@width+1,f
  5518  063E  2E43               	goto	i1l1923
  5519  063F                     i1l1921:	
  5520                           
  5521                           ;doprnt.c: 1383: else
  5522                           ;doprnt.c: 1384: width = 0;
  5523  063F  1283               	bcf	3,5	;RP0=0, select bank0
  5524  0640  1303               	bcf	3,6	;RP1=0, select bank0
  5525  0641  01AF               	clrf	printf@width
  5526  0642  01B0               	clrf	printf@width+1
  5527  0643                     i1l1923:	
  5528                           
  5529                           ;doprnt.c: 1387: if(flag & 0x04) {
  5530  0643  1D31               	btfss	printf@flag,2
  5531  0644  2E64               	goto	i1l1935
  5532                           
  5533                           ;doprnt.c: 1392: if(flag & 0x03)
  5534  0645  0831               	movf	printf@flag,w
  5535  0646  3903               	andlw	3
  5536  0647  1903               	btfsc	3,2
  5537  0648  2E4F               	goto	i1l1929
  5538                           
  5539                           ;doprnt.c: 1393: (putch('-') );
  5540  0649  302D               	movlw	45
  5541  064A  120A  158A  20ED  120A  118A  	fcall	_putch
  5542  064F                     i1l1929:	
  5543                           
  5544                           ;doprnt.c: 1415: if(width)
  5545  064F  1283               	bcf	3,5	;RP0=0, select bank0
  5546  0650  1303               	bcf	3,6	;RP1=0, select bank0
  5547  0651                     L9:	
  5548  0651  082F               	movf	printf@width,w
  5549  0652  0430               	iorwf	printf@width+1,w
  5550  0653  1903               	btfsc	3,2
  5551  0654  2E84               	goto	i1l1945
  5552                           
  5553                           ;doprnt.c: 1417: (putch('0') );
  5554                           
  5555                           ;doprnt.c: 1416: do
  5556  0655  3030               	movlw	48
  5557  0656  120A  158A  20ED  120A  118A  	fcall	_putch
  5558                           
  5559                           ;doprnt.c: 1418: while(--width);
  5560  065B  30FF               	movlw	255
  5561  065C  1283               	bcf	3,5	;RP0=0, select bank0
  5562  065D  1303               	bcf	3,6	;RP1=0, select bank0
  5563  065E  07AF               	addwf	printf@width,f
  5564  065F  1803               	skipnc
  5565  0660  0AB0               	incf	printf@width+1,f
  5566  0661  30FF               	movlw	255
  5567  0662  07B0               	addwf	printf@width+1,f
  5568  0663  2E51               	goto	L9
  5569  0664                     i1l1935:	
  5570                           ;doprnt.c: 1420: } else
  5571                           
  5572                           
  5573                           ;doprnt.c: 1422: {
  5574                           ;doprnt.c: 1424: if(width
  5575                           ;doprnt.c: 1428: )
  5576  0664  082F               	movf	printf@width,w
  5577  0665  0430               	iorwf	printf@width+1,w
  5578  0666  1903               	btfsc	3,2
  5579  0667  2E7A               	goto	i1l1941
  5580  0668                     i1l1937:	
  5581                           ;doprnt.c: 1429: do
  5582                           
  5583                           
  5584                           ;doprnt.c: 1430: (putch(' ') );
  5585  0668  3020               	movlw	32
  5586  0669  120A  158A  20ED  120A  118A  	fcall	_putch
  5587                           
  5588                           ;doprnt.c: 1431: while(--width);
  5589  066E  30FF               	movlw	255
  5590  066F  1283               	bcf	3,5	;RP0=0, select bank0
  5591  0670  1303               	bcf	3,6	;RP1=0, select bank0
  5592  0671  07AF               	addwf	printf@width,f
  5593  0672  1803               	skipnc
  5594  0673  0AB0               	incf	printf@width+1,f
  5595  0674  30FF               	movlw	255
  5596  0675  07B0               	addwf	printf@width+1,f
  5597  0676  082F               	movf	printf@width,w
  5598  0677  0430               	iorwf	printf@width+1,w
  5599  0678  1D03               	btfss	3,2
  5600  0679  2E68               	goto	i1l1937
  5601  067A                     i1l1941:	
  5602                           
  5603                           ;doprnt.c: 1438: if(flag & 0x03)
  5604  067A  0831               	movf	printf@flag,w
  5605  067B  3903               	andlw	3
  5606  067C  1903               	btfsc	3,2
  5607  067D  2E84               	goto	i1l1945
  5608                           
  5609                           ;doprnt.c: 1439: (putch('-') );
  5610  067E  302D               	movlw	45
  5611  067F  120A  158A  20ED  120A  118A  	fcall	_putch
  5612  0684                     i1l1945:	
  5613                           
  5614                           ;doprnt.c: 1469: }
  5615                           ;doprnt.c: 1472: prec = c;
  5616  0684  1283               	bcf	3,5	;RP0=0, select bank0
  5617  0685  1303               	bcf	3,6	;RP1=0, select bank0
  5618  0686  0833               	movf	printf@c,w
  5619  0687  00A6               	movwf	??_printf
  5620  0688  0826               	movf	??_printf,w
  5621  0689  00AC               	movwf	printf@prec
  5622                           
  5623                           ;doprnt.c: 1474: while(prec--) {
  5624  068A  2EF3               	goto	i1l1965
  5625  068B                     i1l1947:	
  5626                           ;doprnt.c: 1478: {
  5627                           ;doprnt.c: 1483: case 0x00:
  5628                           
  5629                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  5630                           
  5631                           
  5632                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5633  068B  300A               	movlw	10
  5634  068C  00F8               	movwf	___lwmod@divisor
  5635  068D  3000               	movlw	0
  5636  068E  00F9               	movwf	___lwmod@divisor+1
  5637  068F  082C               	movf	printf@prec,w
  5638  0690  00A6               	movwf	??_printf
  5639  0691  0726               	addwf	??_printf,w
  5640  0692  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5641  0693  0084               	movwf	4
  5642  0694  120A  118A  2707  120A  118A  	fcall	stringdir
  5643  0699  00F0               	movwf	___lwdiv@divisor
  5644  069A  120A  118A  2707  120A  118A  	fcall	stringdir
  5645  069F  00F1               	movwf	___lwdiv@divisor+1
  5646  06A0  082E               	movf	printf@val+1,w
  5647  06A1  00F3               	movwf	___lwdiv@dividend+1
  5648  06A2  082D               	movf	printf@val,w
  5649  06A3  00F2               	movwf	___lwdiv@dividend
  5650  06A4  120A  158A  2329  120A  118A  	fcall	___lwdiv
  5651  06A9  0871               	movf	?___lwdiv+1,w
  5652  06AA  00FB               	movwf	___lwmod@dividend+1
  5653  06AB  0870               	movf	?___lwdiv,w
  5654  06AC  00FA               	movwf	___lwmod@dividend
  5655  06AD  120A  158A  225E  120A  118A  	fcall	___lwmod
  5656  06B2  0878               	movf	?___lwmod,w
  5657  06B3  3E30               	addlw	48
  5658  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  5659  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  5660  06B6  00A7               	movwf	??_printf+1
  5661  06B7  0827               	movf	??_printf+1,w
  5662  06B8  2EEC               	goto	L5
  5663  06B9                     i1l1949:	
  5664                           ;doprnt.c: 1497: case 0x80:
  5665                           
  5666                           ;doprnt.c: 1491: break;
  5667                           
  5668                           
  5669                           ;doprnt.c: 1499: {
  5670                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5671  06B9  082C               	movf	printf@prec,w
  5672  06BA  00A6               	movwf	??_printf
  5673  06BB  0726               	addwf	??_printf,w
  5674  06BC  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  5675  06BD  0084               	movwf	4
  5676  06BE  120A  118A  2707  120A  118A  	fcall	stringdir
  5677  06C3  00F0               	movwf	___lwdiv@divisor
  5678  06C4  120A  118A  2707  120A  118A  	fcall	stringdir
  5679  06C9  00F1               	movwf	___lwdiv@divisor+1
  5680  06CA  082E               	movf	printf@val+1,w
  5681  06CB  00F3               	movwf	___lwdiv@dividend+1
  5682  06CC  082D               	movf	printf@val,w
  5683  06CD  00F2               	movwf	___lwdiv@dividend
  5684  06CE  120A  158A  2329  120A  118A  	fcall	___lwdiv
  5685  06D3  0870               	movf	?___lwdiv,w
  5686  06D4  390F               	andlw	15
  5687  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  5688  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  5689  06D7  00A7               	movwf	??_printf+1
  5690  06D8  0827               	movf	??_printf+1,w
  5691  06D9  00A9               	movwf	printf@idx
  5692                           
  5693                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  5694  06DA  1AB1               	btfsc	printf@flag,5
  5695  06DB  2EDE               	goto	i1l1955
  5696  06DC  3024               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  5697  06DD  2EDF               	goto	L6
  5698  06DE                     i1l1955:	
  5699  06DE  3013               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  5700  06DF                     L6:	
  5701  06DF  00A6               	movwf	??_printf
  5702  06E0  0826               	movf	??_printf,w
  5703  06E1  00AA               	movwf	_printf$750
  5704  06E2  0829               	movf	printf@idx,w
  5705  06E3  072A               	addwf	_printf$750,w
  5706  06E4  0084               	movwf	4
  5707  06E5  120A  118A  2707  120A  118A  	fcall	stringdir
  5708  06EA  00A6               	movwf	??_printf
  5709  06EB  0826               	movf	??_printf,w
  5710  06EC                     L5:	
  5711  06EC  00B3               	movwf	printf@c
  5712  06ED                     i1l1963:	
  5713                           ;doprnt.c: 1523: }
  5714                           
  5715                           ;doprnt.c: 1508: }
  5716                           ;doprnt.c: 1510: break;
  5717                           
  5718                           
  5719                           ;doprnt.c: 1524: (putch(c) );
  5720  06ED  0833               	movf	printf@c,w
  5721  06EE  120A  158A  20ED  120A  118A  	fcall	_putch
  5722  06F3                     i1l1965:	
  5723  06F3  30FF               	movlw	255
  5724  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  5725  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  5726  06F6  00A6               	movwf	??_printf
  5727  06F7  0826               	movf	??_printf,w
  5728  06F8  07AC               	addwf	printf@prec,f
  5729  06F9  0A2C               	incf	printf@prec,w
  5730  06FA  1903               	btfsc	3,2
  5731  06FB  2CF8               	goto	i1l1967
  5732  06FC  0831               	movf	printf@flag,w
  5733  06FD  3980               	andlw	128
  5734                           
  5735                           ; Switch size 1, requested type "space"
  5736                           ; Number of cases is 2, Range of values is 0 to 128
  5737                           ; switch strategies available:
  5738                           ; Name         Instructions Cycles
  5739                           ; simple_byte            7     4 (average)
  5740                           ; jumptable            260     6 (fixed)
  5741                           ;	Chosen strategy is simple_byte
  5742  06FE  3A00               	xorlw	0	; case 0
  5743  06FF  1903               	skipnz
  5744  0700  2E8B               	goto	i1l1947
  5745  0701  3A80               	xorlw	128	; case 128
  5746  0702  1903               	skipnz
  5747  0703  2EB9               	goto	i1l1949
  5748  0704  2EED               	goto	i1l1963
  5749  0705  2EED               	goto	i1l1963
  5750  0706                     i1l342:	
  5751                           ;doprnt.c: 1540: return 0;
  5752                           ;	Return value of _printf is never used
  5753                           
  5754                           ;doprnt.c: 1525: }
  5755                           ;doprnt.c: 1533: }
  5756                           ;doprnt.c: 1535: alldone:
  5757                           
  5758  0706  0008               	return
  5759  0707                     __end_of_printf:	
  5760                           
  5761                           	psect	text23
  5762  08ED                     __ptext23:	
  5763 ;; *************** function _putch *****************
  5764 ;; Defined at:
  5765 ;;		line 36 in file "panda17.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  data            1    wreg     unsigned char 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  data            1    0[COMMON] unsigned char 
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      void 
  5772 ;; Registers used:
  5773 ;;		wreg
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5779 ;;      Params:         0       0       0       0       0
  5780 ;;      Locals:         1       0       0       0       0
  5781 ;;      Temps:          0       0       0       0       0
  5782 ;;      Totals:         1       0       0       0       0
  5783 ;;Total ram usage:        1 bytes
  5784 ;; Hardware stack levels used:    1
  5785 ;; This function calls:
  5786 ;;		Nothing
  5787 ;; This function is called by:
  5788 ;;		_printf
  5789 ;; This function uses a non-reentrant model
  5790 ;;
  5791                           
  5792                           
  5793                           ;psect for function _putch
  5794  08ED                     _putch:	
  5795                           
  5796                           ;incstack = 0
  5797                           ; Regs used in _putch: [wreg]
  5798                           ;putch@data stored from wreg
  5799  08ED  00F0               	movwf	putch@data
  5800  08EE                     i1l76:	
  5801                           ;panda17.c: 38: continue;
  5802                           
  5803                           ;panda17.c: 37: while(!PIR1bits.TXIF)
  5804                           
  5805  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  5806  08EF  1303               	bcf	3,6	;RP1=0, select bank0
  5807  08F0  1E0C               	btfss	12,4	;volatile
  5808  08F1  28EE               	goto	i1l76
  5809                           
  5810                           ;panda17.c: 39: TXREG = data;
  5811  08F2  0870               	movf	putch@data,w
  5812  08F3  0099               	movwf	25	;volatile
  5813  08F4  0008               	return
  5814  08F5                     __end_of_putch:	
  5815                           
  5816                           	psect	text24
  5817  08F5                     __ptext24:	
  5818 ;; *************** function _isdigit *****************
  5819 ;; Defined at:
  5820 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;  c               1    wreg     unsigned char 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;  c               1    1[COMMON] unsigned char 
  5825 ;; Return value:  Size  Location     Type
  5826 ;;		None               void
  5827 ;; Registers used:
  5828 ;;		wreg, status,2, status,0
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5834 ;;      Params:         0       0       0       0       0
  5835 ;;      Locals:         2       0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0
  5837 ;;      Totals:         2       0       0       0       0
  5838 ;;Total ram usage:        2 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; This function calls:
  5841 ;;		Nothing
  5842 ;; This function is called by:
  5843 ;;		_printf
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           
  5848                           ;psect for function _isdigit
  5849  08F5                     _isdigit:	
  5850                           
  5851                           ;incstack = 0
  5852                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5853                           ;isdigit@c stored from wreg
  5854  08F5  00F1               	movwf	isdigit@c
  5855  08F6  01F0               	clrf	_isdigit$936
  5856  08F7  303A               	movlw	58
  5857  08F8  0271               	subwf	isdigit@c,w
  5858  08F9  1803               	skipnc
  5859  08FA  2901               	goto	i1l1701
  5860  08FB  3030               	movlw	48
  5861  08FC  0271               	subwf	isdigit@c,w
  5862  08FD  1C03               	skipc
  5863  08FE  2901               	goto	i1l1701
  5864  08FF  01F0               	clrf	_isdigit$936
  5865  0900  0AF0               	incf	_isdigit$936,f
  5866  0901                     i1l1701:	
  5867  0901  0C70               	rrf	_isdigit$936,w
  5868  0902  0008               	return
  5869  0903                     __end_of_isdigit:	
  5870                           
  5871                           	psect	text25
  5872  0938                     __ptext25:	
  5873 ;; *************** function ___wmul *****************
  5874 ;; Defined at:
  5875 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;  multiplier      2    0[COMMON] unsigned int 
  5878 ;;  multiplicand    2    2[COMMON] unsigned int 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  product         2    4[COMMON] unsigned int 
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  2    0[COMMON] unsigned int 
  5883 ;; Registers used:
  5884 ;;		wreg, status,2, status,0
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5890 ;;      Params:         4       0       0       0       0
  5891 ;;      Locals:         2       0       0       0       0
  5892 ;;      Temps:          0       0       0       0       0
  5893 ;;      Totals:         6       0       0       0       0
  5894 ;;Total ram usage:        6 bytes
  5895 ;; Hardware stack levels used:    1
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_save_event
  5900 ;;		_ints_isr
  5901 ;;		_printf
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           
  5906                           ;psect for function ___wmul
  5907  0938                     ___wmul:	
  5908                           
  5909                           ;incstack = 0
  5910                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5911  0938  01F4               	clrf	___wmul@product
  5912  0939  01F5               	clrf	___wmul@product+1
  5913  093A                     i1l1707:	
  5914  093A  1C70               	btfss	___wmul@multiplier,0
  5915  093B  2942               	goto	i1l426
  5916  093C  0872               	movf	___wmul@multiplicand,w
  5917  093D  07F4               	addwf	___wmul@product,f
  5918  093E  1803               	skipnc
  5919  093F  0AF5               	incf	___wmul@product+1,f
  5920  0940  0873               	movf	___wmul@multiplicand+1,w
  5921  0941  07F5               	addwf	___wmul@product+1,f
  5922  0942                     i1l426:	
  5923  0942  3001               	movlw	1
  5924  0943                     u158_25:	
  5925  0943  1003               	clrc
  5926  0944  0DF2               	rlf	___wmul@multiplicand,f
  5927  0945  0DF3               	rlf	___wmul@multiplicand+1,f
  5928  0946  3EFF               	addlw	-1
  5929  0947  1D03               	skipz
  5930  0948  2943               	goto	u158_25
  5931  0949  3001               	movlw	1
  5932  094A                     u159_25:	
  5933  094A  1003               	clrc
  5934  094B  0CF1               	rrf	___wmul@multiplier+1,f
  5935  094C  0CF0               	rrf	___wmul@multiplier,f
  5936  094D  3EFF               	addlw	-1
  5937  094E  1D03               	skipz
  5938  094F  294A               	goto	u159_25
  5939  0950  0870               	movf	___wmul@multiplier,w
  5940  0951  0471               	iorwf	___wmul@multiplier+1,w
  5941  0952  1D03               	btfss	3,2
  5942  0953  293A               	goto	i1l1707
  5943  0954  0875               	movf	___wmul@product+1,w
  5944  0955  00F1               	movwf	?___wmul+1
  5945  0956  0874               	movf	___wmul@product,w
  5946  0957  00F0               	movwf	?___wmul
  5947  0958  0008               	return
  5948  0959                     __end_of___wmul:	
  5949                           
  5950                           	psect	text26
  5951  0A5E                     __ptext26:	
  5952 ;; *************** function ___lwmod *****************
  5953 ;; Defined at:
  5954 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  divisor         2    8[COMMON] unsigned int 
  5957 ;;  dividend        2   10[COMMON] unsigned int 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  counter         1   13[COMMON] unsigned char 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  2    8[COMMON] unsigned int 
  5962 ;; Registers used:
  5963 ;;		wreg, status,2, status,0
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5969 ;;      Params:         4       0       0       0       0
  5970 ;;      Locals:         1       0       0       0       0
  5971 ;;      Temps:          1       0       0       0       0
  5972 ;;      Totals:         6       0       0       0       0
  5973 ;;Total ram usage:        6 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; This function calls:
  5976 ;;		Nothing
  5977 ;; This function is called by:
  5978 ;;		_printf
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           
  5983                           ;psect for function ___lwmod
  5984  0A5E                     ___lwmod:	
  5985                           
  5986                           ;incstack = 0
  5987                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5988  0A5E  0878               	movf	___lwmod@divisor,w
  5989  0A5F  0479               	iorwf	___lwmod@divisor+1,w
  5990  0A60  1903               	btfsc	3,2
  5991  0A61  2A8B               	goto	i1l1763
  5992  0A62  01FD               	clrf	___lwmod@counter
  5993  0A63  0AFD               	incf	___lwmod@counter,f
  5994  0A64                     i1l1753:	
  5995  0A64  1BF9               	btfsc	___lwmod@divisor+1,7
  5996  0A65  2A72               	goto	i1l1755
  5997  0A66  3001               	movlw	1
  5998  0A67                     u169_25:	
  5999  0A67  1003               	clrc
  6000  0A68  0DF8               	rlf	___lwmod@divisor,f
  6001  0A69  0DF9               	rlf	___lwmod@divisor+1,f
  6002  0A6A  3EFF               	addlw	-1
  6003  0A6B  1D03               	skipz
  6004  0A6C  2A67               	goto	u169_25
  6005  0A6D  3001               	movlw	1
  6006  0A6E  00FC               	movwf	??___lwmod
  6007  0A6F  087C               	movf	??___lwmod,w
  6008  0A70  07FD               	addwf	___lwmod@counter,f
  6009  0A71  2A64               	goto	i1l1753
  6010  0A72                     i1l1755:	
  6011  0A72  0879               	movf	___lwmod@divisor+1,w
  6012  0A73  027B               	subwf	___lwmod@dividend+1,w
  6013  0A74  1D03               	skipz
  6014  0A75  2A78               	goto	u171_25
  6015  0A76  0878               	movf	___lwmod@divisor,w
  6016  0A77  027A               	subwf	___lwmod@dividend,w
  6017  0A78                     u171_25:	
  6018  0A78  1C03               	skipc
  6019  0A79  2A80               	goto	i1l1759
  6020  0A7A  0878               	movf	___lwmod@divisor,w
  6021  0A7B  02FA               	subwf	___lwmod@dividend,f
  6022  0A7C  0879               	movf	___lwmod@divisor+1,w
  6023  0A7D  1C03               	skipc
  6024  0A7E  03FB               	decf	___lwmod@dividend+1,f
  6025  0A7F  02FB               	subwf	___lwmod@dividend+1,f
  6026  0A80                     i1l1759:	
  6027  0A80  3001               	movlw	1
  6028  0A81                     u172_25:	
  6029  0A81  1003               	clrc
  6030  0A82  0CF9               	rrf	___lwmod@divisor+1,f
  6031  0A83  0CF8               	rrf	___lwmod@divisor,f
  6032  0A84  3EFF               	addlw	-1
  6033  0A85  1D03               	skipz
  6034  0A86  2A81               	goto	u172_25
  6035  0A87  3001               	movlw	1
  6036  0A88  02FD               	subwf	___lwmod@counter,f
  6037  0A89  1D03               	btfss	3,2
  6038  0A8A  2A72               	goto	i1l1755
  6039  0A8B                     i1l1763:	
  6040  0A8B  087B               	movf	___lwmod@dividend+1,w
  6041  0A8C  00F9               	movwf	?___lwmod+1
  6042  0A8D  087A               	movf	___lwmod@dividend,w
  6043  0A8E  00F8               	movwf	?___lwmod
  6044  0A8F  0008               	return
  6045  0A90                     __end_of___lwmod:	
  6046                           
  6047                           	psect	text27
  6048  0B29                     __ptext27:	
  6049 ;; *************** function ___lwdiv *****************
  6050 ;; Defined at:
  6051 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  divisor         2    0[COMMON] unsigned int 
  6054 ;;  dividend        2    2[COMMON] unsigned int 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  quotient        2    5[COMMON] unsigned int 
  6057 ;;  counter         1    7[COMMON] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  2    0[COMMON] unsigned int 
  6060 ;; Registers used:
  6061 ;;		wreg, status,2, status,0
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6067 ;;      Params:         4       0       0       0       0
  6068 ;;      Locals:         3       0       0       0       0
  6069 ;;      Temps:          1       0       0       0       0
  6070 ;;      Totals:         8       0       0       0       0
  6071 ;;Total ram usage:        8 bytes
  6072 ;; Hardware stack levels used:    1
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_printf
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           
  6081                           ;psect for function ___lwdiv
  6082  0B29                     ___lwdiv:	
  6083                           
  6084                           ;incstack = 0
  6085                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6086  0B29  01F5               	clrf	___lwdiv@quotient
  6087  0B2A  01F6               	clrf	___lwdiv@quotient+1
  6088  0B2B  0870               	movf	___lwdiv@divisor,w
  6089  0B2C  0471               	iorwf	___lwdiv@divisor+1,w
  6090  0B2D  1903               	btfsc	3,2
  6091  0B2E  2B60               	goto	i1l1741
  6092  0B2F  01F7               	clrf	___lwdiv@counter
  6093  0B30  0AF7               	incf	___lwdiv@counter,f
  6094  0B31                     i1l1729:	
  6095  0B31  1BF1               	btfsc	___lwdiv@divisor+1,7
  6096  0B32  2B3F               	goto	i1l1731
  6097  0B33  3001               	movlw	1
  6098  0B34                     u162_25:	
  6099  0B34  1003               	clrc
  6100  0B35  0DF0               	rlf	___lwdiv@divisor,f
  6101  0B36  0DF1               	rlf	___lwdiv@divisor+1,f
  6102  0B37  3EFF               	addlw	-1
  6103  0B38  1D03               	skipz
  6104  0B39  2B34               	goto	u162_25
  6105  0B3A  3001               	movlw	1
  6106  0B3B  00F4               	movwf	??___lwdiv
  6107  0B3C  0874               	movf	??___lwdiv,w
  6108  0B3D  07F7               	addwf	___lwdiv@counter,f
  6109  0B3E  2B31               	goto	i1l1729
  6110  0B3F                     i1l1731:	
  6111  0B3F  3001               	movlw	1
  6112  0B40                     u164_25:	
  6113  0B40  1003               	clrc
  6114  0B41  0DF5               	rlf	___lwdiv@quotient,f
  6115  0B42  0DF6               	rlf	___lwdiv@quotient+1,f
  6116  0B43  3EFF               	addlw	-1
  6117  0B44  1D03               	skipz
  6118  0B45  2B40               	goto	u164_25
  6119  0B46  0871               	movf	___lwdiv@divisor+1,w
  6120  0B47  0273               	subwf	___lwdiv@dividend+1,w
  6121  0B48  1D03               	skipz
  6122  0B49  2B4C               	goto	u165_25
  6123  0B4A  0870               	movf	___lwdiv@divisor,w
  6124  0B4B  0272               	subwf	___lwdiv@dividend,w
  6125  0B4C                     u165_25:	
  6126  0B4C  1C03               	skipc
  6127  0B4D  2B55               	goto	i1l1737
  6128  0B4E  0870               	movf	___lwdiv@divisor,w
  6129  0B4F  02F2               	subwf	___lwdiv@dividend,f
  6130  0B50  0871               	movf	___lwdiv@divisor+1,w
  6131  0B51  1C03               	skipc
  6132  0B52  03F3               	decf	___lwdiv@dividend+1,f
  6133  0B53  02F3               	subwf	___lwdiv@dividend+1,f
  6134  0B54  1475               	bsf	___lwdiv@quotient,0
  6135  0B55                     i1l1737:	
  6136  0B55  3001               	movlw	1
  6137  0B56                     u166_25:	
  6138  0B56  1003               	clrc
  6139  0B57  0CF1               	rrf	___lwdiv@divisor+1,f
  6140  0B58  0CF0               	rrf	___lwdiv@divisor,f
  6141  0B59  3EFF               	addlw	-1
  6142  0B5A  1D03               	skipz
  6143  0B5B  2B56               	goto	u166_25
  6144  0B5C  3001               	movlw	1
  6145  0B5D  02F7               	subwf	___lwdiv@counter,f
  6146  0B5E  1D03               	btfss	3,2
  6147  0B5F  2B3F               	goto	i1l1731
  6148  0B60                     i1l1741:	
  6149  0B60  0876               	movf	___lwdiv@quotient+1,w
  6150  0B61  00F1               	movwf	?___lwdiv+1
  6151  0B62  0875               	movf	___lwdiv@quotient,w
  6152  0B63  00F0               	movwf	?___lwdiv
  6153  0B64  0008               	return
  6154  0B65                     __end_of___lwdiv:	
  6155                           
  6156                           	psect	text28
  6157  0AC3                     __ptext28:	
  6158 ;; *************** function _ds_set *****************
  6159 ;; Defined at:
  6160 ;;		line 13 in file "ds1307.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;  data            1    wreg     PTR unsigned char 
  6163 ;;		 -> time(7), 
  6164 ;; Auto vars:     Size  Location     Type
  6165 ;;  data            1   11[COMMON] PTR unsigned char 
  6166 ;;		 -> time(7), 
  6167 ;;  j               1   12[COMMON] unsigned char 
  6168 ;; Return value:  Size  Location     Type
  6169 ;;                  1    wreg      void 
  6170 ;; Registers used:
  6171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6172 ;; Tracked objects:
  6173 ;;		On entry : 0/0
  6174 ;;		On exit  : 0/0
  6175 ;;		Unchanged: 0/0
  6176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6177 ;;      Params:         0       0       0       0       0
  6178 ;;      Locals:         2       0       0       0       0
  6179 ;;      Temps:          1       0       0       0       0
  6180 ;;      Totals:         3       0       0       0       0
  6181 ;;Total ram usage:        3 bytes
  6182 ;; Hardware stack levels used:    1
  6183 ;; Hardware stack levels required when called:    1
  6184 ;; This function calls:
  6185 ;;		i1_i2c_start
  6186 ;;		i1_i2c_stop
  6187 ;;		i1_i2c_write
  6188 ;; This function is called by:
  6189 ;;		_ints_isr
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           
  6194                           ;psect for function _ds_set
  6195  0AC3                     _ds_set:	
  6196                           
  6197                           ;incstack = 0
  6198                           ; Regs used in _ds_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6199                           ;ds_set@data stored from wreg
  6200  0AC3  00FB               	movwf	ds_set@data
  6201                           
  6202                           ;ds1307.c: 14: unsigned char j;
  6203                           ;ds1307.c: 15: for (j=0;j<7;j++){
  6204  0AC4  01FC               	clrf	ds_set@j
  6205  0AC5                     L10:	
  6206  0AC5  3007               	movlw	7
  6207  0AC6  027C               	subwf	ds_set@j,w
  6208  0AC7  1803               	btfsc	3,0
  6209  0AC8  0008               	return
  6210                           
  6211                           ;ds1307.c: 16: i2c_start();
  6212  0AC9  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  6213                           
  6214                           ;ds1307.c: 17: i2c_write(0b11010000,1);
  6215  0ACE  01F0               	clrf	i1i2c_write@ack
  6216  0ACF  0AF0               	incf	i1i2c_write@ack,f
  6217  0AD0  30D0               	movlw	208
  6218  0AD1  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  6219                           
  6220                           ;ds1307.c: 18: i2c_write(j,1);
  6221  0AD6  01F0               	clrf	i1i2c_write@ack
  6222  0AD7  0AF0               	incf	i1i2c_write@ack,f
  6223  0AD8  087C               	movf	ds_set@j,w
  6224  0AD9  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  6225                           
  6226                           ;ds1307.c: 19: i2c_write(*(data+j),1);
  6227  0ADE  01F0               	clrf	i1i2c_write@ack
  6228  0ADF  0AF0               	incf	i1i2c_write@ack,f
  6229  0AE0  087C               	movf	ds_set@j,w
  6230  0AE1  077B               	addwf	ds_set@data,w
  6231  0AE2  00FA               	movwf	??_ds_set
  6232  0AE3  087A               	movf	??_ds_set,w
  6233  0AE4  0084               	movwf	4
  6234  0AE5  1383               	bcf	3,7	;select IRP bank0
  6235  0AE6  0800               	movf	0,w
  6236  0AE7  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  6237                           
  6238                           ;ds1307.c: 20: i2c_stop();
  6239  0AEC  120A  158A  217C  120A  158A  	fcall	i1_i2c_stop
  6240  0AF1  3001               	movlw	1
  6241  0AF2  00FA               	movwf	??_ds_set
  6242  0AF3  087A               	movf	??_ds_set,w
  6243  0AF4  07FC               	addwf	ds_set@j,f
  6244  0AF5  2AC5               	goto	L10
  6245  0AF6                     __end_of_ds_set:	
  6246                           
  6247                           	psect	text29
  6248  0A90                     __ptext29:	
  6249 ;; *************** function i1_i2c_write *****************
  6250 ;; Defined at:
  6251 ;;		line 39 in file "i2clib.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  datum           1    wreg     unsigned char 
  6254 ;;  ack             1    0[COMMON] unsigned char 
  6255 ;; Auto vars:     Size  Location     Type
  6256 ;;  datum           1    9[COMMON] unsigned char 
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  1    wreg      void 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2, status,0
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6266 ;;      Params:         1       0       0       0       0
  6267 ;;      Locals:         1       0       0       0       0
  6268 ;;      Temps:          8       0       0       0       0
  6269 ;;      Totals:        10       0       0       0       0
  6270 ;;Total ram usage:       10 bytes
  6271 ;; Hardware stack levels used:    1
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_si_read_h
  6276 ;;		_si_read_t
  6277 ;;		_ds_set
  6278 ;;		_ds_get
  6279 ;;		i1_mem_write
  6280 ;;		i1_mem_read
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           
  6285                           ;psect for function i1_i2c_write
  6286  0A90                     i1_i2c_write:	
  6287                           
  6288                           ;incstack = 0
  6289                           ; Regs used in i1_i2c_write: [wreg+status,2+status,0]
  6290                           ;i1i2c_write@datum stored from wreg
  6291  0A90  00F9               	movwf	i1i2c_write@datum
  6292  0A91                     i1l1607:	
  6293                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  6294                           
  6295  0A91  1683               	bsf	3,5	;RP0=1, select bank1
  6296  0A92  1303               	bcf	3,6	;RP1=0, select bank1
  6297  0A93  0811               	movf	17,w	;volatile
  6298  0A94  3901               	andlw	1
  6299  0A95  00F1               	movwf	??i1_i2c_write
  6300  0A96  0C11               	rrf	17,w	;volatile
  6301  0A97  3901               	andlw	1
  6302  0A98  00F2               	movwf	??i1_i2c_write+1
  6303  0A99  0C11               	rrf	17,w	;volatile
  6304  0A9A  00F3               	movwf	??i1_i2c_write+2
  6305  0A9B  0CF3               	rrf	??i1_i2c_write+2,f
  6306  0A9C  0C73               	rrf	??i1_i2c_write+2,w
  6307  0A9D  3901               	andlw	1
  6308  0A9E  00F4               	movwf	??i1_i2c_write+3
  6309  0A9F  0E11               	swapf	17,w	;volatile
  6310  0AA0  3901               	andlw	1
  6311  0AA1  00F5               	movwf	??i1_i2c_write+4
  6312  0AA2  0C11               	rrf	17,w	;volatile
  6313  0AA3  00F6               	movwf	??i1_i2c_write+5
  6314  0AA4  0C76               	rrf	??i1_i2c_write+5,w
  6315  0AA5  3901               	andlw	1
  6316  0AA6  00F7               	movwf	??i1_i2c_write+6
  6317  0AA7  0C14               	rrf	20,w	;volatile
  6318  0AA8  00F8               	movwf	??i1_i2c_write+7
  6319  0AA9  0C78               	rrf	??i1_i2c_write+7,w
  6320  0AAA  3901               	andlw	1
  6321  0AAB  0477               	iorwf	??i1_i2c_write+6,w
  6322  0AAC  0475               	iorwf	??i1_i2c_write+4,w
  6323  0AAD  0474               	iorwf	??i1_i2c_write+3,w
  6324  0AAE  0472               	iorwf	??i1_i2c_write+1,w
  6325  0AAF  0471               	iorwf	??i1_i2c_write,w
  6326  0AB0  1D03               	btfss	3,2
  6327  0AB1  2A91               	goto	i1l1607
  6328                           
  6329                           ;i2clib.c: 42: SSPBUF = datum;
  6330  0AB2  0879               	movf	i1i2c_write@datum,w
  6331  0AB3  1283               	bcf	3,5	;RP0=0, select bank0
  6332  0AB4  1303               	bcf	3,6	;RP1=0, select bank0
  6333  0AB5  0093               	movwf	19	;volatile
  6334  0AB6                     i1l181:	
  6335                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  6336                           
  6337  0AB6  1683               	bsf	3,5	;RP0=1, select bank1
  6338  0AB7  1303               	bcf	3,6	;RP1=0, select bank1
  6339  0AB8  1814               	btfsc	20,0	;volatile
  6340  0AB9  2AB6               	goto	i1l181
  6341                           
  6342                           ;i2clib.c: 44: if(ack){
  6343  0ABA  0870               	movf	i1i2c_write@ack,w
  6344  0ABB  1903               	btfsc	3,2
  6345  0ABC  2ABF               	goto	i1l188
  6346  0ABD                     i1l185:	
  6347                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  6348                           
  6349  0ABD  1B11               	btfsc	17,6	;volatile
  6350  0ABE  2ABD               	goto	i1l185
  6351  0ABF                     i1l188:	
  6352                           ;i2clib.c: 46: }
  6353                           ;i2clib.c: 47: }
  6354                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  6355                           
  6356  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  6357  0AC0  198C               	btfsc	12,3	;volatile
  6358  0AC1  0008               	return
  6359  0AC2  2ABF               	goto	i1l188
  6360  0AC3                     __end_ofi1_i2c_write:	
  6361                           
  6362                           	psect	text30
  6363  097C                     __ptext30:	
  6364 ;; *************** function i1_i2c_stop *****************
  6365 ;; Defined at:
  6366 ;;		line 34 in file "i2clib.c"
  6367 ;; Parameters:    Size  Location     Type
  6368 ;;		None
  6369 ;; Auto vars:     Size  Location     Type
  6370 ;;		None
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  1    wreg      void 
  6373 ;; Registers used:
  6374 ;;		wreg, status,2, status,0
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6380 ;;      Params:         0       0       0       0       0
  6381 ;;      Locals:         0       0       0       0       0
  6382 ;;      Temps:          8       0       0       0       0
  6383 ;;      Totals:         8       0       0       0       0
  6384 ;;Total ram usage:        8 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_si_read_h
  6390 ;;		_si_read_t
  6391 ;;		_ds_set
  6392 ;;		_ds_get
  6393 ;;		i1_mem_write
  6394 ;;		i1_mem_read
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           
  6399                           ;psect for function i1_i2c_stop
  6400  097C                     i1_i2c_stop:	
  6401  097C                     i1l1603:	
  6402                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  6403                           
  6404                           ;incstack = 0
  6405                           ; Regs used in i1_i2c_stop: [wreg+status,2+status,0]
  6406                           
  6407  097C  1683               	bsf	3,5	;RP0=1, select bank1
  6408  097D  1303               	bcf	3,6	;RP1=0, select bank1
  6409  097E  0811               	movf	17,w	;volatile
  6410  097F  3901               	andlw	1
  6411  0980  00F0               	movwf	??i1_i2c_stop
  6412  0981  0C11               	rrf	17,w	;volatile
  6413  0982  3901               	andlw	1
  6414  0983  00F1               	movwf	??i1_i2c_stop+1
  6415  0984  0C11               	rrf	17,w	;volatile
  6416  0985  00F2               	movwf	??i1_i2c_stop+2
  6417  0986  0CF2               	rrf	??i1_i2c_stop+2,f
  6418  0987  0C72               	rrf	??i1_i2c_stop+2,w
  6419  0988  3901               	andlw	1
  6420  0989  00F3               	movwf	??i1_i2c_stop+3
  6421  098A  0E11               	swapf	17,w	;volatile
  6422  098B  3901               	andlw	1
  6423  098C  00F4               	movwf	??i1_i2c_stop+4
  6424  098D  0C11               	rrf	17,w	;volatile
  6425  098E  00F5               	movwf	??i1_i2c_stop+5
  6426  098F  0C75               	rrf	??i1_i2c_stop+5,w
  6427  0990  3901               	andlw	1
  6428  0991  00F6               	movwf	??i1_i2c_stop+6
  6429  0992  0C14               	rrf	20,w	;volatile
  6430  0993  00F7               	movwf	??i1_i2c_stop+7
  6431  0994  0C77               	rrf	??i1_i2c_stop+7,w
  6432  0995  3901               	andlw	1
  6433  0996  0476               	iorwf	??i1_i2c_stop+6,w
  6434  0997  0474               	iorwf	??i1_i2c_stop+4,w
  6435  0998  0473               	iorwf	??i1_i2c_stop+3,w
  6436  0999  0471               	iorwf	??i1_i2c_stop+1,w
  6437  099A  0470               	iorwf	??i1_i2c_stop,w
  6438  099B  1D03               	btfss	3,2
  6439  099C  297C               	goto	i1l1603
  6440                           
  6441                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  6442  099D  1511               	bsf	17,2	;volatile
  6443  099E  0008               	return
  6444  099F                     __end_ofi1_i2c_stop:	
  6445                           
  6446                           	psect	text31
  6447  0959                     __ptext31:	
  6448 ;; *************** function i1_i2c_start *****************
  6449 ;; Defined at:
  6450 ;;		line 24 in file "i2clib.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;		None
  6453 ;; Auto vars:     Size  Location     Type
  6454 ;;		None
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1    wreg      void 
  6457 ;; Registers used:
  6458 ;;		wreg, status,2, status,0
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6464 ;;      Params:         0       0       0       0       0
  6465 ;;      Locals:         0       0       0       0       0
  6466 ;;      Temps:          8       0       0       0       0
  6467 ;;      Totals:         8       0       0       0       0
  6468 ;;Total ram usage:        8 bytes
  6469 ;; Hardware stack levels used:    1
  6470 ;; This function calls:
  6471 ;;		Nothing
  6472 ;; This function is called by:
  6473 ;;		_si_read_h
  6474 ;;		_si_read_t
  6475 ;;		_ds_set
  6476 ;;		_ds_get
  6477 ;;		i1_mem_write
  6478 ;;		i1_mem_read
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           
  6483                           ;psect for function i1_i2c_start
  6484  0959                     i1_i2c_start:	
  6485  0959                     i1l1599:	
  6486                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  6487                           
  6488                           ;incstack = 0
  6489                           ; Regs used in i1_i2c_start: [wreg+status,2+status,0]
  6490                           
  6491  0959  1683               	bsf	3,5	;RP0=1, select bank1
  6492  095A  1303               	bcf	3,6	;RP1=0, select bank1
  6493  095B  0811               	movf	17,w	;volatile
  6494  095C  3901               	andlw	1
  6495  095D  00F0               	movwf	??i1_i2c_start
  6496  095E  0C11               	rrf	17,w	;volatile
  6497  095F  3901               	andlw	1
  6498  0960  00F1               	movwf	??i1_i2c_start+1
  6499  0961  0C11               	rrf	17,w	;volatile
  6500  0962  00F2               	movwf	??i1_i2c_start+2
  6501  0963  0CF2               	rrf	??i1_i2c_start+2,f
  6502  0964  0C72               	rrf	??i1_i2c_start+2,w
  6503  0965  3901               	andlw	1
  6504  0966  00F3               	movwf	??i1_i2c_start+3
  6505  0967  0E11               	swapf	17,w	;volatile
  6506  0968  3901               	andlw	1
  6507  0969  00F4               	movwf	??i1_i2c_start+4
  6508  096A  0C11               	rrf	17,w	;volatile
  6509  096B  00F5               	movwf	??i1_i2c_start+5
  6510  096C  0C75               	rrf	??i1_i2c_start+5,w
  6511  096D  3901               	andlw	1
  6512  096E  00F6               	movwf	??i1_i2c_start+6
  6513  096F  0C14               	rrf	20,w	;volatile
  6514  0970  00F7               	movwf	??i1_i2c_start+7
  6515  0971  0C77               	rrf	??i1_i2c_start+7,w
  6516  0972  3901               	andlw	1
  6517  0973  0476               	iorwf	??i1_i2c_start+6,w
  6518  0974  0474               	iorwf	??i1_i2c_start+4,w
  6519  0975  0473               	iorwf	??i1_i2c_start+3,w
  6520  0976  0471               	iorwf	??i1_i2c_start+1,w
  6521  0977  0470               	iorwf	??i1_i2c_start,w
  6522  0978  1D03               	btfss	3,2
  6523  0979  2959               	goto	i1l1599
  6524                           
  6525                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  6526  097A  1411               	bsf	17,0	;volatile
  6527  097B  0008               	return
  6528  097C                     __end_ofi1_i2c_start:	
  6529  007E                     btemp	set	126	;btemp
  6530  007E                     wtemp0	set	126


Data Sizes:
    Strings     107
    Constant    18
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      65
    BANK1            80     20      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf$750	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_20(CODE[17]), STR_19(CODE[17]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_18(CODE[2]), STR_17(CODE[5]), STR_16(CODE[7]), STR_15(CODE[4]), 
		 -> STR_14(CODE[3]), STR_13(CODE[2]), STR_12(CODE[3]), STR_11(CODE[5]), 
		 -> STR_10(CODE[5]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[8]), STR_3(CODE[7]), 
		 -> STR_2(CODE[6]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    ds_set@data	PTR unsigned char  size(1) Largest target is 7
		 -> time(BANK0[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ints_isr in COMMON

    _ints_isr->_si_read_h
    _ints_isr->_si_read_t
    _ints_isr->i1_mem_write
    i1_mem_init->i1_mem_write
    _si_read_t->i1_i2c_read
    _si_read_t->i1_i2c_write
    _si_read_h->i1_i2c_read
    _si_read_h->i1_i2c_write
    _save_event->i1_mem_write
    i1_mem_write->i1_i2c_write
    i1_mem_read->i1_i2c_read
    i1_mem_read->i1_i2c_write
    _ds_get->i1_i2c_read
    _ds_get->i1_i2c_write
    _printf->___lwmod
    _printf->_si_read_h
    _printf->_si_read_t
    ___lwmod->___lwdiv
    _ds_set->i1_i2c_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _ints_isr in BANK0

    _ints_isr->_printf
    i1_mem_init->i1_mem_read
    _save_event->i1_mem_read
    _printf->_si_read_h
    _printf->_si_read_t

Critical Paths under _main in BANK1

    _main->_mem_init
    _si_reset->_i2c_write
    _mem_init->_mem_read
    _mem_init->_mem_write
    _mem_write->_i2c_write
    _mem_read->_i2c_read
    _mem_read->_i2c_write

Critical Paths under _ints_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ints_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ints_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7359
                                             18 BANK1      2     2      0
                           _i2c_init
                        _init_timer2
                           _mem_init
                           _si_reset
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _si_reset                                             0     0      0    1268
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _mem_init                                             2     2      0    5871
                                             16 BANK1      2     2      0
                           _mem_read
                          _mem_write
 ---------------------------------------------------------------------------------
 (2) _mem_write                                            6     3      3    3440
                                             10 BANK1      6     3      3
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _mem_read                                             6     4      2    2408
                                             10 BANK1      6     4      2
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                           10     9      1    1268
                                              0 BANK1     10     9      1
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             8     8      0       0
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            8     8      0       0
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                            10    10      0      89
                                              0 BANK1     10    10      0
 ---------------------------------------------------------------------------------
 (1) _init_timer2                                          6     4      2     220
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ints_isr                                            32    32      0   24142
                                             20 BANK0     32    32      0
                             ___wmul
                             _ds_get
                             _ds_set
                             _printf
                         _save_event
                          _si_read_h
                          _si_read_t
                         i1_mem_init
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_init                                           2     2      0    3389
                                              3 BANK0      2     2      0
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) _si_read_t                                            8     6      2     798
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _si_read_h                                            8     6      2     799
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _save_event                                           5     5      0    6467
                                              3 BANK0      5     5      0
                             ___wmul
                             _ds_get
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_write                                          6     3      3    1924
                                             10 COMMON     4     1      3
                                              0 BANK0      2     2      0
                             ___wmul (ARG)
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_read                                           6     4      2    1442
                                             10 COMMON     3     1      2
                                              0 BANK0      3     3      0
                             ___wmul (ARG)
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) _ds_get                                               3     3      0     750
                                             10 COMMON     3     3      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) i1_i2c_read                                          10    10      0      89
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (6) _i2c_rstart                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (5) _printf                                              24    22      2    4391
                                              4 BANK0     16    14      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
                             _ds_get (ARG)
                            _isdigit
                              _putch
                          _si_read_h (ARG)
                          _si_read_t (ARG)
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2012
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     418
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _ds_set                                               3     3      0     758
                                             10 COMMON     3     3      0
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) i1_i2c_write                                         10     9      1     616
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (6) i1_i2c_stop                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (6) i1_i2c_start                                          8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _init_timer2
   _mem_init
     _mem_read
       _i2c_read
       _i2c_start
       _i2c_stop
       _i2c_write
     _mem_write
       _i2c_start
       _i2c_stop
       _i2c_write
   _si_reset
     _i2c_start
     _i2c_stop
     _i2c_write
   _uart_init

 _ints_isr (ROOT)
   ___wmul
   _ds_get
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _ds_set
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _ds_get (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     _isdigit (ARG)
     _putch (ARG)
     _si_read_h (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     _si_read_t (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
   _save_event
     ___wmul
     _ds_get
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     i1_mem_read
       ___wmul (ARG)
       i1_i2c_read (ARG)
       i1_i2c_start (ARG)
       i1_i2c_stop (ARG)
       i1_i2c_write (ARG)
     i1_mem_write
       ___wmul (ARG)
       i1_i2c_start (ARG)
       i1_i2c_stop (ARG)
       i1_i2c_write (ARG)
   _si_read_h
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _si_read_t
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   i1_mem_init
     i1_mem_read
       ___wmul (ARG)
       i1_i2c_read (ARG)
       i1_i2c_start (ARG)
       i1_i2c_stop (ARG)
       i1_i2c_write (ARG)
     i1_mem_write
       ___wmul (ARG)
       i1_i2c_start (ARG)
       i1_i2c_stop (ARG)
       i1_i2c_write (ARG)
   i1_mem_read
     ___wmul (ARG)
     i1_i2c_read (ARG)
     i1_i2c_start (ARG)
     i1_i2c_stop (ARG)
     i1_i2c_write (ARG)
   i1_mem_write
     ___wmul (ARG)
     i1_i2c_start (ARG)
     i1_i2c_stop (ARG)
     i1_i2c_write (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     14      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     34      41       5       81.3%
BITBANK0            50      0       1       4        1.3%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      63      12        0.0%
ABS                  0      0      63       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu Sep 07 17:25:42 2017

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      fsr 0004       ___wmul@multiplicand 0072            si_read_h@rta_h 0020  
          si_read_h@rta_l 0021                       l203 07CA                       l206 07CC  
                     l209 07EB                       l137 0CD8                       l181 0B1C  
                     l185 0B23                       l188 0B25                       _PR2 0092  
            __CFG_CPD$OFF 0000                       _led 0060                       _fyh 02FC  
                     fsr0 0004            si_read_t@rta_h 0020                       indf 0000  
          si_read_t@rta_l 0021              __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000  
              i1_mem_init 0CD9                i1_mem_read 0B65                      l1571 0AF9  
                    l1581 0797                      l1591 07E3                      l1559 09C2  
                    l1567 09E5                      l1585 079F                      l1589 07A8  
                    STR_1 0741                      STR_2 0759                      STR_3 0751  
                    STR_4 0749                      STR_5 0771                      STR_6 0765  
                    STR_7 076B                      STR_8 076B                      STR_9 075F  
                    u1300 07D5                      u1320 07E0                      u2025 0A11  
                    u1314 07D8                      u2317 0CAC                      u2327 0CC4  
                    i1l91 0360                      i1l76 08EE                      i1l98 003F  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 0C8B  
                    _secs 0054                      _time 0058                      btemp 007E  
                    start 0012             __CFG_MCLRE$ON 0000                     ?_main 0070  
                   STR_10 0777                     STR_11 0777                     STR_12 0746  
                   STR_20 0730                     STR_13 0788                     STR_14 0785  
                   STR_15 0781                     STR_16 0758                     STR_17 077C  
           __CFG_WDTE$OFF 0000                     STR_18 0788                     STR_19 071F  
             i2c_read@ack 00A9                     _T2CON 0012               i1_mem_write 0BAB  
         __end_of___lwdiv 0B65                     i1l113 02CF                     i1l105 035F  
                   i1l203 0DB7                     i1l300 0598                     i1l301 0578  
                   i1l125 0393                     i1l109 02A9                     i1l302 0579  
                   i1l206 0DB9                     i1l313 05E5                     i1l209 0DD6  
                   i1l129 04E4                     i1l308 05C1                     i1l181 0AB6  
                   i1l317 0620                     i1l342 0706                     i1l185 0ABD  
         __end_of___lwmod 0A90                     i1l426 0942                     i1l188 0ABF  
                   i1l288 051B                     _RCREG 001A                     _SPBRG 0099  
                   _TRISA 0085                     _TRISB 0086                     _TXREG 0019  
            ?_init_timer2 00A0           __end_of_dpowers 0717                     _milis 0057  
         __end_of_isdigit 0903               ?i1_i2c_read 0070               ?i1_i2c_stop 0070  
                   _putch 08ED            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 0015  
            __end_of_main 0CD9                _i2c_rstart 099F          __end_of_i2c_init 07FE  
        __end_of_i2c_read 07EF          __end_of_i2c_stop 0A08                    ??_main 00B2  
             mem_init@aux 00B1               mem_read@add 00AA               mem_read@rta 00AD  
             ?i1_mem_init 0070               ?i1_mem_read 007A                    ?_putch 0070  
            i2c_read@flag 02F9                    i1l2103 007B                    i1l2105 0124  
                  i1l2203 0382                    i1l2213 0394                    i1l2221 03A4  
                  i1l2141 02A4                    i1l2151 02C0                    i1l2135 0143  
                  i1l2137 029A                    i1l1603 097C                    i1l2155 02C8  
                  i1l1701 0901                    i1l1621 0D8E                    i1l2165 0301  
                  i1l2181 034C                    i1l1607 0A91                    i1l2191 0372  
                  i1l1625 0D95                    i1l2177 0323                    i1l1731 0B3F  
                  i1l1707 093A                    i1l1563 099F                    i1l1627 0DD0  
                  i1l1741 0B60                    i1l2277 04E3                    i1l2197 0379  
            i2c_read@resp 00A8                    i1l1911 0609                    i1l1737 0B55  
                  i1l1729 0B31                    i1l1753 0A64                    i1l1921 063F  
                  i1l1913 0612                    i1l1755 0A72                    i1l1763 0A8B  
                  i1l1923 0643                    i1l1851 0515                    i1l1941 067A  
                  u210_25 0149                    i1l1599 0959                    i1l1759 0A80  
                  i1l1935 0664                    i1l1863 053D                    i1l1937 0668  
                  i1l1945 0684                    i1l1929 064F                    i1l1873 057B  
                  i1l1857 0520                    i1l1955 06DE                    i1l1963 06ED  
                  i1l1947 068B                    i1l1859 052B                    i1l1949 06B9  
                  i1l1965 06F3                    i1l1885 05B4                    i1l1967 04F8  
                  u150_20 0DCD                    _INTCON 000B                    u209_25 0081  
                  u162_25 0B34                    u171_25 0A78                    u148_20 0DC2  
                  u164_25 0B40                    u172_25 0A81                    u149_24 0DC5  
                  u165_25 0B4C                    u166_25 0B56                    u158_25 0943  
                  u182_25 05DE                    u159_25 094A                    u169_25 0A67  
                  u185_25 0602                    u189_25 062F                    _OSCCON 008F  
                  _SPBRGH 009A                    _SSPADD 0093                    _SSPBUF 0013  
      __size_of_i2c_start 0023        __size_of_i2c_write 0033            __CFG_PWRTE$OFF 0000  
                  ___wmul 0938                 ??___lwdiv 0074                 ??___lwmod 007C  
                  _ds_get 0A2D          __end_of_mem_init 0E38          __end_of_mem_read 0C3D  
                  _ds_set 0AC3       __size_ofi1_i2c_read 005A       __size_ofi1_i2c_stop 0023  
                  _printf 04F1              ?i1_i2c_start 0070          __end_of_ints_isr 04F1  
            ?i1_i2c_write 0070          __end_of_si_reset 0938                 ??_isdigit 0070  
                  saved_w 007E              i2c_write@ack 00A0   __end_of__initialization 0025  
          i1i2c_read@resp 0078            __pcstackCOMMON 0070               ?_i2c_rstart 0070  
            __pidataBANK0 07FE             __end_of_putch 08F5       __size_ofi1_mem_init 0050  
     __size_ofi1_mem_read 0046          i1i2c_write@datum 0079         __end_of_i2c_start 09E5  
       __end_of_i2c_write 0B29      __size_of_init_timer2 0025                   ??_putch 0070  
             ints_isr@add 0043               ints_isr@arg 0051               ints_isr@aux 0049  
             ints_isr@rcv 003C                __pbssBANK0 0054                 ?_i2c_init 0070  
               ?_i2c_read 0070                 ?_i2c_stop 0070            i1i2c_write@ack 0070  
      __size_of_mem_write 004E                __pmaintext 0C8B                   ?___wmul 0070  
              __pintentry 0004                   ?_ds_get 0070                   ?_ds_set 0070  
      __size_of_si_read_h 005D        __size_of_si_read_t 0059                   ?_printf 0024  
            ?i1_mem_write 007A        __size_of_uart_init 0018              ??i1_i2c_read 0070  
            ??i1_i2c_stop 0070       __size_of_i2c_rstart 0023                __stringtab 0707  
              ??_i2c_init 00A0                ??_i2c_read 00A0                 ?_mem_init 0070  
               ?_mem_read 00AA                ??_i2c_stop 00A0               save_event@o 0026  
               ?_ints_isr 0070                 ?_si_reset 0070           __size_of___wmul 0021  
                 ___lwdiv 0B29                   ___lwmod 0A5E           __size_of_ds_get 0031  
         __size_of_ds_set 0033              mem_write@add 00AA        __end_ofi1_i2c_read 0DDC  
      __end_ofi1_i2c_stop 099F                   __ptext1 0903                   __ptext2 091B  
                 __ptext3 0DDC                   __ptext4 0C3D                   __ptext5 0BF3  
                 __ptext6 0AF6                   __ptext7 09E5                   __ptext8 09C2  
                 __ptext9 078A           __size_of_printf 0216         __end_of_hexpowers 071F  
                 _dpowers 070D         __end_of_mem_write 0C8B                   _isdigit 08F5  
    __size_ofi1_i2c_start 0023      __size_ofi1_i2c_write 0033                   ds_set@j 007C  
            ??i1_mem_init 0023              ??i1_mem_read 007C      end_of_initialization 0025  
       __end_of_si_read_h 0E95         __end_of_si_read_t 0D82                ??_mem_init 00B0  
              ??_mem_read 00AC                _save_event 0E95                ??_ints_isr 0034  
       __end_of_uart_init 091B                ??_si_reset 00AA                 _RCSTAbits 0018  
                 printf@c 0033                   printf@f 0032                _printf$750 002A  
      __end_ofi1_mem_init 0D29        __end_ofi1_mem_read 0BAB                 _PORTBbits 0006  
          i1mem_write@add 007A                ds_get@data 007B                 _TRISBbits 0086  
               _TRISCbits 0087                ds_get@resp 007C               printf@width 002F  
               _TXSTAbits 0098                ds_set@data 007B              ??_i2c_rstart 0070  
          __end_of___wmul 0959               _BAUDCTLbits 0187            __end_of_ds_get 0A5E  
          __end_of_ds_set 0AF6             __pbitbssBANK0 02F8            __end_of_printf 0707  
     start_initialization 0015      __size_ofi1_mem_write 0048                 _i2c_start 09C2  
               _i2c_write 0AF6        __end_of_i2c_rstart 09C2               ?_save_event 0070  
__CFG_FOSC$INTRC_NOCLKOUT 0000         __size_of_i2c_init 000F         __size_of_i2c_read 0065  
       __size_of_i2c_stop 0023                  ??___wmul 0074                  ??_ds_get 007A  
                ??_ds_set 007A               __pdataBANK0 0060                  ??_printf 0026  
            ints_isr@aux2 004F              ints_isr@ferr 02FB              ints_isr@oerr 02FA  
           i1i2c_read@ack 0079             ??_init_timer2 00A2                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0                ?_i2c_start 0070  
              ?_i2c_write 00A0                ints_isr@dt 0041                ints_isr@up 0047  
          mem_write@add_h 00AE            mem_write@add_l 00AF         __size_of_mem_init 005C  
       __size_of_mem_read 004A          ___lwdiv@dividend 0072         __size_of_ints_isr 04C8  
       __size_of_si_reset 001D                  ?___lwdiv 0070                  ?___lwmod 0078  
         init_timer2@post 00A0                 _condition 0056                 __pstrings 0707  
           mem_read@add_h 00AE             mem_read@add_l 00AF       __size_of_save_event 016B  
                ?_isdigit 0070                 _hexpowers 0717          ___lwdiv@quotient 0075  
               _mem_write 0C3D             i1mem_init@aux 0024             i1mem_read@add 007A  
           i1mem_read@rta 0020            __size_of_putch 0008       __end_of_init_timer2 0A2D  
       interrupt_function 0004            ___wmul@product 0074                  _PIE1bits 008C  
               _si_read_h 0E38                 _si_read_t 0D29                  _PIR1bits 000C  
               _uart_init 0903             ??i1_i2c_start 0070             ??i1_i2c_write 0071  
             __stringbase 070C              si_read_h@rta 0022         ___wmul@multiplier 0070  
            si_read_t@rta 0022                printf@flag 0031                printf@prec 002C  
             ??_i2c_start 00A0               ??_i2c_write 00A1                ?_mem_write 00AA  
            save_event@ax 0027                  _i2c_init 07EF                  _i2c_read 078A  
                _i2c_stop 09E5                ?_si_read_h 007A                ?_si_read_t 007A  
              ?_uart_init 0070          __size_of___lwdiv 003C          __size_of___lwmod 0032  
      __end_of__stringtab 070D               _isdigit$936 0070                _ANSELHbits 0189  
               ints_isr@k 0046                 ints_isr@n 0052                 ints_isr@z 0045  
           mem_write@data 00AC               _init_timer2 0A08          __size_of_isdigit 000E  
         ___lwdiv@divisor 0070           i1mem_read@add_h 0021           i1mem_read@add_l 0022  
     __end_ofi1_i2c_start 097C           ___lwdiv@counter 0077       __end_ofi1_i2c_write 0AC3  
                __ptext10 0A08                  __ptext11 07EF                  __ptext20 0D82  
                __ptext12 0029                  __ptext21 099F                  __ptext13 0CD9  
                __ptext30 097C                  __ptext22 04F1                  __ptext14 0D29  
                __ptext31 0959                  __ptext23 08ED                  __ptext15 0E38  
                __ptext24 08F5                  __ptext16 0E95                  __ptext25 0938  
                __ptext17 0BAB                  __ptext26 0A5E                  __ptext18 0B65  
                __ptext27 0B29                  __ptext19 0A2D                  __ptext28 0AC3  
                __ptext29 0A90         __CFG_BOR4V$BOR21V 0000            init_timer2@eoc 00A1  
          init_timer2@pre 00A4            init_timer2@sfr 00A5                  _mem_init 0DDC  
                _mem_read 0BF3             __size_of_main 004E              ??_save_event 0023  
                _ints_isr 0029                  _si_reset 091B          i2c_read@not_flag 02F8  
               printf@idx 0029                 printf@val 002D             ??i1_mem_write 007D  
               putch@data 0070                _INTCONbits 000B        __end_of_save_event 1000  
                isdigit@c 0071               ??_mem_write 00AD                  intlevel1 0000  
        ___lwmod@dividend 007A               ??_si_read_h 007C               ??_si_read_t 007C  
               stringcode 0707               ??_uart_init 00A0                  printf@ap 002B  
             i1_i2c_start 0959          i1mem_write@add_h 0020          i1mem_write@add_l 0021  
             i1_i2c_write 0A90           ___lwmod@divisor 0078           ___lwmod@counter 007D  
        ints_isr@temp_add 004B                  stringdir 0707                  stringtab 0707  
        ints_isr@temp_val 003F               _SSPCON2bits 0091       __end_ofi1_mem_write 0BF3  
              i1_i2c_read 0D82           ints_isr@hum_add 004D                i1_i2c_stop 097C  
         ints_isr@hum_val 003D           i1mem_write@data 007C                _SSPCONbits 0014  
          i2c_write@datum 00A9  
