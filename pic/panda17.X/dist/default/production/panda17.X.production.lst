

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Thu Sep 07 02:29:51 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 1.43
    49                           ; Generated 25/07/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F886 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0009                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001B                     	;# 
   188  001C                     	;# 
   189  001D                     	;# 
   190  001E                     	;# 
   191  001F                     	;# 
   192  0081                     	;# 
   193  0085                     	;# 
   194  0086                     	;# 
   195  0087                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  008F                     	;# 
   277  0090                     	;# 
   278  0091                     	;# 
   279  0092                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0095                     	;# 
   285  0096                     	;# 
   286  0097                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009A                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  009F                     	;# 
   295  0105                     	;# 
   296  0107                     	;# 
   297  0108                     	;# 
   298  0109                     	;# 
   299  010C                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  0185                     	;# 
   305  0187                     	;# 
   306  0188                     	;# 
   307  0189                     	;# 
   308  018C                     	;# 
   309  018D                     	;# 
   310                           
   311                           	psect	idataBANK0
   312  07FB                     __pidataBANK0:	
   313                           
   314                           ;initializer for _led
   315  07FB  3405               	retlw	5
   316                           
   317                           	psect	strings
   318  0707                     __pstrings:	
   319  0707                     stringtab:	
   320  0707                     __stringtab:	
   321  0707                     stringcode:	
   322                           ;	String table - string pointers are 1 byte each
   323                           
   324  0707                     stringdir:	
   325  0707  3007               	movlw	high stringdir
   326  0708  008A               	movwf	10
   327  0709  0804               	movf	4,w
   328  070A  0A84               	incf	4,f
   329  070B  0782               	addwf	2,f
   330  070C                     __stringbase:	
   331  070C  3400               	retlw	0
   332  070D                     __end_of__stringtab:	
   333  070D                     _dpowers:	
   334  070D  3401               	retlw	1
   335  070E  3400               	retlw	0
   336  070F  340A               	retlw	10
   337  0710  3400               	retlw	0
   338  0711  3464               	retlw	100
   339  0712  3400               	retlw	0
   340  0713  34E8               	retlw	232
   341  0714  3403               	retlw	3
   342  0715  3410               	retlw	16
   343  0716  3427               	retlw	39
   344  0717                     __end_of_dpowers:	
   345  0717                     _hexpowers:	
   346  0717  3401               	retlw	1
   347  0718  3400               	retlw	0
   348  0719  3410               	retlw	16
   349  071A  3400               	retlw	0
   350  071B  3400               	retlw	0
   351  071C  3401               	retlw	1
   352  071D  3400               	retlw	0
   353  071E  3410               	retlw	16
   354  071F                     __end_of_hexpowers:	
   355  0013                     _SSPBUF	set	19
   356  0014                     _SSPCONbits	set	20
   357  000B                     _INTCON	set	11
   358  0012                     _T2CON	set	18
   359  0006                     _PORTBbits	set	6
   360  001A                     _RCREG	set	26
   361  000B                     _INTCONbits	set	11
   362  0019                     _TXREG	set	25
   363  000C                     _PIR1bits	set	12
   364  0018                     _RCSTAbits	set	24
   365  0091                     _SSPCON2bits	set	145
   366  0087                     _TRISCbits	set	135
   367  0094                     _SSPSTATbits	set	148
   368  0093                     _SSPADD	set	147
   369  0086                     _TRISBbits	set	134
   370  0086                     _TRISB	set	134
   371  0085                     _TRISA	set	133
   372  008F                     _OSCCON	set	143
   373  0092                     _PR2	set	146
   374  0099                     _SPBRG	set	153
   375  009A                     _SPBRGH	set	154
   376  0098                     _TXSTAbits	set	152
   377  008C                     _PIE1bits	set	140
   378  0189                     _ANSELHbits	set	393
   379  0187                     _BAUDCTLbits	set	391
   380  071F                     STR_19:	
   381  071F  3430               	retlw	48	;'0'
   382  0720  3431               	retlw	49	;'1'
   383  0721  3432               	retlw	50	;'2'
   384  0722  3433               	retlw	51	;'3'
   385  0723  3434               	retlw	52	;'4'
   386  0724  3435               	retlw	53	;'5'
   387  0725  3436               	retlw	54	;'6'
   388  0726  3437               	retlw	55	;'7'
   389  0727  3438               	retlw	56	;'8'
   390  0728  3439               	retlw	57	;'9'
   391  0729  3441               	retlw	65	;'A'
   392  072A  3442               	retlw	66	;'B'
   393  072B  3443               	retlw	67	;'C'
   394  072C  3444               	retlw	68	;'D'
   395  072D  3445               	retlw	69	;'E'
   396  072E  3446               	retlw	70	;'F'
   397  072F  3400               	retlw	0
   398  0730                     STR_20:	
   399  0730  3430               	retlw	48	;'0'
   400  0731  3431               	retlw	49	;'1'
   401  0732  3432               	retlw	50	;'2'
   402  0733  3433               	retlw	51	;'3'
   403  0734  3434               	retlw	52	;'4'
   404  0735  3435               	retlw	53	;'5'
   405  0736  3436               	retlw	54	;'6'
   406  0737  3437               	retlw	55	;'7'
   407  0738  3438               	retlw	56	;'8'
   408  0739  3439               	retlw	57	;'9'
   409  073A  3461               	retlw	97	;'a'
   410  073B  3462               	retlw	98	;'b'
   411  073C  3463               	retlw	99	;'c'
   412  073D  3464               	retlw	100	;'d'
   413  073E  3465               	retlw	101	;'e'
   414  073F  3466               	retlw	102	;'f'
   415  0740  3400               	retlw	0
   416  0741                     STR_1:	
   417  0741  3449               	retlw	73	;'I'
   418  0742  3425               	retlw	37	;'%'
   419  0743  3430               	retlw	48	;'0'
   420  0744  3435               	retlw	53	;'5'
   421  0745  3464               	retlw	100	;'d'
   422  0746  340D               	retlw	13
   423  0747  340A               	retlw	10
   424  0748  3400               	retlw	0
   425  0749                     STR_3:	
   426  0749  3425               	retlw	37	;'%'
   427  074A  3430               	retlw	48	;'0'
   428  074B  3434               	retlw	52	;'4'
   429  074C  3478               	retlw	120	;'x'
   430  074D  340D               	retlw	13
   431  074E  340A               	retlw	10
   432  074F  3400               	retlw	0
   433  0750                     STR_16:	
   434  0750  3449               	retlw	73	;'I'
   435  0751  3425               	retlw	37	;'%'
   436  0752  3430               	retlw	48	;'0'
   437  0753  3434               	retlw	52	;'4'
   438  0754  3478               	retlw	120	;'x'
   439  0755  343B               	retlw	59	;';'
   440  0756  3400               	retlw	0
   441  0757                     STR_9:	
   442  0757  3425               	retlw	37	;'%'
   443  0758  3430               	retlw	48	;'0'
   444  0759  3432               	retlw	50	;'2'
   445  075A  3478               	retlw	120	;'x'
   446  075B  3409               	retlw	9
   447  075C  3400               	retlw	0
   448  075D                     STR_6:	
   449  075D  3425               	retlw	37	;'%'
   450  075E  3430               	retlw	48	;'0'
   451  075F  3432               	retlw	50	;'2'
   452  0760  3478               	retlw	120	;'x'
   453  0761  3420               	retlw	32	;' '
   454  0762  3400               	retlw	0
   455  0763                     STR_7:	
   456  0763  3425               	retlw	37	;'%'
   457  0764  3430               	retlw	48	;'0'
   458  0765  3432               	retlw	50	;'2'
   459  0766  3478               	retlw	120	;'x'
   460  0767  342F               	retlw	47	;'/'
   461  0768  3400               	retlw	0
   462  0769                     STR_5:	
   463  0769  3425               	retlw	37	;'%'
   464  076A  3430               	retlw	48	;'0'
   465  076B  3432               	retlw	50	;'2'
   466  076C  3478               	retlw	120	;'x'
   467  076D  343A               	retlw	58	;':'
   468  076E  3400               	retlw	0
   469  076F                     STR_4:	
   470  076F  345A               	retlw	90	;'Z'
   471  0770  3425               	retlw	37	;'%'
   472  0771  3478               	retlw	120	;'x'
   473  0772  340A               	retlw	10
   474  0773  3400               	retlw	0
   475  0774                     STR_10:	
   476  0774  3425               	retlw	37	;'%'
   477  0775  3430               	retlw	48	;'0'
   478  0776  3432               	retlw	50	;'2'
   479  0777  3478               	retlw	120	;'x'
   480  0778  3400               	retlw	0
   481  0779                     STR_17:	
   482  0779  3425               	retlw	37	;'%'
   483  077A  3430               	retlw	48	;'0'
   484  077B  3434               	retlw	52	;'4'
   485  077C  3478               	retlw	120	;'x'
   486  077D  3400               	retlw	0
   487  077E                     STR_15:	
   488  077E  3425               	retlw	37	;'%'
   489  077F  3458               	retlw	88	;'X'
   490  0780  3420               	retlw	32	;' '
   491  0781  3400               	retlw	0
   492  0782                     STR_14:	
   493  0782  344F               	retlw	79	;'O'
   494  0783  344B               	retlw	75	;'K'
   495  0784  3400               	retlw	0
   496  0785                     STR_13:	
   497  0785  3458               	retlw	88	;'X'
   498  0786  3400               	retlw	0
   499  0747                     
   500                           ; #config settings
   501  0000                     
   502                           	psect	cinit
   503  0015                     start_initialization:	
   504  0015                     __initialization:	
   505                           
   506                           ; Initialize objects allocated to BANK0
   507  0015  120A  118A  27FB   	fcall	__pidataBANK0	;fetch initializer
   508  0018  00E0               	movwf	__pdataBANK0& (0+127)
   509                           
   510                           ; Clear objects allocated to BANK0
   511  0019  01D4               	clrf	__pbssBANK0& (0+127)
   512  001A  01D5               	clrf	(__pbssBANK0+1)& (0+127)
   513  001B  01D6               	clrf	(__pbssBANK0+2)& (0+127)
   514  001C  01D7               	clrf	(__pbssBANK0+3)& (0+127)
   515  001D  01D8               	clrf	(__pbssBANK0+4)& (0+127)
   516  001E  01D9               	clrf	(__pbssBANK0+5)& (0+127)
   517  001F  01DA               	clrf	(__pbssBANK0+6)& (0+127)
   518  0020  01DB               	clrf	(__pbssBANK0+7)& (0+127)
   519  0021  01DC               	clrf	(__pbssBANK0+8)& (0+127)
   520  0022  01DD               	clrf	(__pbssBANK0+9)& (0+127)
   521  0023  01DE               	clrf	(__pbssBANK0+10)& (0+127)
   522                           
   523                           ; Clear objects allocated to BITBANK0
   524  0024  01DF               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
   525  0025                     end_of_initialization:	
   526                           ;End of C runtime variable initialization code
   527                           
   528  0025                     __end_of__initialization:	
   529  0025  0183               	clrf	3
   530  0026  120A  158A  2C8B   	ljmp	_main	;jump to C main() function
   531                           
   532                           	psect	bitbssBANK0
   533  02F8                     __pbitbssBANK0:	
   534  02F8                     i2c_read@not_flag:	
   535  02F8                     	ds	1
   536  02F9                     i2c_read@flag:	
   537  02F9                     	ds	1
   538  02FA                     ints_isr@oerr:	
   539  02FA                     	ds	1
   540  02FB                     ints_isr@ferr:	
   541  02FB                     	ds	1
   542  02FC                     _fyh:	
   543  02FC                     	ds	1
   544                           
   545                           	psect	bssBANK0
   546  0054                     __pbssBANK0:	
   547  0054                     _secs:	
   548  0054                     	ds	2
   549  0056                     _condition:	
   550  0056                     	ds	1
   551  0057                     _milis:	
   552  0057                     	ds	1
   553  0058                     _time:	
   554  0058                     	ds	7
   555                           
   556                           	psect	dataBANK0
   557  0060                     __pdataBANK0:	
   558  0060                     _led:	
   559  0060                     	ds	1
   560                           
   561                           	psect	cstackBANK1
   562  00A0                     __pcstackBANK1:	
   563  00A0                     ??_i2c_init:	
   564  00A0                     ??_uart_init:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  00A0                     ?_init_timer2:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  00A0                     ??_i2c_start:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  00A0                     ??_i2c_stop:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  00A0                     ?_i2c_write:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  00A0                     ??_i2c_read:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  00A0                     init_timer2@post:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  00A0                     i2c_write@ack:	
   586                           ; 1 bytes @ 0x0
   587                           
   588                           
   589                           ; 1 bytes @ 0x0
   590  00A0                     	ds	1
   591  00A1                     ??_i2c_write:	
   592  00A1                     init_timer2@eoc:	
   593                           ; 1 bytes @ 0x1
   594                           
   595                           
   596                           ; 1 bytes @ 0x1
   597  00A1                     	ds	1
   598  00A2                     ??_init_timer2:	
   599                           
   600                           ; 1 bytes @ 0x2
   601  00A2                     	ds	2
   602  00A4                     init_timer2@pre:	
   603                           
   604                           ; 1 bytes @ 0x4
   605  00A4                     	ds	1
   606  00A5                     init_timer2@sfr:	
   607                           
   608                           ; 1 bytes @ 0x5
   609  00A5                     	ds	3
   610  00A8                     i2c_read@resp:	
   611                           
   612                           ; 1 bytes @ 0x8
   613  00A8                     	ds	1
   614  00A9                     i2c_write@datum:	
   615  00A9                     i2c_read@ack:	
   616                           ; 1 bytes @ 0x9
   617                           
   618                           
   619                           ; 1 bytes @ 0x9
   620  00A9                     	ds	1
   621  00AA                     ?_mem_read:	
   622  00AA                     ?_mem_write:	
   623                           ; 1 bytes @ 0xA
   624                           
   625  00AA                     ??_si_reset:	
   626                           ; 1 bytes @ 0xA
   627                           
   628  00AA                     mem_write@add:	
   629                           ; 1 bytes @ 0xA
   630                           
   631  00AA                     mem_read@add:	
   632                           ; 2 bytes @ 0xA
   633                           
   634                           
   635                           ; 2 bytes @ 0xA
   636  00AA                     	ds	2
   637  00AC                     ??_mem_read:	
   638  00AC                     mem_write@data:	
   639                           ; 1 bytes @ 0xC
   640                           
   641                           
   642                           ; 1 bytes @ 0xC
   643  00AC                     	ds	1
   644  00AD                     ??_mem_write:	
   645  00AD                     mem_read@rta:	
   646                           ; 1 bytes @ 0xD
   647                           
   648                           
   649                           ; 1 bytes @ 0xD
   650  00AD                     	ds	1
   651  00AE                     mem_write@add_h:	
   652  00AE                     mem_read@add_h:	
   653                           ; 1 bytes @ 0xE
   654                           
   655                           
   656                           ; 1 bytes @ 0xE
   657  00AE                     	ds	1
   658  00AF                     mem_write@add_l:	
   659  00AF                     mem_read@add_l:	
   660                           ; 1 bytes @ 0xF
   661                           
   662                           
   663                           ; 1 bytes @ 0xF
   664  00AF                     	ds	1
   665  00B0                     ??_mem_init:	
   666                           
   667                           ; 1 bytes @ 0x10
   668  00B0                     	ds	1
   669  00B1                     mem_init@aux:	
   670                           
   671                           ; 1 bytes @ 0x11
   672  00B1                     	ds	1
   673  00B2                     ??_main:	
   674                           
   675                           ; 1 bytes @ 0x12
   676  00B2                     	ds	2
   677                           
   678                           	psect	cstackCOMMON
   679  0070                     __pcstackCOMMON:	
   680  0070                     ?_isdigit:	
   681  0070                     ?_ds_get:	
   682                           ; 1 bit 
   683                           
   684  0070                     ?_ds_set:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_i2c_init:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_si_reset:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ??_isdigit:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_uart_init:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_putch:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ??_putch:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_mem_init:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_save_event:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_ints_isr:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_i2c_start:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_i2c_rstart:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ??_i2c_rstart:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_i2c_stop:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ?_i2c_read:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?i1_mem_init:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?i1_i2c_start:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ??i1_i2c_start:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?i1_i2c_stop:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ??i1_i2c_stop:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?i1_i2c_write:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?i1_i2c_read:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ??i1_i2c_read:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_main:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?___wmul:	
   757                           ; 2 bytes @ 0x0
   758                           
   759  0070                     ?___lwdiv:	
   760                           ; 2 bytes @ 0x0
   761                           
   762  0070                     putch@data:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  0070                     _isdigit$936:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     i1i2c_write@ack:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ___wmul@multiplier:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ___lwdiv@divisor:	
   775                           ; 2 bytes @ 0x0
   776                           
   777                           
   778                           ; 2 bytes @ 0x0
   779  0070                     	ds	1
   780  0071                     ??i1_i2c_write:	
   781  0071                     isdigit@c:	
   782                           ; 1 bytes @ 0x1
   783                           
   784                           
   785                           ; 1 bytes @ 0x1
   786  0071                     	ds	1
   787  0072                     ___wmul@multiplicand:	
   788  0072                     ___lwdiv@dividend:	
   789                           ; 2 bytes @ 0x2
   790                           
   791                           
   792                           ; 2 bytes @ 0x2
   793  0072                     	ds	2
   794  0074                     ??___wmul:	
   795  0074                     ??___lwdiv:	
   796                           ; 1 bytes @ 0x4
   797                           
   798  0074                     ___wmul@product:	
   799                           ; 1 bytes @ 0x4
   800                           
   801                           
   802                           ; 2 bytes @ 0x4
   803  0074                     	ds	1
   804  0075                     ___lwdiv@quotient:	
   805                           
   806                           ; 2 bytes @ 0x5
   807  0075                     	ds	2
   808  0077                     ___lwdiv@counter:	
   809                           
   810                           ; 1 bytes @ 0x7
   811  0077                     	ds	1
   812  0078                     ?___lwmod:	
   813  0078                     i1i2c_read@resp:	
   814                           ; 2 bytes @ 0x8
   815                           
   816  0078                     ___lwmod@divisor:	
   817                           ; 1 bytes @ 0x8
   818                           
   819                           
   820                           ; 2 bytes @ 0x8
   821  0078                     	ds	1
   822  0079                     i1i2c_write@datum:	
   823  0079                     i1i2c_read@ack:	
   824                           ; 1 bytes @ 0x9
   825                           
   826                           
   827                           ; 1 bytes @ 0x9
   828  0079                     	ds	1
   829  007A                     ??_ds_get:	
   830  007A                     ??_ds_set:	
   831                           ; 1 bytes @ 0xA
   832                           
   833  007A                     ?i1_mem_write:	
   834                           ; 1 bytes @ 0xA
   835                           
   836  007A                     ?i1_mem_read:	
   837                           ; 1 bytes @ 0xA
   838                           
   839  007A                     ?_si_read_h:	
   840                           ; 1 bytes @ 0xA
   841                           
   842  007A                     ?_si_read_t:	
   843                           ; 2 bytes @ 0xA
   844                           
   845  007A                     ___lwmod@dividend:	
   846                           ; 2 bytes @ 0xA
   847                           
   848  007A                     i1mem_write@add:	
   849                           ; 2 bytes @ 0xA
   850                           
   851  007A                     i1mem_read@add:	
   852                           ; 2 bytes @ 0xA
   853                           
   854                           
   855                           ; 2 bytes @ 0xA
   856  007A                     	ds	1
   857  007B                     ds_set@data:	
   858  007B                     ds_get@data:	
   859                           ; 1 bytes @ 0xB
   860                           
   861                           
   862                           ; 1 bytes @ 0xB
   863  007B                     	ds	1
   864  007C                     ??_si_read_h:	
   865  007C                     ??_si_read_t:	
   866                           ; 1 bytes @ 0xC
   867                           
   868  007C                     ??___lwmod:	
   869                           ; 1 bytes @ 0xC
   870                           
   871  007C                     ??i1_mem_read:	
   872                           ; 1 bytes @ 0xC
   873                           
   874  007C                     ds_set@j:	
   875                           ; 1 bytes @ 0xC
   876                           
   877  007C                     ds_get@resp:	
   878                           ; 1 bytes @ 0xC
   879                           
   880  007C                     i1mem_write@data:	
   881                           ; 1 bytes @ 0xC
   882                           
   883                           
   884                           ; 1 bytes @ 0xC
   885  007C                     	ds	1
   886  007D                     ??i1_mem_write:	
   887  007D                     ___lwmod@counter:	
   888                           ; 1 bytes @ 0xD
   889                           
   890                           
   891                           ; 1 bytes @ 0xD
   892  007D                     	ds	1
   893                           
   894                           	psect	cstackBANK0
   895  0020                     __pcstackBANK0:	
   896  0020                     si_read_h@rta_h:	
   897  0020                     si_read_t@rta_h:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0020                     i1mem_write@add_h:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0020                     i1mem_read@rta:	
   904                           ; 1 bytes @ 0x0
   905                           
   906                           
   907                           ; 1 bytes @ 0x0
   908  0020                     	ds	1
   909  0021                     si_read_h@rta_l:	
   910  0021                     si_read_t@rta_l:	
   911                           ; 1 bytes @ 0x1
   912                           
   913  0021                     i1mem_write@add_l:	
   914                           ; 1 bytes @ 0x1
   915                           
   916  0021                     i1mem_read@add_h:	
   917                           ; 1 bytes @ 0x1
   918                           
   919                           
   920                           ; 1 bytes @ 0x1
   921  0021                     	ds	1
   922  0022                     i1mem_read@add_l:	
   923  0022                     si_read_h@rta:	
   924                           ; 1 bytes @ 0x2
   925                           
   926  0022                     si_read_t@rta:	
   927                           ; 2 bytes @ 0x2
   928                           
   929                           
   930                           ; 2 bytes @ 0x2
   931  0022                     	ds	1
   932  0023                     ??_save_event:	
   933  0023                     ??i1_mem_init:	
   934                           ; 1 bytes @ 0x3
   935                           
   936                           
   937                           ; 1 bytes @ 0x3
   938  0023                     	ds	1
   939  0024                     ?_printf:	
   940  0024                     i1mem_init@aux:	
   941                           ; 2 bytes @ 0x4
   942                           
   943                           
   944                           ; 1 bytes @ 0x4
   945  0024                     	ds	2
   946  0026                     ??_printf:	
   947  0026                     save_event@o:	
   948                           ; 1 bytes @ 0x6
   949                           
   950                           
   951                           ; 1 bytes @ 0x6
   952  0026                     	ds	1
   953  0027                     save_event@ax:	
   954                           
   955                           ; 1 bytes @ 0x7
   956  0027                     	ds	2
   957  0029                     printf@idx:	
   958                           
   959                           ; 1 bytes @ 0x9
   960  0029                     	ds	1
   961  002A                     _printf$750:	
   962                           
   963                           ; 1 bytes @ 0xA
   964  002A                     	ds	1
   965  002B                     printf@ap:	
   966                           
   967                           ; 1 bytes @ 0xB
   968  002B                     	ds	1
   969  002C                     printf@prec:	
   970                           
   971                           ; 1 bytes @ 0xC
   972  002C                     	ds	1
   973  002D                     printf@val:	
   974                           
   975                           ; 2 bytes @ 0xD
   976  002D                     	ds	2
   977  002F                     printf@width:	
   978                           
   979                           ; 2 bytes @ 0xF
   980  002F                     	ds	2
   981  0031                     printf@flag:	
   982                           
   983                           ; 1 bytes @ 0x11
   984  0031                     	ds	1
   985  0032                     printf@f:	
   986                           
   987                           ; 1 bytes @ 0x12
   988  0032                     	ds	1
   989  0033                     printf@c:	
   990                           
   991                           ; 1 bytes @ 0x13
   992  0033                     	ds	1
   993  0034                     ??_ints_isr:	
   994                           
   995                           ; 1 bytes @ 0x14
   996  0034                     	ds	8
   997  003C                     ints_isr@rcv:	
   998                           
   999                           ; 1 bytes @ 0x1C
  1000  003C                     	ds	1
  1001  003D                     ints_isr@hum_val:	
  1002                           
  1003                           ; 2 bytes @ 0x1D
  1004  003D                     	ds	2
  1005  003F                     ints_isr@temp_val:	
  1006                           
  1007                           ; 2 bytes @ 0x1F
  1008  003F                     	ds	2
  1009  0041                     ints_isr@dt:	
  1010                           
  1011                           ; 2 bytes @ 0x21
  1012  0041                     	ds	2
  1013  0043                     ints_isr@add:	
  1014                           
  1015                           ; 2 bytes @ 0x23
  1016  0043                     	ds	2
  1017  0045                     ints_isr@z:	
  1018                           
  1019                           ; 1 bytes @ 0x25
  1020  0045                     	ds	1
  1021  0046                     ints_isr@k:	
  1022                           
  1023                           ; 1 bytes @ 0x26
  1024  0046                     	ds	1
  1025  0047                     ints_isr@up:	
  1026                           
  1027                           ; 2 bytes @ 0x27
  1028  0047                     	ds	2
  1029  0049                     ints_isr@aux:	
  1030                           
  1031                           ; 2 bytes @ 0x29
  1032  0049                     	ds	2
  1033  004B                     ints_isr@temp_add:	
  1034                           
  1035                           ; 2 bytes @ 0x2B
  1036  004B                     	ds	2
  1037  004D                     ints_isr@hum_add:	
  1038                           
  1039                           ; 2 bytes @ 0x2D
  1040  004D                     	ds	2
  1041  004F                     ints_isr@aux2:	
  1042                           
  1043                           ; 2 bytes @ 0x2F
  1044  004F                     	ds	2
  1045  0051                     ints_isr@arg:	
  1046                           
  1047                           ; 1 bytes @ 0x31
  1048  0051                     	ds	1
  1049  0052                     ints_isr@n:	
  1050                           
  1051                           ; 2 bytes @ 0x32
  1052  0052                     	ds	2
  1053                           
  1054                           	psect	maintext
  1055  0C8B                     __pmaintext:	
  1056 ;;
  1057 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1058 ;;
  1059 ;; *************** function _main *****************
  1060 ;; Defined at:
  1061 ;;		line 256 in file "panda17.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  2  136[None  ] int 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0, pclath, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : B00/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0
  1077 ;;      Temps:          0       0       2       0       0
  1078 ;;      Totals:         0       0       2       0       0
  1079 ;;Total ram usage:        2 bytes
  1080 ;; Hardware stack levels required when called:    7
  1081 ;; This function calls:
  1082 ;;		_i2c_init
  1083 ;;		_init_timer2
  1084 ;;		_mem_init
  1085 ;;		_si_reset
  1086 ;;		_uart_init
  1087 ;; This function is called by:
  1088 ;;		Startup code after reset
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           
  1093                           ;psect for function _main
  1094  0C8B                     _main:	
  1095                           
  1096                           ;panda17.c: 257: OSCCON = 0b01010001;
  1097                           
  1098                           ;incstack = 0
  1099                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1100  0C8B  3051               	movlw	81
  1101  0C8C  1683               	bsf	3,5	;RP0=1, select bank1
  1102  0C8D  1303               	bcf	3,6	;RP1=0, select bank1
  1103  0C8E  008F               	movwf	15	;volatile
  1104                           
  1105                           ;panda17.c: 258: INTCON = 0xC0;
  1106  0C8F  30C0               	movlw	192
  1107  0C90  008B               	movwf	11	;volatile
  1108                           
  1109                           ;panda17.c: 260: TRISA = 0x00;
  1110  0C91  0185               	clrf	5	;volatile
  1111                           
  1112                           ;panda17.c: 261: TRISB = 0x00;
  1113  0C92  0186               	clrf	6	;volatile
  1114                           
  1115                           ;panda17.c: 264: ANSELHbits.ANS8 = 0;
  1116  0C93  1683               	bsf	3,5	;RP0=1, select bank3
  1117  0C94  1703               	bsf	3,6	;RP1=1, select bank3
  1118  0C95  1009               	bcf	9,0	;volatile
  1119                           
  1120                           ;panda17.c: 265: TRISBbits.TRISB2 = 1;
  1121  0C96  1683               	bsf	3,5	;RP0=1, select bank1
  1122  0C97  1303               	bcf	3,6	;RP1=0, select bank1
  1123  0C98  1506               	bsf	6,2	;volatile
  1124                           
  1125                           ;panda17.c: 266: PORTBbits.RB4 = 0;
  1126  0C99  1283               	bcf	3,5	;RP0=0, select bank0
  1127  0C9A  1303               	bcf	3,6	;RP1=0, select bank0
  1128  0C9B  1206               	bcf	6,4	;volatile
  1129                           
  1130                           ;panda17.c: 267: uart_init();
  1131  0C9C  120A  158A  2103  120A  158A  	fcall	_uart_init
  1132                           
  1133                           ;panda17.c: 268: i2c_init();
  1134  0CA1  120A  118A  27EC  120A  158A  	fcall	_i2c_init
  1135                           
  1136                           ;panda17.c: 269: _delay((unsigned long)((10)*(2000000/4000.0)));
  1137  0CA6  3007               	movlw	7
  1138  0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  1139  0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  1140  0CA9  00B3               	movwf	(??_main^(0+128)+1)
  1141  0CAA  307C               	movlw	124
  1142  0CAB  00B2               	movwf	??_main^(0+128)
  1143  0CAC                     u2317:	
  1144  0CAC  0BB2               	decfsz	??_main^(0+128),f
  1145  0CAD  2CAC               	goto	u2317
  1146  0CAE  0BB3               	decfsz	(??_main^(0+128)+1),f
  1147  0CAF  2CAC               	goto	u2317
  1148  0CB0  0000               	nop
  1149                           
  1150                           ;panda17.c: 270: mem_init();
  1151  0CB1  120A  158A  25DC  120A  158A  	fcall	_mem_init
  1152                           
  1153                           ;panda17.c: 271: si_reset();
  1154  0CB6  120A  158A  211B  120A  158A  	fcall	_si_reset
  1155                           
  1156                           ;panda17.c: 272: fyh = 1;
  1157  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  1159  0CBD  165F               	bsf	_fyh/(0+8),_fyh& (0+7)
  1160                           
  1161                           ;panda17.c: 275: _delay((unsigned long)((200)*(2000000/4000.0)));
  1162  0CBE  3082               	movlw	130
  1163  0CBF  1683               	bsf	3,5	;RP0=1, select bank1
  1164  0CC0  1303               	bcf	3,6	;RP1=0, select bank1
  1165  0CC1  00B3               	movwf	(??_main^(0+128)+1)
  1166  0CC2  30DD               	movlw	221
  1167  0CC3  00B2               	movwf	??_main^(0+128)
  1168  0CC4                     u2327:	
  1169  0CC4  0BB2               	decfsz	??_main^(0+128),f
  1170  0CC5  2CC4               	goto	u2327
  1171  0CC6  0BB3               	decfsz	(??_main^(0+128)+1),f
  1172  0CC7  2CC4               	goto	u2327
  1173                           
  1174                           ;panda17.c: 276: init_timer2(2,5,250);
  1175  0CC8  3005               	movlw	5
  1176  0CC9  1683               	bsf	3,5	;RP0=1, select bank1
  1177  0CCA  1303               	bcf	3,6	;RP1=0, select bank1
  1178  0CCB  00B2               	movwf	??_main^(0+128)
  1179  0CCC  0832               	movf	??_main^(0+128),w
  1180  0CCD  00A0               	movwf	init_timer2@post^(0+128)
  1181  0CCE  30FA               	movlw	250
  1182  0CCF  00B3               	movwf	(??_main+1)^(0+128)
  1183  0CD0  0833               	movf	(??_main+1)^(0+128),w
  1184  0CD1  00A1               	movwf	init_timer2@eoc^(0+128)
  1185  0CD2  3002               	movlw	2
  1186  0CD3  120A  158A  2208  120A  158A  	fcall	_init_timer2
  1187  0CD8                     l137:	
  1188                           ;panda17.c: 277: while(1){
  1189                           
  1190  0CD8  2CD8               	goto	l137
  1191  0CD9                     __end_of_main:	
  1192                           
  1193                           	psect	text1
  1194  0903                     __ptext1:	
  1195 ;; *************** function _uart_init *****************
  1196 ;; Defined at:
  1197 ;;		line 22 in file "panda17.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0
  1214 ;;      Totals:         0       0       0       0       0
  1215 ;;Total ram usage:        0 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    4
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _uart_init
  1227  0903                     _uart_init:	
  1228                           
  1229                           ;panda17.c: 23: PIE1bits.RCIE = 1;
  1230                           
  1231                           ;incstack = 0
  1232                           ; Regs used in _uart_init: [wreg+status,2]
  1233  0903  1683               	bsf	3,5	;RP0=1, select bank1
  1234  0904  1303               	bcf	3,6	;RP1=0, select bank1
  1235  0905  168C               	bsf	12,5	;volatile
  1236                           
  1237                           ;panda17.c: 24: PIE1bits.TXIE = 0;
  1238  0906  120C               	bcf	12,4	;volatile
  1239                           
  1240                           ;panda17.c: 25: TXSTAbits.BRGH = 1;
  1241  0907  1518               	bsf	24,2	;volatile
  1242                           
  1243                           ;panda17.c: 26: BAUDCTLbits.BRG16 = 0;
  1244  0908  1683               	bsf	3,5	;RP0=1, select bank3
  1245  0909  1703               	bsf	3,6	;RP1=1, select bank3
  1246  090A  1187               	bcf	7,3	;volatile
  1247                           
  1248                           ;panda17.c: 27: SPBRGH = 0x00;
  1249  090B  1683               	bsf	3,5	;RP0=1, select bank1
  1250  090C  1303               	bcf	3,6	;RP1=0, select bank1
  1251  090D  019A               	clrf	26	;volatile
  1252                           
  1253                           ;panda17.c: 29: SPBRG = 0x0C;
  1254  090E  300C               	movlw	12
  1255  090F  0099               	movwf	25	;volatile
  1256                           
  1257                           ;panda17.c: 30: TXSTAbits.SYNC = 0;
  1258  0910  1218               	bcf	24,4	;volatile
  1259                           
  1260                           ;panda17.c: 31: RCSTAbits.SPEN = 1;
  1261  0911  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0912  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0913  1798               	bsf	24,7	;volatile
  1264                           
  1265                           ;panda17.c: 32: TXSTAbits.TXEN = 1;
  1266  0914  1683               	bsf	3,5	;RP0=1, select bank1
  1267  0915  1303               	bcf	3,6	;RP1=0, select bank1
  1268  0916  1698               	bsf	24,5	;volatile
  1269                           
  1270                           ;panda17.c: 33: RCSTAbits.CREN = 1;
  1271  0917  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0918  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0919  1618               	bsf	24,4	;volatile
  1274  091A  0008               	return
  1275  091B                     __end_of_uart_init:	
  1276                           
  1277                           	psect	text2
  1278  091B                     __ptext2:	
  1279 ;; *************** function _si_reset *****************
  1280 ;; Defined at:
  1281 ;;		line 13 in file "si7021.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;		None
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;		None
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0, pclath, cstack
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1295 ;;      Params:         0       0       0       0       0
  1296 ;;      Locals:         0       0       0       0       0
  1297 ;;      Temps:          0       0       0       0       0
  1298 ;;      Totals:         0       0       0       0       0
  1299 ;;Total ram usage:        0 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    5
  1302 ;; This function calls:
  1303 ;;		_i2c_start
  1304 ;;		_i2c_stop
  1305 ;;		_i2c_write
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           
  1312                           ;psect for function _si_reset
  1313  091B                     _si_reset:	
  1314                           
  1315                           ;si7021.c: 14: i2c_start();
  1316                           
  1317                           ;incstack = 0
  1318                           ; Regs used in _si_reset: [wreg+status,2+status,0+pclath+cstack]
  1319  091B  120A  158A  21C2  120A  158A  	fcall	_i2c_start
  1320                           
  1321                           ;si7021.c: 15: i2c_write(0x80,1);
  1322  0920  1683               	bsf	3,5	;RP0=1, select bank1
  1323  0921  1303               	bcf	3,6	;RP1=0, select bank1
  1324  0922  01A0               	clrf	i2c_write@ack^(0+128)
  1325  0923  0AA0               	incf	i2c_write@ack^(0+128),f
  1326  0924  3080               	movlw	128
  1327  0925  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1328                           
  1329                           ;si7021.c: 16: i2c_write(0xFE,1);
  1330  092A  1683               	bsf	3,5	;RP0=1, select bank1
  1331  092B  1303               	bcf	3,6	;RP1=0, select bank1
  1332  092C  01A0               	clrf	i2c_write@ack^(0+128)
  1333  092D  0AA0               	incf	i2c_write@ack^(0+128),f
  1334  092E  30FE               	movlw	254
  1335  092F  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1336                           
  1337                           ;si7021.c: 17: i2c_stop();
  1338  0934  120A  158A  21E5   	fcall	_i2c_stop
  1339  0937  0008               	return
  1340  0938                     __end_of_si_reset:	
  1341                           
  1342                           	psect	text3
  1343  0DDC                     __ptext3:	
  1344 ;; *************** function _mem_init *****************
  1345 ;; Defined at:
  1346 ;;		line 42 in file "panda17.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;  aux             1   17[BANK1 ] unsigned char 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg, status,2, status,0, pclath, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1360 ;;      Params:         0       0       0       0       0
  1361 ;;      Locals:         0       0       1       0       0
  1362 ;;      Temps:          0       0       1       0       0
  1363 ;;      Totals:         0       0       2       0       0
  1364 ;;Total ram usage:        2 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    6
  1367 ;; This function calls:
  1368 ;;		_mem_read
  1369 ;;		_mem_write
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _mem_init
  1377  0DDC                     _mem_init:	
  1378                           
  1379                           ;panda17.c: 43: unsigned char aux;
  1380                           ;panda17.c: 44: aux = mem_read(0x0002);
  1381                           
  1382                           ;incstack = 0
  1383                           ; Regs used in _mem_init: [wreg+status,2+status,0+pclath+cstack]
  1384  0DDC  3002               	movlw	2
  1385  0DDD  1683               	bsf	3,5	;RP0=1, select bank1
  1386  0DDE  1303               	bcf	3,6	;RP1=0, select bank1
  1387  0DDF  00AA               	movwf	mem_read@add^(0+128)
  1388  0DE0  3000               	movlw	0
  1389  0DE1  00AB               	movwf	(mem_read@add^(0+128)+1)
  1390  0DE2  120A  158A  23F3  120A  158A  	fcall	_mem_read
  1391  0DE7  1683               	bsf	3,5	;RP0=1, select bank1
  1392  0DE8  1303               	bcf	3,6	;RP1=0, select bank1
  1393  0DE9  00B0               	movwf	??_mem_init^(0+128)
  1394  0DEA  0830               	movf	??_mem_init^(0+128),w
  1395  0DEB  00B1               	movwf	mem_init@aux^(0+128)
  1396                           
  1397                           ;panda17.c: 45: if (aux != 0xAA){
  1398  0DEC  30AA               	movlw	170
  1399  0DED  0631               	xorwf	mem_init@aux^(0+128),w
  1400  0DEE  1903               	btfsc	3,2
  1401  0DEF  0008               	return
  1402                           
  1403                           ;panda17.c: 46: mem_write(0x0002,0xAA);
  1404  0DF0  3002               	movlw	2
  1405  0DF1  00AA               	movwf	mem_write@add^(0+128)
  1406  0DF2  3000               	movlw	0
  1407  0DF3  00AB               	movwf	(mem_write@add^(0+128)+1)
  1408  0DF4  30AA               	movlw	170
  1409  0DF5  00B0               	movwf	??_mem_init^(0+128)
  1410  0DF6  0830               	movf	??_mem_init^(0+128),w
  1411  0DF7  00AC               	movwf	mem_write@data^(0+128)
  1412  0DF8  120A  158A  243D  120A  158A  	fcall	_mem_write
  1413                           
  1414                           ;panda17.c: 47: mem_write(0x0003,0x00);
  1415  0DFD  3003               	movlw	3
  1416  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  1417  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  1418  0E00  00AA               	movwf	mem_write@add^(0+128)
  1419  0E01  3000               	movlw	0
  1420  0E02  00AB               	movwf	(mem_write@add^(0+128)+1)
  1421  0E03  01AC               	clrf	mem_write@data^(0+128)
  1422  0E04  120A  158A  243D  120A  158A  	fcall	_mem_write
  1423                           
  1424                           ;panda17.c: 48: mem_write(0x000A,0x00);
  1425  0E09  300A               	movlw	10
  1426  0E0A  1683               	bsf	3,5	;RP0=1, select bank1
  1427  0E0B  1303               	bcf	3,6	;RP1=0, select bank1
  1428  0E0C  00AA               	movwf	mem_write@add^(0+128)
  1429  0E0D  3000               	movlw	0
  1430  0E0E  00AB               	movwf	(mem_write@add^(0+128)+1)
  1431  0E0F  01AC               	clrf	mem_write@data^(0+128)
  1432  0E10  120A  158A  243D  120A  158A  	fcall	_mem_write
  1433                           
  1434                           ;panda17.c: 49: mem_write(0x000B,0x00);
  1435  0E15  300B               	movlw	11
  1436  0E16  1683               	bsf	3,5	;RP0=1, select bank1
  1437  0E17  1303               	bcf	3,6	;RP1=0, select bank1
  1438  0E18  00AA               	movwf	mem_write@add^(0+128)
  1439  0E19  3000               	movlw	0
  1440  0E1A  00AB               	movwf	(mem_write@add^(0+128)+1)
  1441  0E1B  01AC               	clrf	mem_write@data^(0+128)
  1442  0E1C  120A  158A  243D  120A  158A  	fcall	_mem_write
  1443                           
  1444                           ;panda17.c: 50: mem_write(0x000C,0x00);
  1445  0E21  300C               	movlw	12
  1446  0E22  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0E23  1303               	bcf	3,6	;RP1=0, select bank1
  1448  0E24  00AA               	movwf	mem_write@add^(0+128)
  1449  0E25  3000               	movlw	0
  1450  0E26  00AB               	movwf	(mem_write@add^(0+128)+1)
  1451  0E27  01AC               	clrf	mem_write@data^(0+128)
  1452  0E28  120A  158A  243D  120A  158A  	fcall	_mem_write
  1453                           
  1454                           ;panda17.c: 51: mem_write(0x000D,0x00);
  1455  0E2D  300D               	movlw	13
  1456  0E2E  1683               	bsf	3,5	;RP0=1, select bank1
  1457  0E2F  1303               	bcf	3,6	;RP1=0, select bank1
  1458  0E30  00AA               	movwf	mem_write@add^(0+128)
  1459  0E31  3000               	movlw	0
  1460  0E32  00AB               	movwf	(mem_write@add^(0+128)+1)
  1461  0E33  01AC               	clrf	mem_write@data^(0+128)
  1462  0E34  120A  158A  243D   	fcall	_mem_write
  1463  0E37  0008               	return
  1464  0E38                     __end_of_mem_init:	
  1465                           
  1466                           	psect	text4
  1467  0C3D                     __ptext4:	
  1468 ;; *************** function _mem_write *****************
  1469 ;; Defined at:
  1470 ;;		line 13 in file "24lc512.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  add             2   10[BANK1 ] unsigned int 
  1473 ;;  data            1   12[BANK1 ] unsigned char 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  add_l           1   15[BANK1 ] unsigned char 
  1476 ;;  add_h           1   14[BANK1 ] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       3       0       0
  1487 ;;      Locals:         0       0       2       0       0
  1488 ;;      Temps:          0       0       1       0       0
  1489 ;;      Totals:         0       0       6       0       0
  1490 ;;Total ram usage:        6 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; Hardware stack levels required when called:    5
  1493 ;; This function calls:
  1494 ;;		_i2c_start
  1495 ;;		_i2c_stop
  1496 ;;		_i2c_write
  1497 ;; This function is called by:
  1498 ;;		_mem_init
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function _mem_write
  1504  0C3D                     _mem_write:	
  1505                           
  1506                           ;24lc512.c: 14: unsigned char add_h,add_l;
  1507                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  1508                           
  1509                           ;incstack = 0
  1510                           ; Regs used in _mem_write: [wreg+status,2+status,0+pclath+cstack]
  1511  0C3D  1683               	bsf	3,5	;RP0=1, select bank1
  1512  0C3E  1303               	bcf	3,6	;RP1=0, select bank1
  1513  0C3F  082B               	movf	(mem_write@add+1)^(0+128),w
  1514  0C40  00AD               	movwf	??_mem_write^(0+128)
  1515  0C41  082D               	movf	??_mem_write^(0+128),w
  1516  0C42  00AE               	movwf	mem_write@add_h^(0+128)
  1517                           
  1518                           ;24lc512.c: 16: add_l = add & 0x00FF;
  1519  0C43  082A               	movf	mem_write@add^(0+128),w
  1520  0C44  00AD               	movwf	??_mem_write^(0+128)
  1521  0C45  082D               	movf	??_mem_write^(0+128),w
  1522  0C46  00AF               	movwf	mem_write@add_l^(0+128)
  1523                           
  1524                           ;24lc512.c: 17: i2c_start();
  1525  0C47  120A  158A  21C2  120A  158A  	fcall	_i2c_start
  1526                           
  1527                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  1528  0C4C  1683               	bsf	3,5	;RP0=1, select bank1
  1529  0C4D  1303               	bcf	3,6	;RP1=0, select bank1
  1530  0C4E  01A0               	clrf	i2c_write@ack^(0+128)
  1531  0C4F  30A0               	movlw	160
  1532  0C50  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1533                           
  1534                           ;24lc512.c: 19: i2c_write(add_h,0);
  1535  0C55  1683               	bsf	3,5	;RP0=1, select bank1
  1536  0C56  1303               	bcf	3,6	;RP1=0, select bank1
  1537  0C57  01A0               	clrf	i2c_write@ack^(0+128)
  1538  0C58  082E               	movf	mem_write@add_h^(0+128),w
  1539  0C59  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1540                           
  1541                           ;24lc512.c: 20: i2c_write(add_l,0);
  1542  0C5E  1683               	bsf	3,5	;RP0=1, select bank1
  1543  0C5F  1303               	bcf	3,6	;RP1=0, select bank1
  1544  0C60  01A0               	clrf	i2c_write@ack^(0+128)
  1545  0C61  082F               	movf	mem_write@add_l^(0+128),w
  1546  0C62  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1547                           
  1548                           ;24lc512.c: 21: i2c_write(data,0);
  1549  0C67  1683               	bsf	3,5	;RP0=1, select bank1
  1550  0C68  1303               	bcf	3,6	;RP1=0, select bank1
  1551  0C69  01A0               	clrf	i2c_write@ack^(0+128)
  1552  0C6A  082C               	movf	mem_write@data^(0+128),w
  1553  0C6B  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1554                           
  1555                           ;24lc512.c: 22: i2c_stop();
  1556  0C70  120A  158A  21E5  120A  158A  	fcall	_i2c_stop
  1557  0C75                     L1:	
  1558                           
  1559                           ;24lc512.c: 24: i2c_start();
  1560  0C75  120A  158A  21C2  120A  158A  	fcall	_i2c_start
  1561                           
  1562                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  1563  0C7A  1683               	bsf	3,5	;RP0=1, select bank1
  1564  0C7B  1303               	bcf	3,6	;RP1=0, select bank1
  1565  0C7C  01A0               	clrf	i2c_write@ack^(0+128)
  1566  0C7D  30A0               	movlw	160
  1567  0C7E  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1568                           
  1569                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  1570  0C83  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0C84  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0C85  1B11               	btfsc	17,6	;volatile
  1573  0C86  2C75               	goto	L1
  1574                           
  1575                           ;24lc512.c: 30: }
  1576                           ;24lc512.c: 31: i2c_stop();
  1577                           
  1578                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  1579                           
  1580                           ;24lc512.c: 28: i2c_start();
  1581  0C87  120A  158A  21E5   	fcall	_i2c_stop
  1582  0C8A  0008               	return
  1583  0C8B                     __end_of_mem_write:	
  1584                           
  1585                           	psect	text5
  1586  0BF3                     __ptext5:	
  1587 ;; *************** function _mem_read *****************
  1588 ;; Defined at:
  1589 ;;		line 34 in file "24lc512.c"
  1590 ;; Parameters:    Size  Location     Type
  1591 ;;  add             2   10[BANK1 ] unsigned int 
  1592 ;; Auto vars:     Size  Location     Type
  1593 ;;  add_l           1   15[BANK1 ] unsigned char 
  1594 ;;  add_h           1   14[BANK1 ] unsigned char 
  1595 ;;  rta             1   13[BANK1 ] unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  1    wreg      unsigned char 
  1598 ;; Registers used:
  1599 ;;		wreg, status,2, status,0, pclath, cstack
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1605 ;;      Params:         0       0       2       0       0
  1606 ;;      Locals:         0       0       3       0       0
  1607 ;;      Temps:          0       0       1       0       0
  1608 ;;      Totals:         0       0       6       0       0
  1609 ;;Total ram usage:        6 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; Hardware stack levels required when called:    5
  1612 ;; This function calls:
  1613 ;;		_i2c_read
  1614 ;;		_i2c_start
  1615 ;;		_i2c_stop
  1616 ;;		_i2c_write
  1617 ;; This function is called by:
  1618 ;;		_mem_init
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function _mem_read
  1624  0BF3                     _mem_read:	
  1625                           
  1626                           ;24lc512.c: 35: unsigned char rta;
  1627                           ;24lc512.c: 36: unsigned char add_h,add_l;
  1628                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  1629                           
  1630                           ;incstack = 0
  1631                           ; Regs used in _mem_read: [wreg+status,2+status,0+pclath+cstack]
  1632  0BF3  1683               	bsf	3,5	;RP0=1, select bank1
  1633  0BF4  1303               	bcf	3,6	;RP1=0, select bank1
  1634  0BF5  082B               	movf	(mem_read@add+1)^(0+128),w
  1635  0BF6  00AC               	movwf	??_mem_read^(0+128)
  1636  0BF7  082C               	movf	??_mem_read^(0+128),w
  1637  0BF8  00AE               	movwf	mem_read@add_h^(0+128)
  1638                           
  1639                           ;24lc512.c: 38: add_l = add & 0x00FF;
  1640  0BF9  082A               	movf	mem_read@add^(0+128),w
  1641  0BFA  00AC               	movwf	??_mem_read^(0+128)
  1642  0BFB  082C               	movf	??_mem_read^(0+128),w
  1643  0BFC  00AF               	movwf	mem_read@add_l^(0+128)
  1644                           
  1645                           ;24lc512.c: 39: i2c_start();
  1646  0BFD  120A  158A  21C2  120A  158A  	fcall	_i2c_start
  1647                           
  1648                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  1649  0C02  1683               	bsf	3,5	;RP0=1, select bank1
  1650  0C03  1303               	bcf	3,6	;RP1=0, select bank1
  1651  0C04  01A0               	clrf	i2c_write@ack^(0+128)
  1652  0C05  30A0               	movlw	160
  1653  0C06  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1654                           
  1655                           ;24lc512.c: 41: i2c_write(add_h,0);
  1656  0C0B  1683               	bsf	3,5	;RP0=1, select bank1
  1657  0C0C  1303               	bcf	3,6	;RP1=0, select bank1
  1658  0C0D  01A0               	clrf	i2c_write@ack^(0+128)
  1659  0C0E  082E               	movf	mem_read@add_h^(0+128),w
  1660  0C0F  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1661                           
  1662                           ;24lc512.c: 42: i2c_write(add_l,0);
  1663  0C14  1683               	bsf	3,5	;RP0=1, select bank1
  1664  0C15  1303               	bcf	3,6	;RP1=0, select bank1
  1665  0C16  01A0               	clrf	i2c_write@ack^(0+128)
  1666  0C17  082F               	movf	mem_read@add_l^(0+128),w
  1667  0C18  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1668                           
  1669                           ;24lc512.c: 43: i2c_start();
  1670  0C1D  120A  158A  21C2  120A  158A  	fcall	_i2c_start
  1671                           
  1672                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  1673  0C22  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0C23  1303               	bcf	3,6	;RP1=0, select bank1
  1675  0C24  01A0               	clrf	i2c_write@ack^(0+128)
  1676  0C25  30A1               	movlw	161
  1677  0C26  120A  158A  22F6  120A  158A  	fcall	_i2c_write
  1678                           
  1679                           ;24lc512.c: 45: rta = i2c_read(0);
  1680  0C2B  3000               	movlw	0
  1681  0C2C  120A  118A  2787  120A  158A  	fcall	_i2c_read
  1682  0C31  1683               	bsf	3,5	;RP0=1, select bank1
  1683  0C32  1303               	bcf	3,6	;RP1=0, select bank1
  1684  0C33  00AC               	movwf	??_mem_read^(0+128)
  1685  0C34  082C               	movf	??_mem_read^(0+128),w
  1686  0C35  00AD               	movwf	mem_read@rta^(0+128)
  1687                           
  1688                           ;24lc512.c: 46: i2c_stop();
  1689  0C36  120A  158A  21E5   	fcall	_i2c_stop
  1690                           
  1691                           ;24lc512.c: 47: return rta;
  1692  0C39  1683               	bsf	3,5	;RP0=1, select bank1
  1693  0C3A  1303               	bcf	3,6	;RP1=0, select bank1
  1694  0C3B  082D               	movf	mem_read@rta^(0+128),w
  1695  0C3C  0008               	return
  1696  0C3D                     __end_of_mem_read:	
  1697                           
  1698                           	psect	text6
  1699  0AF6                     __ptext6:	
  1700 ;; *************** function _i2c_write *****************
  1701 ;; Defined at:
  1702 ;;		line 39 in file "i2clib.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;  datum           1    wreg     unsigned char 
  1705 ;;  ack             1    0[BANK1 ] unsigned char 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  datum           1    9[BANK1 ] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      void 
  1710 ;; Registers used:
  1711 ;;		wreg, status,2, status,0
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1717 ;;      Params:         0       0       1       0       0
  1718 ;;      Locals:         0       0       1       0       0
  1719 ;;      Temps:          0       0       8       0       0
  1720 ;;      Totals:         0       0      10       0       0
  1721 ;;Total ram usage:       10 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    4
  1724 ;; This function calls:
  1725 ;;		Nothing
  1726 ;; This function is called by:
  1727 ;;		_mem_write
  1728 ;;		_mem_read
  1729 ;;		_si_reset
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           
  1734                           ;psect for function _i2c_write
  1735  0AF6                     _i2c_write:	
  1736                           
  1737                           ;incstack = 0
  1738                           ; Regs used in _i2c_write: [wreg+status,2+status,0]
  1739                           ;i2c_write@datum stored from wreg
  1740  0AF6  1683               	bsf	3,5	;RP0=1, select bank1
  1741  0AF7  1303               	bcf	3,6	;RP1=0, select bank1
  1742  0AF8  00A9               	movwf	i2c_write@datum^(0+128)
  1743  0AF9                     l1571:	
  1744                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1745                           
  1746  0AF9  0811               	movf	17,w	;volatile
  1747  0AFA  3901               	andlw	1
  1748  0AFB  00A1               	movwf	??_i2c_write^(0+128)
  1749  0AFC  0C11               	rrf	17,w	;volatile
  1750  0AFD  3901               	andlw	1
  1751  0AFE  00A2               	movwf	(??_i2c_write+1)^(0+128)
  1752  0AFF  0C11               	rrf	17,w	;volatile
  1753  0B00  00A3               	movwf	(??_i2c_write+2)^(0+128)
  1754  0B01  0CA3               	rrf	(??_i2c_write+2)^(0+128),f
  1755  0B02  0C23               	rrf	(??_i2c_write+2)^(0+128),w
  1756  0B03  3901               	andlw	1
  1757  0B04  00A4               	movwf	(??_i2c_write+3)^(0+128)
  1758  0B05  0E11               	swapf	17,w	;volatile
  1759  0B06  3901               	andlw	1
  1760  0B07  00A5               	movwf	(??_i2c_write+4)^(0+128)
  1761  0B08  0C11               	rrf	17,w	;volatile
  1762  0B09  00A6               	movwf	(??_i2c_write+5)^(0+128)
  1763  0B0A  0C26               	rrf	(??_i2c_write+5)^(0+128),w
  1764  0B0B  3901               	andlw	1
  1765  0B0C  00A7               	movwf	(??_i2c_write+6)^(0+128)
  1766  0B0D  0C14               	rrf	20,w	;volatile
  1767  0B0E  00A8               	movwf	(??_i2c_write+7)^(0+128)
  1768  0B0F  0C28               	rrf	(??_i2c_write+7)^(0+128),w
  1769  0B10  3901               	andlw	1
  1770  0B11  0427               	iorwf	(??_i2c_write+6)^(0+128),w
  1771  0B12  0425               	iorwf	(??_i2c_write+4)^(0+128),w
  1772  0B13  0424               	iorwf	(??_i2c_write+3)^(0+128),w
  1773  0B14  0422               	iorwf	(??_i2c_write+1)^(0+128),w
  1774  0B15  0421               	iorwf	??_i2c_write^(0+128),w
  1775  0B16  1D03               	btfss	3,2
  1776  0B17  2AF9               	goto	l1571
  1777                           
  1778                           ;i2clib.c: 42: SSPBUF = datum;
  1779  0B18  0829               	movf	i2c_write@datum^(0+128),w
  1780  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  1781  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  1782  0B1B  0093               	movwf	19	;volatile
  1783  0B1C                     l181:	
  1784                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  1785                           
  1786  0B1C  1683               	bsf	3,5	;RP0=1, select bank1
  1787  0B1D  1303               	bcf	3,6	;RP1=0, select bank1
  1788  0B1E  1814               	btfsc	20,0	;volatile
  1789  0B1F  2B1C               	goto	l181
  1790                           
  1791                           ;i2clib.c: 44: if(ack){
  1792  0B20  0820               	movf	i2c_write@ack^(0+128),w
  1793  0B21  1903               	btfsc	3,2
  1794  0B22  2B25               	goto	l188
  1795  0B23                     l185:	
  1796                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  1797                           
  1798  0B23  1B11               	btfsc	17,6	;volatile
  1799  0B24  2B23               	goto	l185
  1800  0B25                     l188:	
  1801                           ;i2clib.c: 46: }
  1802                           ;i2clib.c: 47: }
  1803                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  1804                           
  1805  0B25  1283               	bcf	3,5	;RP0=0, select bank0
  1806  0B26  198C               	btfsc	12,3	;volatile
  1807  0B27  0008               	return
  1808  0B28  2B25               	goto	l188
  1809  0B29                     __end_of_i2c_write:	
  1810                           
  1811                           	psect	text7
  1812  09E5                     __ptext7:	
  1813 ;; *************** function _i2c_stop *****************
  1814 ;; Defined at:
  1815 ;;		line 34 in file "i2clib.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         0       0       0       0       0
  1830 ;;      Locals:         0       0       0       0       0
  1831 ;;      Temps:          0       0       8       0       0
  1832 ;;      Totals:         0       0       8       0       0
  1833 ;;Total ram usage:        8 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    4
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_mem_write
  1840 ;;		_mem_read
  1841 ;;		_si_reset
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           
  1846                           ;psect for function _i2c_stop
  1847  09E5                     _i2c_stop:	
  1848  09E5                     l1567:	
  1849                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1850                           
  1851                           ;incstack = 0
  1852                           ; Regs used in _i2c_stop: [wreg+status,2+status,0]
  1853                           
  1854  09E5  1683               	bsf	3,5	;RP0=1, select bank1
  1855  09E6  1303               	bcf	3,6	;RP1=0, select bank1
  1856  09E7  0811               	movf	17,w	;volatile
  1857  09E8  3901               	andlw	1
  1858  09E9  00A0               	movwf	??_i2c_stop^(0+128)
  1859  09EA  0C11               	rrf	17,w	;volatile
  1860  09EB  3901               	andlw	1
  1861  09EC  00A1               	movwf	(??_i2c_stop+1)^(0+128)
  1862  09ED  0C11               	rrf	17,w	;volatile
  1863  09EE  00A2               	movwf	(??_i2c_stop+2)^(0+128)
  1864  09EF  0CA2               	rrf	(??_i2c_stop+2)^(0+128),f
  1865  09F0  0C22               	rrf	(??_i2c_stop+2)^(0+128),w
  1866  09F1  3901               	andlw	1
  1867  09F2  00A3               	movwf	(??_i2c_stop+3)^(0+128)
  1868  09F3  0E11               	swapf	17,w	;volatile
  1869  09F4  3901               	andlw	1
  1870  09F5  00A4               	movwf	(??_i2c_stop+4)^(0+128)
  1871  09F6  0C11               	rrf	17,w	;volatile
  1872  09F7  00A5               	movwf	(??_i2c_stop+5)^(0+128)
  1873  09F8  0C25               	rrf	(??_i2c_stop+5)^(0+128),w
  1874  09F9  3901               	andlw	1
  1875  09FA  00A6               	movwf	(??_i2c_stop+6)^(0+128)
  1876  09FB  0C14               	rrf	20,w	;volatile
  1877  09FC  00A7               	movwf	(??_i2c_stop+7)^(0+128)
  1878  09FD  0C27               	rrf	(??_i2c_stop+7)^(0+128),w
  1879  09FE  3901               	andlw	1
  1880  09FF  0426               	iorwf	(??_i2c_stop+6)^(0+128),w
  1881  0A00  0424               	iorwf	(??_i2c_stop+4)^(0+128),w
  1882  0A01  0423               	iorwf	(??_i2c_stop+3)^(0+128),w
  1883  0A02  0421               	iorwf	(??_i2c_stop+1)^(0+128),w
  1884  0A03  0420               	iorwf	??_i2c_stop^(0+128),w
  1885  0A04  1D03               	btfss	3,2
  1886  0A05  29E5               	goto	l1567
  1887                           
  1888                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  1889  0A06  1511               	bsf	17,2	;volatile
  1890  0A07  0008               	return
  1891  0A08                     __end_of_i2c_stop:	
  1892                           
  1893                           	psect	text8
  1894  09C2                     __ptext8:	
  1895 ;; *************** function _i2c_start *****************
  1896 ;; Defined at:
  1897 ;;		line 24 in file "i2clib.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;		None
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;		None
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1911 ;;      Params:         0       0       0       0       0
  1912 ;;      Locals:         0       0       0       0       0
  1913 ;;      Temps:          0       0       8       0       0
  1914 ;;      Totals:         0       0       8       0       0
  1915 ;;Total ram usage:        8 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    4
  1918 ;; This function calls:
  1919 ;;		Nothing
  1920 ;; This function is called by:
  1921 ;;		_mem_write
  1922 ;;		_mem_read
  1923 ;;		_si_reset
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function _i2c_start
  1929  09C2                     _i2c_start:	
  1930  09C2                     l1559:	
  1931                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  1932                           
  1933                           ;incstack = 0
  1934                           ; Regs used in _i2c_start: [wreg+status,2+status,0]
  1935                           
  1936  09C2  1683               	bsf	3,5	;RP0=1, select bank1
  1937  09C3  1303               	bcf	3,6	;RP1=0, select bank1
  1938  09C4  0811               	movf	17,w	;volatile
  1939  09C5  3901               	andlw	1
  1940  09C6  00A0               	movwf	??_i2c_start^(0+128)
  1941  09C7  0C11               	rrf	17,w	;volatile
  1942  09C8  3901               	andlw	1
  1943  09C9  00A1               	movwf	(??_i2c_start+1)^(0+128)
  1944  09CA  0C11               	rrf	17,w	;volatile
  1945  09CB  00A2               	movwf	(??_i2c_start+2)^(0+128)
  1946  09CC  0CA2               	rrf	(??_i2c_start+2)^(0+128),f
  1947  09CD  0C22               	rrf	(??_i2c_start+2)^(0+128),w
  1948  09CE  3901               	andlw	1
  1949  09CF  00A3               	movwf	(??_i2c_start+3)^(0+128)
  1950  09D0  0E11               	swapf	17,w	;volatile
  1951  09D1  3901               	andlw	1
  1952  09D2  00A4               	movwf	(??_i2c_start+4)^(0+128)
  1953  09D3  0C11               	rrf	17,w	;volatile
  1954  09D4  00A5               	movwf	(??_i2c_start+5)^(0+128)
  1955  09D5  0C25               	rrf	(??_i2c_start+5)^(0+128),w
  1956  09D6  3901               	andlw	1
  1957  09D7  00A6               	movwf	(??_i2c_start+6)^(0+128)
  1958  09D8  0C14               	rrf	20,w	;volatile
  1959  09D9  00A7               	movwf	(??_i2c_start+7)^(0+128)
  1960  09DA  0C27               	rrf	(??_i2c_start+7)^(0+128),w
  1961  09DB  3901               	andlw	1
  1962  09DC  0426               	iorwf	(??_i2c_start+6)^(0+128),w
  1963  09DD  0424               	iorwf	(??_i2c_start+4)^(0+128),w
  1964  09DE  0423               	iorwf	(??_i2c_start+3)^(0+128),w
  1965  09DF  0421               	iorwf	(??_i2c_start+1)^(0+128),w
  1966  09E0  0420               	iorwf	??_i2c_start^(0+128),w
  1967  09E1  1D03               	btfss	3,2
  1968  09E2  29C2               	goto	l1559
  1969                           
  1970                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  1971  09E3  1411               	bsf	17,0	;volatile
  1972  09E4  0008               	return
  1973  09E5                     __end_of_i2c_start:	
  1974                           
  1975                           	psect	text9
  1976  0787                     __ptext9:	
  1977 ;; *************** function _i2c_read *****************
  1978 ;; Defined at:
  1979 ;;		line 51 in file "i2clib.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  ack             1    wreg     unsigned char 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  ack             1    9[BANK1 ] unsigned char 
  1984 ;;  resp            1    8[BANK1 ] unsigned char 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  1    wreg      unsigned char 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1994 ;;      Params:         0       0       0       0       0
  1995 ;;      Locals:         0       0       2       0       0
  1996 ;;      Temps:          0       0       8       0       0
  1997 ;;      Totals:         0       0      10       0       0
  1998 ;;Total ram usage:       10 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; Hardware stack levels required when called:    4
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_mem_read
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           
  2009                           ;psect for function _i2c_read
  2010  0787                     _i2c_read:	
  2011                           
  2012                           ;incstack = 0
  2013                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  2014                           ;i2c_read@ack stored from wreg
  2015  0787  1683               	bsf	3,5	;RP0=1, select bank1
  2016  0788  1303               	bcf	3,6	;RP1=0, select bank1
  2017  0789  00A9               	movwf	i2c_read@ack^(0+128)
  2018                           
  2019                           ;i2clib.c: 52: unsigned char resp;
  2020                           ;i2clib.c: 53: static bit flag, not_flag;
  2021                           ;i2clib.c: 54: flag = ack & 0x01;
  2022  078A  1283               	bcf	3,5	;RP0=0, select bank0
  2023  078B  1303               	bcf	3,6	;RP1=0, select bank0
  2024  078C  10DF               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2025  078D  1683               	bsf	3,5	;RP0=1, select bank1
  2026  078E  1303               	bcf	3,6	;RP1=0, select bank1
  2027  078F  1C29               	btfss	i2c_read@ack^(0+128),0
  2028  0790  2F94               	goto	l1581
  2029  0791  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0792  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0793  14DF               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2032  0794                     l1581:	
  2033                           
  2034                           ;i2clib.c: 55: if (ack == 1){
  2035  0794  1683               	bsf	3,5	;RP0=1, select bank1
  2036  0795  1303               	bcf	3,6	;RP1=0, select bank1
  2037  0796  0329               	decf	i2c_read@ack^(0+128),w
  2038  0797  1D03               	btfss	3,2
  2039  0798  2F9C               	goto	l1585
  2040                           
  2041                           ;i2clib.c: 56: not_flag = 0;
  2042  0799  1283               	bcf	3,5	;RP0=0, select bank0
  2043  079A  1303               	bcf	3,6	;RP1=0, select bank0
  2044  079B  105F               	bcf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2045  079C                     l1585:	
  2046                           
  2047                           ;i2clib.c: 57: }
  2048                           ;i2clib.c: 58: if (ack == 3){
  2049  079C  3003               	movlw	3
  2050  079D  1683               	bsf	3,5	;RP0=1, select bank1
  2051  079E  1303               	bcf	3,6	;RP1=0, select bank1
  2052  079F  0629               	xorwf	i2c_read@ack^(0+128),w
  2053  07A0  1D03               	btfss	3,2
  2054  07A1  2FA5               	goto	l1589
  2055                           
  2056                           ;i2clib.c: 59: not_flag = 1;
  2057  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  2058  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  2059  07A4  145F               	bsf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2060  07A5                     l1589:	
  2061                           ;i2clib.c: 60: }
  2062                           ;i2clib.c: 61: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  2063                           
  2064  07A5  1683               	bsf	3,5	;RP0=1, select bank1
  2065  07A6  1303               	bcf	3,6	;RP1=0, select bank1
  2066  07A7  0811               	movf	17,w	;volatile
  2067  07A8  3901               	andlw	1
  2068  07A9  00A0               	movwf	??_i2c_read^(0+128)
  2069  07AA  0C11               	rrf	17,w	;volatile
  2070  07AB  3901               	andlw	1
  2071  07AC  00A1               	movwf	(??_i2c_read+1)^(0+128)
  2072  07AD  0C11               	rrf	17,w	;volatile
  2073  07AE  00A2               	movwf	(??_i2c_read+2)^(0+128)
  2074  07AF  0CA2               	rrf	(??_i2c_read+2)^(0+128),f
  2075  07B0  0C22               	rrf	(??_i2c_read+2)^(0+128),w
  2076  07B1  3901               	andlw	1
  2077  07B2  00A3               	movwf	(??_i2c_read+3)^(0+128)
  2078  07B3  0E11               	swapf	17,w	;volatile
  2079  07B4  3901               	andlw	1
  2080  07B5  00A4               	movwf	(??_i2c_read+4)^(0+128)
  2081  07B6  0C11               	rrf	17,w	;volatile
  2082  07B7  00A5               	movwf	(??_i2c_read+5)^(0+128)
  2083  07B8  0C25               	rrf	(??_i2c_read+5)^(0+128),w
  2084  07B9  3901               	andlw	1
  2085  07BA  00A6               	movwf	(??_i2c_read+6)^(0+128)
  2086  07BB  0C14               	rrf	20,w	;volatile
  2087  07BC  00A7               	movwf	(??_i2c_read+7)^(0+128)
  2088  07BD  0C27               	rrf	(??_i2c_read+7)^(0+128),w
  2089  07BE  3901               	andlw	1
  2090  07BF  0426               	iorwf	(??_i2c_read+6)^(0+128),w
  2091  07C0  0424               	iorwf	(??_i2c_read+4)^(0+128),w
  2092  07C1  0423               	iorwf	(??_i2c_read+3)^(0+128),w
  2093  07C2  0421               	iorwf	(??_i2c_read+1)^(0+128),w
  2094  07C3  0420               	iorwf	??_i2c_read^(0+128),w
  2095  07C4  1D03               	btfss	3,2
  2096  07C5  2FA5               	goto	l1589
  2097                           
  2098                           ;i2clib.c: 62: SSPCON2bits.RCEN = 1;
  2099  07C6  1591               	bsf	17,3	;volatile
  2100  07C7                     l203:	
  2101                           ;i2clib.c: 63: while(!SSPSTATbits.BF);
  2102                           
  2103  07C7  1C14               	btfss	20,0	;volatile
  2104  07C8  2FC7               	goto	l203
  2105  07C9                     l206:	
  2106                           ;i2clib.c: 64: while(!PIR1bits.SSPIF);
  2107                           
  2108  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  2109  07CA  1D8C               	btfss	12,3	;volatile
  2110  07CB  2FC9               	goto	l206
  2111                           
  2112                           ;i2clib.c: 65: SSPCON2bits.ACKDT = not_flag;
  2113  07CC  1C5F               	btfss	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  2114  07CD  2FD2               	goto	u1300
  2115  07CE  1683               	bsf	3,5	;RP0=1, select bank1
  2116  07CF  1303               	bcf	3,6	;RP1=0, select bank1
  2117  07D0  1691               	bsf	17,5	;volatile
  2118  07D1  2FD5               	goto	u1314
  2119  07D2                     u1300:	
  2120  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  2121  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  2122  07D4  1291               	bcf	17,5	;volatile
  2123  07D5                     u1314:	
  2124                           
  2125                           ;i2clib.c: 66: SSPCON2bits.ACKEN = flag;
  2126  07D5  1283               	bcf	3,5	;RP0=0, select bank0
  2127  07D6  1303               	bcf	3,6	;RP1=0, select bank0
  2128  07D7  1CDF               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  2129  07D8  2FDD               	goto	u1320
  2130  07D9  1683               	bsf	3,5	;RP0=1, select bank1
  2131  07DA  1303               	bcf	3,6	;RP1=0, select bank1
  2132  07DB  1611               	bsf	17,4	;volatile
  2133  07DC  2FE0               	goto	l1591
  2134  07DD                     u1320:	
  2135  07DD  1683               	bsf	3,5	;RP0=1, select bank1
  2136  07DE  1303               	bcf	3,6	;RP1=0, select bank1
  2137  07DF  1211               	bcf	17,4	;volatile
  2138  07E0                     l1591:	
  2139                           
  2140                           ;i2clib.c: 67: resp = SSPBUF;
  2141  07E0  1283               	bcf	3,5	;RP0=0, select bank0
  2142  07E1  1303               	bcf	3,6	;RP1=0, select bank0
  2143  07E2  0813               	movf	19,w	;volatile
  2144  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  2145  07E4  1303               	bcf	3,6	;RP1=0, select bank1
  2146  07E5  00A0               	movwf	??_i2c_read^(0+128)
  2147  07E6  0820               	movf	??_i2c_read^(0+128),w
  2148  07E7  00A8               	movwf	i2c_read@resp^(0+128)
  2149  07E8                     l209:	
  2150                           ;i2clib.c: 68: while(SSPSTATbits.BF);
  2151                           
  2152  07E8  1814               	btfsc	20,0	;volatile
  2153  07E9  2FE8               	goto	l209
  2154                           
  2155                           ;i2clib.c: 69: return resp;
  2156  07EA  0828               	movf	i2c_read@resp^(0+128),w
  2157  07EB  0008               	return
  2158  07EC                     __end_of_i2c_read:	
  2159                           
  2160                           	psect	text10
  2161  0A08                     __ptext10:	
  2162 ;; *************** function _init_timer2 *****************
  2163 ;; Defined at:
  2164 ;;		line 244 in file "panda17.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  pre             1    wreg     unsigned char 
  2167 ;;  post            1    0[BANK1 ] unsigned char 
  2168 ;;  eoc             1    1[BANK1 ] unsigned char 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  pre             1    4[BANK1 ] unsigned char 
  2171 ;;  sfr             1    5[BANK1 ] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2181 ;;      Params:         0       0       2       0       0
  2182 ;;      Locals:         0       0       2       0       0
  2183 ;;      Temps:          0       0       2       0       0
  2184 ;;      Totals:         0       0       6       0       0
  2185 ;;Total ram usage:        6 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    4
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           
  2196                           ;psect for function _init_timer2
  2197  0A08                     _init_timer2:	
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _init_timer2: [wreg+status,2+status,0]
  2201                           ;init_timer2@pre stored from wreg
  2202  0A08  1683               	bsf	3,5	;RP0=1, select bank1
  2203  0A09  1303               	bcf	3,6	;RP1=0, select bank1
  2204  0A0A  00A4               	movwf	init_timer2@pre^(0+128)
  2205                           
  2206                           ;panda17.c: 245: unsigned char sfr = 0x00;
  2207  0A0B  01A5               	clrf	init_timer2@sfr^(0+128)
  2208                           
  2209                           ;panda17.c: 246: PR2 = eoc;
  2210  0A0C  0821               	movf	init_timer2@eoc^(0+128),w
  2211  0A0D  0092               	movwf	18	;volatile
  2212                           
  2213                           ;panda17.c: 247: sfr = ((post-1) << 3) & 0x78;
  2214  0A0E  0820               	movf	init_timer2@post^(0+128),w
  2215  0A0F  00A2               	movwf	??_init_timer2^(0+128)
  2216  0A10  3002               	movlw	2
  2217  0A11                     u2025:	
  2218  0A11  1003               	clrc
  2219  0A12  0DA2               	rlf	??_init_timer2^(0+128),f
  2220  0A13  3EFF               	addlw	-1
  2221  0A14  1D03               	skipz
  2222  0A15  2A11               	goto	u2025
  2223  0A16  1003               	clrc
  2224  0A17  0D22               	rlf	??_init_timer2^(0+128),w
  2225  0A18  3EF8               	addlw	248
  2226  0A19  3978               	andlw	120
  2227  0A1A  00A3               	movwf	(??_init_timer2+1)^(0+128)
  2228  0A1B  0823               	movf	(??_init_timer2+1)^(0+128),w
  2229  0A1C  00A5               	movwf	init_timer2@sfr^(0+128)
  2230                           
  2231                           ;panda17.c: 248: sfr += 4;
  2232  0A1D  3004               	movlw	4
  2233  0A1E  00A2               	movwf	??_init_timer2^(0+128)
  2234  0A1F  0822               	movf	??_init_timer2^(0+128),w
  2235  0A20  07A5               	addwf	init_timer2@sfr^(0+128),f
  2236                           
  2237                           ;panda17.c: 249: sfr += pre;
  2238  0A21  0824               	movf	init_timer2@pre^(0+128),w
  2239  0A22  00A2               	movwf	??_init_timer2^(0+128)
  2240  0A23  0822               	movf	??_init_timer2^(0+128),w
  2241  0A24  07A5               	addwf	init_timer2@sfr^(0+128),f
  2242                           
  2243                           ;panda17.c: 250: T2CON = sfr;
  2244  0A25  0825               	movf	init_timer2@sfr^(0+128),w
  2245  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0A28  0092               	movwf	18	;volatile
  2248                           
  2249                           ;panda17.c: 251: PIE1bits.TMR2IE = 1;
  2250  0A29  1683               	bsf	3,5	;RP0=1, select bank1
  2251  0A2A  1303               	bcf	3,6	;RP1=0, select bank1
  2252  0A2B  148C               	bsf	12,1	;volatile
  2253  0A2C  0008               	return
  2254  0A2D                     __end_of_init_timer2:	
  2255                           
  2256                           	psect	text11
  2257  07EC                     __ptext11:	
  2258 ;; *************** function _i2c_init *****************
  2259 ;; Defined at:
  2260 ;;		line 13 in file "i2clib.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      void 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2274 ;;      Params:         0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used:    1
  2280 ;; Hardware stack levels required when called:    4
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           
  2289                           ;psect for function _i2c_init
  2290  07EC                     _i2c_init:	
  2291                           
  2292                           ;i2clib.c: 15: SSPCONbits.SSPM = 0b1000;
  2293                           
  2294                           ;incstack = 0
  2295                           ; Regs used in _i2c_init: [wreg+status,2+status,0]
  2296  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  2297  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  2298  07EE  0814               	movf	20,w	;volatile
  2299  07EF  39F0               	andlw	-16
  2300  07F0  3808               	iorlw	8
  2301  07F1  0094               	movwf	20	;volatile
  2302                           
  2303                           ;i2clib.c: 16: SSPCONbits.SSPEN = 1;
  2304  07F2  1694               	bsf	20,5	;volatile
  2305                           
  2306                           ;i2clib.c: 18: SSPADD = 0x04;
  2307  07F3  3004               	movlw	4
  2308  07F4  1683               	bsf	3,5	;RP0=1, select bank1
  2309  07F5  1303               	bcf	3,6	;RP1=0, select bank1
  2310  07F6  0093               	movwf	19	;volatile
  2311                           
  2312                           ;i2clib.c: 19: SSPSTATbits.SMP = 1;
  2313  07F7  1794               	bsf	20,7	;volatile
  2314                           
  2315                           ;i2clib.c: 20: TRISCbits.TRISC3 = 1;
  2316  07F8  1587               	bsf	7,3	;volatile
  2317                           
  2318                           ;i2clib.c: 21: TRISCbits.TRISC4 = 1;
  2319  07F9  1607               	bsf	7,4	;volatile
  2320  07FA  0008               	return
  2321  07FB                     __end_of_i2c_init:	
  2322                           
  2323                           	psect	text12
  2324  0029                     __ptext12:	
  2325 ;; *************** function _ints_isr *****************
  2326 ;; Defined at:
  2327 ;;		line 77 in file "panda17.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  hum_add         2   45[BANK0 ] unsigned int 
  2332 ;;  temp_add        2   43[BANK0 ] unsigned int 
  2333 ;;  up              2   39[BANK0 ] unsigned int 
  2334 ;;  temp_val        2   31[BANK0 ] unsigned int 
  2335 ;;  hum_val         2   29[BANK0 ] unsigned int 
  2336 ;;  arg             1   49[BANK0 ] unsigned char 
  2337 ;;  k               1   38[BANK0 ] unsigned char 
  2338 ;;  z               1   37[BANK0 ] unsigned char 
  2339 ;;  n               2   50[BANK0 ] unsigned int 
  2340 ;;  aux2            2   47[BANK0 ] unsigned int 
  2341 ;;  aux             2   41[BANK0 ] unsigned int 
  2342 ;;  add             2   35[BANK0 ] unsigned int 
  2343 ;;  dt              2   33[BANK0 ] unsigned int 
  2344 ;;  rcv             1   28[BANK0 ] unsigned char 
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2354 ;;      Params:         0       0       0       0       0
  2355 ;;      Locals:         0      24       0       0       0
  2356 ;;      Temps:          0       8       0       0       0
  2357 ;;      Totals:         0      32       0       0       0
  2358 ;;Total ram usage:       32 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    3
  2361 ;; This function calls:
  2362 ;;		___wmul
  2363 ;;		_ds_get
  2364 ;;		_ds_set
  2365 ;;		_printf
  2366 ;;		_save_event
  2367 ;;		_si_read_h
  2368 ;;		_si_read_t
  2369 ;;		i1_mem_init
  2370 ;;		i1_mem_read
  2371 ;;		i1_mem_write
  2372 ;; This function is called by:
  2373 ;;		Interrupt level 1
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _ints_isr
  2379  0029                     _ints_isr:	
  2380                           
  2381                           ;panda17.c: 79: if (PIR1bits.RCIF){
  2382  0029  1E8C               	btfss	12,5	;volatile
  2383  002A  2B60               	goto	i1l91
  2384                           
  2385                           ;panda17.c: 80: INTCONbits.GIE = 0;
  2386  002B  138B               	bcf	11,7	;volatile
  2387                           
  2388                           ;panda17.c: 81: static bit ferr = 0, oerr = 0;
  2389                           ;panda17.c: 82: unsigned char rcv = 0;
  2390  002C  01BC               	clrf	ints_isr@rcv
  2391                           
  2392                           ;panda17.c: 83: ferr = RCSTAbits.FERR;
  2393  002D  11DF               	bcf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2394  002E  1918               	btfsc	24,2	;volatile
  2395  002F  15DF               	bsf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2396                           
  2397                           ;panda17.c: 84: oerr = RCSTAbits.OERR;
  2398  0030  1283               	bcf	3,5	;RP0=0, select bank0
  2399  0031  1303               	bcf	3,6	;RP1=0, select bank0
  2400  0032  115F               	bcf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2401  0033  1898               	btfsc	24,1	;volatile
  2402  0034  155F               	bsf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2403                           
  2404                           ;panda17.c: 85: if (!ferr & !oerr){
  2405  0035  1283               	bcf	3,5	;RP0=0, select bank0
  2406  0036  1303               	bcf	3,6	;RP1=0, select bank0
  2407  0037  1DDF               	btfss	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2408  0038  195F               	btfsc	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  2409  0039  2B4C               	goto	i1l2181
  2410                           
  2411                           ;panda17.c: 86: rcv = RCREG;
  2412  003A  081A               	movf	26,w	;volatile
  2413  003B  00B4               	movwf	??_ints_isr
  2414  003C  0834               	movf	??_ints_isr,w
  2415  003D  00BC               	movwf	ints_isr@rcv
  2416                           
  2417                           ;panda17.c: 87: }
  2418                           ;panda17.c: 88: switch (rcv){
  2419  003E  2B4C               	goto	i1l2181
  2420  003F                     i1l98:	
  2421                           ;panda17.c: 89: case 'a':
  2422                           
  2423                           
  2424                           ;panda17.c: 90: PORTBbits.RB4 = 1;
  2425  003F  1606               	bsf	6,4	;volatile
  2426                           
  2427                           ;panda17.c: 91: unsigned int dt = 0,add,n,aux;
  2428  0040  01C1               	clrf	ints_isr@dt
  2429  0041  01C2               	clrf	ints_isr@dt+1
  2430                           
  2431                           ;panda17.c: 92: unsigned int aux2;
  2432                           ;panda17.c: 93: add = mem_read(0x0A);
  2433  0042  300A               	movlw	10
  2434  0043  00FA               	movwf	i1mem_read@add
  2435  0044  3000               	movlw	0
  2436  0045  00FB               	movwf	i1mem_read@add+1
  2437  0046  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2438  004B  1283               	bcf	3,5	;RP0=0, select bank0
  2439  004C  1303               	bcf	3,6	;RP1=0, select bank0
  2440  004D  00B4               	movwf	??_ints_isr
  2441  004E  01B5               	clrf	??_ints_isr+1
  2442  004F  0834               	movf	??_ints_isr,w
  2443  0050  00C3               	movwf	ints_isr@add
  2444  0051  0835               	movf	??_ints_isr+1,w
  2445  0052  00C4               	movwf	ints_isr@add+1
  2446                           
  2447                           ;panda17.c: 94: add = add << 8;
  2448  0053  0843               	movf	ints_isr@add,w
  2449  0054  00B5               	movwf	??_ints_isr+1
  2450  0055  01B4               	clrf	??_ints_isr
  2451  0056  0834               	movf	??_ints_isr,w
  2452  0057  00C3               	movwf	ints_isr@add
  2453  0058  0835               	movf	??_ints_isr+1,w
  2454  0059  00C4               	movwf	ints_isr@add+1
  2455                           
  2456                           ;panda17.c: 95: add += mem_read(0x0B);
  2457  005A  300B               	movlw	11
  2458  005B  00FA               	movwf	i1mem_read@add
  2459  005C  3000               	movlw	0
  2460  005D  00FB               	movwf	i1mem_read@add+1
  2461  005E  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2462  0063  1283               	bcf	3,5	;RP0=0, select bank0
  2463  0064  1303               	bcf	3,6	;RP1=0, select bank0
  2464  0065  00B4               	movwf	??_ints_isr
  2465  0066  01B5               	clrf	??_ints_isr+1
  2466  0067  0834               	movf	??_ints_isr,w
  2467  0068  07C3               	addwf	ints_isr@add,f
  2468  0069  1803               	skipnc
  2469  006A  0AC4               	incf	ints_isr@add+1,f
  2470  006B  0835               	movf	??_ints_isr+1,w
  2471  006C  07C4               	addwf	ints_isr@add+1,f
  2472                           
  2473                           ;panda17.c: 97: printf("I%05d\r\n",add);
  2474  006D  0844               	movf	ints_isr@add+1,w
  2475  006E  00A5               	movwf	?_printf+1
  2476  006F  0843               	movf	ints_isr@add,w
  2477  0070  00A4               	movwf	?_printf
  2478  0071  3035               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2479  0072  120A  118A  24F1  120A  118A  	fcall	_printf
  2480                           
  2481                           ;panda17.c: 98: for (n=0;n<add;n++){
  2482  0077  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0078  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0079  01D2               	clrf	ints_isr@n
  2485  007A  01D3               	clrf	ints_isr@n+1
  2486  007B                     i1l2103:	
  2487  007B  0844               	movf	ints_isr@add+1,w
  2488  007C  0253               	subwf	ints_isr@n+1,w
  2489  007D  1D03               	skipz
  2490  007E  2881               	goto	u209_25
  2491  007F  0843               	movf	ints_isr@add,w
  2492  0080  0252               	subwf	ints_isr@n,w
  2493  0081                     u209_25:	
  2494  0081  1803               	btfsc	3,0
  2495  0082  2924               	goto	i1l2105
  2496                           
  2497                           ;panda17.c: 99: aux = mem_read(2*n+0x0010);
  2498  0083  0853               	movf	ints_isr@n+1,w
  2499  0084  00B5               	movwf	??_ints_isr+1
  2500  0085  0852               	movf	ints_isr@n,w
  2501  0086  00B4               	movwf	??_ints_isr
  2502  0087  1003               	clrc
  2503  0088  0DB4               	rlf	??_ints_isr,f
  2504  0089  0DB5               	rlf	??_ints_isr+1,f
  2505  008A  0834               	movf	??_ints_isr,w
  2506  008B  3E10               	addlw	16
  2507  008C  00FA               	movwf	i1mem_read@add
  2508  008D  0835               	movf	??_ints_isr+1,w
  2509  008E  1803               	skipnc
  2510  008F  3E01               	addlw	1
  2511  0090  3E00               	addlw	0
  2512  0091  00FB               	movwf	i1mem_read@add+1
  2513  0092  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2514  0097  1283               	bcf	3,5	;RP0=0, select bank0
  2515  0098  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0099  00B6               	movwf	??_ints_isr+2
  2517  009A  01B7               	clrf	??_ints_isr+3
  2518  009B  0836               	movf	??_ints_isr+2,w
  2519  009C  00C9               	movwf	ints_isr@aux
  2520  009D  0837               	movf	??_ints_isr+3,w
  2521  009E  00CA               	movwf	ints_isr@aux+1
  2522                           
  2523                           ;panda17.c: 100: aux = aux << 8;
  2524  009F  0849               	movf	ints_isr@aux,w
  2525  00A0  00B5               	movwf	??_ints_isr+1
  2526  00A1  01B4               	clrf	??_ints_isr
  2527  00A2  0834               	movf	??_ints_isr,w
  2528  00A3  00C9               	movwf	ints_isr@aux
  2529  00A4  0835               	movf	??_ints_isr+1,w
  2530  00A5  00CA               	movwf	ints_isr@aux+1
  2531                           
  2532                           ;panda17.c: 101: aux += mem_read(2*n+0x0011);
  2533  00A6  0853               	movf	ints_isr@n+1,w
  2534  00A7  00B5               	movwf	??_ints_isr+1
  2535  00A8  0852               	movf	ints_isr@n,w
  2536  00A9  00B4               	movwf	??_ints_isr
  2537  00AA  1003               	clrc
  2538  00AB  0DB4               	rlf	??_ints_isr,f
  2539  00AC  0DB5               	rlf	??_ints_isr+1,f
  2540  00AD  0834               	movf	??_ints_isr,w
  2541  00AE  3E11               	addlw	17
  2542  00AF  00FA               	movwf	i1mem_read@add
  2543  00B0  0835               	movf	??_ints_isr+1,w
  2544  00B1  1803               	skipnc
  2545  00B2  3E01               	addlw	1
  2546  00B3  3E00               	addlw	0
  2547  00B4  00FB               	movwf	i1mem_read@add+1
  2548  00B5  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2549  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  2550  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  2551  00BC  00B6               	movwf	??_ints_isr+2
  2552  00BD  01B7               	clrf	??_ints_isr+3
  2553  00BE  0836               	movf	??_ints_isr+2,w
  2554  00BF  07C9               	addwf	ints_isr@aux,f
  2555  00C0  1803               	skipnc
  2556  00C1  0ACA               	incf	ints_isr@aux+1,f
  2557  00C2  0837               	movf	??_ints_isr+3,w
  2558  00C3  07CA               	addwf	ints_isr@aux+1,f
  2559                           
  2560                           ;panda17.c: 102: printf("%04x;",aux);
  2561  00C4  084A               	movf	ints_isr@aux+1,w
  2562  00C5  00A5               	movwf	?_printf+1
  2563  00C6  0849               	movf	ints_isr@aux,w
  2564  00C7  00A4               	movwf	?_printf
  2565  00C8  3045               	movlw	(low (((STR_16+1)-__stringbase)| (0+32768)))& (0+255)
  2566  00C9  120A  118A  24F1  120A  118A  	fcall	_printf
  2567                           
  2568                           ;panda17.c: 103: aux = mem_read(2*n+0x7FF7);
  2569  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2570  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2571  00D0  0853               	movf	ints_isr@n+1,w
  2572  00D1  00B5               	movwf	??_ints_isr+1
  2573  00D2  0852               	movf	ints_isr@n,w
  2574  00D3  00B4               	movwf	??_ints_isr
  2575  00D4  1003               	clrc
  2576  00D5  0DB4               	rlf	??_ints_isr,f
  2577  00D6  0DB5               	rlf	??_ints_isr+1,f
  2578  00D7  0834               	movf	??_ints_isr,w
  2579  00D8  3EF7               	addlw	247
  2580  00D9  00FA               	movwf	i1mem_read@add
  2581  00DA  0835               	movf	??_ints_isr+1,w
  2582  00DB  1803               	skipnc
  2583  00DC  3E01               	addlw	1
  2584  00DD  3E7F               	addlw	127
  2585  00DE  00FB               	movwf	i1mem_read@add+1
  2586  00DF  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2587  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  2588  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  2589  00E6  00B6               	movwf	??_ints_isr+2
  2590  00E7  01B7               	clrf	??_ints_isr+3
  2591  00E8  0836               	movf	??_ints_isr+2,w
  2592  00E9  00C9               	movwf	ints_isr@aux
  2593  00EA  0837               	movf	??_ints_isr+3,w
  2594  00EB  00CA               	movwf	ints_isr@aux+1
  2595                           
  2596                           ;panda17.c: 104: aux = aux << 8;
  2597  00EC  0849               	movf	ints_isr@aux,w
  2598  00ED  00B5               	movwf	??_ints_isr+1
  2599  00EE  01B4               	clrf	??_ints_isr
  2600  00EF  0834               	movf	??_ints_isr,w
  2601  00F0  00C9               	movwf	ints_isr@aux
  2602  00F1  0835               	movf	??_ints_isr+1,w
  2603  00F2  00CA               	movwf	ints_isr@aux+1
  2604                           
  2605                           ;panda17.c: 105: aux += mem_read(2*n+0x7FF8);
  2606  00F3  0853               	movf	ints_isr@n+1,w
  2607  00F4  00B5               	movwf	??_ints_isr+1
  2608  00F5  0852               	movf	ints_isr@n,w
  2609  00F6  00B4               	movwf	??_ints_isr
  2610  00F7  1003               	clrc
  2611  00F8  0DB4               	rlf	??_ints_isr,f
  2612  00F9  0DB5               	rlf	??_ints_isr+1,f
  2613  00FA  0834               	movf	??_ints_isr,w
  2614  00FB  3EF8               	addlw	248
  2615  00FC  00FA               	movwf	i1mem_read@add
  2616  00FD  0835               	movf	??_ints_isr+1,w
  2617  00FE  1803               	skipnc
  2618  00FF  3E01               	addlw	1
  2619  0100  3E7F               	addlw	127
  2620  0101  00FB               	movwf	i1mem_read@add+1
  2621  0102  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2622  0107  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0108  1303               	bcf	3,6	;RP1=0, select bank0
  2624  0109  00B6               	movwf	??_ints_isr+2
  2625  010A  01B7               	clrf	??_ints_isr+3
  2626  010B  0836               	movf	??_ints_isr+2,w
  2627  010C  07C9               	addwf	ints_isr@aux,f
  2628  010D  1803               	skipnc
  2629  010E  0ACA               	incf	ints_isr@aux+1,f
  2630  010F  0837               	movf	??_ints_isr+3,w
  2631  0110  07CA               	addwf	ints_isr@aux+1,f
  2632                           
  2633                           ;panda17.c: 106: printf("%04x\r\n",aux);
  2634  0111  084A               	movf	ints_isr@aux+1,w
  2635  0112  00A5               	movwf	?_printf+1
  2636  0113  0849               	movf	ints_isr@aux,w
  2637  0114  00A4               	movwf	?_printf
  2638  0115  303D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2639  0116  120A  118A  24F1  120A  118A  	fcall	_printf
  2640  011B  3001               	movlw	1
  2641  011C  1283               	bcf	3,5	;RP0=0, select bank0
  2642  011D  1303               	bcf	3,6	;RP1=0, select bank0
  2643  011E  07D2               	addwf	ints_isr@n,f
  2644  011F  1803               	skipnc
  2645  0120  0AD3               	incf	ints_isr@n+1,f
  2646  0121  3000               	movlw	0
  2647  0122  07D3               	addwf	ints_isr@n+1,f
  2648  0123  287B               	goto	i1l2103
  2649  0124                     i1l2105:	
  2650                           
  2651                           ;panda17.c: 107: }
  2652                           ;panda17.c: 108: dt = mem_read(0x0003);
  2653  0124  3003               	movlw	3
  2654  0125  00FA               	movwf	i1mem_read@add
  2655  0126  3000               	movlw	0
  2656  0127  00FB               	movwf	i1mem_read@add+1
  2657  0128  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2658  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2659  012E  1303               	bcf	3,6	;RP1=0, select bank0
  2660  012F  00B4               	movwf	??_ints_isr
  2661  0130  01B5               	clrf	??_ints_isr+1
  2662  0131  0834               	movf	??_ints_isr,w
  2663  0132  00C1               	movwf	ints_isr@dt
  2664  0133  0835               	movf	??_ints_isr+1,w
  2665  0134  00C2               	movwf	ints_isr@dt+1
  2666                           
  2667                           ;panda17.c: 109: printf("Z%x\n",dt);
  2668  0135  0842               	movf	ints_isr@dt+1,w
  2669  0136  00A5               	movwf	?_printf+1
  2670  0137  0841               	movf	ints_isr@dt,w
  2671  0138  00A4               	movwf	?_printf
  2672  0139  3063               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2673  013A  120A  118A  24F1  120A  118A  	fcall	_printf
  2674                           
  2675                           ;panda17.c: 110: for (n=0;n<dt;n++){
  2676  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2677  0140  1303               	bcf	3,6	;RP1=0, select bank0
  2678  0141  01D2               	clrf	ints_isr@n
  2679  0142  01D3               	clrf	ints_isr@n+1
  2680  0143                     i1l2135:	
  2681  0143  0842               	movf	ints_isr@dt+1,w
  2682  0144  0253               	subwf	ints_isr@n+1,w
  2683  0145  1D03               	skipz
  2684  0146  2949               	goto	u210_25
  2685  0147  0841               	movf	ints_isr@dt,w
  2686  0148  0252               	subwf	ints_isr@n,w
  2687  0149                     u210_25:	
  2688  0149  1803               	btfsc	3,0
  2689  014A  2A9A               	goto	i1l2137
  2690                           
  2691                           ;panda17.c: 111: aux2 = mem_read(7*n + 0xFF74);
  2692  014B  0853               	movf	ints_isr@n+1,w
  2693  014C  00F1               	movwf	___wmul@multiplier+1
  2694  014D  0852               	movf	ints_isr@n,w
  2695  014E  00F0               	movwf	___wmul@multiplier
  2696  014F  3007               	movlw	7
  2697  0150  00F2               	movwf	___wmul@multiplicand
  2698  0151  3000               	movlw	0
  2699  0152  00F3               	movwf	___wmul@multiplicand+1
  2700  0153  120A  158A  2138  120A  118A  	fcall	___wmul
  2701  0158  0870               	movf	?___wmul,w
  2702  0159  3E74               	addlw	116
  2703  015A  00FA               	movwf	i1mem_read@add
  2704  015B  0871               	movf	?___wmul+1,w
  2705  015C  1803               	skipnc
  2706  015D  3E01               	addlw	1
  2707  015E  3EFF               	addlw	255
  2708  015F  00FB               	movwf	i1mem_read@add+1
  2709  0160  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2710  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0166  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0167  00B4               	movwf	??_ints_isr
  2713  0168  01B5               	clrf	??_ints_isr+1
  2714  0169  0834               	movf	??_ints_isr,w
  2715  016A  00CF               	movwf	ints_isr@aux2
  2716  016B  0835               	movf	??_ints_isr+1,w
  2717  016C  00D0               	movwf	ints_isr@aux2+1
  2718                           
  2719                           ;panda17.c: 112: printf("%02x:",aux2);
  2720  016D  0850               	movf	ints_isr@aux2+1,w
  2721  016E  00A5               	movwf	?_printf+1
  2722  016F  084F               	movf	ints_isr@aux2,w
  2723  0170  00A4               	movwf	?_printf
  2724  0171  305D               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2725  0172  120A  118A  24F1  120A  118A  	fcall	_printf
  2726                           
  2727                           ;panda17.c: 113: aux2 = mem_read(0x0FF75 + 7*n);
  2728  0177  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0178  1303               	bcf	3,6	;RP1=0, select bank0
  2730  0179  0853               	movf	ints_isr@n+1,w
  2731  017A  00F1               	movwf	___wmul@multiplier+1
  2732  017B  0852               	movf	ints_isr@n,w
  2733  017C  00F0               	movwf	___wmul@multiplier
  2734  017D  3007               	movlw	7
  2735  017E  00F2               	movwf	___wmul@multiplicand
  2736  017F  3000               	movlw	0
  2737  0180  00F3               	movwf	___wmul@multiplicand+1
  2738  0181  120A  158A  2138  120A  118A  	fcall	___wmul
  2739  0186  0870               	movf	?___wmul,w
  2740  0187  3E75               	addlw	117
  2741  0188  00FA               	movwf	i1mem_read@add
  2742  0189  0871               	movf	?___wmul+1,w
  2743  018A  1803               	skipnc
  2744  018B  3E01               	addlw	1
  2745  018C  3EFF               	addlw	255
  2746  018D  00FB               	movwf	i1mem_read@add+1
  2747  018E  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2748  0193  1283               	bcf	3,5	;RP0=0, select bank0
  2749  0194  1303               	bcf	3,6	;RP1=0, select bank0
  2750  0195  00B4               	movwf	??_ints_isr
  2751  0196  01B5               	clrf	??_ints_isr+1
  2752  0197  0834               	movf	??_ints_isr,w
  2753  0198  00CF               	movwf	ints_isr@aux2
  2754  0199  0835               	movf	??_ints_isr+1,w
  2755  019A  00D0               	movwf	ints_isr@aux2+1
  2756                           
  2757                           ;panda17.c: 114: printf("%02x ",aux2);
  2758  019B  0850               	movf	ints_isr@aux2+1,w
  2759  019C  00A5               	movwf	?_printf+1
  2760  019D  084F               	movf	ints_isr@aux2,w
  2761  019E  00A4               	movwf	?_printf
  2762  019F  3051               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2763  01A0  120A  118A  24F1  120A  118A  	fcall	_printf
  2764                           
  2765                           ;panda17.c: 115: aux2 = mem_read(0x0FF76 + 7*n);
  2766  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2767  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2768  01A7  0853               	movf	ints_isr@n+1,w
  2769  01A8  00F1               	movwf	___wmul@multiplier+1
  2770  01A9  0852               	movf	ints_isr@n,w
  2771  01AA  00F0               	movwf	___wmul@multiplier
  2772  01AB  3007               	movlw	7
  2773  01AC  00F2               	movwf	___wmul@multiplicand
  2774  01AD  3000               	movlw	0
  2775  01AE  00F3               	movwf	___wmul@multiplicand+1
  2776  01AF  120A  158A  2138  120A  118A  	fcall	___wmul
  2777  01B4  0870               	movf	?___wmul,w
  2778  01B5  3E76               	addlw	118
  2779  01B6  00FA               	movwf	i1mem_read@add
  2780  01B7  0871               	movf	?___wmul+1,w
  2781  01B8  1803               	skipnc
  2782  01B9  3E01               	addlw	1
  2783  01BA  3EFF               	addlw	255
  2784  01BB  00FB               	movwf	i1mem_read@add+1
  2785  01BC  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2786  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2787  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2788  01C3  00B4               	movwf	??_ints_isr
  2789  01C4  01B5               	clrf	??_ints_isr+1
  2790  01C5  0834               	movf	??_ints_isr,w
  2791  01C6  00CF               	movwf	ints_isr@aux2
  2792  01C7  0835               	movf	??_ints_isr+1,w
  2793  01C8  00D0               	movwf	ints_isr@aux2+1
  2794                           
  2795                           ;panda17.c: 116: printf("%02x/",aux2);
  2796  01C9  0850               	movf	ints_isr@aux2+1,w
  2797  01CA  00A5               	movwf	?_printf+1
  2798  01CB  084F               	movf	ints_isr@aux2,w
  2799  01CC  00A4               	movwf	?_printf
  2800  01CD  3057               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2801  01CE  120A  118A  24F1  120A  118A  	fcall	_printf
  2802                           
  2803                           ;panda17.c: 117: aux2 = mem_read(0x0FF77 + 7*n);
  2804  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  2805  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  2806  01D5  0853               	movf	ints_isr@n+1,w
  2807  01D6  00F1               	movwf	___wmul@multiplier+1
  2808  01D7  0852               	movf	ints_isr@n,w
  2809  01D8  00F0               	movwf	___wmul@multiplier
  2810  01D9  3007               	movlw	7
  2811  01DA  00F2               	movwf	___wmul@multiplicand
  2812  01DB  3000               	movlw	0
  2813  01DC  00F3               	movwf	___wmul@multiplicand+1
  2814  01DD  120A  158A  2138  120A  118A  	fcall	___wmul
  2815  01E2  0870               	movf	?___wmul,w
  2816  01E3  3E77               	addlw	119
  2817  01E4  00FA               	movwf	i1mem_read@add
  2818  01E5  0871               	movf	?___wmul+1,w
  2819  01E6  1803               	skipnc
  2820  01E7  3E01               	addlw	1
  2821  01E8  3EFF               	addlw	255
  2822  01E9  00FB               	movwf	i1mem_read@add+1
  2823  01EA  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2824  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2825  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  2826  01F1  00B4               	movwf	??_ints_isr
  2827  01F2  01B5               	clrf	??_ints_isr+1
  2828  01F3  0834               	movf	??_ints_isr,w
  2829  01F4  00CF               	movwf	ints_isr@aux2
  2830  01F5  0835               	movf	??_ints_isr+1,w
  2831  01F6  00D0               	movwf	ints_isr@aux2+1
  2832                           
  2833                           ;panda17.c: 118: printf("%02x/",aux2);
  2834  01F7  0850               	movf	ints_isr@aux2+1,w
  2835  01F8  00A5               	movwf	?_printf+1
  2836  01F9  084F               	movf	ints_isr@aux2,w
  2837  01FA  00A4               	movwf	?_printf
  2838  01FB  3057               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2839  01FC  120A  118A  24F1  120A  118A  	fcall	_printf
  2840                           
  2841                           ;panda17.c: 119: aux2 = mem_read(0x0FF78 + 7*n);
  2842  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2844  0203  0853               	movf	ints_isr@n+1,w
  2845  0204  00F1               	movwf	___wmul@multiplier+1
  2846  0205  0852               	movf	ints_isr@n,w
  2847  0206  00F0               	movwf	___wmul@multiplier
  2848  0207  3007               	movlw	7
  2849  0208  00F2               	movwf	___wmul@multiplicand
  2850  0209  3000               	movlw	0
  2851  020A  00F3               	movwf	___wmul@multiplicand+1
  2852  020B  120A  158A  2138  120A  118A  	fcall	___wmul
  2853  0210  0870               	movf	?___wmul,w
  2854  0211  3E78               	addlw	120
  2855  0212  00FA               	movwf	i1mem_read@add
  2856  0213  0871               	movf	?___wmul+1,w
  2857  0214  1803               	skipnc
  2858  0215  3E01               	addlw	1
  2859  0216  3EFF               	addlw	255
  2860  0217  00FB               	movwf	i1mem_read@add+1
  2861  0218  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2862  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2863  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2864  021F  00B4               	movwf	??_ints_isr
  2865  0220  01B5               	clrf	??_ints_isr+1
  2866  0221  0834               	movf	??_ints_isr,w
  2867  0222  00CF               	movwf	ints_isr@aux2
  2868  0223  0835               	movf	??_ints_isr+1,w
  2869  0224  00D0               	movwf	ints_isr@aux2+1
  2870                           
  2871                           ;panda17.c: 120: printf("%02x\t",aux2);
  2872  0225  0850               	movf	ints_isr@aux2+1,w
  2873  0226  00A5               	movwf	?_printf+1
  2874  0227  084F               	movf	ints_isr@aux2,w
  2875  0228  00A4               	movwf	?_printf
  2876  0229  304B               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2877  022A  120A  118A  24F1  120A  118A  	fcall	_printf
  2878                           
  2879                           ;panda17.c: 121: aux2 = mem_read(0x0FF79 + 7*n);
  2880  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2881  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2882  0231  0853               	movf	ints_isr@n+1,w
  2883  0232  00F1               	movwf	___wmul@multiplier+1
  2884  0233  0852               	movf	ints_isr@n,w
  2885  0234  00F0               	movwf	___wmul@multiplier
  2886  0235  3007               	movlw	7
  2887  0236  00F2               	movwf	___wmul@multiplicand
  2888  0237  3000               	movlw	0
  2889  0238  00F3               	movwf	___wmul@multiplicand+1
  2890  0239  120A  158A  2138  120A  118A  	fcall	___wmul
  2891  023E  0870               	movf	?___wmul,w
  2892  023F  3E79               	addlw	121
  2893  0240  00FA               	movwf	i1mem_read@add
  2894  0241  0871               	movf	?___wmul+1,w
  2895  0242  1803               	skipnc
  2896  0243  3E01               	addlw	1
  2897  0244  3EFF               	addlw	255
  2898  0245  00FB               	movwf	i1mem_read@add+1
  2899  0246  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2900  024B  1283               	bcf	3,5	;RP0=0, select bank0
  2901  024C  1303               	bcf	3,6	;RP1=0, select bank0
  2902  024D  00B4               	movwf	??_ints_isr
  2903  024E  01B5               	clrf	??_ints_isr+1
  2904  024F  0834               	movf	??_ints_isr,w
  2905  0250  00CF               	movwf	ints_isr@aux2
  2906  0251  0835               	movf	??_ints_isr+1,w
  2907  0252  00D0               	movwf	ints_isr@aux2+1
  2908                           
  2909                           ;panda17.c: 122: printf("%02x",aux2);
  2910  0253  0850               	movf	ints_isr@aux2+1,w
  2911  0254  00A5               	movwf	?_printf+1
  2912  0255  084F               	movf	ints_isr@aux2,w
  2913  0256  00A4               	movwf	?_printf
  2914  0257  3068               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2915  0258  120A  118A  24F1  120A  118A  	fcall	_printf
  2916                           
  2917                           ;panda17.c: 123: aux2 = mem_read(0x0FF7A + 7*n);
  2918  025D  1283               	bcf	3,5	;RP0=0, select bank0
  2919  025E  1303               	bcf	3,6	;RP1=0, select bank0
  2920  025F  0853               	movf	ints_isr@n+1,w
  2921  0260  00F1               	movwf	___wmul@multiplier+1
  2922  0261  0852               	movf	ints_isr@n,w
  2923  0262  00F0               	movwf	___wmul@multiplier
  2924  0263  3007               	movlw	7
  2925  0264  00F2               	movwf	___wmul@multiplicand
  2926  0265  3000               	movlw	0
  2927  0266  00F3               	movwf	___wmul@multiplicand+1
  2928  0267  120A  158A  2138  120A  118A  	fcall	___wmul
  2929  026C  0870               	movf	?___wmul,w
  2930  026D  3E7A               	addlw	122
  2931  026E  00FA               	movwf	i1mem_read@add
  2932  026F  0871               	movf	?___wmul+1,w
  2933  0270  1803               	skipnc
  2934  0271  3E01               	addlw	1
  2935  0272  3EFF               	addlw	255
  2936  0273  00FB               	movwf	i1mem_read@add+1
  2937  0274  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  2938  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2939  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2940  027B  00B4               	movwf	??_ints_isr
  2941  027C  01B5               	clrf	??_ints_isr+1
  2942  027D  0834               	movf	??_ints_isr,w
  2943  027E  00CF               	movwf	ints_isr@aux2
  2944  027F  0835               	movf	??_ints_isr+1,w
  2945  0280  00D0               	movwf	ints_isr@aux2+1
  2946                           
  2947                           ;panda17.c: 124: printf("%02x",aux2);
  2948  0281  0850               	movf	ints_isr@aux2+1,w
  2949  0282  00A5               	movwf	?_printf+1
  2950  0283  084F               	movf	ints_isr@aux2,w
  2951  0284  00A4               	movwf	?_printf
  2952  0285  3068               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2953  0286  120A  118A  24F1  120A  118A  	fcall	_printf
  2954                           
  2955                           ;panda17.c: 125: printf("\n");
  2956  028B  303B               	movlw	(low (((STR_1+6)-__stringbase)| (0+32768)))& (0+255)
  2957  028C  120A  118A  24F1  120A  118A  	fcall	_printf
  2958  0291  3001               	movlw	1
  2959  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0293  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0294  07D2               	addwf	ints_isr@n,f
  2962  0295  1803               	skipnc
  2963  0296  0AD3               	incf	ints_isr@n+1,f
  2964  0297  3000               	movlw	0
  2965  0298  07D3               	addwf	ints_isr@n+1,f
  2966  0299  2943               	goto	i1l2135
  2967  029A                     i1l2137:	
  2968                           
  2969                           ;panda17.c: 126: }
  2970                           ;panda17.c: 127: printf("X");
  2971  029A  3079               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2972  029B  120A  118A  24F1  120A  118A  	fcall	_printf
  2973                           
  2974                           ;panda17.c: 128: PORTBbits.RB4 = 0;
  2975  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2976  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2977  02A2  1206               	bcf	6,4	;volatile
  2978                           
  2979                           ;panda17.c: 129: break;
  2980  02A3  2B5F               	goto	i1l105
  2981  02A4                     i1l2141:	
  2982                           ;panda17.c: 130: case 'b':
  2983                           
  2984                           
  2985                           ;panda17.c: 131: for (unsigned char z = 0;z<7;z++){
  2986  02A4  01C5               	clrf	ints_isr@z
  2987  02A5  3007               	movlw	7
  2988  02A6  0245               	subwf	ints_isr@z,w
  2989  02A7  1803               	btfsc	3,0
  2990  02A8  2AC8               	goto	i1l2155
  2991  02A9                     i1l109:	
  2992                           ;panda17.c: 132: while(!PIR1bits.RCIF);
  2993                           
  2994  02A9  1E8C               	btfss	12,5	;volatile
  2995  02AA  2AA9               	goto	i1l109
  2996                           
  2997                           ;panda17.c: 133: ferr = RCSTAbits.FERR;
  2998  02AB  11DF               	bcf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  2999  02AC  1918               	btfsc	24,2	;volatile
  3000  02AD  15DF               	bsf	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  3001                           
  3002                           ;panda17.c: 134: oerr = RCSTAbits.OERR;
  3003  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  3004  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  3005  02B0  115F               	bcf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  3006  02B1  1898               	btfsc	24,1	;volatile
  3007  02B2  155F               	bsf	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  3008                           
  3009                           ;panda17.c: 135: if (!ferr & !oerr){
  3010  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  3011  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  3012  02B5  1DDF               	btfss	ints_isr@ferr/(0+8),ints_isr@ferr& (0+7)
  3013  02B6  195F               	btfsc	ints_isr@oerr/(0+8),ints_isr@oerr& (0+7)
  3014  02B7  2AC0               	goto	i1l2151
  3015                           
  3016                           ;panda17.c: 136: time[z] = RCREG;
  3017  02B8  081A               	movf	26,w	;volatile
  3018  02B9  00B4               	movwf	??_ints_isr
  3019  02BA  0845               	movf	ints_isr@z,w
  3020  02BB  3E58               	addlw	(low (_time| 0))& (0+255)
  3021  02BC  0084               	movwf	4
  3022  02BD  0834               	movf	??_ints_isr,w
  3023  02BE  1383               	bcf	3,7	;select IRP bank0
  3024  02BF  0080               	movwf	0
  3025  02C0                     i1l2151:	
  3026  02C0  3001               	movlw	1
  3027  02C1  00B4               	movwf	??_ints_isr
  3028  02C2  0834               	movf	??_ints_isr,w
  3029  02C3  07C5               	addwf	ints_isr@z,f
  3030  02C4  3007               	movlw	7
  3031  02C5  0245               	subwf	ints_isr@z,w
  3032  02C6  1C03               	skipc
  3033  02C7  2AA9               	goto	i1l109
  3034  02C8                     i1l2155:	
  3035                           
  3036                           ;panda17.c: 137: }
  3037                           ;panda17.c: 138: }
  3038                           ;panda17.c: 139: ds_set(time);
  3039  02C8  3058               	movlw	(low (_time| 0))& (0+255)
  3040  02C9  120A  158A  22C3  120A  118A  	fcall	_ds_set
  3041                           
  3042                           ;panda17.c: 140: break;
  3043  02CE  2B5F               	goto	i1l105
  3044  02CF                     i1l113:	
  3045                           ;panda17.c: 141: case 'c':
  3046                           
  3047                           
  3048                           ;panda17.c: 142: PORTBbits.RB4 = 1;
  3049  02CF  1606               	bsf	6,4	;volatile
  3050                           
  3051                           ;panda17.c: 143: mem_write(0x0002,0x00);
  3052  02D0  3002               	movlw	2
  3053  02D1  00FA               	movwf	i1mem_write@add
  3054  02D2  3000               	movlw	0
  3055  02D3  00FB               	movwf	i1mem_write@add+1
  3056  02D4  01FC               	clrf	i1mem_write@data
  3057  02D5  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3058                           
  3059                           ;panda17.c: 144: mem_init();
  3060  02DA  120A  158A  24D9  120A  118A  	fcall	i1_mem_init
  3061                           
  3062                           ;panda17.c: 145: PORTBbits.RB4 = 0;
  3063  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3064  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3065  02E1  1206               	bcf	6,4	;volatile
  3066                           
  3067                           ;panda17.c: 146: if ((mem_read(0x0002) == 0xAA) && (mem_read(0x000D) == 0x00)){
  3068  02E2  3002               	movlw	2
  3069  02E3  00FA               	movwf	i1mem_read@add
  3070  02E4  3000               	movlw	0
  3071  02E5  00FB               	movwf	i1mem_read@add+1
  3072  02E6  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  3073  02EB  3AAA               	xorlw	170
  3074  02EC  1D03               	skipz
  3075  02ED  2B5F               	goto	i1l105
  3076  02EE  300D               	movlw	13
  3077  02EF  00FA               	movwf	i1mem_read@add
  3078  02F0  3000               	movlw	0
  3079  02F1  00FB               	movwf	i1mem_read@add+1
  3080  02F2  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  3081  02F7  3A00               	xorlw	0
  3082  02F8  1D03               	skipz
  3083  02F9  2B5F               	goto	i1l105
  3084                           
  3085                           ;panda17.c: 147: printf("OK");
  3086  02FA  3076               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3087  02FB  120A  118A  24F1  120A  118A  	fcall	_printf
  3088                           
  3089                           ;panda17.c: 148: }
  3090                           ;panda17.c: 149: break;
  3091  0300  2B5F               	goto	i1l105
  3092  0301                     i1l2165:	
  3093                           ;panda17.c: 150: case 'd':
  3094                           
  3095                           
  3096                           ;panda17.c: 151: for (unsigned char k=0;k<7;k++){
  3097  0301  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0302  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0303  01C6               	clrf	ints_isr@k
  3100  0304                     L2:	
  3101  0304  3007               	movlw	7
  3102  0305  0246               	subwf	ints_isr@k,w
  3103  0306  1803               	btfsc	3,0
  3104  0307  2B5F               	goto	i1l105
  3105                           
  3106                           ;panda17.c: 152: printf("%X ",ds_get(k));
  3107  0308  0846               	movf	ints_isr@k,w
  3108  0309  120A  158A  222D  120A  118A  	fcall	_ds_get
  3109  030E  1283               	bcf	3,5	;RP0=0, select bank0
  3110  030F  1303               	bcf	3,6	;RP1=0, select bank0
  3111  0310  00B4               	movwf	??_ints_isr
  3112  0311  01B5               	clrf	??_ints_isr+1
  3113  0312  0834               	movf	??_ints_isr,w
  3114  0313  00A4               	movwf	?_printf
  3115  0314  0835               	movf	??_ints_isr+1,w
  3116  0315  00A5               	movwf	?_printf+1
  3117  0316  3072               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  3118  0317  120A  118A  24F1  120A  118A  	fcall	_printf
  3119  031C  3001               	movlw	1
  3120  031D  1283               	bcf	3,5	;RP0=0, select bank0
  3121  031E  1303               	bcf	3,6	;RP1=0, select bank0
  3122  031F  00B4               	movwf	??_ints_isr
  3123  0320  0834               	movf	??_ints_isr,w
  3124  0321  07C6               	addwf	ints_isr@k,f
  3125  0322  2B04               	goto	L2
  3126  0323                     i1l2177:	
  3127                           ;panda17.c: 155: case 'm':
  3128                           
  3129                           ;panda17.c: 153: }
  3130                           ;panda17.c: 154: break;
  3131                           
  3132                           
  3133                           ;panda17.c: 156: printf("I%04x;",si_read_h());
  3134  0323  120A  158A  2638  120A  118A  	fcall	_si_read_h
  3135  0328  087B               	movf	?_si_read_h+1,w
  3136  0329  1283               	bcf	3,5	;RP0=0, select bank0
  3137  032A  1303               	bcf	3,6	;RP1=0, select bank0
  3138  032B  00A5               	movwf	?_printf+1
  3139  032C  087A               	movf	?_si_read_h,w
  3140  032D  00A4               	movwf	?_printf
  3141  032E  3044               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  3142  032F  120A  118A  24F1  120A  118A  	fcall	_printf
  3143                           
  3144                           ;panda17.c: 157: printf("%04x",si_read_t());
  3145  0334  120A  158A  2529  120A  118A  	fcall	_si_read_t
  3146  0339  087B               	movf	?_si_read_t+1,w
  3147  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3148  033B  1303               	bcf	3,6	;RP1=0, select bank0
  3149  033C  00A5               	movwf	?_printf+1
  3150  033D  087A               	movf	?_si_read_t,w
  3151  033E  00A4               	movwf	?_printf
  3152  033F  306D               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3153  0340  120A  118A  24F1  120A  118A  	fcall	_printf
  3154                           
  3155                           ;panda17.c: 158: printf("X");
  3156  0345  3079               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3157  0346  120A  118A  24F1  120A  118A  	fcall	_printf
  3158                           
  3159                           ;panda17.c: 161: }
  3160                           
  3161                           ;panda17.c: 159: break;
  3162  034B  2B5F               	goto	i1l105
  3163  034C                     i1l2181:	
  3164  034C  1283               	bcf	3,5	;RP0=0, select bank0
  3165  034D  1303               	bcf	3,6	;RP1=0, select bank0
  3166  034E  083C               	movf	ints_isr@rcv,w
  3167                           
  3168                           ; Switch size 1, requested type "space"
  3169                           ; Number of cases is 5, Range of values is 97 to 109
  3170                           ; switch strategies available:
  3171                           ; Name         Instructions Cycles
  3172                           ; simple_byte           16     9 (average)
  3173                           ; direct_byte           50    11 (fixed)
  3174                           ; jumptable            263     9 (fixed)
  3175                           ;	Chosen strategy is simple_byte
  3176  034F  3A61               	xorlw	97	; case 97
  3177  0350  1903               	skipnz
  3178  0351  283F               	goto	i1l98
  3179  0352  3A03               	xorlw	3	; case 98
  3180  0353  1903               	skipnz
  3181  0354  2AA4               	goto	i1l2141
  3182  0355  3A01               	xorlw	1	; case 99
  3183  0356  1903               	skipnz
  3184  0357  2ACF               	goto	i1l113
  3185  0358  3A07               	xorlw	7	; case 100
  3186  0359  1903               	skipnz
  3187  035A  2B01               	goto	i1l2165
  3188  035B  3A09               	xorlw	9	; case 109
  3189  035C  1903               	skipnz
  3190  035D  2B23               	goto	i1l2177
  3191  035E  2B5F               	goto	i1l105
  3192  035F                     i1l105:	
  3193                           
  3194                           ;panda17.c: 162: INTCONbits.GIE = 1;
  3195  035F  178B               	bsf	11,7	;volatile
  3196  0360                     i1l91:	
  3197                           
  3198                           ;panda17.c: 163: }
  3199                           ;panda17.c: 167: if (PIR1bits.TMR2IF){
  3200  0360  1283               	bcf	3,5	;RP0=0, select bank0
  3201  0361  1303               	bcf	3,6	;RP1=0, select bank0
  3202  0362  1C8C               	btfss	12,1	;volatile
  3203  0363  2CE4               	goto	i1l129
  3204                           
  3205                           ;panda17.c: 168: PIR1bits.TMR2IF = 0;
  3206  0364  108C               	bcf	12,1	;volatile
  3207                           
  3208                           ;panda17.c: 169: INTCONbits.GIE = 0;
  3209  0365  138B               	bcf	11,7	;volatile
  3210                           
  3211                           ;panda17.c: 170: if (!PORTBbits.RB2){
  3212  0366  1906               	btfsc	6,2	;volatile
  3213  0367  2B79               	goto	i1l2197
  3214                           
  3215                           ;panda17.c: 171: if (!fyh){
  3216  0368  1A5F               	btfsc	_fyh/(0+8),_fyh& (0+7)
  3217  0369  2B72               	goto	i1l2191
  3218                           
  3219                           ;panda17.c: 172: save_event();
  3220  036A  120A  158A  2695  120A  118A  	fcall	_save_event
  3221                           
  3222                           ;panda17.c: 173: fyh = 1;
  3223  036F  1283               	bcf	3,5	;RP0=0, select bank0
  3224  0370  1303               	bcf	3,6	;RP1=0, select bank0
  3225  0371  165F               	bsf	_fyh/(0+8),_fyh& (0+7)
  3226  0372                     i1l2191:	
  3227                           
  3228                           ;panda17.c: 174: }
  3229                           ;panda17.c: 175: led = 5;
  3230  0372  3005               	movlw	5
  3231  0373  00B4               	movwf	??_ints_isr
  3232  0374  0834               	movf	??_ints_isr,w
  3233  0375  00E0               	movwf	_led
  3234                           
  3235                           ;panda17.c: 176: milis = 0;
  3236  0376  01D7               	clrf	_milis
  3237                           
  3238                           ;panda17.c: 177: secs = 0;
  3239  0377  01D4               	clrf	_secs
  3240  0378  01D5               	clrf	_secs+1
  3241  0379                     i1l2197:	
  3242                           
  3243                           ;panda17.c: 178: }
  3244                           ;panda17.c: 179: if (PORTBbits.RB2){
  3245  0379  1D06               	btfss	6,2	;volatile
  3246  037A  2CE3               	goto	i1l2277
  3247                           
  3248                           ;panda17.c: 180: if (fyh){
  3249  037B  1E5F               	btfss	_fyh/(0+8),_fyh& (0+7)
  3250  037C  2B82               	goto	i1l2203
  3251                           
  3252                           ;panda17.c: 181: save_event();
  3253  037D  120A  158A  2695  120A  118A  	fcall	_save_event
  3254  0382                     i1l2203:	
  3255                           
  3256                           ;panda17.c: 182: }
  3257                           ;panda17.c: 183: milis++;
  3258  0382  3001               	movlw	1
  3259  0383  1283               	bcf	3,5	;RP0=0, select bank0
  3260  0384  1303               	bcf	3,6	;RP1=0, select bank0
  3261  0385  00B4               	movwf	??_ints_isr
  3262  0386  0834               	movf	??_ints_isr,w
  3263  0387  07D7               	addwf	_milis,f
  3264                           
  3265                           ;panda17.c: 184: if(milis > 24){
  3266  0388  3019               	movlw	25
  3267  0389  0257               	subwf	_milis,w
  3268  038A  1C03               	skipc
  3269  038B  2BA4               	goto	i1l2221
  3270                           
  3271                           ;panda17.c: 185: if (led > 0){
  3272  038C  0860               	movf	_led,w
  3273  038D  1903               	btfsc	3,2
  3274  038E  2B93               	goto	i1l125
  3275                           
  3276                           ;panda17.c: 186: PORTBbits.RB4 = 1;
  3277  038F  1606               	bsf	6,4	;volatile
  3278                           
  3279                           ;panda17.c: 187: led--;
  3280  0390  3001               	movlw	1
  3281  0391  02E0               	subwf	_led,f
  3282                           
  3283                           ;panda17.c: 188: }
  3284  0392  2B94               	goto	i1l2213
  3285  0393                     i1l125:	
  3286                           
  3287                           ;panda17.c: 189: else {
  3288                           ;panda17.c: 190: PORTBbits.RB4 = 0;
  3289  0393  1206               	bcf	6,4	;volatile
  3290  0394                     i1l2213:	
  3291                           
  3292                           ;panda17.c: 191: }
  3293                           ;panda17.c: 192: secs++;
  3294  0394  3001               	movlw	1
  3295  0395  07D4               	addwf	_secs,f
  3296  0396  1803               	skipnc
  3297  0397  0AD5               	incf	_secs+1,f
  3298  0398  3000               	movlw	0
  3299  0399  07D5               	addwf	_secs+1,f
  3300                           
  3301                           ;panda17.c: 193: milis = 0;
  3302  039A  01D7               	clrf	_milis
  3303                           
  3304                           ;panda17.c: 194: if (secs == 2){
  3305  039B  3002               	movlw	2
  3306  039C  0654               	xorwf	_secs,w
  3307  039D  0455               	iorwf	_secs+1,w
  3308  039E  1D03               	btfss	3,2
  3309  039F  2BA4               	goto	i1l2221
  3310                           
  3311                           ;panda17.c: 195: condition = 2;
  3312  03A0  3002               	movlw	2
  3313  03A1  00B4               	movwf	??_ints_isr
  3314  03A2  0834               	movf	??_ints_isr,w
  3315  03A3  00D6               	movwf	_condition
  3316  03A4                     i1l2221:	
  3317                           
  3318                           ;panda17.c: 196: }
  3319                           ;panda17.c: 197: }
  3320                           ;panda17.c: 198: if (condition == 2){
  3321  03A4  3002               	movlw	2
  3322  03A5  0656               	xorwf	_condition,w
  3323  03A6  1D03               	btfss	3,2
  3324  03A7  2CE3               	goto	i1l2277
  3325                           
  3326                           ;panda17.c: 199: condition = 0;
  3327  03A8  01D6               	clrf	_condition
  3328                           
  3329                           ;panda17.c: 200: secs = 0;
  3330  03A9  01D4               	clrf	_secs
  3331  03AA  01D5               	clrf	_secs+1
  3332                           
  3333                           ;panda17.c: 202: unsigned char arg;
  3334                           ;panda17.c: 203: unsigned int temp_add,hum_add,up;
  3335                           ;panda17.c: 204: unsigned int hum_val,temp_val;
  3336                           ;panda17.c: 206: hum_val = si_read_h();
  3337  03AB  120A  158A  2638  120A  118A  	fcall	_si_read_h
  3338  03B0  087B               	movf	?_si_read_h+1,w
  3339  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3340  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3341  03B3  00BE               	movwf	ints_isr@hum_val+1
  3342  03B4  087A               	movf	?_si_read_h,w
  3343  03B5  00BD               	movwf	ints_isr@hum_val
  3344                           
  3345                           ;panda17.c: 207: temp_val = si_read_t();
  3346  03B6  120A  158A  2529  120A  118A  	fcall	_si_read_t
  3347  03BB  087B               	movf	?_si_read_t+1,w
  3348  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  3349  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  3350  03BE  00C0               	movwf	ints_isr@temp_val+1
  3351  03BF  087A               	movf	?_si_read_t,w
  3352  03C0  00BF               	movwf	ints_isr@temp_val
  3353                           
  3354                           ;panda17.c: 209: hum_add = mem_read(0x000A);
  3355  03C1  300A               	movlw	10
  3356  03C2  00FA               	movwf	i1mem_read@add
  3357  03C3  3000               	movlw	0
  3358  03C4  00FB               	movwf	i1mem_read@add+1
  3359  03C5  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  3360  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  3361  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  3362  03CC  00B4               	movwf	??_ints_isr
  3363  03CD  01B5               	clrf	??_ints_isr+1
  3364  03CE  0834               	movf	??_ints_isr,w
  3365  03CF  00CD               	movwf	ints_isr@hum_add
  3366  03D0  0835               	movf	??_ints_isr+1,w
  3367  03D1  00CE               	movwf	ints_isr@hum_add+1
  3368                           
  3369                           ;panda17.c: 210: hum_add = hum_add << 8;
  3370  03D2  084D               	movf	ints_isr@hum_add,w
  3371  03D3  00B5               	movwf	??_ints_isr+1
  3372  03D4  01B4               	clrf	??_ints_isr
  3373  03D5  0834               	movf	??_ints_isr,w
  3374  03D6  00CD               	movwf	ints_isr@hum_add
  3375  03D7  0835               	movf	??_ints_isr+1,w
  3376  03D8  00CE               	movwf	ints_isr@hum_add+1
  3377                           
  3378                           ;panda17.c: 211: hum_add += mem_read(0x000B);
  3379  03D9  300B               	movlw	11
  3380  03DA  00FA               	movwf	i1mem_read@add
  3381  03DB  3000               	movlw	0
  3382  03DC  00FB               	movwf	i1mem_read@add+1
  3383  03DD  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  3384  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  3385  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  3386  03E4  00B4               	movwf	??_ints_isr
  3387  03E5  01B5               	clrf	??_ints_isr+1
  3388  03E6  0834               	movf	??_ints_isr,w
  3389  03E7  07CD               	addwf	ints_isr@hum_add,f
  3390  03E8  1803               	skipnc
  3391  03E9  0ACE               	incf	ints_isr@hum_add+1,f
  3392  03EA  0835               	movf	??_ints_isr+1,w
  3393  03EB  07CE               	addwf	ints_isr@hum_add+1,f
  3394                           
  3395                           ;panda17.c: 212: up = hum_add + 1;
  3396  03EC  084D               	movf	ints_isr@hum_add,w
  3397  03ED  3E01               	addlw	1
  3398  03EE  00C7               	movwf	ints_isr@up
  3399  03EF  084E               	movf	ints_isr@hum_add+1,w
  3400  03F0  1803               	skipnc
  3401  03F1  3E01               	addlw	1
  3402  03F2  3E00               	addlw	0
  3403  03F3  00C8               	movwf	ints_isr@up+1
  3404                           
  3405                           ;panda17.c: 213: arg = up >> 8;
  3406  03F4  0848               	movf	ints_isr@up+1,w
  3407  03F5  00B4               	movwf	??_ints_isr
  3408  03F6  0834               	movf	??_ints_isr,w
  3409  03F7  00D1               	movwf	ints_isr@arg
  3410                           
  3411                           ;panda17.c: 214: mem_write(0x000A,arg);
  3412  03F8  300A               	movlw	10
  3413  03F9  00FA               	movwf	i1mem_write@add
  3414  03FA  3000               	movlw	0
  3415  03FB  00FB               	movwf	i1mem_write@add+1
  3416  03FC  0851               	movf	ints_isr@arg,w
  3417  03FD  00B4               	movwf	??_ints_isr
  3418  03FE  0834               	movf	??_ints_isr,w
  3419  03FF  00FC               	movwf	i1mem_write@data
  3420  0400  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3421                           
  3422                           ;panda17.c: 215: arg = up & 0x00FF;
  3423  0405  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0406  1303               	bcf	3,6	;RP1=0, select bank0
  3425  0407  0847               	movf	ints_isr@up,w
  3426  0408  00B4               	movwf	??_ints_isr
  3427  0409  0834               	movf	??_ints_isr,w
  3428  040A  00D1               	movwf	ints_isr@arg
  3429                           
  3430                           ;panda17.c: 216: mem_write(0x000B,arg);
  3431  040B  300B               	movlw	11
  3432  040C  00FA               	movwf	i1mem_write@add
  3433  040D  3000               	movlw	0
  3434  040E  00FB               	movwf	i1mem_write@add+1
  3435  040F  0851               	movf	ints_isr@arg,w
  3436  0410  00B4               	movwf	??_ints_isr
  3437  0411  0834               	movf	??_ints_isr,w
  3438  0412  00FC               	movwf	i1mem_write@data
  3439  0413  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3440                           
  3441                           ;panda17.c: 217: hum_add = (hum_add * 2) + 1 + 0x000F;
  3442  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3443  0419  1303               	bcf	3,6	;RP1=0, select bank0
  3444  041A  084E               	movf	ints_isr@hum_add+1,w
  3445  041B  00B5               	movwf	??_ints_isr+1
  3446  041C  084D               	movf	ints_isr@hum_add,w
  3447  041D  00B4               	movwf	??_ints_isr
  3448  041E  1003               	clrc
  3449  041F  0DB4               	rlf	??_ints_isr,f
  3450  0420  0DB5               	rlf	??_ints_isr+1,f
  3451  0421  0834               	movf	??_ints_isr,w
  3452  0422  3E10               	addlw	16
  3453  0423  00CD               	movwf	ints_isr@hum_add
  3454  0424  0835               	movf	??_ints_isr+1,w
  3455  0425  1803               	skipnc
  3456  0426  3E01               	addlw	1
  3457  0427  3E00               	addlw	0
  3458  0428  00CE               	movwf	ints_isr@hum_add+1
  3459                           
  3460                           ;panda17.c: 218: temp_add = mem_read(0x000C);
  3461  0429  300C               	movlw	12
  3462  042A  00FA               	movwf	i1mem_read@add
  3463  042B  3000               	movlw	0
  3464  042C  00FB               	movwf	i1mem_read@add+1
  3465  042D  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  3466  0432  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0433  1303               	bcf	3,6	;RP1=0, select bank0
  3468  0434  00B4               	movwf	??_ints_isr
  3469  0435  01B5               	clrf	??_ints_isr+1
  3470  0436  0834               	movf	??_ints_isr,w
  3471  0437  00CB               	movwf	ints_isr@temp_add
  3472  0438  0835               	movf	??_ints_isr+1,w
  3473  0439  00CC               	movwf	ints_isr@temp_add+1
  3474                           
  3475                           ;panda17.c: 219: temp_add = temp_add << 8;
  3476  043A  084B               	movf	ints_isr@temp_add,w
  3477  043B  00B5               	movwf	??_ints_isr+1
  3478  043C  01B4               	clrf	??_ints_isr
  3479  043D  0834               	movf	??_ints_isr,w
  3480  043E  00CB               	movwf	ints_isr@temp_add
  3481  043F  0835               	movf	??_ints_isr+1,w
  3482  0440  00CC               	movwf	ints_isr@temp_add+1
  3483                           
  3484                           ;panda17.c: 220: temp_add += mem_read(0x000D);
  3485  0441  300D               	movlw	13
  3486  0442  00FA               	movwf	i1mem_read@add
  3487  0443  3000               	movlw	0
  3488  0444  00FB               	movwf	i1mem_read@add+1
  3489  0445  120A  158A  2365  120A  118A  	fcall	i1_mem_read
  3490  044A  1283               	bcf	3,5	;RP0=0, select bank0
  3491  044B  1303               	bcf	3,6	;RP1=0, select bank0
  3492  044C  00B4               	movwf	??_ints_isr
  3493  044D  01B5               	clrf	??_ints_isr+1
  3494  044E  0834               	movf	??_ints_isr,w
  3495  044F  07CB               	addwf	ints_isr@temp_add,f
  3496  0450  1803               	skipnc
  3497  0451  0ACC               	incf	ints_isr@temp_add+1,f
  3498  0452  0835               	movf	??_ints_isr+1,w
  3499  0453  07CC               	addwf	ints_isr@temp_add+1,f
  3500                           
  3501                           ;panda17.c: 221: up = temp_add + 1;
  3502  0454  084B               	movf	ints_isr@temp_add,w
  3503  0455  3E01               	addlw	1
  3504  0456  00C7               	movwf	ints_isr@up
  3505  0457  084C               	movf	ints_isr@temp_add+1,w
  3506  0458  1803               	skipnc
  3507  0459  3E01               	addlw	1
  3508  045A  3E00               	addlw	0
  3509  045B  00C8               	movwf	ints_isr@up+1
  3510                           
  3511                           ;panda17.c: 222: arg = up >> 8;
  3512  045C  0848               	movf	ints_isr@up+1,w
  3513  045D  00B4               	movwf	??_ints_isr
  3514  045E  0834               	movf	??_ints_isr,w
  3515  045F  00D1               	movwf	ints_isr@arg
  3516                           
  3517                           ;panda17.c: 223: mem_write(0x000C,arg);
  3518  0460  300C               	movlw	12
  3519  0461  00FA               	movwf	i1mem_write@add
  3520  0462  3000               	movlw	0
  3521  0463  00FB               	movwf	i1mem_write@add+1
  3522  0464  0851               	movf	ints_isr@arg,w
  3523  0465  00B4               	movwf	??_ints_isr
  3524  0466  0834               	movf	??_ints_isr,w
  3525  0467  00FC               	movwf	i1mem_write@data
  3526  0468  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3527                           
  3528                           ;panda17.c: 224: arg = up & 0x00FF;
  3529  046D  1283               	bcf	3,5	;RP0=0, select bank0
  3530  046E  1303               	bcf	3,6	;RP1=0, select bank0
  3531  046F  0847               	movf	ints_isr@up,w
  3532  0470  00B4               	movwf	??_ints_isr
  3533  0471  0834               	movf	??_ints_isr,w
  3534  0472  00D1               	movwf	ints_isr@arg
  3535                           
  3536                           ;panda17.c: 225: mem_write(0x000D,arg);
  3537  0473  300D               	movlw	13
  3538  0474  00FA               	movwf	i1mem_write@add
  3539  0475  3000               	movlw	0
  3540  0476  00FB               	movwf	i1mem_write@add+1
  3541  0477  0851               	movf	ints_isr@arg,w
  3542  0478  00B4               	movwf	??_ints_isr
  3543  0479  0834               	movf	??_ints_isr,w
  3544  047A  00FC               	movwf	i1mem_write@data
  3545  047B  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3546                           
  3547                           ;panda17.c: 226: temp_add = (temp_add * 2) + 1 + 0x7FF6;
  3548  0480  1283               	bcf	3,5	;RP0=0, select bank0
  3549  0481  1303               	bcf	3,6	;RP1=0, select bank0
  3550  0482  084C               	movf	ints_isr@temp_add+1,w
  3551  0483  00B5               	movwf	??_ints_isr+1
  3552  0484  084B               	movf	ints_isr@temp_add,w
  3553  0485  00B4               	movwf	??_ints_isr
  3554  0486  1003               	clrc
  3555  0487  0DB4               	rlf	??_ints_isr,f
  3556  0488  0DB5               	rlf	??_ints_isr+1,f
  3557  0489  0834               	movf	??_ints_isr,w
  3558  048A  3EF7               	addlw	247
  3559  048B  00CB               	movwf	ints_isr@temp_add
  3560  048C  0835               	movf	??_ints_isr+1,w
  3561  048D  1803               	skipnc
  3562  048E  3E01               	addlw	1
  3563  048F  3E7F               	addlw	127
  3564  0490  00CC               	movwf	ints_isr@temp_add+1
  3565                           
  3566                           ;panda17.c: 228: arg = hum_val >> 8;
  3567  0491  083E               	movf	ints_isr@hum_val+1,w
  3568  0492  00B4               	movwf	??_ints_isr
  3569  0493  0834               	movf	??_ints_isr,w
  3570  0494  00D1               	movwf	ints_isr@arg
  3571                           
  3572                           ;panda17.c: 229: mem_write(hum_add,arg);
  3573  0495  084E               	movf	ints_isr@hum_add+1,w
  3574  0496  00FB               	movwf	i1mem_write@add+1
  3575  0497  084D               	movf	ints_isr@hum_add,w
  3576  0498  00FA               	movwf	i1mem_write@add
  3577  0499  0851               	movf	ints_isr@arg,w
  3578  049A  00B4               	movwf	??_ints_isr
  3579  049B  0834               	movf	??_ints_isr,w
  3580  049C  00FC               	movwf	i1mem_write@data
  3581  049D  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3582                           
  3583                           ;panda17.c: 230: arg = hum_val & 0x00FF;
  3584  04A2  1283               	bcf	3,5	;RP0=0, select bank0
  3585  04A3  1303               	bcf	3,6	;RP1=0, select bank0
  3586  04A4  083D               	movf	ints_isr@hum_val,w
  3587  04A5  00B4               	movwf	??_ints_isr
  3588  04A6  0834               	movf	??_ints_isr,w
  3589  04A7  00D1               	movwf	ints_isr@arg
  3590                           
  3591                           ;panda17.c: 231: mem_write(hum_add + 1,arg);
  3592  04A8  084D               	movf	ints_isr@hum_add,w
  3593  04A9  3E01               	addlw	1
  3594  04AA  00FA               	movwf	i1mem_write@add
  3595  04AB  084E               	movf	ints_isr@hum_add+1,w
  3596  04AC  1803               	skipnc
  3597  04AD  3E01               	addlw	1
  3598  04AE  3E00               	addlw	0
  3599  04AF  00FB               	movwf	i1mem_write@add+1
  3600  04B0  0851               	movf	ints_isr@arg,w
  3601  04B1  00B4               	movwf	??_ints_isr
  3602  04B2  0834               	movf	??_ints_isr,w
  3603  04B3  00FC               	movwf	i1mem_write@data
  3604  04B4  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3605                           
  3606                           ;panda17.c: 232: arg = (temp_val >> 8) & 0x00FF;
  3607  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3608  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3609  04BB  0840               	movf	ints_isr@temp_val+1,w
  3610  04BC  00B4               	movwf	??_ints_isr
  3611  04BD  0834               	movf	??_ints_isr,w
  3612  04BE  00D1               	movwf	ints_isr@arg
  3613                           
  3614                           ;panda17.c: 233: mem_write(temp_add,arg);
  3615  04BF  084C               	movf	ints_isr@temp_add+1,w
  3616  04C0  00FB               	movwf	i1mem_write@add+1
  3617  04C1  084B               	movf	ints_isr@temp_add,w
  3618  04C2  00FA               	movwf	i1mem_write@add
  3619  04C3  0851               	movf	ints_isr@arg,w
  3620  04C4  00B4               	movwf	??_ints_isr
  3621  04C5  0834               	movf	??_ints_isr,w
  3622  04C6  00FC               	movwf	i1mem_write@data
  3623  04C7  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3624                           
  3625                           ;panda17.c: 234: arg = temp_val & 0x00FF;
  3626  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  3627  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  3628  04CE  083F               	movf	ints_isr@temp_val,w
  3629  04CF  00B4               	movwf	??_ints_isr
  3630  04D0  0834               	movf	??_ints_isr,w
  3631  04D1  00D1               	movwf	ints_isr@arg
  3632                           
  3633                           ;panda17.c: 235: mem_write(temp_add + 1,arg);
  3634  04D2  084B               	movf	ints_isr@temp_add,w
  3635  04D3  3E01               	addlw	1
  3636  04D4  00FA               	movwf	i1mem_write@add
  3637  04D5  084C               	movf	ints_isr@temp_add+1,w
  3638  04D6  1803               	skipnc
  3639  04D7  3E01               	addlw	1
  3640  04D8  3E00               	addlw	0
  3641  04D9  00FB               	movwf	i1mem_write@add+1
  3642  04DA  0851               	movf	ints_isr@arg,w
  3643  04DB  00B4               	movwf	??_ints_isr
  3644  04DC  0834               	movf	??_ints_isr,w
  3645  04DD  00FC               	movwf	i1mem_write@data
  3646  04DE  120A  158A  23AB  120A  118A  	fcall	i1_mem_write
  3647  04E3                     i1l2277:	
  3648                           
  3649                           ;panda17.c: 237: }
  3650                           ;panda17.c: 238: }
  3651                           ;panda17.c: 239: INTCONbits.GIE = 1;
  3652  04E3  178B               	bsf	11,7	;volatile
  3653  04E4                     i1l129:	
  3654  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3655  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  3656  04E6  083B               	movf	??_ints_isr+7,w
  3657  04E7  00FF               	movwf	127
  3658  04E8  083A               	movf	??_ints_isr+6,w
  3659  04E9  008A               	movwf	10
  3660  04EA  0839               	movf	??_ints_isr+5,w
  3661  04EB  0084               	movwf	4
  3662  04EC  0E38               	swapf	(??_ints_isr+4)^0,w
  3663  04ED  0083               	movwf	3
  3664  04EE  0EFE               	swapf	126,f
  3665  04EF  0E7E               	swapf	126,w
  3666  04F0  0009               	retfie
  3667  04F1                     __end_of_ints_isr:	
  3668                           
  3669                           	psect	intentry
  3670  0004                     __pintentry:	
  3671                           ;incstack = 0
  3672                           ; Regs used in _ints_isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3673                           
  3674  0004                     interrupt_function:	
  3675  007E                     saved_w	set	btemp
  3676  0004  00FE               	movwf	btemp
  3677  0005  0E03               	swapf	3,w
  3678  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3679  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3680  0008  00B8               	movwf	??_ints_isr+4
  3681  0009  0804               	movf	4,w
  3682  000A  00B9               	movwf	??_ints_isr+5
  3683  000B  080A               	movf	10,w
  3684  000C  00BA               	movwf	??_ints_isr+6
  3685  000D  087F               	movf	btemp+1,w
  3686  000E  00BB               	movwf	??_ints_isr+7
  3687  000F  120A  118A  2829   	ljmp	_ints_isr
  3688                           
  3689                           	psect	text13
  3690  0CD9                     __ptext13:	
  3691 ;; *************** function i1_mem_init *****************
  3692 ;; Defined at:
  3693 ;;		line 42 in file "panda17.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  mem_init        1    4[BANK0 ] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2, status,0, pclath, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3707 ;;      Params:         0       0       0       0       0
  3708 ;;      Locals:         0       1       0       0       0
  3709 ;;      Temps:          0       1       0       0       0
  3710 ;;      Totals:         0       2       0       0       0
  3711 ;;Total ram usage:        2 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; Hardware stack levels required when called:    2
  3714 ;; This function calls:
  3715 ;;		i1_mem_read
  3716 ;;		i1_mem_write
  3717 ;; This function is called by:
  3718 ;;		_ints_isr
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           
  3723                           ;psect for function i1_mem_init
  3724  0CD9                     i1_mem_init:	
  3725                           
  3726                           ;panda17.c: 43: unsigned char aux;
  3727                           ;panda17.c: 44: aux = mem_read(0x0002);
  3728                           
  3729                           ;incstack = 0
  3730                           ; Regs used in i1_mem_init: [wreg+status,2+status,0+pclath+cstack]
  3731  0CD9  3002               	movlw	2
  3732  0CDA  00FA               	movwf	i1mem_read@add
  3733  0CDB  3000               	movlw	0
  3734  0CDC  00FB               	movwf	i1mem_read@add+1
  3735  0CDD  120A  158A  2365  120A  158A  	fcall	i1_mem_read
  3736  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0CE3  1303               	bcf	3,6	;RP1=0, select bank0
  3738  0CE4  00A3               	movwf	??i1_mem_init
  3739  0CE5  0823               	movf	??i1_mem_init,w
  3740  0CE6  00A4               	movwf	i1mem_init@aux
  3741                           
  3742                           ;panda17.c: 45: if (aux != 0xAA){
  3743  0CE7  30AA               	movlw	170
  3744  0CE8  0624               	xorwf	i1mem_init@aux,w
  3745  0CE9  1903               	btfsc	3,2
  3746  0CEA  0008               	return
  3747                           
  3748                           ;panda17.c: 46: mem_write(0x0002,0xAA);
  3749  0CEB  3002               	movlw	2
  3750  0CEC  00FA               	movwf	i1mem_write@add
  3751  0CED  3000               	movlw	0
  3752  0CEE  00FB               	movwf	i1mem_write@add+1
  3753  0CEF  30AA               	movlw	170
  3754  0CF0  00A3               	movwf	??i1_mem_init
  3755  0CF1  0823               	movf	??i1_mem_init,w
  3756  0CF2  00FC               	movwf	i1mem_write@data
  3757  0CF3  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  3758                           
  3759                           ;panda17.c: 47: mem_write(0x0003,0x00);
  3760  0CF8  3003               	movlw	3
  3761  0CF9  00FA               	movwf	i1mem_write@add
  3762  0CFA  3000               	movlw	0
  3763  0CFB  00FB               	movwf	i1mem_write@add+1
  3764  0CFC  01FC               	clrf	i1mem_write@data
  3765  0CFD  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  3766                           
  3767                           ;panda17.c: 48: mem_write(0x000A,0x00);
  3768  0D02  300A               	movlw	10
  3769  0D03  00FA               	movwf	i1mem_write@add
  3770  0D04  3000               	movlw	0
  3771  0D05  00FB               	movwf	i1mem_write@add+1
  3772  0D06  01FC               	clrf	i1mem_write@data
  3773  0D07  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  3774                           
  3775                           ;panda17.c: 49: mem_write(0x000B,0x00);
  3776  0D0C  300B               	movlw	11
  3777  0D0D  00FA               	movwf	i1mem_write@add
  3778  0D0E  3000               	movlw	0
  3779  0D0F  00FB               	movwf	i1mem_write@add+1
  3780  0D10  01FC               	clrf	i1mem_write@data
  3781  0D11  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  3782                           
  3783                           ;panda17.c: 50: mem_write(0x000C,0x00);
  3784  0D16  300C               	movlw	12
  3785  0D17  00FA               	movwf	i1mem_write@add
  3786  0D18  3000               	movlw	0
  3787  0D19  00FB               	movwf	i1mem_write@add+1
  3788  0D1A  01FC               	clrf	i1mem_write@data
  3789  0D1B  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  3790                           
  3791                           ;panda17.c: 51: mem_write(0x000D,0x00);
  3792  0D20  300D               	movlw	13
  3793  0D21  00FA               	movwf	i1mem_write@add
  3794  0D22  3000               	movlw	0
  3795  0D23  00FB               	movwf	i1mem_write@add+1
  3796  0D24  01FC               	clrf	i1mem_write@data
  3797  0D25  120A  158A  23AB   	fcall	i1_mem_write
  3798  0D28  0008               	return
  3799  0D29                     __end_ofi1_mem_init:	
  3800                           
  3801                           	psect	text14
  3802  0D29                     __ptext14:	
  3803 ;; *************** function _si_read_t *****************
  3804 ;; Defined at:
  3805 ;;		line 37 in file "si7021.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  rta             2    2[BANK0 ] unsigned int 
  3810 ;;  rta_l           1    1[BANK0 ] unsigned char 
  3811 ;;  rta_h           1    0[BANK0 ] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  2   10[COMMON] unsigned int 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, pclath, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         2       0       0       0       0
  3822 ;;      Locals:         0       4       0       0       0
  3823 ;;      Temps:          2       0       0       0       0
  3824 ;;      Totals:         4       4       0       0       0
  3825 ;;Total ram usage:        8 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    1
  3828 ;; This function calls:
  3829 ;;		_i2c_rstart
  3830 ;;		i1_i2c_read
  3831 ;;		i1_i2c_start
  3832 ;;		i1_i2c_stop
  3833 ;;		i1_i2c_write
  3834 ;; This function is called by:
  3835 ;;		_ints_isr
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           
  3840                           ;psect for function _si_read_t
  3841  0D29                     _si_read_t:	
  3842                           
  3843                           ;si7021.c: 38: unsigned int rta;
  3844                           ;si7021.c: 39: unsigned char rta_h,rta_l;
  3845                           ;si7021.c: 40: i2c_start();
  3846                           
  3847                           ;incstack = 0
  3848                           ; Regs used in _si_read_t: [wreg+status,2+status,0+pclath+cstack]
  3849  0D29  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  3850                           
  3851                           ;si7021.c: 41: i2c_write(0x80,1);
  3852  0D2E  01F0               	clrf	i1i2c_write@ack
  3853  0D2F  0AF0               	incf	i1i2c_write@ack,f
  3854  0D30  3080               	movlw	128
  3855  0D31  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  3856                           
  3857                           ;si7021.c: 42: i2c_write(0xE3,1);
  3858  0D36  01F0               	clrf	i1i2c_write@ack
  3859  0D37  0AF0               	incf	i1i2c_write@ack,f
  3860  0D38  30E3               	movlw	227
  3861  0D39  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  3862                           
  3863                           ;si7021.c: 43: i2c_rstart();
  3864  0D3E  120A  158A  219F  120A  158A  	fcall	_i2c_rstart
  3865                           
  3866                           ;si7021.c: 44: i2c_write(0x81,1);
  3867  0D43  01F0               	clrf	i1i2c_write@ack
  3868  0D44  0AF0               	incf	i1i2c_write@ack,f
  3869  0D45  3081               	movlw	129
  3870  0D46  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  3871                           
  3872                           ;si7021.c: 45: rta_h = i2c_read(1);
  3873  0D4B  3001               	movlw	1
  3874  0D4C  120A  158A  2582  120A  158A  	fcall	i1_i2c_read
  3875  0D51  00FC               	movwf	??_si_read_t
  3876  0D52  087C               	movf	??_si_read_t,w
  3877  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  3878  0D54  1303               	bcf	3,6	;RP1=0, select bank0
  3879  0D55  00A0               	movwf	si_read_t@rta_h
  3880                           
  3881                           ;si7021.c: 46: rta_l = i2c_read(3);
  3882  0D56  3003               	movlw	3
  3883  0D57  120A  158A  2582  120A  158A  	fcall	i1_i2c_read
  3884  0D5C  00FC               	movwf	??_si_read_t
  3885  0D5D  087C               	movf	??_si_read_t,w
  3886  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0D60  00A1               	movwf	si_read_t@rta_l
  3889                           
  3890                           ;si7021.c: 47: i2c_stop();
  3891  0D61  120A  158A  217C   	fcall	i1_i2c_stop
  3892                           
  3893                           ;si7021.c: 48: rta = rta_h;
  3894  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  3896  0D66  0820               	movf	si_read_t@rta_h,w
  3897  0D67  00FC               	movwf	??_si_read_t
  3898  0D68  01FD               	clrf	??_si_read_t+1
  3899  0D69  087C               	movf	??_si_read_t,w
  3900  0D6A  00A2               	movwf	si_read_t@rta
  3901  0D6B  087D               	movf	??_si_read_t+1,w
  3902  0D6C  00A3               	movwf	si_read_t@rta+1
  3903                           
  3904                           ;si7021.c: 49: rta = rta << 8;
  3905  0D6D  0822               	movf	si_read_t@rta,w
  3906  0D6E  00FD               	movwf	??_si_read_t+1
  3907  0D6F  01FC               	clrf	??_si_read_t
  3908  0D70  087C               	movf	??_si_read_t,w
  3909  0D71  00A2               	movwf	si_read_t@rta
  3910  0D72  087D               	movf	??_si_read_t+1,w
  3911  0D73  00A3               	movwf	si_read_t@rta+1
  3912                           
  3913                           ;si7021.c: 50: rta += rta_l;
  3914  0D74  0821               	movf	si_read_t@rta_l,w
  3915  0D75  00FC               	movwf	??_si_read_t
  3916  0D76  01FD               	clrf	??_si_read_t+1
  3917  0D77  087C               	movf	??_si_read_t,w
  3918  0D78  07A2               	addwf	si_read_t@rta,f
  3919  0D79  1803               	skipnc
  3920  0D7A  0AA3               	incf	si_read_t@rta+1,f
  3921  0D7B  087D               	movf	??_si_read_t+1,w
  3922  0D7C  07A3               	addwf	si_read_t@rta+1,f
  3923                           
  3924                           ;si7021.c: 51: return rta;
  3925  0D7D  0823               	movf	si_read_t@rta+1,w
  3926  0D7E  00FB               	movwf	?_si_read_t+1
  3927  0D7F  0822               	movf	si_read_t@rta,w
  3928  0D80  00FA               	movwf	?_si_read_t
  3929  0D81  0008               	return
  3930  0D82                     __end_of_si_read_t:	
  3931                           
  3932                           	psect	text15
  3933  0E38                     __ptext15:	
  3934 ;; *************** function _si_read_h *****************
  3935 ;; Defined at:
  3936 ;;		line 20 in file "si7021.c"
  3937 ;; Parameters:    Size  Location     Type
  3938 ;;		None
  3939 ;; Auto vars:     Size  Location     Type
  3940 ;;  rta             2    2[BANK0 ] unsigned int 
  3941 ;;  rta_l           1    1[BANK0 ] unsigned char 
  3942 ;;  rta_h           1    0[BANK0 ] unsigned char 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;                  2   10[COMMON] unsigned int 
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0, pclath, cstack
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3952 ;;      Params:         2       0       0       0       0
  3953 ;;      Locals:         0       4       0       0       0
  3954 ;;      Temps:          2       0       0       0       0
  3955 ;;      Totals:         4       4       0       0       0
  3956 ;;Total ram usage:        8 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; Hardware stack levels required when called:    1
  3959 ;; This function calls:
  3960 ;;		_i2c_rstart
  3961 ;;		i1_i2c_read
  3962 ;;		i1_i2c_start
  3963 ;;		i1_i2c_stop
  3964 ;;		i1_i2c_write
  3965 ;; This function is called by:
  3966 ;;		_ints_isr
  3967 ;; This function uses a non-reentrant model
  3968 ;;
  3969                           
  3970                           
  3971                           ;psect for function _si_read_h
  3972  0E38                     _si_read_h:	
  3973                           
  3974                           ;si7021.c: 21: unsigned int rta = 0;
  3975                           
  3976                           ;incstack = 0
  3977                           ; Regs used in _si_read_h: [wreg+status,2+status,0+pclath+cstack]
  3978  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  3979  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  3980  0E3A  01A2               	clrf	si_read_h@rta
  3981  0E3B  01A3               	clrf	si_read_h@rta+1
  3982                           
  3983                           ;si7021.c: 22: unsigned char rta_h,rta_l;
  3984                           ;si7021.c: 23: i2c_start();
  3985  0E3C  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  3986                           
  3987                           ;si7021.c: 24: i2c_write(0x80,1);
  3988  0E41  01F0               	clrf	i1i2c_write@ack
  3989  0E42  0AF0               	incf	i1i2c_write@ack,f
  3990  0E43  3080               	movlw	128
  3991  0E44  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  3992                           
  3993                           ;si7021.c: 25: i2c_write(0xE5,1);
  3994  0E49  01F0               	clrf	i1i2c_write@ack
  3995  0E4A  0AF0               	incf	i1i2c_write@ack,f
  3996  0E4B  30E5               	movlw	229
  3997  0E4C  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  3998                           
  3999                           ;si7021.c: 26: i2c_rstart();
  4000  0E51  120A  158A  219F  120A  158A  	fcall	_i2c_rstart
  4001                           
  4002                           ;si7021.c: 27: i2c_write(0x81,1);
  4003  0E56  01F0               	clrf	i1i2c_write@ack
  4004  0E57  0AF0               	incf	i1i2c_write@ack,f
  4005  0E58  3081               	movlw	129
  4006  0E59  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4007                           
  4008                           ;si7021.c: 28: rta_h = i2c_read(1);
  4009  0E5E  3001               	movlw	1
  4010  0E5F  120A  158A  2582  120A  158A  	fcall	i1_i2c_read
  4011  0E64  00FC               	movwf	??_si_read_h
  4012  0E65  087C               	movf	??_si_read_h,w
  4013  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0E68  00A0               	movwf	si_read_h@rta_h
  4016                           
  4017                           ;si7021.c: 29: rta_l = i2c_read(3);
  4018  0E69  3003               	movlw	3
  4019  0E6A  120A  158A  2582  120A  158A  	fcall	i1_i2c_read
  4020  0E6F  00FC               	movwf	??_si_read_h
  4021  0E70  087C               	movf	??_si_read_h,w
  4022  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  4023  0E72  1303               	bcf	3,6	;RP1=0, select bank0
  4024  0E73  00A1               	movwf	si_read_h@rta_l
  4025                           
  4026                           ;si7021.c: 30: i2c_stop();
  4027  0E74  120A  158A  217C   	fcall	i1_i2c_stop
  4028                           
  4029                           ;si7021.c: 31: rta = rta_h;
  4030  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4031  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4032  0E79  0820               	movf	si_read_h@rta_h,w
  4033  0E7A  00FC               	movwf	??_si_read_h
  4034  0E7B  01FD               	clrf	??_si_read_h+1
  4035  0E7C  087C               	movf	??_si_read_h,w
  4036  0E7D  00A2               	movwf	si_read_h@rta
  4037  0E7E  087D               	movf	??_si_read_h+1,w
  4038  0E7F  00A3               	movwf	si_read_h@rta+1
  4039                           
  4040                           ;si7021.c: 32: rta = rta << 8;
  4041  0E80  0822               	movf	si_read_h@rta,w
  4042  0E81  00FD               	movwf	??_si_read_h+1
  4043  0E82  01FC               	clrf	??_si_read_h
  4044  0E83  087C               	movf	??_si_read_h,w
  4045  0E84  00A2               	movwf	si_read_h@rta
  4046  0E85  087D               	movf	??_si_read_h+1,w
  4047  0E86  00A3               	movwf	si_read_h@rta+1
  4048                           
  4049                           ;si7021.c: 33: rta += rta_l;
  4050  0E87  0821               	movf	si_read_h@rta_l,w
  4051  0E88  00FC               	movwf	??_si_read_h
  4052  0E89  01FD               	clrf	??_si_read_h+1
  4053  0E8A  087C               	movf	??_si_read_h,w
  4054  0E8B  07A2               	addwf	si_read_h@rta,f
  4055  0E8C  1803               	skipnc
  4056  0E8D  0AA3               	incf	si_read_h@rta+1,f
  4057  0E8E  087D               	movf	??_si_read_h+1,w
  4058  0E8F  07A3               	addwf	si_read_h@rta+1,f
  4059                           
  4060                           ;si7021.c: 34: return rta;
  4061  0E90  0823               	movf	si_read_h@rta+1,w
  4062  0E91  00FB               	movwf	?_si_read_h+1
  4063  0E92  0822               	movf	si_read_h@rta,w
  4064  0E93  00FA               	movwf	?_si_read_h
  4065  0E94  0008               	return
  4066  0E95                     __end_of_si_read_h:	
  4067                           
  4068                           	psect	text16
  4069  0E95                     __ptext16:	
  4070 ;; *************** function _save_event *****************
  4071 ;; Defined at:
  4072 ;;		line 55 in file "panda17.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;  ax              1    7[BANK0 ] unsigned char 
  4077 ;;  o               1    6[BANK0 ] unsigned char 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  1    wreg      void 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0, pclath, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4087 ;;      Params:         0       0       0       0       0
  4088 ;;      Locals:         0       2       0       0       0
  4089 ;;      Temps:          0       3       0       0       0
  4090 ;;      Totals:         0       5       0       0       0
  4091 ;;Total ram usage:        5 bytes
  4092 ;; Hardware stack levels used:    1
  4093 ;; Hardware stack levels required when called:    2
  4094 ;; This function calls:
  4095 ;;		___wmul
  4096 ;;		_ds_get
  4097 ;;		i1_mem_read
  4098 ;;		i1_mem_write
  4099 ;; This function is called by:
  4100 ;;		_ints_isr
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           
  4105                           ;psect for function _save_event
  4106  0E95                     _save_event:	
  4107                           
  4108                           ;panda17.c: 56: unsigned char o,ax;
  4109                           ;panda17.c: 57: fyh = 0;
  4110                           
  4111                           ;incstack = 0
  4112                           ; Regs used in _save_event: [wreg+status,2+status,0+pclath+cstack]
  4113  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  4114  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  4115  0E97  125F               	bcf	_fyh/(0+8),_fyh& (0+7)
  4116                           
  4117                           ;panda17.c: 58: o = mem_read(0x0003);
  4118  0E98  3003               	movlw	3
  4119  0E99  00FA               	movwf	i1mem_read@add
  4120  0E9A  3000               	movlw	0
  4121  0E9B  00FB               	movwf	i1mem_read@add+1
  4122  0E9C  120A  158A  2365  120A  158A  	fcall	i1_mem_read
  4123  0EA1  1283               	bcf	3,5	;RP0=0, select bank0
  4124  0EA2  1303               	bcf	3,6	;RP1=0, select bank0
  4125  0EA3  00A3               	movwf	??_save_event
  4126  0EA4  0823               	movf	??_save_event,w
  4127  0EA5  00A6               	movwf	save_event@o
  4128                           
  4129                           ;panda17.c: 59: ax = ds_get(0x01);
  4130  0EA6  3001               	movlw	1
  4131  0EA7  120A  158A  222D  120A  158A  	fcall	_ds_get
  4132  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  4133  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  4134  0EAE  00A3               	movwf	??_save_event
  4135  0EAF  0823               	movf	??_save_event,w
  4136  0EB0  00A7               	movwf	save_event@ax
  4137                           
  4138                           ;panda17.c: 60: mem_write(0xFF74 + 7*o,ax);
  4139  0EB1  0826               	movf	save_event@o,w
  4140  0EB2  00A3               	movwf	??_save_event
  4141  0EB3  01A4               	clrf	??_save_event+1
  4142  0EB4  0823               	movf	??_save_event,w
  4143  0EB5  00F0               	movwf	___wmul@multiplier
  4144  0EB6  0824               	movf	??_save_event+1,w
  4145  0EB7  00F1               	movwf	___wmul@multiplier+1
  4146  0EB8  3007               	movlw	7
  4147  0EB9  00F2               	movwf	___wmul@multiplicand
  4148  0EBA  3000               	movlw	0
  4149  0EBB  00F3               	movwf	___wmul@multiplicand+1
  4150  0EBC  120A  158A  2138  120A  158A  	fcall	___wmul
  4151  0EC1  0870               	movf	?___wmul,w
  4152  0EC2  3E74               	addlw	116
  4153  0EC3  00FA               	movwf	i1mem_write@add
  4154  0EC4  0871               	movf	?___wmul+1,w
  4155  0EC5  1803               	skipnc
  4156  0EC6  3E01               	addlw	1
  4157  0EC7  3EFF               	addlw	255
  4158  0EC8  00FB               	movwf	i1mem_write@add+1
  4159  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  4160  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  4161  0ECB  0827               	movf	save_event@ax,w
  4162  0ECC  00A5               	movwf	??_save_event+2
  4163  0ECD  0825               	movf	??_save_event+2,w
  4164  0ECE  00FC               	movwf	i1mem_write@data
  4165  0ECF  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4166                           
  4167                           ;panda17.c: 61: ax = ds_get(0x02);
  4168  0ED4  3002               	movlw	2
  4169  0ED5  120A  158A  222D  120A  158A  	fcall	_ds_get
  4170  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  4171  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  4172  0EDC  00A3               	movwf	??_save_event
  4173  0EDD  0823               	movf	??_save_event,w
  4174  0EDE  00A7               	movwf	save_event@ax
  4175                           
  4176                           ;panda17.c: 62: mem_write(0xFF75 + 7*o,ax);
  4177  0EDF  0826               	movf	save_event@o,w
  4178  0EE0  00A3               	movwf	??_save_event
  4179  0EE1  01A4               	clrf	??_save_event+1
  4180  0EE2  0823               	movf	??_save_event,w
  4181  0EE3  00F0               	movwf	___wmul@multiplier
  4182  0EE4  0824               	movf	??_save_event+1,w
  4183  0EE5  00F1               	movwf	___wmul@multiplier+1
  4184  0EE6  3007               	movlw	7
  4185  0EE7  00F2               	movwf	___wmul@multiplicand
  4186  0EE8  3000               	movlw	0
  4187  0EE9  00F3               	movwf	___wmul@multiplicand+1
  4188  0EEA  120A  158A  2138  120A  158A  	fcall	___wmul
  4189  0EEF  0870               	movf	?___wmul,w
  4190  0EF0  3E75               	addlw	117
  4191  0EF1  00FA               	movwf	i1mem_write@add
  4192  0EF2  0871               	movf	?___wmul+1,w
  4193  0EF3  1803               	skipnc
  4194  0EF4  3E01               	addlw	1
  4195  0EF5  3EFF               	addlw	255
  4196  0EF6  00FB               	movwf	i1mem_write@add+1
  4197  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  4198  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  4199  0EF9  0827               	movf	save_event@ax,w
  4200  0EFA  00A5               	movwf	??_save_event+2
  4201  0EFB  0825               	movf	??_save_event+2,w
  4202  0EFC  00FC               	movwf	i1mem_write@data
  4203  0EFD  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4204                           
  4205                           ;panda17.c: 63: ax = ds_get(0x04);
  4206  0F02  3004               	movlw	4
  4207  0F03  120A  158A  222D  120A  158A  	fcall	_ds_get
  4208  0F08  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0F09  1303               	bcf	3,6	;RP1=0, select bank0
  4210  0F0A  00A3               	movwf	??_save_event
  4211  0F0B  0823               	movf	??_save_event,w
  4212  0F0C  00A7               	movwf	save_event@ax
  4213                           
  4214                           ;panda17.c: 64: mem_write(0xFF76 + 7*o,ax);
  4215  0F0D  0826               	movf	save_event@o,w
  4216  0F0E  00A3               	movwf	??_save_event
  4217  0F0F  01A4               	clrf	??_save_event+1
  4218  0F10  0823               	movf	??_save_event,w
  4219  0F11  00F0               	movwf	___wmul@multiplier
  4220  0F12  0824               	movf	??_save_event+1,w
  4221  0F13  00F1               	movwf	___wmul@multiplier+1
  4222  0F14  3007               	movlw	7
  4223  0F15  00F2               	movwf	___wmul@multiplicand
  4224  0F16  3000               	movlw	0
  4225  0F17  00F3               	movwf	___wmul@multiplicand+1
  4226  0F18  120A  158A  2138  120A  158A  	fcall	___wmul
  4227  0F1D  0870               	movf	?___wmul,w
  4228  0F1E  3E76               	addlw	118
  4229  0F1F  00FA               	movwf	i1mem_write@add
  4230  0F20  0871               	movf	?___wmul+1,w
  4231  0F21  1803               	skipnc
  4232  0F22  3E01               	addlw	1
  4233  0F23  3EFF               	addlw	255
  4234  0F24  00FB               	movwf	i1mem_write@add+1
  4235  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  4236  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  4237  0F27  0827               	movf	save_event@ax,w
  4238  0F28  00A5               	movwf	??_save_event+2
  4239  0F29  0825               	movf	??_save_event+2,w
  4240  0F2A  00FC               	movwf	i1mem_write@data
  4241  0F2B  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4242                           
  4243                           ;panda17.c: 65: ax = ds_get(0x05);
  4244  0F30  3005               	movlw	5
  4245  0F31  120A  158A  222D  120A  158A  	fcall	_ds_get
  4246  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  4247  0F37  1303               	bcf	3,6	;RP1=0, select bank0
  4248  0F38  00A3               	movwf	??_save_event
  4249  0F39  0823               	movf	??_save_event,w
  4250  0F3A  00A7               	movwf	save_event@ax
  4251                           
  4252                           ;panda17.c: 66: mem_write(0xFF77 + 7*o,ax);
  4253  0F3B  0826               	movf	save_event@o,w
  4254  0F3C  00A3               	movwf	??_save_event
  4255  0F3D  01A4               	clrf	??_save_event+1
  4256  0F3E  0823               	movf	??_save_event,w
  4257  0F3F  00F0               	movwf	___wmul@multiplier
  4258  0F40  0824               	movf	??_save_event+1,w
  4259  0F41  00F1               	movwf	___wmul@multiplier+1
  4260  0F42  3007               	movlw	7
  4261  0F43  00F2               	movwf	___wmul@multiplicand
  4262  0F44  3000               	movlw	0
  4263  0F45  00F3               	movwf	___wmul@multiplicand+1
  4264  0F46  120A  158A  2138  120A  158A  	fcall	___wmul
  4265  0F4B  0870               	movf	?___wmul,w
  4266  0F4C  3E77               	addlw	119
  4267  0F4D  00FA               	movwf	i1mem_write@add
  4268  0F4E  0871               	movf	?___wmul+1,w
  4269  0F4F  1803               	skipnc
  4270  0F50  3E01               	addlw	1
  4271  0F51  3EFF               	addlw	255
  4272  0F52  00FB               	movwf	i1mem_write@add+1
  4273  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  4274  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  4275  0F55  0827               	movf	save_event@ax,w
  4276  0F56  00A5               	movwf	??_save_event+2
  4277  0F57  0825               	movf	??_save_event+2,w
  4278  0F58  00FC               	movwf	i1mem_write@data
  4279  0F59  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4280                           
  4281                           ;panda17.c: 67: ax = ds_get(0x06);
  4282  0F5E  3006               	movlw	6
  4283  0F5F  120A  158A  222D  120A  158A  	fcall	_ds_get
  4284  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  4285  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  4286  0F66  00A3               	movwf	??_save_event
  4287  0F67  0823               	movf	??_save_event,w
  4288  0F68  00A7               	movwf	save_event@ax
  4289                           
  4290                           ;panda17.c: 68: mem_write(0xFF78 + 7*o,ax);
  4291  0F69  0826               	movf	save_event@o,w
  4292  0F6A  00A3               	movwf	??_save_event
  4293  0F6B  01A4               	clrf	??_save_event+1
  4294  0F6C  0823               	movf	??_save_event,w
  4295  0F6D  00F0               	movwf	___wmul@multiplier
  4296  0F6E  0824               	movf	??_save_event+1,w
  4297  0F6F  00F1               	movwf	___wmul@multiplier+1
  4298  0F70  3007               	movlw	7
  4299  0F71  00F2               	movwf	___wmul@multiplicand
  4300  0F72  3000               	movlw	0
  4301  0F73  00F3               	movwf	___wmul@multiplicand+1
  4302  0F74  120A  158A  2138  120A  158A  	fcall	___wmul
  4303  0F79  0870               	movf	?___wmul,w
  4304  0F7A  3E78               	addlw	120
  4305  0F7B  00FA               	movwf	i1mem_write@add
  4306  0F7C  0871               	movf	?___wmul+1,w
  4307  0F7D  1803               	skipnc
  4308  0F7E  3E01               	addlw	1
  4309  0F7F  3EFF               	addlw	255
  4310  0F80  00FB               	movwf	i1mem_write@add+1
  4311  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  4312  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  4313  0F83  0827               	movf	save_event@ax,w
  4314  0F84  00A5               	movwf	??_save_event+2
  4315  0F85  0825               	movf	??_save_event+2,w
  4316  0F86  00FC               	movwf	i1mem_write@data
  4317  0F87  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4318                           
  4319                           ;panda17.c: 69: ax = mem_read(0x000A);
  4320  0F8C  300A               	movlw	10
  4321  0F8D  00FA               	movwf	i1mem_read@add
  4322  0F8E  3000               	movlw	0
  4323  0F8F  00FB               	movwf	i1mem_read@add+1
  4324  0F90  120A  158A  2365  120A  158A  	fcall	i1_mem_read
  4325  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4326  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4327  0F97  00A3               	movwf	??_save_event
  4328  0F98  0823               	movf	??_save_event,w
  4329  0F99  00A7               	movwf	save_event@ax
  4330                           
  4331                           ;panda17.c: 70: mem_write(0xFF79 + 7*o,ax);
  4332  0F9A  0826               	movf	save_event@o,w
  4333  0F9B  00A3               	movwf	??_save_event
  4334  0F9C  01A4               	clrf	??_save_event+1
  4335  0F9D  0823               	movf	??_save_event,w
  4336  0F9E  00F0               	movwf	___wmul@multiplier
  4337  0F9F  0824               	movf	??_save_event+1,w
  4338  0FA0  00F1               	movwf	___wmul@multiplier+1
  4339  0FA1  3007               	movlw	7
  4340  0FA2  00F2               	movwf	___wmul@multiplicand
  4341  0FA3  3000               	movlw	0
  4342  0FA4  00F3               	movwf	___wmul@multiplicand+1
  4343  0FA5  120A  158A  2138  120A  158A  	fcall	___wmul
  4344  0FAA  0870               	movf	?___wmul,w
  4345  0FAB  3E79               	addlw	121
  4346  0FAC  00FA               	movwf	i1mem_write@add
  4347  0FAD  0871               	movf	?___wmul+1,w
  4348  0FAE  1803               	skipnc
  4349  0FAF  3E01               	addlw	1
  4350  0FB0  3EFF               	addlw	255
  4351  0FB1  00FB               	movwf	i1mem_write@add+1
  4352  0FB2  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0FB3  1303               	bcf	3,6	;RP1=0, select bank0
  4354  0FB4  0827               	movf	save_event@ax,w
  4355  0FB5  00A5               	movwf	??_save_event+2
  4356  0FB6  0825               	movf	??_save_event+2,w
  4357  0FB7  00FC               	movwf	i1mem_write@data
  4358  0FB8  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4359                           
  4360                           ;panda17.c: 71: ax = mem_read(0x000B);
  4361  0FBD  300B               	movlw	11
  4362  0FBE  00FA               	movwf	i1mem_read@add
  4363  0FBF  3000               	movlw	0
  4364  0FC0  00FB               	movwf	i1mem_read@add+1
  4365  0FC1  120A  158A  2365  120A  158A  	fcall	i1_mem_read
  4366  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  4367  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  4368  0FC8  00A3               	movwf	??_save_event
  4369  0FC9  0823               	movf	??_save_event,w
  4370  0FCA  00A7               	movwf	save_event@ax
  4371                           
  4372                           ;panda17.c: 72: mem_write(0xFF7A + 7*o,ax);
  4373  0FCB  0826               	movf	save_event@o,w
  4374  0FCC  00A3               	movwf	??_save_event
  4375  0FCD  01A4               	clrf	??_save_event+1
  4376  0FCE  0823               	movf	??_save_event,w
  4377  0FCF  00F0               	movwf	___wmul@multiplier
  4378  0FD0  0824               	movf	??_save_event+1,w
  4379  0FD1  00F1               	movwf	___wmul@multiplier+1
  4380  0FD2  3007               	movlw	7
  4381  0FD3  00F2               	movwf	___wmul@multiplicand
  4382  0FD4  3000               	movlw	0
  4383  0FD5  00F3               	movwf	___wmul@multiplicand+1
  4384  0FD6  120A  158A  2138  120A  158A  	fcall	___wmul
  4385  0FDB  0870               	movf	?___wmul,w
  4386  0FDC  3E7A               	addlw	122
  4387  0FDD  00FA               	movwf	i1mem_write@add
  4388  0FDE  0871               	movf	?___wmul+1,w
  4389  0FDF  1803               	skipnc
  4390  0FE0  3E01               	addlw	1
  4391  0FE1  3EFF               	addlw	255
  4392  0FE2  00FB               	movwf	i1mem_write@add+1
  4393  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  4394  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  4395  0FE5  0827               	movf	save_event@ax,w
  4396  0FE6  00A5               	movwf	??_save_event+2
  4397  0FE7  0825               	movf	??_save_event+2,w
  4398  0FE8  00FC               	movwf	i1mem_write@data
  4399  0FE9  120A  158A  23AB  120A  158A  	fcall	i1_mem_write
  4400                           
  4401                           ;panda17.c: 73: o++;
  4402  0FEE  3001               	movlw	1
  4403  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  4404  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  4405  0FF1  00A3               	movwf	??_save_event
  4406  0FF2  0823               	movf	??_save_event,w
  4407  0FF3  07A6               	addwf	save_event@o,f
  4408                           
  4409                           ;panda17.c: 74: mem_write(0x0003,o);
  4410  0FF4  3003               	movlw	3
  4411  0FF5  00FA               	movwf	i1mem_write@add
  4412  0FF6  3000               	movlw	0
  4413  0FF7  00FB               	movwf	i1mem_write@add+1
  4414  0FF8  0826               	movf	save_event@o,w
  4415  0FF9  00A3               	movwf	??_save_event
  4416  0FFA  0823               	movf	??_save_event,w
  4417  0FFB  00FC               	movwf	i1mem_write@data
  4418  0FFC  120A  158A  23AB   	fcall	i1_mem_write
  4419  0FFF  0008               	return
  4420  1000                     __end_of_save_event:	
  4421                           
  4422                           	psect	text17
  4423  0BAB                     __ptext17:	
  4424 ;; *************** function i1_mem_write *****************
  4425 ;; Defined at:
  4426 ;;		line 13 in file "24lc512.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  add             2   10[COMMON] unsigned int 
  4429 ;;  data            1   12[COMMON] unsigned char 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  mem_write       1    1[BANK0 ] unsigned char 
  4432 ;;  mem_write       1    0[BANK0 ] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;                  1    wreg      void 
  4435 ;; Registers used:
  4436 ;;		wreg, status,2, status,0, pclath, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4442 ;;      Params:         3       0       0       0       0
  4443 ;;      Locals:         0       2       0       0       0
  4444 ;;      Temps:          1       0       0       0       0
  4445 ;;      Totals:         4       2       0       0       0
  4446 ;;Total ram usage:        6 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    1
  4449 ;; This function calls:
  4450 ;;		i1_i2c_start
  4451 ;;		i1_i2c_stop
  4452 ;;		i1_i2c_write
  4453 ;; This function is called by:
  4454 ;;		_save_event
  4455 ;;		_ints_isr
  4456 ;;		i1_mem_init
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           
  4461                           ;psect for function i1_mem_write
  4462  0BAB                     i1_mem_write:	
  4463                           
  4464                           ;24lc512.c: 14: unsigned char add_h,add_l;
  4465                           ;24lc512.c: 15: add_h = (add >> 8) & 0x00FF;
  4466                           
  4467                           ;incstack = 0
  4468                           ; Regs used in i1_mem_write: [wreg+status,2+status,0+pclath+cstack]
  4469  0BAB  087B               	movf	i1mem_write@add+1,w
  4470  0BAC  00FD               	movwf	??i1_mem_write
  4471  0BAD  087D               	movf	??i1_mem_write,w
  4472  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  4473  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  4474  0BB0  00A0               	movwf	i1mem_write@add_h
  4475                           
  4476                           ;24lc512.c: 16: add_l = add & 0x00FF;
  4477  0BB1  087A               	movf	i1mem_write@add,w
  4478  0BB2  00FD               	movwf	??i1_mem_write
  4479  0BB3  087D               	movf	??i1_mem_write,w
  4480  0BB4  00A1               	movwf	i1mem_write@add_l
  4481                           
  4482                           ;24lc512.c: 17: i2c_start();
  4483  0BB5  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  4484                           
  4485                           ;24lc512.c: 18: i2c_write(0b10100000,0);
  4486  0BBA  01F0               	clrf	i1i2c_write@ack
  4487  0BBB  30A0               	movlw	160
  4488  0BBC  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4489                           
  4490                           ;24lc512.c: 19: i2c_write(add_h,0);
  4491  0BC1  01F0               	clrf	i1i2c_write@ack
  4492  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  4493  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  4494  0BC4  0820               	movf	i1mem_write@add_h,w
  4495  0BC5  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4496                           
  4497                           ;24lc512.c: 20: i2c_write(add_l,0);
  4498  0BCA  01F0               	clrf	i1i2c_write@ack
  4499  0BCB  1283               	bcf	3,5	;RP0=0, select bank0
  4500  0BCC  1303               	bcf	3,6	;RP1=0, select bank0
  4501  0BCD  0821               	movf	i1mem_write@add_l,w
  4502  0BCE  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4503                           
  4504                           ;24lc512.c: 21: i2c_write(data,0);
  4505  0BD3  01F0               	clrf	i1i2c_write@ack
  4506  0BD4  087C               	movf	i1mem_write@data,w
  4507  0BD5  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4508                           
  4509                           ;24lc512.c: 22: i2c_stop();
  4510  0BDA  120A  158A  217C  120A  158A  	fcall	i1_i2c_stop
  4511  0BDF                     L3:	
  4512                           
  4513                           ;24lc512.c: 24: i2c_start();
  4514  0BDF  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  4515                           
  4516                           ;24lc512.c: 25: i2c_write(0b10100000,0);
  4517  0BE4  01F0               	clrf	i1i2c_write@ack
  4518  0BE5  30A0               	movlw	160
  4519  0BE6  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4520                           
  4521                           ;24lc512.c: 27: while(SSPCON2bits.ACKSTAT){
  4522  0BEB  1683               	bsf	3,5	;RP0=1, select bank1
  4523  0BEC  1303               	bcf	3,6	;RP1=0, select bank1
  4524  0BED  1B11               	btfsc	17,6	;volatile
  4525  0BEE  2BDF               	goto	L3
  4526                           
  4527                           ;24lc512.c: 30: }
  4528                           ;24lc512.c: 31: i2c_stop();
  4529                           
  4530                           ;24lc512.c: 29: i2c_write(0b10100000,0);
  4531                           
  4532                           ;24lc512.c: 28: i2c_start();
  4533  0BEF  120A  158A  217C   	fcall	i1_i2c_stop
  4534  0BF2  0008               	return
  4535  0BF3                     __end_ofi1_mem_write:	
  4536                           
  4537                           	psect	text18
  4538  0B65                     __ptext18:	
  4539 ;; *************** function i1_mem_read *****************
  4540 ;; Defined at:
  4541 ;;		line 34 in file "24lc512.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;  add             2   10[COMMON] unsigned int 
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  mem_read        1    2[BANK0 ] unsigned char 
  4546 ;;  mem_read        1    1[BANK0 ] unsigned char 
  4547 ;;  mem_read        1    0[BANK0 ] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      unsigned char 
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0, pclath, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4557 ;;      Params:         2       0       0       0       0
  4558 ;;      Locals:         0       3       0       0       0
  4559 ;;      Temps:          1       0       0       0       0
  4560 ;;      Totals:         3       3       0       0       0
  4561 ;;Total ram usage:        6 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    1
  4564 ;; This function calls:
  4565 ;;		i1_i2c_read
  4566 ;;		i1_i2c_start
  4567 ;;		i1_i2c_stop
  4568 ;;		i1_i2c_write
  4569 ;; This function is called by:
  4570 ;;		_save_event
  4571 ;;		_ints_isr
  4572 ;;		i1_mem_init
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           
  4577                           ;psect for function i1_mem_read
  4578  0B65                     i1_mem_read:	
  4579                           
  4580                           ;24lc512.c: 35: unsigned char rta;
  4581                           ;24lc512.c: 36: unsigned char add_h,add_l;
  4582                           ;24lc512.c: 37: add_h = (add >> 8) & 0x00FF;
  4583                           
  4584                           ;incstack = 0
  4585                           ; Regs used in i1_mem_read: [wreg+status,2+status,0+pclath+cstack]
  4586  0B65  087B               	movf	i1mem_read@add+1,w
  4587  0B66  00FC               	movwf	??i1_mem_read
  4588  0B67  087C               	movf	??i1_mem_read,w
  4589  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  4590  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  4591  0B6A  00A1               	movwf	i1mem_read@add_h
  4592                           
  4593                           ;24lc512.c: 38: add_l = add & 0x00FF;
  4594  0B6B  087A               	movf	i1mem_read@add,w
  4595  0B6C  00FC               	movwf	??i1_mem_read
  4596  0B6D  087C               	movf	??i1_mem_read,w
  4597  0B6E  00A2               	movwf	i1mem_read@add_l
  4598                           
  4599                           ;24lc512.c: 39: i2c_start();
  4600  0B6F  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  4601                           
  4602                           ;24lc512.c: 40: i2c_write(0b10100000,0);
  4603  0B74  01F0               	clrf	i1i2c_write@ack
  4604  0B75  30A0               	movlw	160
  4605  0B76  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4606                           
  4607                           ;24lc512.c: 41: i2c_write(add_h,0);
  4608  0B7B  01F0               	clrf	i1i2c_write@ack
  4609  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  4610  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  4611  0B7E  0821               	movf	i1mem_read@add_h,w
  4612  0B7F  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4613                           
  4614                           ;24lc512.c: 42: i2c_write(add_l,0);
  4615  0B84  01F0               	clrf	i1i2c_write@ack
  4616  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4617  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4618  0B87  0822               	movf	i1mem_read@add_l,w
  4619  0B88  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4620                           
  4621                           ;24lc512.c: 43: i2c_start();
  4622  0B8D  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  4623                           
  4624                           ;24lc512.c: 44: i2c_write(0b10100001,0);
  4625  0B92  01F0               	clrf	i1i2c_write@ack
  4626  0B93  30A1               	movlw	161
  4627  0B94  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4628                           
  4629                           ;24lc512.c: 45: rta = i2c_read(0);
  4630  0B99  3000               	movlw	0
  4631  0B9A  120A  158A  2582  120A  158A  	fcall	i1_i2c_read
  4632  0B9F  00FC               	movwf	??i1_mem_read
  4633  0BA0  087C               	movf	??i1_mem_read,w
  4634  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  4635  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  4636  0BA3  00A0               	movwf	i1mem_read@rta
  4637                           
  4638                           ;24lc512.c: 46: i2c_stop();
  4639  0BA4  120A  158A  217C   	fcall	i1_i2c_stop
  4640                           
  4641                           ;24lc512.c: 47: return rta;
  4642  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  4643  0BA8  1303               	bcf	3,6	;RP1=0, select bank0
  4644  0BA9  0820               	movf	i1mem_read@rta,w
  4645  0BAA  0008               	return
  4646  0BAB                     __end_ofi1_mem_read:	
  4647                           
  4648                           	psect	text19
  4649  0A2D                     __ptext19:	
  4650 ;; *************** function _ds_get *****************
  4651 ;; Defined at:
  4652 ;;		line 25 in file "ds1307.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;  data            1    wreg     unsigned char 
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  data            1   11[COMMON] unsigned char 
  4657 ;;  resp            1   12[COMMON] unsigned char 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      unsigned char 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2, status,0, pclath, cstack
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4667 ;;      Params:         0       0       0       0       0
  4668 ;;      Locals:         2       0       0       0       0
  4669 ;;      Temps:          1       0       0       0       0
  4670 ;;      Totals:         3       0       0       0       0
  4671 ;;Total ram usage:        3 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    1
  4674 ;; This function calls:
  4675 ;;		_i2c_rstart
  4676 ;;		i1_i2c_read
  4677 ;;		i1_i2c_start
  4678 ;;		i1_i2c_stop
  4679 ;;		i1_i2c_write
  4680 ;; This function is called by:
  4681 ;;		_save_event
  4682 ;;		_ints_isr
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           
  4687                           ;psect for function _ds_get
  4688  0A2D                     _ds_get:	
  4689                           
  4690                           ;incstack = 0
  4691                           ; Regs used in _ds_get: [wreg+status,2+status,0+pclath+cstack]
  4692                           ;ds_get@data stored from wreg
  4693  0A2D  00FB               	movwf	ds_get@data
  4694                           
  4695                           ;ds1307.c: 26: unsigned char resp;
  4696                           ;ds1307.c: 27: i2c_start();
  4697  0A2E  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  4698                           
  4699                           ;ds1307.c: 28: i2c_write(0b11010000,1);
  4700  0A33  01F0               	clrf	i1i2c_write@ack
  4701  0A34  0AF0               	incf	i1i2c_write@ack,f
  4702  0A35  30D0               	movlw	208
  4703  0A36  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4704                           
  4705                           ;ds1307.c: 29: i2c_write(data,1);
  4706  0A3B  01F0               	clrf	i1i2c_write@ack
  4707  0A3C  0AF0               	incf	i1i2c_write@ack,f
  4708  0A3D  087B               	movf	ds_get@data,w
  4709  0A3E  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4710                           
  4711                           ;ds1307.c: 30: i2c_rstart();
  4712  0A43  120A  158A  219F  120A  158A  	fcall	_i2c_rstart
  4713                           
  4714                           ;ds1307.c: 31: i2c_write(0b11010001,1);
  4715  0A48  01F0               	clrf	i1i2c_write@ack
  4716  0A49  0AF0               	incf	i1i2c_write@ack,f
  4717  0A4A  30D1               	movlw	209
  4718  0A4B  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  4719                           
  4720                           ;ds1307.c: 32: resp = i2c_read(0);
  4721  0A50  3000               	movlw	0
  4722  0A51  120A  158A  2582  120A  158A  	fcall	i1_i2c_read
  4723  0A56  00FA               	movwf	??_ds_get
  4724  0A57  087A               	movf	??_ds_get,w
  4725  0A58  00FC               	movwf	ds_get@resp
  4726                           
  4727                           ;ds1307.c: 33: i2c_stop();
  4728  0A59  120A  158A  217C   	fcall	i1_i2c_stop
  4729                           
  4730                           ;ds1307.c: 34: return resp;
  4731  0A5C  087C               	movf	ds_get@resp,w
  4732  0A5D  0008               	return
  4733  0A5E                     __end_of_ds_get:	
  4734                           
  4735                           	psect	text20
  4736  0D82                     __ptext20:	
  4737 ;; *************** function i1_i2c_read *****************
  4738 ;; Defined at:
  4739 ;;		line 51 in file "i2clib.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  ack             1    wreg     unsigned char 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  ack             1    9[COMMON] unsigned char 
  4744 ;;  i2c_read        1    8[COMMON] unsigned char 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1    wreg      unsigned char 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4754 ;;      Params:         0       0       0       0       0
  4755 ;;      Locals:         2       0       0       0       0
  4756 ;;      Temps:          8       0       0       0       0
  4757 ;;      Totals:        10       0       0       0       0
  4758 ;;Total ram usage:       10 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_si_read_h
  4764 ;;		_si_read_t
  4765 ;;		_ds_get
  4766 ;;		i1_mem_read
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function i1_i2c_read
  4772  0D82                     i1_i2c_read:	
  4773                           
  4774                           ;incstack = 0
  4775                           ; Regs used in i1_i2c_read: [wreg+status,2+status,0]
  4776                           ;i1i2c_read@ack stored from wreg
  4777  0D82  00F9               	movwf	i1i2c_read@ack
  4778                           
  4779                           ;i2clib.c: 52: unsigned char resp;
  4780                           ;i2clib.c: 53: static bit flag, not_flag;
  4781                           ;i2clib.c: 54: flag = ack & 0x01;
  4782  0D83  1283               	bcf	3,5	;RP0=0, select bank0
  4783  0D84  1303               	bcf	3,6	;RP1=0, select bank0
  4784  0D85  10DF               	bcf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  4785  0D86  1879               	btfsc	i1i2c_read@ack,0
  4786  0D87  14DF               	bsf	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  4787                           
  4788                           ;i2clib.c: 55: if (ack == 1){
  4789  0D88  0379               	decf	i1i2c_read@ack,w
  4790  0D89  1D03               	btfss	3,2
  4791  0D8A  2D8E               	goto	i1l1621
  4792                           
  4793                           ;i2clib.c: 56: not_flag = 0;
  4794  0D8B  1283               	bcf	3,5	;RP0=0, select bank0
  4795  0D8C  1303               	bcf	3,6	;RP1=0, select bank0
  4796  0D8D  105F               	bcf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  4797  0D8E                     i1l1621:	
  4798                           
  4799                           ;i2clib.c: 57: }
  4800                           ;i2clib.c: 58: if (ack == 3){
  4801  0D8E  3003               	movlw	3
  4802  0D8F  0679               	xorwf	i1i2c_read@ack,w
  4803  0D90  1D03               	btfss	3,2
  4804  0D91  2D95               	goto	i1l1625
  4805                           
  4806                           ;i2clib.c: 59: not_flag = 1;
  4807  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  4808  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  4809  0D94  145F               	bsf	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  4810  0D95                     i1l1625:	
  4811                           ;i2clib.c: 60: }
  4812                           ;i2clib.c: 61: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  4813                           
  4814  0D95  1683               	bsf	3,5	;RP0=1, select bank1
  4815  0D96  1303               	bcf	3,6	;RP1=0, select bank1
  4816  0D97  0811               	movf	17,w	;volatile
  4817  0D98  3901               	andlw	1
  4818  0D99  00F0               	movwf	??i1_i2c_read
  4819  0D9A  0C11               	rrf	17,w	;volatile
  4820  0D9B  3901               	andlw	1
  4821  0D9C  00F1               	movwf	??i1_i2c_read+1
  4822  0D9D  0C11               	rrf	17,w	;volatile
  4823  0D9E  00F2               	movwf	??i1_i2c_read+2
  4824  0D9F  0CF2               	rrf	??i1_i2c_read+2,f
  4825  0DA0  0C72               	rrf	??i1_i2c_read+2,w
  4826  0DA1  3901               	andlw	1
  4827  0DA2  00F3               	movwf	??i1_i2c_read+3
  4828  0DA3  0E11               	swapf	17,w	;volatile
  4829  0DA4  3901               	andlw	1
  4830  0DA5  00F4               	movwf	??i1_i2c_read+4
  4831  0DA6  0C11               	rrf	17,w	;volatile
  4832  0DA7  00F5               	movwf	??i1_i2c_read+5
  4833  0DA8  0C75               	rrf	??i1_i2c_read+5,w
  4834  0DA9  3901               	andlw	1
  4835  0DAA  00F6               	movwf	??i1_i2c_read+6
  4836  0DAB  0C14               	rrf	20,w	;volatile
  4837  0DAC  00F7               	movwf	??i1_i2c_read+7
  4838  0DAD  0C77               	rrf	??i1_i2c_read+7,w
  4839  0DAE  3901               	andlw	1
  4840  0DAF  0476               	iorwf	??i1_i2c_read+6,w
  4841  0DB0  0474               	iorwf	??i1_i2c_read+4,w
  4842  0DB1  0473               	iorwf	??i1_i2c_read+3,w
  4843  0DB2  0471               	iorwf	??i1_i2c_read+1,w
  4844  0DB3  0470               	iorwf	??i1_i2c_read,w
  4845  0DB4  1D03               	btfss	3,2
  4846  0DB5  2D95               	goto	i1l1625
  4847                           
  4848                           ;i2clib.c: 62: SSPCON2bits.RCEN = 1;
  4849  0DB6  1591               	bsf	17,3	;volatile
  4850  0DB7                     i1l203:	
  4851                           ;i2clib.c: 63: while(!SSPSTATbits.BF);
  4852                           
  4853  0DB7  1C14               	btfss	20,0	;volatile
  4854  0DB8  2DB7               	goto	i1l203
  4855  0DB9                     i1l206:	
  4856                           ;i2clib.c: 64: while(!PIR1bits.SSPIF);
  4857                           
  4858  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  4859  0DBA  1D8C               	btfss	12,3	;volatile
  4860  0DBB  2DB9               	goto	i1l206
  4861                           
  4862                           ;i2clib.c: 65: SSPCON2bits.ACKDT = not_flag;
  4863  0DBC  1C5F               	btfss	i2c_read@not_flag/(0+8),i2c_read@not_flag& (0+7)
  4864  0DBD  2DC2               	goto	u148_20
  4865  0DBE  1683               	bsf	3,5	;RP0=1, select bank1
  4866  0DBF  1303               	bcf	3,6	;RP1=0, select bank1
  4867  0DC0  1691               	bsf	17,5	;volatile
  4868  0DC1  2DC5               	goto	u149_24
  4869  0DC2                     u148_20:	
  4870  0DC2  1683               	bsf	3,5	;RP0=1, select bank1
  4871  0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  4872  0DC4  1291               	bcf	17,5	;volatile
  4873  0DC5                     u149_24:	
  4874                           
  4875                           ;i2clib.c: 66: SSPCON2bits.ACKEN = flag;
  4876  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  4877  0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  4878  0DC7  1CDF               	btfss	i2c_read@flag/(0+8),i2c_read@flag& (0+7)
  4879  0DC8  2DCD               	goto	u150_20
  4880  0DC9  1683               	bsf	3,5	;RP0=1, select bank1
  4881  0DCA  1303               	bcf	3,6	;RP1=0, select bank1
  4882  0DCB  1611               	bsf	17,4	;volatile
  4883  0DCC  2DD0               	goto	i1l1627
  4884  0DCD                     u150_20:	
  4885  0DCD  1683               	bsf	3,5	;RP0=1, select bank1
  4886  0DCE  1303               	bcf	3,6	;RP1=0, select bank1
  4887  0DCF  1211               	bcf	17,4	;volatile
  4888  0DD0                     i1l1627:	
  4889                           
  4890                           ;i2clib.c: 67: resp = SSPBUF;
  4891  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  4892  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  4893  0DD2  0813               	movf	19,w	;volatile
  4894  0DD3  00F0               	movwf	??i1_i2c_read
  4895  0DD4  0870               	movf	??i1_i2c_read,w
  4896  0DD5  00F8               	movwf	i1i2c_read@resp
  4897  0DD6                     i1l209:	
  4898                           ;i2clib.c: 68: while(SSPSTATbits.BF);
  4899                           
  4900  0DD6  1683               	bsf	3,5	;RP0=1, select bank1
  4901  0DD7  1303               	bcf	3,6	;RP1=0, select bank1
  4902  0DD8  1814               	btfsc	20,0	;volatile
  4903  0DD9  2DD6               	goto	i1l209
  4904                           
  4905                           ;i2clib.c: 69: return resp;
  4906  0DDA  0878               	movf	i1i2c_read@resp,w
  4907  0DDB  0008               	return
  4908  0DDC                     __end_ofi1_i2c_read:	
  4909                           
  4910                           	psect	text21
  4911  099F                     __ptext21:	
  4912 ;; *************** function _i2c_rstart *****************
  4913 ;; Defined at:
  4914 ;;		line 29 in file "i2clib.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      void 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4928 ;;      Params:         0       0       0       0       0
  4929 ;;      Locals:         0       0       0       0       0
  4930 ;;      Temps:          8       0       0       0       0
  4931 ;;      Totals:         8       0       0       0       0
  4932 ;;Total ram usage:        8 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		_si_read_h
  4938 ;;		_si_read_t
  4939 ;;		_ds_get
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           
  4944                           ;psect for function _i2c_rstart
  4945  099F                     _i2c_rstart:	
  4946  099F                     i1l1563:	
  4947                           ;i2clib.c: 30: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  4948                           
  4949                           ;incstack = 0
  4950                           ; Regs used in _i2c_rstart: [wreg+status,2+status,0]
  4951                           
  4952  099F  1683               	bsf	3,5	;RP0=1, select bank1
  4953  09A0  1303               	bcf	3,6	;RP1=0, select bank1
  4954  09A1  0811               	movf	17,w	;volatile
  4955  09A2  3901               	andlw	1
  4956  09A3  00F0               	movwf	??_i2c_rstart
  4957  09A4  0C11               	rrf	17,w	;volatile
  4958  09A5  3901               	andlw	1
  4959  09A6  00F1               	movwf	??_i2c_rstart+1
  4960  09A7  0C11               	rrf	17,w	;volatile
  4961  09A8  00F2               	movwf	??_i2c_rstart+2
  4962  09A9  0CF2               	rrf	??_i2c_rstart+2,f
  4963  09AA  0C72               	rrf	??_i2c_rstart+2,w
  4964  09AB  3901               	andlw	1
  4965  09AC  00F3               	movwf	??_i2c_rstart+3
  4966  09AD  0E11               	swapf	17,w	;volatile
  4967  09AE  3901               	andlw	1
  4968  09AF  00F4               	movwf	??_i2c_rstart+4
  4969  09B0  0C11               	rrf	17,w	;volatile
  4970  09B1  00F5               	movwf	??_i2c_rstart+5
  4971  09B2  0C75               	rrf	??_i2c_rstart+5,w
  4972  09B3  3901               	andlw	1
  4973  09B4  00F6               	movwf	??_i2c_rstart+6
  4974  09B5  0C14               	rrf	20,w	;volatile
  4975  09B6  00F7               	movwf	??_i2c_rstart+7
  4976  09B7  0C77               	rrf	??_i2c_rstart+7,w
  4977  09B8  3901               	andlw	1
  4978  09B9  0476               	iorwf	??_i2c_rstart+6,w
  4979  09BA  0474               	iorwf	??_i2c_rstart+4,w
  4980  09BB  0473               	iorwf	??_i2c_rstart+3,w
  4981  09BC  0471               	iorwf	??_i2c_rstart+1,w
  4982  09BD  0470               	iorwf	??_i2c_rstart,w
  4983  09BE  1D03               	btfss	3,2
  4984  09BF  299F               	goto	i1l1563
  4985                           
  4986                           ;i2clib.c: 31: SSPCON2bits.RSEN = 1;
  4987  09C0  1491               	bsf	17,1	;volatile
  4988  09C1  0008               	return
  4989  09C2                     __end_of_i2c_rstart:	
  4990                           
  4991                           	psect	text22
  4992  04F1                     __ptext22:	
  4993 ;; *************** function _printf *****************
  4994 ;; Defined at:
  4995 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;  f               1    wreg     PTR const unsigned char 
  4998 ;;		 -> STR_18(2), STR_17(5), STR_16(7), STR_15(4), 
  4999 ;;		 -> STR_14(3), STR_13(2), STR_12(2), STR_11(5), 
  5000 ;;		 -> STR_10(5), STR_9(6), STR_8(6), STR_7(6), 
  5001 ;;		 -> STR_6(6), STR_5(6), STR_4(5), STR_3(7), 
  5002 ;;		 -> STR_2(6), STR_1(8), 
  5003 ;; Auto vars:     Size  Location     Type
  5004 ;;  f               1   18[BANK0 ] PTR const unsigned char 
  5005 ;;		 -> STR_18(2), STR_17(5), STR_16(7), STR_15(4), 
  5006 ;;		 -> STR_14(3), STR_13(2), STR_12(2), STR_11(5), 
  5007 ;;		 -> STR_10(5), STR_9(6), STR_8(6), STR_7(6), 
  5008 ;;		 -> STR_6(6), STR_5(6), STR_4(5), STR_3(7), 
  5009 ;;		 -> STR_2(6), STR_1(8), 
  5010 ;;  idx             1    9[BANK0 ] unsigned char 
  5011 ;;  tmpval          4    0        struct .
  5012 ;;  width           2   15[BANK0 ] int 
  5013 ;;  val             2   13[BANK0 ] unsigned int 
  5014 ;;  cp              2    0        PTR const unsigned char 
  5015 ;;  len             2    0        unsigned int 
  5016 ;;  c               1   19[BANK0 ] char 
  5017 ;;  flag            1   17[BANK0 ] unsigned char 
  5018 ;;  prec            1   12[BANK0 ] char 
  5019 ;;  ap              1   11[BANK0 ] PTR void [1]
  5020 ;;		 -> ?_printf(2), 
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  2    4[BANK0 ] int 
  5023 ;; Registers used:
  5024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5030 ;;      Params:         0       2       0       0       0
  5031 ;;      Locals:         0      11       0       0       0
  5032 ;;      Temps:          0       3       0       0       0
  5033 ;;      Totals:         0      16       0       0       0
  5034 ;;Total ram usage:       16 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; Hardware stack levels required when called:    1
  5037 ;; This function calls:
  5038 ;;		___lwdiv
  5039 ;;		___lwmod
  5040 ;;		___wmul
  5041 ;;		_isdigit
  5042 ;;		_putch
  5043 ;; This function is called by:
  5044 ;;		_ints_isr
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           
  5049                           ;psect for function _printf
  5050  04F1                     _printf:	
  5051                           
  5052                           ;incstack = 0
  5053                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5054                           ;printf@f stored from wreg
  5055  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  5056  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  5057  04F3  00B2               	movwf	printf@f
  5058                           
  5059                           ;doprnt.c: 466: va_list ap;
  5060                           ;doprnt.c: 499: signed char c;
  5061                           ;doprnt.c: 501: int width;
  5062                           ;doprnt.c: 506: signed char prec;
  5063                           ;doprnt.c: 508: unsigned char flag;
  5064                           ;doprnt.c: 523: union {
  5065                           ;doprnt.c: 524: unsigned long vd;
  5066                           ;doprnt.c: 525: double integ;
  5067                           ;doprnt.c: 526: } tmpval;
  5068                           ;doprnt.c: 528: unsigned int val;
  5069                           ;doprnt.c: 529: unsigned len;
  5070                           ;doprnt.c: 530: const char * cp;
  5071                           ;doprnt.c: 533: *ap = __va_start();
  5072  04F4  3024               	movlw	(low (?_printf| 0))& (0+255)
  5073  04F5  00A6               	movwf	??_printf
  5074  04F6  0826               	movf	??_printf,w
  5075  04F7  00AB               	movwf	printf@ap
  5076  04F8                     i1l1967:	
  5077                           ;doprnt.c: 536: while(c = *f++) {
  5078                           
  5079  04F8  3001               	movlw	1
  5080  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  5081  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  5082  04FB  07B2               	addwf	printf@f,f
  5083  04FC  30FF               	movlw	-1
  5084  04FD  0732               	addwf	printf@f,w
  5085  04FE  0084               	movwf	4
  5086  04FF  120A  118A  2707  120A  118A  	fcall	stringdir
  5087  0504  00A6               	movwf	??_printf
  5088  0505  0826               	movf	??_printf,w
  5089  0506  00B3               	movwf	printf@c
  5090  0507  0833               	movf	printf@c,w
  5091  0508  1903               	btfsc	3,2
  5092  0509  0008               	return
  5093                           
  5094                           ;doprnt.c: 538: if(c != '%')
  5095  050A  3025               	movlw	37
  5096  050B  0633               	xorwf	printf@c,w
  5097  050C  1903               	btfsc	3,2
  5098  050D  2D15               	goto	i1l1851
  5099                           
  5100                           ;doprnt.c: 540: {
  5101                           ;doprnt.c: 541: (putch(c) );
  5102  050E  0833               	movf	printf@c,w
  5103  050F  120A  158A  20ED  120A  118A  	fcall	_putch
  5104                           
  5105                           ;doprnt.c: 542: continue;
  5106  0514  2CF8               	goto	i1l1967
  5107  0515                     i1l1851:	
  5108                           
  5109                           ;doprnt.c: 543: }
  5110                           ;doprnt.c: 546: width = 0;
  5111  0515  1283               	bcf	3,5	;RP0=0, select bank0
  5112  0516  1303               	bcf	3,6	;RP1=0, select bank0
  5113  0517  01AF               	clrf	printf@width
  5114  0518  01B0               	clrf	printf@width+1
  5115                           
  5116                           ;doprnt.c: 548: flag = 0;
  5117  0519  01B1               	clrf	printf@flag
  5118                           
  5119                           ;doprnt.c: 551: switch(*f) {
  5120                           
  5121                           ;doprnt.c: 550: for(;;) {
  5122  051A  2D20               	goto	i1l1857
  5123  051B                     i1l288:	
  5124                           ;doprnt.c: 579: case '0':
  5125                           
  5126                           
  5127                           ;doprnt.c: 580: flag |= 0x04;
  5128  051B  1531               	bsf	printf@flag,2
  5129                           
  5130                           ;doprnt.c: 581: f++;
  5131  051C  3001               	movlw	1
  5132  051D  00A6               	movwf	??_printf
  5133  051E  0826               	movf	??_printf,w
  5134  051F  07B2               	addwf	printf@f,f
  5135  0520                     i1l1857:	
  5136                           ;doprnt.c: 584: }
  5137                           
  5138                           ;doprnt.c: 582: continue;
  5139                           
  5140  0520  0832               	movf	printf@f,w
  5141  0521  0084               	movwf	4
  5142  0522  120A  118A  2707  120A  118A  	fcall	stringdir
  5143                           
  5144                           ; Switch size 1, requested type "space"
  5145                           ; Number of cases is 1, Range of values is 48 to 48
  5146                           ; switch strategies available:
  5147                           ; Name         Instructions Cycles
  5148                           ; simple_byte            4     3 (average)
  5149                           ; direct_byte           14    11 (fixed)
  5150                           ; jumptable            263     9 (fixed)
  5151                           ;	Chosen strategy is simple_byte
  5152  0527  3A30               	xorlw	48	; case 48
  5153  0528  1903               	skipnz
  5154  0529  2D1B               	goto	i1l288
  5155  052A  2D2B               	goto	i1l1859
  5156  052B                     i1l1859:	
  5157                           ;doprnt.c: 586: }
  5158                           
  5159                           ;doprnt.c: 585: break;
  5160                           
  5161                           
  5162                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5163  052B  0832               	movf	printf@f,w
  5164  052C  0084               	movwf	4
  5165  052D  120A  118A  2707  120A  118A  	fcall	stringdir
  5166  0532  120A  158A  20F5  120A  118A  	fcall	_isdigit
  5167  0537  1C03               	btfss	3,0
  5168  0538  2D7B               	goto	i1l1873
  5169                           
  5170                           ;doprnt.c: 598: width = 0;
  5171  0539  1283               	bcf	3,5	;RP0=0, select bank0
  5172  053A  1303               	bcf	3,6	;RP1=0, select bank0
  5173  053B  01AF               	clrf	printf@width
  5174  053C  01B0               	clrf	printf@width+1
  5175  053D                     i1l1863:	
  5176                           ;doprnt.c: 599: do {
  5177                           
  5178                           
  5179                           ;doprnt.c: 600: width *= 10;
  5180  053D  300A               	movlw	10
  5181  053E  00F0               	movwf	___wmul@multiplier
  5182  053F  3000               	movlw	0
  5183  0540  00F1               	movwf	___wmul@multiplier+1
  5184  0541  1283               	bcf	3,5	;RP0=0, select bank0
  5185  0542  1303               	bcf	3,6	;RP1=0, select bank0
  5186  0543  0830               	movf	printf@width+1,w
  5187  0544  00F3               	movwf	___wmul@multiplicand+1
  5188  0545  082F               	movf	printf@width,w
  5189  0546  00F2               	movwf	___wmul@multiplicand
  5190  0547  120A  158A  2138  120A  118A  	fcall	___wmul
  5191  054C  0871               	movf	?___wmul+1,w
  5192  054D  1283               	bcf	3,5	;RP0=0, select bank0
  5193  054E  1303               	bcf	3,6	;RP1=0, select bank0
  5194  054F  00B0               	movwf	printf@width+1
  5195  0550  0870               	movf	?___wmul,w
  5196  0551  00AF               	movwf	printf@width
  5197                           
  5198                           ;doprnt.c: 601: width += *f++ - '0';
  5199  0552  0832               	movf	printf@f,w
  5200  0553  0084               	movwf	4
  5201  0554  120A  118A  2707  120A  118A  	fcall	stringdir
  5202  0559  3ED0               	addlw	208
  5203  055A  00A6               	movwf	??_printf
  5204  055B  30FF               	movlw	255
  5205  055C  1803               	skipnc
  5206  055D  3000               	movlw	0
  5207  055E  00A7               	movwf	??_printf+1
  5208  055F  0826               	movf	??_printf,w
  5209  0560  07AF               	addwf	printf@width,f
  5210  0561  1803               	skipnc
  5211  0562  0AB0               	incf	printf@width+1,f
  5212  0563  0827               	movf	??_printf+1,w
  5213  0564  07B0               	addwf	printf@width+1,f
  5214  0565  3001               	movlw	1
  5215  0566  00A6               	movwf	??_printf
  5216  0567  0826               	movf	??_printf,w
  5217  0568  07B2               	addwf	printf@f,f
  5218                           
  5219                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5220  0569  0832               	movf	printf@f,w
  5221  056A  0084               	movwf	4
  5222  056B  120A  118A  2707  120A  118A  	fcall	stringdir
  5223  0570  120A  158A  20F5  120A  118A  	fcall	_isdigit
  5224  0575  1C03               	btfss	3,0
  5225  0576  2D7B               	goto	i1l1873
  5226  0577  2D3D               	goto	i1l1863
  5227  0578                     i1l301:	
  5228                           ;doprnt.c: 712: case 'X':
  5229                           
  5230                           ;doprnt.c: 698: case 'i':
  5231                           ;doprnt.c: 699: break;
  5232                           
  5233                           ;doprnt.c: 697: case 'd':
  5234                           
  5235                           ;doprnt.c: 638: goto alldone;
  5236                           
  5237                           ;doprnt.c: 637: case 0:
  5238                           
  5239                           ;doprnt.c: 608: }
  5240                           ;doprnt.c: 635: switch(c = *f++) {
  5241                           
  5242                           
  5243                           ;doprnt.c: 714: flag |= 0x20;
  5244  0578  16B1               	bsf	printf@flag,5
  5245  0579                     i1l302:	
  5246                           ;doprnt.c: 718: case 'x':
  5247                           
  5248                           
  5249                           ;doprnt.c: 721: flag |= 0x80;
  5250  0579  17B1               	bsf	printf@flag,7
  5251                           
  5252                           ;doprnt.c: 723: break;
  5253  057A  2D98               	goto	i1l300
  5254  057B                     i1l1873:	
  5255                           ;doprnt.c: 822: }
  5256                           
  5257                           ;doprnt.c: 813: continue;
  5258                           
  5259                           ;doprnt.c: 802: default:
  5260                           
  5261  057B  3001               	movlw	1
  5262  057C  1283               	bcf	3,5	;RP0=0, select bank0
  5263  057D  1303               	bcf	3,6	;RP1=0, select bank0
  5264  057E  07B2               	addwf	printf@f,f
  5265  057F  30FF               	movlw	-1
  5266  0580  0732               	addwf	printf@f,w
  5267  0581  0084               	movwf	4
  5268  0582  120A  118A  2707  120A  118A  	fcall	stringdir
  5269  0587  00B3               	movwf	printf@c
  5270                           
  5271                           ; Switch size 1, requested type "space"
  5272                           ; Number of cases is 5, Range of values is 0 to 120
  5273                           ; switch strategies available:
  5274                           ; Name         Instructions Cycles
  5275                           ; simple_byte           16     9 (average)
  5276                           ; jumptable            260     6 (fixed)
  5277                           ;	Chosen strategy is simple_byte
  5278  0588  3A00               	xorlw	0	; case 0
  5279  0589  1903               	skipnz
  5280  058A  2F06               	goto	i1l342
  5281  058B  3A58               	xorlw	88	; case 88
  5282  058C  1903               	skipnz
  5283  058D  2D78               	goto	i1l301
  5284  058E  3A3C               	xorlw	60	; case 100
  5285  058F  1903               	skipnz
  5286  0590  2D98               	goto	i1l300
  5287  0591  3A0D               	xorlw	13	; case 105
  5288  0592  1903               	skipnz
  5289  0593  2D98               	goto	i1l300
  5290  0594  3A11               	xorlw	17	; case 120
  5291  0595  1903               	skipnz
  5292  0596  2D79               	goto	i1l302
  5293  0597  2CF8               	goto	i1l1967
  5294  0598                     i1l300:	
  5295                           
  5296                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  5297  0598  1283               	bcf	3,5	;RP0=0, select bank0
  5298  0599  1303               	bcf	3,6	;RP1=0, select bank0
  5299  059A  1BB1               	btfsc	printf@flag,7
  5300  059B  2DB4               	goto	i1l1885
  5301                           
  5302                           ;doprnt.c: 1253: {
  5303                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5304  059C  082B               	movf	printf@ap,w
  5305  059D  0084               	movwf	4
  5306  059E  1383               	bcf	3,7	;select IRP bank0
  5307  059F  0800               	movf	0,w
  5308  05A0  00AD               	movwf	printf@val
  5309  05A1  0A84               	incf	4,f
  5310  05A2  0800               	movf	0,w
  5311  05A3  00AE               	movwf	printf@val+1
  5312  05A4  3002               	movlw	2
  5313  05A5  00A6               	movwf	??_printf
  5314  05A6  0826               	movf	??_printf,w
  5315  05A7  07AB               	addwf	printf@ap,f
  5316                           
  5317                           ;doprnt.c: 1261: if((int)val < 0) {
  5318  05A8  1FAE               	btfss	printf@val+1,7
  5319  05A9  2E09               	goto	i1l1911
  5320                           
  5321                           ;doprnt.c: 1262: flag |= 0x03;
  5322  05AA  3003               	movlw	3
  5323  05AB  00A6               	movwf	??_printf
  5324  05AC  0826               	movf	??_printf,w
  5325  05AD  04B1               	iorwf	printf@flag,f
  5326                           
  5327                           ;doprnt.c: 1263: val = -val;
  5328  05AE  09AD               	comf	printf@val,f
  5329  05AF  09AE               	comf	printf@val+1,f
  5330  05B0  0AAD               	incf	printf@val,f
  5331  05B1  1903               	skipnz
  5332  05B2  0AAE               	incf	printf@val+1,f
  5333                           
  5334                           ;doprnt.c: 1264: }
  5335                           ;doprnt.c: 1266: }
  5336  05B3  2E09               	goto	i1l1911
  5337  05B4                     i1l1885:	
  5338                           
  5339                           ;doprnt.c: 1268: else
  5340                           ;doprnt.c: 1273: {
  5341                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5342  05B4  082B               	movf	printf@ap,w
  5343  05B5  0084               	movwf	4
  5344  05B6  1383               	bcf	3,7	;select IRP bank0
  5345  05B7  0800               	movf	0,w
  5346  05B8  00AD               	movwf	printf@val
  5347  05B9  0A84               	incf	4,f
  5348  05BA  0800               	movf	0,w
  5349  05BB  00AE               	movwf	printf@val+1
  5350  05BC  3002               	movlw	2
  5351  05BD  00A6               	movwf	??_printf
  5352  05BE  0826               	movf	??_printf,w
  5353  05BF  07AB               	addwf	printf@ap,f
  5354                           
  5355                           ;doprnt.c: 1287: }
  5356                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  5357  05C0  2E09               	goto	i1l1911
  5358  05C1                     i1l308:	
  5359                           ;doprnt.c: 1299: case 0x00:
  5360                           
  5361                           
  5362                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5363  05C1  01B3               	clrf	printf@c
  5364  05C2  0AB3               	incf	printf@c,f
  5365  05C3                     L7:	
  5366  05C3  3005               	movlw	5
  5367  05C4  0633               	xorwf	printf@c,w
  5368  05C5  1903               	btfsc	3,2
  5369  05C6  2E12               	goto	i1l1913
  5370                           
  5371                           ;doprnt.c: 1306: if(val < dpowers[c])
  5372  05C7  0833               	movf	printf@c,w
  5373  05C8  00A6               	movwf	??_printf
  5374  05C9  0726               	addwf	??_printf,w
  5375  05CA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5376  05CB  0084               	movwf	4
  5377  05CC  120A  118A  2707  120A  118A  	fcall	stringdir
  5378  05D1  00A7               	movwf	??_printf+1
  5379  05D2  120A  118A  2707  120A  118A  	fcall	stringdir
  5380  05D7  00A8               	movwf	??_printf+2
  5381  05D8  0828               	movf	??_printf+2,w
  5382  05D9  022E               	subwf	printf@val+1,w
  5383  05DA  1D03               	skipz
  5384  05DB  2DDE               	goto	u182_25
  5385  05DC  0827               	movf	??_printf+1,w
  5386  05DD  022D               	subwf	printf@val,w
  5387  05DE                     u182_25:	
  5388  05DE  1C03               	btfss	3,0
  5389  05DF  2E12               	goto	i1l1913
  5390                           
  5391                           ;doprnt.c: 1307: break;
  5392  05E0  3001               	movlw	1
  5393  05E1  00A6               	movwf	??_printf
  5394  05E2  0826               	movf	??_printf,w
  5395  05E3  07B3               	addwf	printf@c,f
  5396  05E4  2DC3               	goto	L7
  5397  05E5                     i1l313:	
  5398                           ;doprnt.c: 1314: case 0x80:
  5399                           
  5400                           ;doprnt.c: 1309: break;
  5401                           
  5402                           
  5403                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5404  05E5  01B3               	clrf	printf@c
  5405  05E6  0AB3               	incf	printf@c,f
  5406  05E7                     L8:	
  5407  05E7  3004               	movlw	4
  5408  05E8  0633               	xorwf	printf@c,w
  5409  05E9  1903               	btfsc	3,2
  5410  05EA  2E12               	goto	i1l1913
  5411                           
  5412                           ;doprnt.c: 1317: if(val < hexpowers[c])
  5413  05EB  0833               	movf	printf@c,w
  5414  05EC  00A6               	movwf	??_printf
  5415  05ED  0726               	addwf	??_printf,w
  5416  05EE  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  5417  05EF  0084               	movwf	4
  5418  05F0  120A  118A  2707  120A  118A  	fcall	stringdir
  5419  05F5  00A7               	movwf	??_printf+1
  5420  05F6  120A  118A  2707  120A  118A  	fcall	stringdir
  5421  05FB  00A8               	movwf	??_printf+2
  5422  05FC  0828               	movf	??_printf+2,w
  5423  05FD  022E               	subwf	printf@val+1,w
  5424  05FE  1D03               	skipz
  5425  05FF  2E02               	goto	u185_25
  5426  0600  0827               	movf	??_printf+1,w
  5427  0601  022D               	subwf	printf@val,w
  5428  0602                     u185_25:	
  5429  0602  1C03               	btfss	3,0
  5430  0603  2E12               	goto	i1l1913
  5431                           
  5432                           ;doprnt.c: 1318: break;
  5433  0604  3001               	movlw	1
  5434  0605  00A6               	movwf	??_printf
  5435  0606  0826               	movf	??_printf,w
  5436  0607  07B3               	addwf	printf@c,f
  5437  0608  2DE7               	goto	L8
  5438  0609                     i1l1911:	
  5439                           ;doprnt.c: 1336: }
  5440                           
  5441                           ;doprnt.c: 1320: break;
  5442                           
  5443  0609  0831               	movf	printf@flag,w
  5444  060A  3980               	andlw	128
  5445                           
  5446                           ; Switch size 1, requested type "space"
  5447                           ; Number of cases is 2, Range of values is 0 to 128
  5448                           ; switch strategies available:
  5449                           ; Name         Instructions Cycles
  5450                           ; simple_byte            7     4 (average)
  5451                           ; jumptable            260     6 (fixed)
  5452                           ;	Chosen strategy is simple_byte
  5453  060B  3A00               	xorlw	0	; case 0
  5454  060C  1903               	skipnz
  5455  060D  2DC1               	goto	i1l308
  5456  060E  3A80               	xorlw	128	; case 128
  5457  060F  1903               	skipnz
  5458  0610  2DE5               	goto	i1l313
  5459  0611  2E12               	goto	i1l1913
  5460  0612                     i1l1913:	
  5461                           
  5462                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5463  0612  082F               	movf	printf@width,w
  5464  0613  0430               	iorwf	printf@width+1,w
  5465  0614  1903               	btfsc	3,2
  5466  0615  2E20               	goto	i1l317
  5467  0616  0831               	movf	printf@flag,w
  5468  0617  3903               	andlw	3
  5469  0618  1903               	btfsc	3,2
  5470  0619  2E20               	goto	i1l317
  5471                           
  5472                           ;doprnt.c: 1346: width--;
  5473  061A  30FF               	movlw	255
  5474  061B  07AF               	addwf	printf@width,f
  5475  061C  1803               	skipnc
  5476  061D  0AB0               	incf	printf@width+1,f
  5477  061E  30FF               	movlw	255
  5478  061F  07B0               	addwf	printf@width+1,f
  5479  0620                     i1l317:	
  5480                           
  5481                           ;doprnt.c: 1381: if(width > c)
  5482  0620  0833               	movf	printf@c,w
  5483  0621  00A6               	movwf	??_printf
  5484  0622  01A7               	clrf	??_printf+1
  5485  0623  1BA6               	btfsc	??_printf,7
  5486  0624  03A7               	decf	??_printf+1,f
  5487  0625  0827               	movf	??_printf+1,w
  5488  0626  3A80               	xorlw	128
  5489  0627  00A8               	movwf	??_printf+2
  5490  0628  0830               	movf	printf@width+1,w
  5491  0629  3A80               	xorlw	128
  5492  062A  0228               	subwf	??_printf+2,w
  5493  062B  1D03               	skipz
  5494  062C  2E2F               	goto	u189_25
  5495  062D  082F               	movf	printf@width,w
  5496  062E  0226               	subwf	??_printf,w
  5497  062F                     u189_25:	
  5498  062F  1803               	skipnc
  5499  0630  2E3F               	goto	i1l1921
  5500                           
  5501                           ;doprnt.c: 1382: width -= c;
  5502  0631  1283               	bcf	3,5	;RP0=0, select bank0
  5503  0632  1303               	bcf	3,6	;RP1=0, select bank0
  5504  0633  0833               	movf	printf@c,w
  5505  0634  00A6               	movwf	??_printf
  5506  0635  01A7               	clrf	??_printf+1
  5507  0636  1BA6               	btfsc	??_printf,7
  5508  0637  03A7               	decf	??_printf+1,f
  5509  0638  0826               	movf	??_printf,w
  5510  0639  02AF               	subwf	printf@width,f
  5511  063A  0827               	movf	??_printf+1,w
  5512  063B  1C03               	skipc
  5513  063C  03B0               	decf	printf@width+1,f
  5514  063D  02B0               	subwf	printf@width+1,f
  5515  063E  2E43               	goto	i1l1923
  5516  063F                     i1l1921:	
  5517                           
  5518                           ;doprnt.c: 1383: else
  5519                           ;doprnt.c: 1384: width = 0;
  5520  063F  1283               	bcf	3,5	;RP0=0, select bank0
  5521  0640  1303               	bcf	3,6	;RP1=0, select bank0
  5522  0641  01AF               	clrf	printf@width
  5523  0642  01B0               	clrf	printf@width+1
  5524  0643                     i1l1923:	
  5525                           
  5526                           ;doprnt.c: 1387: if(flag & 0x04) {
  5527  0643  1D31               	btfss	printf@flag,2
  5528  0644  2E64               	goto	i1l1935
  5529                           
  5530                           ;doprnt.c: 1392: if(flag & 0x03)
  5531  0645  0831               	movf	printf@flag,w
  5532  0646  3903               	andlw	3
  5533  0647  1903               	btfsc	3,2
  5534  0648  2E4F               	goto	i1l1929
  5535                           
  5536                           ;doprnt.c: 1393: (putch('-') );
  5537  0649  302D               	movlw	45
  5538  064A  120A  158A  20ED  120A  118A  	fcall	_putch
  5539  064F                     i1l1929:	
  5540                           
  5541                           ;doprnt.c: 1415: if(width)
  5542  064F  1283               	bcf	3,5	;RP0=0, select bank0
  5543  0650  1303               	bcf	3,6	;RP1=0, select bank0
  5544  0651                     L9:	
  5545  0651  082F               	movf	printf@width,w
  5546  0652  0430               	iorwf	printf@width+1,w
  5547  0653  1903               	btfsc	3,2
  5548  0654  2E84               	goto	i1l1945
  5549                           
  5550                           ;doprnt.c: 1417: (putch('0') );
  5551                           
  5552                           ;doprnt.c: 1416: do
  5553  0655  3030               	movlw	48
  5554  0656  120A  158A  20ED  120A  118A  	fcall	_putch
  5555                           
  5556                           ;doprnt.c: 1418: while(--width);
  5557  065B  30FF               	movlw	255
  5558  065C  1283               	bcf	3,5	;RP0=0, select bank0
  5559  065D  1303               	bcf	3,6	;RP1=0, select bank0
  5560  065E  07AF               	addwf	printf@width,f
  5561  065F  1803               	skipnc
  5562  0660  0AB0               	incf	printf@width+1,f
  5563  0661  30FF               	movlw	255
  5564  0662  07B0               	addwf	printf@width+1,f
  5565  0663  2E51               	goto	L9
  5566  0664                     i1l1935:	
  5567                           ;doprnt.c: 1420: } else
  5568                           
  5569                           
  5570                           ;doprnt.c: 1422: {
  5571                           ;doprnt.c: 1424: if(width
  5572                           ;doprnt.c: 1428: )
  5573  0664  082F               	movf	printf@width,w
  5574  0665  0430               	iorwf	printf@width+1,w
  5575  0666  1903               	btfsc	3,2
  5576  0667  2E7A               	goto	i1l1941
  5577  0668                     i1l1937:	
  5578                           ;doprnt.c: 1429: do
  5579                           
  5580                           
  5581                           ;doprnt.c: 1430: (putch(' ') );
  5582  0668  3020               	movlw	32
  5583  0669  120A  158A  20ED  120A  118A  	fcall	_putch
  5584                           
  5585                           ;doprnt.c: 1431: while(--width);
  5586  066E  30FF               	movlw	255
  5587  066F  1283               	bcf	3,5	;RP0=0, select bank0
  5588  0670  1303               	bcf	3,6	;RP1=0, select bank0
  5589  0671  07AF               	addwf	printf@width,f
  5590  0672  1803               	skipnc
  5591  0673  0AB0               	incf	printf@width+1,f
  5592  0674  30FF               	movlw	255
  5593  0675  07B0               	addwf	printf@width+1,f
  5594  0676  082F               	movf	printf@width,w
  5595  0677  0430               	iorwf	printf@width+1,w
  5596  0678  1D03               	btfss	3,2
  5597  0679  2E68               	goto	i1l1937
  5598  067A                     i1l1941:	
  5599                           
  5600                           ;doprnt.c: 1438: if(flag & 0x03)
  5601  067A  0831               	movf	printf@flag,w
  5602  067B  3903               	andlw	3
  5603  067C  1903               	btfsc	3,2
  5604  067D  2E84               	goto	i1l1945
  5605                           
  5606                           ;doprnt.c: 1439: (putch('-') );
  5607  067E  302D               	movlw	45
  5608  067F  120A  158A  20ED  120A  118A  	fcall	_putch
  5609  0684                     i1l1945:	
  5610                           
  5611                           ;doprnt.c: 1469: }
  5612                           ;doprnt.c: 1472: prec = c;
  5613  0684  1283               	bcf	3,5	;RP0=0, select bank0
  5614  0685  1303               	bcf	3,6	;RP1=0, select bank0
  5615  0686  0833               	movf	printf@c,w
  5616  0687  00A6               	movwf	??_printf
  5617  0688  0826               	movf	??_printf,w
  5618  0689  00AC               	movwf	printf@prec
  5619                           
  5620                           ;doprnt.c: 1474: while(prec--) {
  5621  068A  2EF3               	goto	i1l1965
  5622  068B                     i1l1947:	
  5623                           ;doprnt.c: 1478: {
  5624                           ;doprnt.c: 1483: case 0x00:
  5625                           
  5626                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  5627                           
  5628                           
  5629                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5630  068B  300A               	movlw	10
  5631  068C  00F8               	movwf	___lwmod@divisor
  5632  068D  3000               	movlw	0
  5633  068E  00F9               	movwf	___lwmod@divisor+1
  5634  068F  082C               	movf	printf@prec,w
  5635  0690  00A6               	movwf	??_printf
  5636  0691  0726               	addwf	??_printf,w
  5637  0692  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  5638  0693  0084               	movwf	4
  5639  0694  120A  118A  2707  120A  118A  	fcall	stringdir
  5640  0699  00F0               	movwf	___lwdiv@divisor
  5641  069A  120A  118A  2707  120A  118A  	fcall	stringdir
  5642  069F  00F1               	movwf	___lwdiv@divisor+1
  5643  06A0  082E               	movf	printf@val+1,w
  5644  06A1  00F3               	movwf	___lwdiv@dividend+1
  5645  06A2  082D               	movf	printf@val,w
  5646  06A3  00F2               	movwf	___lwdiv@dividend
  5647  06A4  120A  158A  2329  120A  118A  	fcall	___lwdiv
  5648  06A9  0871               	movf	?___lwdiv+1,w
  5649  06AA  00FB               	movwf	___lwmod@dividend+1
  5650  06AB  0870               	movf	?___lwdiv,w
  5651  06AC  00FA               	movwf	___lwmod@dividend
  5652  06AD  120A  158A  225E  120A  118A  	fcall	___lwmod
  5653  06B2  0878               	movf	?___lwmod,w
  5654  06B3  3E30               	addlw	48
  5655  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  5656  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  5657  06B6  00A7               	movwf	??_printf+1
  5658  06B7  0827               	movf	??_printf+1,w
  5659  06B8  2EEC               	goto	L5
  5660  06B9                     i1l1949:	
  5661                           ;doprnt.c: 1497: case 0x80:
  5662                           
  5663                           ;doprnt.c: 1491: break;
  5664                           
  5665                           
  5666                           ;doprnt.c: 1499: {
  5667                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  5668  06B9  082C               	movf	printf@prec,w
  5669  06BA  00A6               	movwf	??_printf
  5670  06BB  0726               	addwf	??_printf,w
  5671  06BC  3E0B               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  5672  06BD  0084               	movwf	4
  5673  06BE  120A  118A  2707  120A  118A  	fcall	stringdir
  5674  06C3  00F0               	movwf	___lwdiv@divisor
  5675  06C4  120A  118A  2707  120A  118A  	fcall	stringdir
  5676  06C9  00F1               	movwf	___lwdiv@divisor+1
  5677  06CA  082E               	movf	printf@val+1,w
  5678  06CB  00F3               	movwf	___lwdiv@dividend+1
  5679  06CC  082D               	movf	printf@val,w
  5680  06CD  00F2               	movwf	___lwdiv@dividend
  5681  06CE  120A  158A  2329  120A  118A  	fcall	___lwdiv
  5682  06D3  0870               	movf	?___lwdiv,w
  5683  06D4  390F               	andlw	15
  5684  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  5685  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  5686  06D7  00A7               	movwf	??_printf+1
  5687  06D8  0827               	movf	??_printf+1,w
  5688  06D9  00A9               	movwf	printf@idx
  5689                           
  5690                           ;doprnt.c: 1502: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  5691  06DA  1AB1               	btfsc	printf@flag,5
  5692  06DB  2EDE               	goto	i1l1955
  5693  06DC  3024               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  5694  06DD  2EDF               	goto	L6
  5695  06DE                     i1l1955:	
  5696  06DE  3013               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  5697  06DF                     L6:	
  5698  06DF  00A6               	movwf	??_printf
  5699  06E0  0826               	movf	??_printf,w
  5700  06E1  00AA               	movwf	_printf$750
  5701  06E2  0829               	movf	printf@idx,w
  5702  06E3  072A               	addwf	_printf$750,w
  5703  06E4  0084               	movwf	4
  5704  06E5  120A  118A  2707  120A  118A  	fcall	stringdir
  5705  06EA  00A6               	movwf	??_printf
  5706  06EB  0826               	movf	??_printf,w
  5707  06EC                     L5:	
  5708  06EC  00B3               	movwf	printf@c
  5709  06ED                     i1l1963:	
  5710                           ;doprnt.c: 1523: }
  5711                           
  5712                           ;doprnt.c: 1508: }
  5713                           ;doprnt.c: 1510: break;
  5714                           
  5715                           
  5716                           ;doprnt.c: 1524: (putch(c) );
  5717  06ED  0833               	movf	printf@c,w
  5718  06EE  120A  158A  20ED  120A  118A  	fcall	_putch
  5719  06F3                     i1l1965:	
  5720  06F3  30FF               	movlw	255
  5721  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  5722  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  5723  06F6  00A6               	movwf	??_printf
  5724  06F7  0826               	movf	??_printf,w
  5725  06F8  07AC               	addwf	printf@prec,f
  5726  06F9  0A2C               	incf	printf@prec,w
  5727  06FA  1903               	btfsc	3,2
  5728  06FB  2CF8               	goto	i1l1967
  5729  06FC  0831               	movf	printf@flag,w
  5730  06FD  3980               	andlw	128
  5731                           
  5732                           ; Switch size 1, requested type "space"
  5733                           ; Number of cases is 2, Range of values is 0 to 128
  5734                           ; switch strategies available:
  5735                           ; Name         Instructions Cycles
  5736                           ; simple_byte            7     4 (average)
  5737                           ; jumptable            260     6 (fixed)
  5738                           ;	Chosen strategy is simple_byte
  5739  06FE  3A00               	xorlw	0	; case 0
  5740  06FF  1903               	skipnz
  5741  0700  2E8B               	goto	i1l1947
  5742  0701  3A80               	xorlw	128	; case 128
  5743  0702  1903               	skipnz
  5744  0703  2EB9               	goto	i1l1949
  5745  0704  2EED               	goto	i1l1963
  5746  0705  2EED               	goto	i1l1963
  5747  0706                     i1l342:	
  5748                           ;doprnt.c: 1540: return 0;
  5749                           ;	Return value of _printf is never used
  5750                           
  5751                           ;doprnt.c: 1525: }
  5752                           ;doprnt.c: 1533: }
  5753                           ;doprnt.c: 1535: alldone:
  5754                           
  5755  0706  0008               	return
  5756  0707                     __end_of_printf:	
  5757                           
  5758                           	psect	text23
  5759  08ED                     __ptext23:	
  5760 ;; *************** function _putch *****************
  5761 ;; Defined at:
  5762 ;;		line 36 in file "panda17.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  data            1    wreg     unsigned char 
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;  data            1    0[COMMON] unsigned char 
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5776 ;;      Params:         0       0       0       0       0
  5777 ;;      Locals:         1       0       0       0       0
  5778 ;;      Temps:          0       0       0       0       0
  5779 ;;      Totals:         1       0       0       0       0
  5780 ;;Total ram usage:        1 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_printf
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           
  5790                           ;psect for function _putch
  5791  08ED                     _putch:	
  5792                           
  5793                           ;incstack = 0
  5794                           ; Regs used in _putch: [wreg]
  5795                           ;putch@data stored from wreg
  5796  08ED  00F0               	movwf	putch@data
  5797  08EE                     i1l76:	
  5798                           ;panda17.c: 38: continue;
  5799                           
  5800                           ;panda17.c: 37: while(!PIR1bits.TXIF)
  5801                           
  5802  08EE  1283               	bcf	3,5	;RP0=0, select bank0
  5803  08EF  1303               	bcf	3,6	;RP1=0, select bank0
  5804  08F0  1E0C               	btfss	12,4	;volatile
  5805  08F1  28EE               	goto	i1l76
  5806                           
  5807                           ;panda17.c: 39: TXREG = data;
  5808  08F2  0870               	movf	putch@data,w
  5809  08F3  0099               	movwf	25	;volatile
  5810  08F4  0008               	return
  5811  08F5                     __end_of_putch:	
  5812                           
  5813                           	psect	text24
  5814  08F5                     __ptext24:	
  5815 ;; *************** function _isdigit *****************
  5816 ;; Defined at:
  5817 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\isdigit.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  c               1    wreg     unsigned char 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  c               1    1[COMMON] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;		None               void
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5831 ;;      Params:         0       0       0       0       0
  5832 ;;      Locals:         2       0       0       0       0
  5833 ;;      Temps:          0       0       0       0       0
  5834 ;;      Totals:         2       0       0       0       0
  5835 ;;Total ram usage:        2 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; This function calls:
  5838 ;;		Nothing
  5839 ;; This function is called by:
  5840 ;;		_printf
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           
  5845                           ;psect for function _isdigit
  5846  08F5                     _isdigit:	
  5847                           
  5848                           ;incstack = 0
  5849                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5850                           ;isdigit@c stored from wreg
  5851  08F5  00F1               	movwf	isdigit@c
  5852  08F6  01F0               	clrf	_isdigit$936
  5853  08F7  303A               	movlw	58
  5854  08F8  0271               	subwf	isdigit@c,w
  5855  08F9  1803               	skipnc
  5856  08FA  2901               	goto	i1l1701
  5857  08FB  3030               	movlw	48
  5858  08FC  0271               	subwf	isdigit@c,w
  5859  08FD  1C03               	skipc
  5860  08FE  2901               	goto	i1l1701
  5861  08FF  01F0               	clrf	_isdigit$936
  5862  0900  0AF0               	incf	_isdigit$936,f
  5863  0901                     i1l1701:	
  5864  0901  0C70               	rrf	_isdigit$936,w
  5865  0902  0008               	return
  5866  0903                     __end_of_isdigit:	
  5867                           
  5868                           	psect	text25
  5869  0938                     __ptext25:	
  5870 ;; *************** function ___wmul *****************
  5871 ;; Defined at:
  5872 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\Umul16.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;  multiplier      2    0[COMMON] unsigned int 
  5875 ;;  multiplicand    2    2[COMMON] unsigned int 
  5876 ;; Auto vars:     Size  Location     Type
  5877 ;;  product         2    4[COMMON] unsigned int 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  2    0[COMMON] unsigned int 
  5880 ;; Registers used:
  5881 ;;		wreg, status,2, status,0
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5887 ;;      Params:         4       0       0       0       0
  5888 ;;      Locals:         2       0       0       0       0
  5889 ;;      Temps:          0       0       0       0       0
  5890 ;;      Totals:         6       0       0       0       0
  5891 ;;Total ram usage:        6 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; This function calls:
  5894 ;;		Nothing
  5895 ;; This function is called by:
  5896 ;;		_save_event
  5897 ;;		_ints_isr
  5898 ;;		_printf
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           
  5903                           ;psect for function ___wmul
  5904  0938                     ___wmul:	
  5905                           
  5906                           ;incstack = 0
  5907                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5908  0938  01F4               	clrf	___wmul@product
  5909  0939  01F5               	clrf	___wmul@product+1
  5910  093A                     i1l1707:	
  5911  093A  1C70               	btfss	___wmul@multiplier,0
  5912  093B  2942               	goto	i1l426
  5913  093C  0872               	movf	___wmul@multiplicand,w
  5914  093D  07F4               	addwf	___wmul@product,f
  5915  093E  1803               	skipnc
  5916  093F  0AF5               	incf	___wmul@product+1,f
  5917  0940  0873               	movf	___wmul@multiplicand+1,w
  5918  0941  07F5               	addwf	___wmul@product+1,f
  5919  0942                     i1l426:	
  5920  0942  3001               	movlw	1
  5921  0943                     u158_25:	
  5922  0943  1003               	clrc
  5923  0944  0DF2               	rlf	___wmul@multiplicand,f
  5924  0945  0DF3               	rlf	___wmul@multiplicand+1,f
  5925  0946  3EFF               	addlw	-1
  5926  0947  1D03               	skipz
  5927  0948  2943               	goto	u158_25
  5928  0949  3001               	movlw	1
  5929  094A                     u159_25:	
  5930  094A  1003               	clrc
  5931  094B  0CF1               	rrf	___wmul@multiplier+1,f
  5932  094C  0CF0               	rrf	___wmul@multiplier,f
  5933  094D  3EFF               	addlw	-1
  5934  094E  1D03               	skipz
  5935  094F  294A               	goto	u159_25
  5936  0950  0870               	movf	___wmul@multiplier,w
  5937  0951  0471               	iorwf	___wmul@multiplier+1,w
  5938  0952  1D03               	btfss	3,2
  5939  0953  293A               	goto	i1l1707
  5940  0954  0875               	movf	___wmul@product+1,w
  5941  0955  00F1               	movwf	?___wmul+1
  5942  0956  0874               	movf	___wmul@product,w
  5943  0957  00F0               	movwf	?___wmul
  5944  0958  0008               	return
  5945  0959                     __end_of___wmul:	
  5946                           
  5947                           	psect	text26
  5948  0A5E                     __ptext26:	
  5949 ;; *************** function ___lwmod *****************
  5950 ;; Defined at:
  5951 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  5952 ;; Parameters:    Size  Location     Type
  5953 ;;  divisor         2    8[COMMON] unsigned int 
  5954 ;;  dividend        2   10[COMMON] unsigned int 
  5955 ;; Auto vars:     Size  Location     Type
  5956 ;;  counter         1   13[COMMON] unsigned char 
  5957 ;; Return value:  Size  Location     Type
  5958 ;;                  2    8[COMMON] unsigned int 
  5959 ;; Registers used:
  5960 ;;		wreg, status,2, status,0
  5961 ;; Tracked objects:
  5962 ;;		On entry : 0/0
  5963 ;;		On exit  : 0/0
  5964 ;;		Unchanged: 0/0
  5965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5966 ;;      Params:         4       0       0       0       0
  5967 ;;      Locals:         1       0       0       0       0
  5968 ;;      Temps:          1       0       0       0       0
  5969 ;;      Totals:         6       0       0       0       0
  5970 ;;Total ram usage:        6 bytes
  5971 ;; Hardware stack levels used:    1
  5972 ;; This function calls:
  5973 ;;		Nothing
  5974 ;; This function is called by:
  5975 ;;		_printf
  5976 ;; This function uses a non-reentrant model
  5977 ;;
  5978                           
  5979                           
  5980                           ;psect for function ___lwmod
  5981  0A5E                     ___lwmod:	
  5982                           
  5983                           ;incstack = 0
  5984                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5985  0A5E  0878               	movf	___lwmod@divisor,w
  5986  0A5F  0479               	iorwf	___lwmod@divisor+1,w
  5987  0A60  1903               	btfsc	3,2
  5988  0A61  2A8B               	goto	i1l1763
  5989  0A62  01FD               	clrf	___lwmod@counter
  5990  0A63  0AFD               	incf	___lwmod@counter,f
  5991  0A64                     i1l1753:	
  5992  0A64  1BF9               	btfsc	___lwmod@divisor+1,7
  5993  0A65  2A72               	goto	i1l1755
  5994  0A66  3001               	movlw	1
  5995  0A67                     u169_25:	
  5996  0A67  1003               	clrc
  5997  0A68  0DF8               	rlf	___lwmod@divisor,f
  5998  0A69  0DF9               	rlf	___lwmod@divisor+1,f
  5999  0A6A  3EFF               	addlw	-1
  6000  0A6B  1D03               	skipz
  6001  0A6C  2A67               	goto	u169_25
  6002  0A6D  3001               	movlw	1
  6003  0A6E  00FC               	movwf	??___lwmod
  6004  0A6F  087C               	movf	??___lwmod,w
  6005  0A70  07FD               	addwf	___lwmod@counter,f
  6006  0A71  2A64               	goto	i1l1753
  6007  0A72                     i1l1755:	
  6008  0A72  0879               	movf	___lwmod@divisor+1,w
  6009  0A73  027B               	subwf	___lwmod@dividend+1,w
  6010  0A74  1D03               	skipz
  6011  0A75  2A78               	goto	u171_25
  6012  0A76  0878               	movf	___lwmod@divisor,w
  6013  0A77  027A               	subwf	___lwmod@dividend,w
  6014  0A78                     u171_25:	
  6015  0A78  1C03               	skipc
  6016  0A79  2A80               	goto	i1l1759
  6017  0A7A  0878               	movf	___lwmod@divisor,w
  6018  0A7B  02FA               	subwf	___lwmod@dividend,f
  6019  0A7C  0879               	movf	___lwmod@divisor+1,w
  6020  0A7D  1C03               	skipc
  6021  0A7E  03FB               	decf	___lwmod@dividend+1,f
  6022  0A7F  02FB               	subwf	___lwmod@dividend+1,f
  6023  0A80                     i1l1759:	
  6024  0A80  3001               	movlw	1
  6025  0A81                     u172_25:	
  6026  0A81  1003               	clrc
  6027  0A82  0CF9               	rrf	___lwmod@divisor+1,f
  6028  0A83  0CF8               	rrf	___lwmod@divisor,f
  6029  0A84  3EFF               	addlw	-1
  6030  0A85  1D03               	skipz
  6031  0A86  2A81               	goto	u172_25
  6032  0A87  3001               	movlw	1
  6033  0A88  02FD               	subwf	___lwmod@counter,f
  6034  0A89  1D03               	btfss	3,2
  6035  0A8A  2A72               	goto	i1l1755
  6036  0A8B                     i1l1763:	
  6037  0A8B  087B               	movf	___lwmod@dividend+1,w
  6038  0A8C  00F9               	movwf	?___lwmod+1
  6039  0A8D  087A               	movf	___lwmod@dividend,w
  6040  0A8E  00F8               	movwf	?___lwmod
  6041  0A8F  0008               	return
  6042  0A90                     __end_of___lwmod:	
  6043                           
  6044                           	psect	text27
  6045  0B29                     __ptext27:	
  6046 ;; *************** function ___lwdiv *****************
  6047 ;; Defined at:
  6048 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  divisor         2    0[COMMON] unsigned int 
  6051 ;;  dividend        2    2[COMMON] unsigned int 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  quotient        2    5[COMMON] unsigned int 
  6054 ;;  counter         1    7[COMMON] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  2    0[COMMON] unsigned int 
  6057 ;; Registers used:
  6058 ;;		wreg, status,2, status,0
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6064 ;;      Params:         4       0       0       0       0
  6065 ;;      Locals:         3       0       0       0       0
  6066 ;;      Temps:          1       0       0       0       0
  6067 ;;      Totals:         8       0       0       0       0
  6068 ;;Total ram usage:        8 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; This function calls:
  6071 ;;		Nothing
  6072 ;; This function is called by:
  6073 ;;		_printf
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           
  6078                           ;psect for function ___lwdiv
  6079  0B29                     ___lwdiv:	
  6080                           
  6081                           ;incstack = 0
  6082                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6083  0B29  01F5               	clrf	___lwdiv@quotient
  6084  0B2A  01F6               	clrf	___lwdiv@quotient+1
  6085  0B2B  0870               	movf	___lwdiv@divisor,w
  6086  0B2C  0471               	iorwf	___lwdiv@divisor+1,w
  6087  0B2D  1903               	btfsc	3,2
  6088  0B2E  2B60               	goto	i1l1741
  6089  0B2F  01F7               	clrf	___lwdiv@counter
  6090  0B30  0AF7               	incf	___lwdiv@counter,f
  6091  0B31                     i1l1729:	
  6092  0B31  1BF1               	btfsc	___lwdiv@divisor+1,7
  6093  0B32  2B3F               	goto	i1l1731
  6094  0B33  3001               	movlw	1
  6095  0B34                     u162_25:	
  6096  0B34  1003               	clrc
  6097  0B35  0DF0               	rlf	___lwdiv@divisor,f
  6098  0B36  0DF1               	rlf	___lwdiv@divisor+1,f
  6099  0B37  3EFF               	addlw	-1
  6100  0B38  1D03               	skipz
  6101  0B39  2B34               	goto	u162_25
  6102  0B3A  3001               	movlw	1
  6103  0B3B  00F4               	movwf	??___lwdiv
  6104  0B3C  0874               	movf	??___lwdiv,w
  6105  0B3D  07F7               	addwf	___lwdiv@counter,f
  6106  0B3E  2B31               	goto	i1l1729
  6107  0B3F                     i1l1731:	
  6108  0B3F  3001               	movlw	1
  6109  0B40                     u164_25:	
  6110  0B40  1003               	clrc
  6111  0B41  0DF5               	rlf	___lwdiv@quotient,f
  6112  0B42  0DF6               	rlf	___lwdiv@quotient+1,f
  6113  0B43  3EFF               	addlw	-1
  6114  0B44  1D03               	skipz
  6115  0B45  2B40               	goto	u164_25
  6116  0B46  0871               	movf	___lwdiv@divisor+1,w
  6117  0B47  0273               	subwf	___lwdiv@dividend+1,w
  6118  0B48  1D03               	skipz
  6119  0B49  2B4C               	goto	u165_25
  6120  0B4A  0870               	movf	___lwdiv@divisor,w
  6121  0B4B  0272               	subwf	___lwdiv@dividend,w
  6122  0B4C                     u165_25:	
  6123  0B4C  1C03               	skipc
  6124  0B4D  2B55               	goto	i1l1737
  6125  0B4E  0870               	movf	___lwdiv@divisor,w
  6126  0B4F  02F2               	subwf	___lwdiv@dividend,f
  6127  0B50  0871               	movf	___lwdiv@divisor+1,w
  6128  0B51  1C03               	skipc
  6129  0B52  03F3               	decf	___lwdiv@dividend+1,f
  6130  0B53  02F3               	subwf	___lwdiv@dividend+1,f
  6131  0B54  1475               	bsf	___lwdiv@quotient,0
  6132  0B55                     i1l1737:	
  6133  0B55  3001               	movlw	1
  6134  0B56                     u166_25:	
  6135  0B56  1003               	clrc
  6136  0B57  0CF1               	rrf	___lwdiv@divisor+1,f
  6137  0B58  0CF0               	rrf	___lwdiv@divisor,f
  6138  0B59  3EFF               	addlw	-1
  6139  0B5A  1D03               	skipz
  6140  0B5B  2B56               	goto	u166_25
  6141  0B5C  3001               	movlw	1
  6142  0B5D  02F7               	subwf	___lwdiv@counter,f
  6143  0B5E  1D03               	btfss	3,2
  6144  0B5F  2B3F               	goto	i1l1731
  6145  0B60                     i1l1741:	
  6146  0B60  0876               	movf	___lwdiv@quotient+1,w
  6147  0B61  00F1               	movwf	?___lwdiv+1
  6148  0B62  0875               	movf	___lwdiv@quotient,w
  6149  0B63  00F0               	movwf	?___lwdiv
  6150  0B64  0008               	return
  6151  0B65                     __end_of___lwdiv:	
  6152                           
  6153                           	psect	text28
  6154  0AC3                     __ptext28:	
  6155 ;; *************** function _ds_set *****************
  6156 ;; Defined at:
  6157 ;;		line 13 in file "ds1307.c"
  6158 ;; Parameters:    Size  Location     Type
  6159 ;;  data            1    wreg     PTR unsigned char 
  6160 ;;		 -> time(7), 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;  data            1   11[COMMON] PTR unsigned char 
  6163 ;;		 -> time(7), 
  6164 ;;  j               1   12[COMMON] unsigned char 
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6174 ;;      Params:         0       0       0       0       0
  6175 ;;      Locals:         2       0       0       0       0
  6176 ;;      Temps:          1       0       0       0       0
  6177 ;;      Totals:         3       0       0       0       0
  6178 ;;Total ram usage:        3 bytes
  6179 ;; Hardware stack levels used:    1
  6180 ;; Hardware stack levels required when called:    1
  6181 ;; This function calls:
  6182 ;;		i1_i2c_start
  6183 ;;		i1_i2c_stop
  6184 ;;		i1_i2c_write
  6185 ;; This function is called by:
  6186 ;;		_ints_isr
  6187 ;; This function uses a non-reentrant model
  6188 ;;
  6189                           
  6190                           
  6191                           ;psect for function _ds_set
  6192  0AC3                     _ds_set:	
  6193                           
  6194                           ;incstack = 0
  6195                           ; Regs used in _ds_set: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6196                           ;ds_set@data stored from wreg
  6197  0AC3  00FB               	movwf	ds_set@data
  6198                           
  6199                           ;ds1307.c: 14: unsigned char j;
  6200                           ;ds1307.c: 15: for (j=0;j<7;j++){
  6201  0AC4  01FC               	clrf	ds_set@j
  6202  0AC5                     L10:	
  6203  0AC5  3007               	movlw	7
  6204  0AC6  027C               	subwf	ds_set@j,w
  6205  0AC7  1803               	btfsc	3,0
  6206  0AC8  0008               	return
  6207                           
  6208                           ;ds1307.c: 16: i2c_start();
  6209  0AC9  120A  158A  2159  120A  158A  	fcall	i1_i2c_start
  6210                           
  6211                           ;ds1307.c: 17: i2c_write(0b11010000,1);
  6212  0ACE  01F0               	clrf	i1i2c_write@ack
  6213  0ACF  0AF0               	incf	i1i2c_write@ack,f
  6214  0AD0  30D0               	movlw	208
  6215  0AD1  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  6216                           
  6217                           ;ds1307.c: 18: i2c_write(j,1);
  6218  0AD6  01F0               	clrf	i1i2c_write@ack
  6219  0AD7  0AF0               	incf	i1i2c_write@ack,f
  6220  0AD8  087C               	movf	ds_set@j,w
  6221  0AD9  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  6222                           
  6223                           ;ds1307.c: 19: i2c_write(*(data+j),1);
  6224  0ADE  01F0               	clrf	i1i2c_write@ack
  6225  0ADF  0AF0               	incf	i1i2c_write@ack,f
  6226  0AE0  087C               	movf	ds_set@j,w
  6227  0AE1  077B               	addwf	ds_set@data,w
  6228  0AE2  00FA               	movwf	??_ds_set
  6229  0AE3  087A               	movf	??_ds_set,w
  6230  0AE4  0084               	movwf	4
  6231  0AE5  1383               	bcf	3,7	;select IRP bank0
  6232  0AE6  0800               	movf	0,w
  6233  0AE7  120A  158A  2290  120A  158A  	fcall	i1_i2c_write
  6234                           
  6235                           ;ds1307.c: 20: i2c_stop();
  6236  0AEC  120A  158A  217C  120A  158A  	fcall	i1_i2c_stop
  6237  0AF1  3001               	movlw	1
  6238  0AF2  00FA               	movwf	??_ds_set
  6239  0AF3  087A               	movf	??_ds_set,w
  6240  0AF4  07FC               	addwf	ds_set@j,f
  6241  0AF5  2AC5               	goto	L10
  6242  0AF6                     __end_of_ds_set:	
  6243                           
  6244                           	psect	text29
  6245  0A90                     __ptext29:	
  6246 ;; *************** function i1_i2c_write *****************
  6247 ;; Defined at:
  6248 ;;		line 39 in file "i2clib.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  datum           1    wreg     unsigned char 
  6251 ;;  ack             1    0[COMMON] unsigned char 
  6252 ;; Auto vars:     Size  Location     Type
  6253 ;;  datum           1    9[COMMON] unsigned char 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  1    wreg      void 
  6256 ;; Registers used:
  6257 ;;		wreg, status,2, status,0
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6263 ;;      Params:         1       0       0       0       0
  6264 ;;      Locals:         1       0       0       0       0
  6265 ;;      Temps:          8       0       0       0       0
  6266 ;;      Totals:        10       0       0       0       0
  6267 ;;Total ram usage:       10 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_si_read_h
  6273 ;;		_si_read_t
  6274 ;;		_ds_set
  6275 ;;		_ds_get
  6276 ;;		i1_mem_write
  6277 ;;		i1_mem_read
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           
  6282                           ;psect for function i1_i2c_write
  6283  0A90                     i1_i2c_write:	
  6284                           
  6285                           ;incstack = 0
  6286                           ; Regs used in i1_i2c_write: [wreg+status,2+status,0]
  6287                           ;i1i2c_write@datum stored from wreg
  6288  0A90  00F9               	movwf	i1i2c_write@datum
  6289  0A91                     i1l1607:	
  6290                           ;i2clib.c: 41: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  6291                           
  6292  0A91  1683               	bsf	3,5	;RP0=1, select bank1
  6293  0A92  1303               	bcf	3,6	;RP1=0, select bank1
  6294  0A93  0811               	movf	17,w	;volatile
  6295  0A94  3901               	andlw	1
  6296  0A95  00F1               	movwf	??i1_i2c_write
  6297  0A96  0C11               	rrf	17,w	;volatile
  6298  0A97  3901               	andlw	1
  6299  0A98  00F2               	movwf	??i1_i2c_write+1
  6300  0A99  0C11               	rrf	17,w	;volatile
  6301  0A9A  00F3               	movwf	??i1_i2c_write+2
  6302  0A9B  0CF3               	rrf	??i1_i2c_write+2,f
  6303  0A9C  0C73               	rrf	??i1_i2c_write+2,w
  6304  0A9D  3901               	andlw	1
  6305  0A9E  00F4               	movwf	??i1_i2c_write+3
  6306  0A9F  0E11               	swapf	17,w	;volatile
  6307  0AA0  3901               	andlw	1
  6308  0AA1  00F5               	movwf	??i1_i2c_write+4
  6309  0AA2  0C11               	rrf	17,w	;volatile
  6310  0AA3  00F6               	movwf	??i1_i2c_write+5
  6311  0AA4  0C76               	rrf	??i1_i2c_write+5,w
  6312  0AA5  3901               	andlw	1
  6313  0AA6  00F7               	movwf	??i1_i2c_write+6
  6314  0AA7  0C14               	rrf	20,w	;volatile
  6315  0AA8  00F8               	movwf	??i1_i2c_write+7
  6316  0AA9  0C78               	rrf	??i1_i2c_write+7,w
  6317  0AAA  3901               	andlw	1
  6318  0AAB  0477               	iorwf	??i1_i2c_write+6,w
  6319  0AAC  0475               	iorwf	??i1_i2c_write+4,w
  6320  0AAD  0474               	iorwf	??i1_i2c_write+3,w
  6321  0AAE  0472               	iorwf	??i1_i2c_write+1,w
  6322  0AAF  0471               	iorwf	??i1_i2c_write,w
  6323  0AB0  1D03               	btfss	3,2
  6324  0AB1  2A91               	goto	i1l1607
  6325                           
  6326                           ;i2clib.c: 42: SSPBUF = datum;
  6327  0AB2  0879               	movf	i1i2c_write@datum,w
  6328  0AB3  1283               	bcf	3,5	;RP0=0, select bank0
  6329  0AB4  1303               	bcf	3,6	;RP1=0, select bank0
  6330  0AB5  0093               	movwf	19	;volatile
  6331  0AB6                     i1l181:	
  6332                           ;i2clib.c: 43: while(SSPSTATbits.BF);
  6333                           
  6334  0AB6  1683               	bsf	3,5	;RP0=1, select bank1
  6335  0AB7  1303               	bcf	3,6	;RP1=0, select bank1
  6336  0AB8  1814               	btfsc	20,0	;volatile
  6337  0AB9  2AB6               	goto	i1l181
  6338                           
  6339                           ;i2clib.c: 44: if(ack){
  6340  0ABA  0870               	movf	i1i2c_write@ack,w
  6341  0ABB  1903               	btfsc	3,2
  6342  0ABC  2ABF               	goto	i1l188
  6343  0ABD                     i1l185:	
  6344                           ;i2clib.c: 45: while (SSPCON2bits.ACKSTAT){
  6345                           
  6346  0ABD  1B11               	btfsc	17,6	;volatile
  6347  0ABE  2ABD               	goto	i1l185
  6348  0ABF                     i1l188:	
  6349                           ;i2clib.c: 46: }
  6350                           ;i2clib.c: 47: }
  6351                           ;i2clib.c: 48: while (!PIR1bits.SSPIF);
  6352                           
  6353  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  6354  0AC0  198C               	btfsc	12,3	;volatile
  6355  0AC1  0008               	return
  6356  0AC2  2ABF               	goto	i1l188
  6357  0AC3                     __end_ofi1_i2c_write:	
  6358                           
  6359                           	psect	text30
  6360  097C                     __ptext30:	
  6361 ;; *************** function i1_i2c_stop *****************
  6362 ;; Defined at:
  6363 ;;		line 34 in file "i2clib.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;		None
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      void 
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6377 ;;      Params:         0       0       0       0       0
  6378 ;;      Locals:         0       0       0       0       0
  6379 ;;      Temps:          8       0       0       0       0
  6380 ;;      Totals:         8       0       0       0       0
  6381 ;;Total ram usage:        8 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_si_read_h
  6387 ;;		_si_read_t
  6388 ;;		_ds_set
  6389 ;;		_ds_get
  6390 ;;		i1_mem_write
  6391 ;;		i1_mem_read
  6392 ;; This function uses a non-reentrant model
  6393 ;;
  6394                           
  6395                           
  6396                           ;psect for function i1_i2c_stop
  6397  097C                     i1_i2c_stop:	
  6398  097C                     i1l1603:	
  6399                           ;i2clib.c: 35: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  6400                           
  6401                           ;incstack = 0
  6402                           ; Regs used in i1_i2c_stop: [wreg+status,2+status,0]
  6403                           
  6404  097C  1683               	bsf	3,5	;RP0=1, select bank1
  6405  097D  1303               	bcf	3,6	;RP1=0, select bank1
  6406  097E  0811               	movf	17,w	;volatile
  6407  097F  3901               	andlw	1
  6408  0980  00F0               	movwf	??i1_i2c_stop
  6409  0981  0C11               	rrf	17,w	;volatile
  6410  0982  3901               	andlw	1
  6411  0983  00F1               	movwf	??i1_i2c_stop+1
  6412  0984  0C11               	rrf	17,w	;volatile
  6413  0985  00F2               	movwf	??i1_i2c_stop+2
  6414  0986  0CF2               	rrf	??i1_i2c_stop+2,f
  6415  0987  0C72               	rrf	??i1_i2c_stop+2,w
  6416  0988  3901               	andlw	1
  6417  0989  00F3               	movwf	??i1_i2c_stop+3
  6418  098A  0E11               	swapf	17,w	;volatile
  6419  098B  3901               	andlw	1
  6420  098C  00F4               	movwf	??i1_i2c_stop+4
  6421  098D  0C11               	rrf	17,w	;volatile
  6422  098E  00F5               	movwf	??i1_i2c_stop+5
  6423  098F  0C75               	rrf	??i1_i2c_stop+5,w
  6424  0990  3901               	andlw	1
  6425  0991  00F6               	movwf	??i1_i2c_stop+6
  6426  0992  0C14               	rrf	20,w	;volatile
  6427  0993  00F7               	movwf	??i1_i2c_stop+7
  6428  0994  0C77               	rrf	??i1_i2c_stop+7,w
  6429  0995  3901               	andlw	1
  6430  0996  0476               	iorwf	??i1_i2c_stop+6,w
  6431  0997  0474               	iorwf	??i1_i2c_stop+4,w
  6432  0998  0473               	iorwf	??i1_i2c_stop+3,w
  6433  0999  0471               	iorwf	??i1_i2c_stop+1,w
  6434  099A  0470               	iorwf	??i1_i2c_stop,w
  6435  099B  1D03               	btfss	3,2
  6436  099C  297C               	goto	i1l1603
  6437                           
  6438                           ;i2clib.c: 36: SSPCON2bits.PEN = 1;
  6439  099D  1511               	bsf	17,2	;volatile
  6440  099E  0008               	return
  6441  099F                     __end_ofi1_i2c_stop:	
  6442                           
  6443                           	psect	text31
  6444  0959                     __ptext31:	
  6445 ;; *************** function i1_i2c_start *****************
  6446 ;; Defined at:
  6447 ;;		line 24 in file "i2clib.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;		None
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;		None
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1    wreg      void 
  6454 ;; Registers used:
  6455 ;;		wreg, status,2, status,0
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/0
  6458 ;;		On exit  : 0/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6461 ;;      Params:         0       0       0       0       0
  6462 ;;      Locals:         0       0       0       0       0
  6463 ;;      Temps:          8       0       0       0       0
  6464 ;;      Totals:         8       0       0       0       0
  6465 ;;Total ram usage:        8 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_si_read_h
  6471 ;;		_si_read_t
  6472 ;;		_ds_set
  6473 ;;		_ds_get
  6474 ;;		i1_mem_write
  6475 ;;		i1_mem_read
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           
  6480                           ;psect for function i1_i2c_start
  6481  0959                     i1_i2c_start:	
  6482  0959                     i1l1599:	
  6483                           ;i2clib.c: 25: while(SSPSTATbits.R_nW | SSPCON2bits.PEN | SSPCON2bits.ACKEN | SSPCON2bit
      +                          s.RCEN | SSPCON2bits.RSEN | SSPCON2bits.SEN);
  6484                           
  6485                           ;incstack = 0
  6486                           ; Regs used in i1_i2c_start: [wreg+status,2+status,0]
  6487                           
  6488  0959  1683               	bsf	3,5	;RP0=1, select bank1
  6489  095A  1303               	bcf	3,6	;RP1=0, select bank1
  6490  095B  0811               	movf	17,w	;volatile
  6491  095C  3901               	andlw	1
  6492  095D  00F0               	movwf	??i1_i2c_start
  6493  095E  0C11               	rrf	17,w	;volatile
  6494  095F  3901               	andlw	1
  6495  0960  00F1               	movwf	??i1_i2c_start+1
  6496  0961  0C11               	rrf	17,w	;volatile
  6497  0962  00F2               	movwf	??i1_i2c_start+2
  6498  0963  0CF2               	rrf	??i1_i2c_start+2,f
  6499  0964  0C72               	rrf	??i1_i2c_start+2,w
  6500  0965  3901               	andlw	1
  6501  0966  00F3               	movwf	??i1_i2c_start+3
  6502  0967  0E11               	swapf	17,w	;volatile
  6503  0968  3901               	andlw	1
  6504  0969  00F4               	movwf	??i1_i2c_start+4
  6505  096A  0C11               	rrf	17,w	;volatile
  6506  096B  00F5               	movwf	??i1_i2c_start+5
  6507  096C  0C75               	rrf	??i1_i2c_start+5,w
  6508  096D  3901               	andlw	1
  6509  096E  00F6               	movwf	??i1_i2c_start+6
  6510  096F  0C14               	rrf	20,w	;volatile
  6511  0970  00F7               	movwf	??i1_i2c_start+7
  6512  0971  0C77               	rrf	??i1_i2c_start+7,w
  6513  0972  3901               	andlw	1
  6514  0973  0476               	iorwf	??i1_i2c_start+6,w
  6515  0974  0474               	iorwf	??i1_i2c_start+4,w
  6516  0975  0473               	iorwf	??i1_i2c_start+3,w
  6517  0976  0471               	iorwf	??i1_i2c_start+1,w
  6518  0977  0470               	iorwf	??i1_i2c_start,w
  6519  0978  1D03               	btfss	3,2
  6520  0979  2959               	goto	i1l1599
  6521                           
  6522                           ;i2clib.c: 26: SSPCON2bits.SEN = 1;
  6523  097A  1411               	bsf	17,0	;volatile
  6524  097B  0008               	return
  6525  097C                     __end_ofi1_i2c_start:	
  6526  007E                     btemp	set	126	;btemp
  6527  007E                     wtemp0	set	126


Data Sizes:
    Strings     104
    Constant    18
    Data        1
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     52      65
    BANK1            80     20      20
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf$750	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_20(CODE[17]), STR_19(CODE[17]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_18(CODE[2]), STR_17(CODE[5]), STR_16(CODE[7]), STR_15(CODE[4]), 
		 -> STR_14(CODE[3]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[5]), 
		 -> STR_10(CODE[5]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[5]), STR_3(CODE[7]), 
		 -> STR_2(CODE[6]), STR_1(CODE[8]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    ds_set@data	PTR unsigned char  size(1) Largest target is 7
		 -> time(BANK0[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ints_isr in COMMON

    _ints_isr->_si_read_h
    _ints_isr->_si_read_t
    _ints_isr->i1_mem_write
    i1_mem_init->i1_mem_write
    _si_read_t->i1_i2c_read
    _si_read_t->i1_i2c_write
    _si_read_h->i1_i2c_read
    _si_read_h->i1_i2c_write
    _save_event->i1_mem_write
    i1_mem_write->i1_i2c_write
    i1_mem_read->i1_i2c_read
    i1_mem_read->i1_i2c_write
    _ds_get->i1_i2c_read
    _ds_get->i1_i2c_write
    _printf->___lwmod
    _printf->_si_read_h
    _printf->_si_read_t
    ___lwmod->___lwdiv
    _ds_set->i1_i2c_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _ints_isr in BANK0

    _ints_isr->_printf
    i1_mem_init->i1_mem_read
    _save_event->i1_mem_read
    _printf->_si_read_h
    _printf->_si_read_t

Critical Paths under _main in BANK1

    _main->_mem_init
    _si_reset->_i2c_write
    _mem_init->_mem_read
    _mem_init->_mem_write
    _mem_write->_i2c_write
    _mem_read->_i2c_read
    _mem_read->_i2c_write

Critical Paths under _ints_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ints_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ints_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7359
                                             18 BANK1      2     2      0
                           _i2c_init
                        _init_timer2
                           _mem_init
                           _si_reset
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _si_reset                                             0     0      0    1268
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _mem_init                                             2     2      0    5871
                                             16 BANK1      2     2      0
                           _mem_read
                          _mem_write
 ---------------------------------------------------------------------------------
 (2) _mem_write                                            6     3      3    3440
                                             10 BANK1      6     3      3
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _mem_read                                             6     4      2    2408
                                             10 BANK1      6     4      2
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                           10     9      1    1268
                                              0 BANK1     10     9      1
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             8     8      0       0
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            8     8      0       0
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                            10    10      0      89
                                              0 BANK1     10    10      0
 ---------------------------------------------------------------------------------
 (1) _init_timer2                                          6     4      2     220
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ints_isr                                            32    32      0   24142
                                             20 BANK0     32    32      0
                             ___wmul
                             _ds_get
                             _ds_set
                             _printf
                         _save_event
                          _si_read_h
                          _si_read_t
                         i1_mem_init
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_init                                           2     2      0    3389
                                              3 BANK0      2     2      0
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) _si_read_t                                            8     6      2     798
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _si_read_h                                            8     6      2     799
                                             10 COMMON     4     2      2
                                              0 BANK0      4     4      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) _save_event                                           5     5      0    6467
                                              3 BANK0      5     5      0
                             ___wmul
                             _ds_get
                         i1_mem_read
                        i1_mem_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_write                                          6     3      3    1924
                                             10 COMMON     4     1      3
                                              0 BANK0      2     2      0
                             ___wmul (ARG)
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (5) i1_mem_read                                           6     4      2    1442
                                             10 COMMON     3     1      2
                                              0 BANK0      3     3      0
                             ___wmul (ARG)
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) _ds_get                                               3     3      0     750
                                             10 COMMON     3     3      0
                         _i2c_rstart
                         i1_i2c_read
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) i1_i2c_read                                          10    10      0      89
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (6) _i2c_rstart                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (5) _printf                                              24    22      2    4391
                                              4 BANK0     16    14      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
                             _ds_get (ARG)
                            _isdigit
                              _putch
                          _si_read_h (ARG)
                          _si_read_t (ARG)
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    2012
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              8     4      4     418
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) _ds_set                                               3     3      0     758
                                             10 COMMON     3     3      0
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (6) i1_i2c_write                                         10     9      1     616
                                              0 COMMON    10     9      1
 ---------------------------------------------------------------------------------
 (6) i1_i2c_stop                                           8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 (6) i1_i2c_start                                          8     8      0       0
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _init_timer2
   _mem_init
     _mem_read
       _i2c_read
       _i2c_start
       _i2c_stop
       _i2c_write
     _mem_write
       _i2c_start
       _i2c_stop
       _i2c_write
   _si_reset
     _i2c_start
     _i2c_stop
     _i2c_write
   _uart_init

 _ints_isr (ROOT)
   ___wmul
   _ds_get
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _ds_set
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _ds_get (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     _isdigit (ARG)
     _putch (ARG)
     _si_read_h (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     _si_read_t (ARG)
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
   _save_event
     ___wmul
     _ds_get
       _i2c_rstart
       i1_i2c_read
       i1_i2c_start
       i1_i2c_stop
       i1_i2c_write
     i1_mem_read
       ___wmul (ARG)
       i1_i2c_read (ARG)
       i1_i2c_start (ARG)
       i1_i2c_stop (ARG)
       i1_i2c_write (ARG)
     i1_mem_write
       ___wmul (ARG)
       i1_i2c_start (ARG)
       i1_i2c_stop (ARG)
       i1_i2c_write (ARG)
   _si_read_h
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   _si_read_t
     _i2c_rstart
     i1_i2c_read
     i1_i2c_start
     i1_i2c_stop
     i1_i2c_write
   i1_mem_init
     i1_mem_read
       ___wmul (ARG)
       i1_i2c_read (ARG)
       i1_i2c_start (ARG)
       i1_i2c_stop (ARG)
       i1_i2c_write (ARG)
     i1_mem_write
       ___wmul (ARG)
       i1_i2c_start (ARG)
       i1_i2c_stop (ARG)
       i1_i2c_write (ARG)
   i1_mem_read
     ___wmul (ARG)
     i1_i2c_read (ARG)
     i1_i2c_start (ARG)
     i1_i2c_stop (ARG)
     i1_i2c_write (ARG)
   i1_mem_write
     ___wmul (ARG)
     i1_i2c_start (ARG)
     i1_i2c_stop (ARG)
     i1_i2c_write (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     14      14       7       25.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     34      41       5       81.3%
BITBANK0            50      0       1       4        1.3%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      63      12        0.0%
ABS                  0      0      63       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu Sep 07 02:29:51 2017

                       pc 0002               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      fsr 0004       ___wmul@multiplicand 0072            si_read_h@rta_h 0020  
          si_read_h@rta_l 0021                       l203 07C7                       l206 07C9  
                     l209 07E8                       l137 0CD8                       l181 0B1C  
                     l185 0B23                       l188 0B25                       _PR2 0092  
            __CFG_CPD$OFF 0000                       _led 0060                       _fyh 02FC  
                     fsr0 0004            si_read_t@rta_h 0020                       indf 0000  
          si_read_t@rta_l 0021              __CFG_IESO$ON 0000              __CFG_LVP$OFF 0000  
              i1_mem_init 0CD9                i1_mem_read 0B65                      l1571 0AF9  
                    l1581 0794                      l1591 07E0                      l1559 09C2  
                    l1567 09E5                      l1585 079C                      l1589 07A5  
                    STR_1 0741                      STR_2 0751                      STR_3 0749  
                    STR_4 076F                      STR_5 0769                      STR_6 075D  
                    STR_7 0763                      STR_8 0763                      STR_9 0757  
                    u1300 07D2                      u1320 07DD                      u2025 0A11  
                    u1314 07D5                      u2317 0CAC                      u2327 0CC4  
                    i1l91 0360                      i1l76 08EE                      i1l98 003F  
            __CFG_WRT$OFF 0000             __CFG_FCMEN$ON 0000                      _main 0C8B  
                    _secs 0054                      _time 0058                      btemp 007E  
                    start 0012             __CFG_MCLRE$ON 0000                     ?_main 0070  
                   STR_10 0774                     STR_11 0774                     STR_12 0747  
                   STR_20 0730                     STR_13 0785                     STR_14 0782  
                   STR_15 077E                     STR_16 0750                     STR_17 0779  
           __CFG_WDTE$OFF 0000                     STR_18 0785                     STR_19 071F  
             i2c_read@ack 00A9                     _T2CON 0012               i1_mem_write 0BAB  
         __end_of___lwdiv 0B65                     i1l113 02CF                     i1l105 035F  
                   i1l203 0DB7                     i1l300 0598                     i1l301 0578  
                   i1l125 0393                     i1l109 02A9                     i1l302 0579  
                   i1l206 0DB9                     i1l313 05E5                     i1l209 0DD6  
                   i1l129 04E4                     i1l308 05C1                     i1l181 0AB6  
                   i1l317 0620                     i1l342 0706                     i1l185 0ABD  
         __end_of___lwmod 0A90                     i1l426 0942                     i1l188 0ABF  
                   i1l288 051B                     _RCREG 001A                     _SPBRG 0099  
                   _TRISA 0085                     _TRISB 0086                     _TXREG 0019  
            ?_init_timer2 00A0           __end_of_dpowers 0717                     _milis 0057  
         __end_of_isdigit 0903               ?i1_i2c_read 0070               ?i1_i2c_stop 0070  
                   _putch 08ED            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E           __initialization 0015  
            __end_of_main 0CD9                _i2c_rstart 099F          __end_of_i2c_init 07FB  
        __end_of_i2c_read 07EC          __end_of_i2c_stop 0A08                    ??_main 00B2  
             mem_init@aux 00B1               mem_read@add 00AA               mem_read@rta 00AD  
             ?i1_mem_init 0070               ?i1_mem_read 007A                    ?_putch 0070  
            i2c_read@flag 02F9                    i1l2103 007B                    i1l2105 0124  
                  i1l2203 0382                    i1l2213 0394                    i1l2221 03A4  
                  i1l2141 02A4                    i1l2151 02C0                    i1l2135 0143  
                  i1l2137 029A                    i1l1603 097C                    i1l2155 02C8  
                  i1l1701 0901                    i1l1621 0D8E                    i1l2165 0301  
                  i1l2181 034C                    i1l1607 0A91                    i1l2191 0372  
                  i1l1625 0D95                    i1l2177 0323                    i1l1731 0B3F  
                  i1l1707 093A                    i1l1563 099F                    i1l1627 0DD0  
                  i1l1741 0B60                    i1l2277 04E3                    i1l2197 0379  
            i2c_read@resp 00A8                    i1l1911 0609                    i1l1737 0B55  
                  i1l1729 0B31                    i1l1753 0A64                    i1l1921 063F  
                  i1l1913 0612                    i1l1755 0A72                    i1l1763 0A8B  
                  i1l1923 0643                    i1l1851 0515                    i1l1941 067A  
                  u210_25 0149                    i1l1599 0959                    i1l1759 0A80  
                  i1l1935 0664                    i1l1863 053D                    i1l1937 0668  
                  i1l1945 0684                    i1l1929 064F                    i1l1873 057B  
                  i1l1857 0520                    i1l1955 06DE                    i1l1963 06ED  
                  i1l1947 068B                    i1l1859 052B                    i1l1949 06B9  
                  i1l1965 06F3                    i1l1885 05B4                    i1l1967 04F8  
                  u150_20 0DCD                    _INTCON 000B                    u209_25 0081  
                  u162_25 0B34                    u171_25 0A78                    u148_20 0DC2  
                  u164_25 0B40                    u172_25 0A81                    u149_24 0DC5  
                  u165_25 0B4C                    u166_25 0B56                    u158_25 0943  
                  u182_25 05DE                    u159_25 094A                    u169_25 0A67  
                  u185_25 0602                    u189_25 062F                    _OSCCON 008F  
                  _SPBRGH 009A                    _SSPADD 0093                    _SSPBUF 0013  
      __size_of_i2c_start 0023        __size_of_i2c_write 0033            __CFG_PWRTE$OFF 0000  
                  ___wmul 0938                 ??___lwdiv 0074                 ??___lwmod 007C  
                  _ds_get 0A2D          __end_of_mem_init 0E38          __end_of_mem_read 0C3D  
                  _ds_set 0AC3       __size_ofi1_i2c_read 005A       __size_ofi1_i2c_stop 0023  
                  _printf 04F1              ?i1_i2c_start 0070          __end_of_ints_isr 04F1  
            ?i1_i2c_write 0070          __end_of_si_reset 0938                 ??_isdigit 0070  
                  saved_w 007E              i2c_write@ack 00A0   __end_of__initialization 0025  
          i1i2c_read@resp 0078            __pcstackCOMMON 0070               ?_i2c_rstart 0070  
            __pidataBANK0 07FB             __end_of_putch 08F5       __size_ofi1_mem_init 0050  
     __size_ofi1_mem_read 0046          i1i2c_write@datum 0079         __end_of_i2c_start 09E5  
       __end_of_i2c_write 0B29      __size_of_init_timer2 0025                   ??_putch 0070  
             ints_isr@add 0043               ints_isr@arg 0051               ints_isr@aux 0049  
             ints_isr@rcv 003C                __pbssBANK0 0054                 ?_i2c_init 0070  
               ?_i2c_read 0070                 ?_i2c_stop 0070            i1i2c_write@ack 0070  
      __size_of_mem_write 004E                __pmaintext 0C8B                   ?___wmul 0070  
              __pintentry 0004                   ?_ds_get 0070                   ?_ds_set 0070  
      __size_of_si_read_h 005D        __size_of_si_read_t 0059                   ?_printf 0024  
            ?i1_mem_write 007A        __size_of_uart_init 0018              ??i1_i2c_read 0070  
            ??i1_i2c_stop 0070       __size_of_i2c_rstart 0023                __stringtab 0707  
              ??_i2c_init 00A0                ??_i2c_read 00A0                 ?_mem_init 0070  
               ?_mem_read 00AA                ??_i2c_stop 00A0               save_event@o 0026  
               ?_ints_isr 0070                 ?_si_reset 0070           __size_of___wmul 0021  
                 ___lwdiv 0B29                   ___lwmod 0A5E           __size_of_ds_get 0031  
         __size_of_ds_set 0033              mem_write@add 00AA        __end_ofi1_i2c_read 0DDC  
      __end_ofi1_i2c_stop 099F                   __ptext1 0903                   __ptext2 091B  
                 __ptext3 0DDC                   __ptext4 0C3D                   __ptext5 0BF3  
                 __ptext6 0AF6                   __ptext7 09E5                   __ptext8 09C2  
                 __ptext9 0787           __size_of_printf 0216         __end_of_hexpowers 071F  
                 _dpowers 070D         __end_of_mem_write 0C8B                   _isdigit 08F5  
    __size_ofi1_i2c_start 0023      __size_ofi1_i2c_write 0033                   ds_set@j 007C  
            ??i1_mem_init 0023              ??i1_mem_read 007C      end_of_initialization 0025  
       __end_of_si_read_h 0E95         __end_of_si_read_t 0D82                ??_mem_init 00B0  
              ??_mem_read 00AC                _save_event 0E95                ??_ints_isr 0034  
       __end_of_uart_init 091B                ??_si_reset 00AA                 _RCSTAbits 0018  
                 printf@c 0033                   printf@f 0032                _printf$750 002A  
      __end_ofi1_mem_init 0D29        __end_ofi1_mem_read 0BAB                 _PORTBbits 0006  
          i1mem_write@add 007A                ds_get@data 007B                 _TRISBbits 0086  
               _TRISCbits 0087                ds_get@resp 007C               printf@width 002F  
               _TXSTAbits 0098                ds_set@data 007B              ??_i2c_rstart 0070  
          __end_of___wmul 0959               _BAUDCTLbits 0187            __end_of_ds_get 0A5E  
          __end_of_ds_set 0AF6             __pbitbssBANK0 02F8            __end_of_printf 0707  
     start_initialization 0015      __size_ofi1_mem_write 0048                 _i2c_start 09C2  
               _i2c_write 0AF6        __end_of_i2c_rstart 09C2               ?_save_event 0070  
__CFG_FOSC$INTRC_NOCLKOUT 0000         __size_of_i2c_init 000F         __size_of_i2c_read 0065  
       __size_of_i2c_stop 0023                  ??___wmul 0074                  ??_ds_get 007A  
                ??_ds_set 007A               __pdataBANK0 0060                  ??_printf 0026  
            ints_isr@aux2 004F              ints_isr@ferr 02FB              ints_isr@oerr 02FA  
           i1i2c_read@ack 0079             ??_init_timer2 00A2                 ___latbits 0002  
           __pcstackBANK0 0020             __pcstackBANK1 00A0                ?_i2c_start 0070  
              ?_i2c_write 00A0                ints_isr@dt 0041                ints_isr@up 0047  
          mem_write@add_h 00AE            mem_write@add_l 00AF         __size_of_mem_init 005C  
       __size_of_mem_read 004A          ___lwdiv@dividend 0072         __size_of_ints_isr 04C8  
       __size_of_si_reset 001D                  ?___lwdiv 0070                  ?___lwmod 0078  
         init_timer2@post 00A0                 _condition 0056                 __pstrings 0707  
           mem_read@add_h 00AE             mem_read@add_l 00AF       __size_of_save_event 016B  
                ?_isdigit 0070                 _hexpowers 0717          ___lwdiv@quotient 0075  
               _mem_write 0C3D             i1mem_init@aux 0024             i1mem_read@add 007A  
           i1mem_read@rta 0020            __size_of_putch 0008       __end_of_init_timer2 0A2D  
       interrupt_function 0004            ___wmul@product 0074                  _PIE1bits 008C  
               _si_read_h 0E38                 _si_read_t 0D29                  _PIR1bits 000C  
               _uart_init 0903             ??i1_i2c_start 0070             ??i1_i2c_write 0071  
             __stringbase 070C              si_read_h@rta 0022         ___wmul@multiplier 0070  
            si_read_t@rta 0022                printf@flag 0031                printf@prec 002C  
             ??_i2c_start 00A0               ??_i2c_write 00A1                ?_mem_write 00AA  
            save_event@ax 0027                  _i2c_init 07EC                  _i2c_read 0787  
                _i2c_stop 09E5                ?_si_read_h 007A                ?_si_read_t 007A  
              ?_uart_init 0070          __size_of___lwdiv 003C          __size_of___lwmod 0032  
      __end_of__stringtab 070D               _isdigit$936 0070                _ANSELHbits 0189  
               ints_isr@k 0046                 ints_isr@n 0052                 ints_isr@z 0045  
           mem_write@data 00AC               _init_timer2 0A08          __size_of_isdigit 000E  
         ___lwdiv@divisor 0070           i1mem_read@add_h 0021           i1mem_read@add_l 0022  
     __end_ofi1_i2c_start 097C           ___lwdiv@counter 0077       __end_ofi1_i2c_write 0AC3  
                __ptext10 0A08                  __ptext11 07EC                  __ptext20 0D82  
                __ptext12 0029                  __ptext21 099F                  __ptext13 0CD9  
                __ptext30 097C                  __ptext22 04F1                  __ptext14 0D29  
                __ptext31 0959                  __ptext23 08ED                  __ptext15 0E38  
                __ptext24 08F5                  __ptext16 0E95                  __ptext25 0938  
                __ptext17 0BAB                  __ptext26 0A5E                  __ptext18 0B65  
                __ptext27 0B29                  __ptext19 0A2D                  __ptext28 0AC3  
                __ptext29 0A90         __CFG_BOR4V$BOR21V 0000            init_timer2@eoc 00A1  
          init_timer2@pre 00A4            init_timer2@sfr 00A5                  _mem_init 0DDC  
                _mem_read 0BF3             __size_of_main 004E              ??_save_event 0023  
                _ints_isr 0029                  _si_reset 091B          i2c_read@not_flag 02F8  
               printf@idx 0029                 printf@val 002D             ??i1_mem_write 007D  
               putch@data 0070                _INTCONbits 000B        __end_of_save_event 1000  
                isdigit@c 0071               ??_mem_write 00AD                  intlevel1 0000  
        ___lwmod@dividend 007A               ??_si_read_h 007C               ??_si_read_t 007C  
               stringcode 0707               ??_uart_init 00A0                  printf@ap 002B  
             i1_i2c_start 0959          i1mem_write@add_h 0020          i1mem_write@add_l 0021  
             i1_i2c_write 0A90           ___lwmod@divisor 0078           ___lwmod@counter 007D  
        ints_isr@temp_add 004B                  stringdir 0707                  stringtab 0707  
        ints_isr@temp_val 003F               _SSPCON2bits 0091       __end_ofi1_mem_write 0BF3  
              i1_i2c_read 0D82           ints_isr@hum_add 004D                i1_i2c_stop 097C  
         ints_isr@hum_val 003D           i1mem_write@data 007C                _SSPCONbits 0014  
          i2c_write@datum 00A9  
